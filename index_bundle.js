!function(e){var t={};function n(r){if(t[r])return t[r].exports;var a=t[r]={i:r,l:!1,exports:{}};return e[r].call(a.exports,a,a.exports,n),a.l=!0,a.exports}n.m=e,n.c=t,n.d=function(e,t,r){n.o(e,t)||Object.defineProperty(e,t,{enumerable:!0,get:r})},n.r=function(e){"undefined"!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(e,Symbol.toStringTag,{value:"Module"}),Object.defineProperty(e,"__esModule",{value:!0})},n.t=function(e,t){if(1&t&&(e=n(e)),8&t)return e;if(4&t&&"object"==typeof e&&e&&e.__esModule)return e;var r=Object.create(null);if(n.r(r),Object.defineProperty(r,"default",{enumerable:!0,value:e}),2&t&&"string"!=typeof e)for(var a in e)n.d(r,a,function(t){return e[t]}.bind(null,a));return r},n.n=function(e){var t=e&&e.__esModule?function(){return e.default}:function(){return e};return n.d(t,"a",t),t},n.o=function(e,t){return Object.prototype.hasOwnProperty.call(e,t)},n.p="",n(n.s=7)}([function(e,t,n){"use strict";e.exports=n(8)},function(e,t,n){"use strict";
/*
object-assign
(c) Sindre Sorhus
@license MIT
*/var r=Object.getOwnPropertySymbols,a=Object.prototype.hasOwnProperty,i=Object.prototype.propertyIsEnumerable;function o(e){if(null==e)throw new TypeError("Object.assign cannot be called with null or undefined");return Object(e)}e.exports=function(){try{if(!Object.assign)return!1;var e=new String("abc");if(e[5]="de","5"===Object.getOwnPropertyNames(e)[0])return!1;for(var t={},n=0;n<10;n++)t["_"+String.fromCharCode(n)]=n;if("0123456789"!==Object.getOwnPropertyNames(t).map((function(e){return t[e]})).join(""))return!1;var r={};return"abcdefghijklmnopqrst".split("").forEach((function(e){r[e]=e})),"abcdefghijklmnopqrst"===Object.keys(Object.assign({},r)).join("")}catch(e){return!1}}()?Object.assign:function(e,t){for(var n,u,l=o(e),s=1;s<arguments.length;s++){for(var c in n=Object(arguments[s]))a.call(n,c)&&(l[c]=n[c]);if(r){u=r(n);for(var f=0;f<u.length;f++)i.call(n,u[f])&&(l[u[f]]=n[u[f]])}}return l}},function(e,t,n){"use strict";!function e(){if("undefined"!=typeof __REACT_DEVTOOLS_GLOBAL_HOOK__&&"function"==typeof __REACT_DEVTOOLS_GLOBAL_HOOK__.checkDCE){0;try{__REACT_DEVTOOLS_GLOBAL_HOOK__.checkDCE(e)}catch(e){console.error(e)}}}(),e.exports=n(9)},function(e,t){var n=/-+([a-z])/gi;function r(e,t,n){return 0!==n?t.toUpperCase():t}e.exports=function(e){var t=e.replace(n,r);return n.lastIndex=0,t}},function(e,t){e.exports=function(e,t){var n={};for(var r in e)e.hasOwnProperty(r)&&(n[r]=t(e[r]));return n}},function(e,t,n){var r;
/*!
  Copyright (c) 2017 Jed Watson.
  Licensed under the MIT License (MIT), see
  http://jedwatson.github.io/classnames
*/!function(){"use strict";var n={}.hasOwnProperty;function a(){for(var e=[],t=0;t<arguments.length;t++){var r=arguments[t];if(r){var i=typeof r;if("string"===i||"number"===i)e.push(r);else if(Array.isArray(r)&&r.length){var o=a.apply(null,r);o&&e.push(o)}else if("object"===i)for(var u in r)n.call(r,u)&&r[u]&&e.push(u)}}return e.join(" ")}e.exports?(a.default=a,e.exports=a):void 0===(r=function(){return a}.apply(t,[]))||(e.exports=r)}()},function(e,t,n){var r=n(12);e.exports=r()},function(e,t,n){e.exports=n(35)},function(e,t,n){"use strict";
/** @license React v16.13.1
 * react.production.min.js
 *
 * Copyright (c) Facebook, Inc. and its affiliates.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 */var r=n(1),a="function"==typeof Symbol&&Symbol.for,i=a?Symbol.for("react.element"):60103,o=a?Symbol.for("react.portal"):60106,u=a?Symbol.for("react.fragment"):60107,l=a?Symbol.for("react.strict_mode"):60108,s=a?Symbol.for("react.profiler"):60114,c=a?Symbol.for("react.provider"):60109,f=a?Symbol.for("react.context"):60110,p=a?Symbol.for("react.forward_ref"):60112,d=a?Symbol.for("react.suspense"):60113,h=a?Symbol.for("react.memo"):60115,m=a?Symbol.for("react.lazy"):60116,g="function"==typeof Symbol&&Symbol.iterator;function v(e){for(var t="https://reactjs.org/docs/error-decoder.html?invariant="+e,n=1;n<arguments.length;n++)t+="&args[]="+encodeURIComponent(arguments[n]);return"Minified React error #"+e+"; visit "+t+" for the full message or use the non-minified dev environment for full errors and additional helpful warnings."}var y={isMounted:function(){return!1},enqueueForceUpdate:function(){},enqueueReplaceState:function(){},enqueueSetState:function(){}},b={};function x(e,t,n){this.props=e,this.context=t,this.refs=b,this.updater=n||y}function w(){}function E(e,t,n){this.props=e,this.context=t,this.refs=b,this.updater=n||y}x.prototype.isReactComponent={},x.prototype.setState=function(e,t){if("object"!=typeof e&&"function"!=typeof e&&null!=e)throw Error(v(85));this.updater.enqueueSetState(this,e,t,"setState")},x.prototype.forceUpdate=function(e){this.updater.enqueueForceUpdate(this,e,"forceUpdate")},w.prototype=x.prototype;var M=E.prototype=new w;M.constructor=E,r(M,x.prototype),M.isPureReactComponent=!0;var P={current:null},k=Object.prototype.hasOwnProperty,S={key:!0,ref:!0,__self:!0,__source:!0};function _(e,t,n){var r,a={},o=null,u=null;if(null!=t)for(r in void 0!==t.ref&&(u=t.ref),void 0!==t.key&&(o=""+t.key),t)k.call(t,r)&&!S.hasOwnProperty(r)&&(a[r]=t[r]);var l=arguments.length-2;if(1===l)a.children=n;else if(1<l){for(var s=Array(l),c=0;c<l;c++)s[c]=arguments[c+2];a.children=s}if(e&&e.defaultProps)for(r in l=e.defaultProps)void 0===a[r]&&(a[r]=l[r]);return{$$typeof:i,type:e,key:o,ref:u,props:a,_owner:P.current}}function T(e){return"object"==typeof e&&null!==e&&e.$$typeof===i}var N=/\/+/g,C=[];function A(e,t,n,r){if(C.length){var a=C.pop();return a.result=e,a.keyPrefix=t,a.func=n,a.context=r,a.count=0,a}return{result:e,keyPrefix:t,func:n,context:r,count:0}}function O(e){e.result=null,e.keyPrefix=null,e.func=null,e.context=null,e.count=0,10>C.length&&C.push(e)}function D(e,t,n){return null==e?0:function e(t,n,r,a){var u=typeof t;"undefined"!==u&&"boolean"!==u||(t=null);var l=!1;if(null===t)l=!0;else switch(u){case"string":case"number":l=!0;break;case"object":switch(t.$$typeof){case i:case o:l=!0}}if(l)return r(a,t,""===n?"."+B(t,0):n),1;if(l=0,n=""===n?".":n+":",Array.isArray(t))for(var s=0;s<t.length;s++){var c=n+B(u=t[s],s);l+=e(u,c,r,a)}else if(null===t||"object"!=typeof t?c=null:c="function"==typeof(c=g&&t[g]||t["@@iterator"])?c:null,"function"==typeof c)for(t=c.call(t),s=0;!(u=t.next()).done;)l+=e(u=u.value,c=n+B(u,s++),r,a);else if("object"===u)throw r=""+t,Error(v(31,"[object Object]"===r?"object with keys {"+Object.keys(t).join(", ")+"}":r,""));return l}(e,"",t,n)}function B(e,t){return"object"==typeof e&&null!==e&&null!=e.key?function(e){var t={"=":"=0",":":"=2"};return"$"+(""+e).replace(/[=:]/g,(function(e){return t[e]}))}(e.key):t.toString(36)}function I(e,t){e.func.call(e.context,t,e.count++)}function z(e,t,n){var r=e.result,a=e.keyPrefix;e=e.func.call(e.context,t,e.count++),Array.isArray(e)?L(e,r,n,(function(e){return e})):null!=e&&(T(e)&&(e=function(e,t){return{$$typeof:i,type:e.type,key:t,ref:e.ref,props:e.props,_owner:e._owner}}(e,a+(!e.key||t&&t.key===e.key?"":(""+e.key).replace(N,"$&/")+"/")+n)),r.push(e))}function L(e,t,n,r,a){var i="";null!=n&&(i=(""+n).replace(N,"$&/")+"/"),D(e,z,t=A(t,i,r,a)),O(t)}var R={current:null};function F(){var e=R.current;if(null===e)throw Error(v(321));return e}var j={ReactCurrentDispatcher:R,ReactCurrentBatchConfig:{suspense:null},ReactCurrentOwner:P,IsSomeRendererActing:{current:!1},assign:r};t.Children={map:function(e,t,n){if(null==e)return e;var r=[];return L(e,r,null,t,n),r},forEach:function(e,t,n){if(null==e)return e;D(e,I,t=A(null,null,t,n)),O(t)},count:function(e){return D(e,(function(){return null}),null)},toArray:function(e){var t=[];return L(e,t,null,(function(e){return e})),t},only:function(e){if(!T(e))throw Error(v(143));return e}},t.Component=x,t.Fragment=u,t.Profiler=s,t.PureComponent=E,t.StrictMode=l,t.Suspense=d,t.__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED=j,t.cloneElement=function(e,t,n){if(null==e)throw Error(v(267,e));var a=r({},e.props),o=e.key,u=e.ref,l=e._owner;if(null!=t){if(void 0!==t.ref&&(u=t.ref,l=P.current),void 0!==t.key&&(o=""+t.key),e.type&&e.type.defaultProps)var s=e.type.defaultProps;for(c in t)k.call(t,c)&&!S.hasOwnProperty(c)&&(a[c]=void 0===t[c]&&void 0!==s?s[c]:t[c])}var c=arguments.length-2;if(1===c)a.children=n;else if(1<c){s=Array(c);for(var f=0;f<c;f++)s[f]=arguments[f+2];a.children=s}return{$$typeof:i,type:e.type,key:o,ref:u,props:a,_owner:l}},t.createContext=function(e,t){return void 0===t&&(t=null),(e={$$typeof:f,_calculateChangedBits:t,_currentValue:e,_currentValue2:e,_threadCount:0,Provider:null,Consumer:null}).Provider={$$typeof:c,_context:e},e.Consumer=e},t.createElement=_,t.createFactory=function(e){var t=_.bind(null,e);return t.type=e,t},t.createRef=function(){return{current:null}},t.forwardRef=function(e){return{$$typeof:p,render:e}},t.isValidElement=T,t.lazy=function(e){return{$$typeof:m,_ctor:e,_status:-1,_result:null}},t.memo=function(e,t){return{$$typeof:h,type:e,compare:void 0===t?null:t}},t.useCallback=function(e,t){return F().useCallback(e,t)},t.useContext=function(e,t){return F().useContext(e,t)},t.useDebugValue=function(){},t.useEffect=function(e,t){return F().useEffect(e,t)},t.useImperativeHandle=function(e,t,n){return F().useImperativeHandle(e,t,n)},t.useLayoutEffect=function(e,t){return F().useLayoutEffect(e,t)},t.useMemo=function(e,t){return F().useMemo(e,t)},t.useReducer=function(e,t,n){return F().useReducer(e,t,n)},t.useRef=function(e){return F().useRef(e)},t.useState=function(e){return F().useState(e)},t.version="16.13.1"},function(e,t,n){"use strict";
/** @license React v16.13.1
 * react-dom.production.min.js
 *
 * Copyright (c) Facebook, Inc. and its affiliates.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 */var r=n(0),a=n(1),i=n(10);function o(e){for(var t="https://reactjs.org/docs/error-decoder.html?invariant="+e,n=1;n<arguments.length;n++)t+="&args[]="+encodeURIComponent(arguments[n]);return"Minified React error #"+e+"; visit "+t+" for the full message or use the non-minified dev environment for full errors and additional helpful warnings."}if(!r)throw Error(o(227));function u(e,t,n,r,a,i,o,u,l){var s=Array.prototype.slice.call(arguments,3);try{t.apply(n,s)}catch(e){this.onError(e)}}var l=!1,s=null,c=!1,f=null,p={onError:function(e){l=!0,s=e}};function d(e,t,n,r,a,i,o,c,f){l=!1,s=null,u.apply(p,arguments)}var h=null,m=null,g=null;function v(e,t,n){var r=e.type||"unknown-event";e.currentTarget=g(n),function(e,t,n,r,a,i,u,p,h){if(d.apply(this,arguments),l){if(!l)throw Error(o(198));var m=s;l=!1,s=null,c||(c=!0,f=m)}}(r,t,void 0,e),e.currentTarget=null}var y=null,b={};function x(){if(y)for(var e in b){var t=b[e],n=y.indexOf(e);if(!(-1<n))throw Error(o(96,e));if(!E[n]){if(!t.extractEvents)throw Error(o(97,e));for(var r in E[n]=t,n=t.eventTypes){var a=void 0,i=n[r],u=t,l=r;if(M.hasOwnProperty(l))throw Error(o(99,l));M[l]=i;var s=i.phasedRegistrationNames;if(s){for(a in s)s.hasOwnProperty(a)&&w(s[a],u,l);a=!0}else i.registrationName?(w(i.registrationName,u,l),a=!0):a=!1;if(!a)throw Error(o(98,r,e))}}}}function w(e,t,n){if(P[e])throw Error(o(100,e));P[e]=t,k[e]=t.eventTypes[n].dependencies}var E=[],M={},P={},k={};function S(e){var t,n=!1;for(t in e)if(e.hasOwnProperty(t)){var r=e[t];if(!b.hasOwnProperty(t)||b[t]!==r){if(b[t])throw Error(o(102,t));b[t]=r,n=!0}}n&&x()}var _=!("undefined"==typeof window||void 0===window.document||void 0===window.document.createElement),T=null,N=null,C=null;function A(e){if(e=m(e)){if("function"!=typeof T)throw Error(o(280));var t=e.stateNode;t&&(t=h(t),T(e.stateNode,e.type,t))}}function O(e){N?C?C.push(e):C=[e]:N=e}function D(){if(N){var e=N,t=C;if(C=N=null,A(e),t)for(e=0;e<t.length;e++)A(t[e])}}function B(e,t){return e(t)}function I(e,t,n,r,a){return e(t,n,r,a)}function z(){}var L=B,R=!1,F=!1;function j(){null===N&&null===C||(z(),D())}function U(e,t,n){if(F)return e(t,n);F=!0;try{return L(e,t,n)}finally{F=!1,j()}}var V=/^[:A-Z_a-z\u00C0-\u00D6\u00D8-\u00F6\u00F8-\u02FF\u0370-\u037D\u037F-\u1FFF\u200C-\u200D\u2070-\u218F\u2C00-\u2FEF\u3001-\uD7FF\uF900-\uFDCF\uFDF0-\uFFFD][:A-Z_a-z\u00C0-\u00D6\u00D8-\u00F6\u00F8-\u02FF\u0370-\u037D\u037F-\u1FFF\u200C-\u200D\u2070-\u218F\u2C00-\u2FEF\u3001-\uD7FF\uF900-\uFDCF\uFDF0-\uFFFD\-.0-9\u00B7\u0300-\u036F\u203F-\u2040]*$/,q=Object.prototype.hasOwnProperty,$={},Y={};function H(e,t,n,r,a,i){this.acceptsBooleans=2===t||3===t||4===t,this.attributeName=r,this.attributeNamespace=a,this.mustUseProperty=n,this.propertyName=e,this.type=t,this.sanitizeURL=i}var W={};"children dangerouslySetInnerHTML defaultValue defaultChecked innerHTML suppressContentEditableWarning suppressHydrationWarning style".split(" ").forEach((function(e){W[e]=new H(e,0,!1,e,null,!1)})),[["acceptCharset","accept-charset"],["className","class"],["htmlFor","for"],["httpEquiv","http-equiv"]].forEach((function(e){var t=e[0];W[t]=new H(t,1,!1,e[1],null,!1)})),["contentEditable","draggable","spellCheck","value"].forEach((function(e){W[e]=new H(e,2,!1,e.toLowerCase(),null,!1)})),["autoReverse","externalResourcesRequired","focusable","preserveAlpha"].forEach((function(e){W[e]=new H(e,2,!1,e,null,!1)})),"allowFullScreen async autoFocus autoPlay controls default defer disabled disablePictureInPicture formNoValidate hidden loop noModule noValidate open playsInline readOnly required reversed scoped seamless itemScope".split(" ").forEach((function(e){W[e]=new H(e,3,!1,e.toLowerCase(),null,!1)})),["checked","multiple","muted","selected"].forEach((function(e){W[e]=new H(e,3,!0,e,null,!1)})),["capture","download"].forEach((function(e){W[e]=new H(e,4,!1,e,null,!1)})),["cols","rows","size","span"].forEach((function(e){W[e]=new H(e,6,!1,e,null,!1)})),["rowSpan","start"].forEach((function(e){W[e]=new H(e,5,!1,e.toLowerCase(),null,!1)}));var Q=/[\-:]([a-z])/g;function K(e){return e[1].toUpperCase()}"accent-height alignment-baseline arabic-form baseline-shift cap-height clip-path clip-rule color-interpolation color-interpolation-filters color-profile color-rendering dominant-baseline enable-background fill-opacity fill-rule flood-color flood-opacity font-family font-size font-size-adjust font-stretch font-style font-variant font-weight glyph-name glyph-orientation-horizontal glyph-orientation-vertical horiz-adv-x horiz-origin-x image-rendering letter-spacing lighting-color marker-end marker-mid marker-start overline-position overline-thickness paint-order panose-1 pointer-events rendering-intent shape-rendering stop-color stop-opacity strikethrough-position strikethrough-thickness stroke-dasharray stroke-dashoffset stroke-linecap stroke-linejoin stroke-miterlimit stroke-opacity stroke-width text-anchor text-decoration text-rendering underline-position underline-thickness unicode-bidi unicode-range units-per-em v-alphabetic v-hanging v-ideographic v-mathematical vector-effect vert-adv-y vert-origin-x vert-origin-y word-spacing writing-mode xmlns:xlink x-height".split(" ").forEach((function(e){var t=e.replace(Q,K);W[t]=new H(t,1,!1,e,null,!1)})),"xlink:actuate xlink:arcrole xlink:role xlink:show xlink:title xlink:type".split(" ").forEach((function(e){var t=e.replace(Q,K);W[t]=new H(t,1,!1,e,"http://www.w3.org/1999/xlink",!1)})),["xml:base","xml:lang","xml:space"].forEach((function(e){var t=e.replace(Q,K);W[t]=new H(t,1,!1,e,"http://www.w3.org/XML/1998/namespace",!1)})),["tabIndex","crossOrigin"].forEach((function(e){W[e]=new H(e,1,!1,e.toLowerCase(),null,!1)})),W.xlinkHref=new H("xlinkHref",1,!1,"xlink:href","http://www.w3.org/1999/xlink",!0),["src","href","action","formAction"].forEach((function(e){W[e]=new H(e,1,!1,e.toLowerCase(),null,!0)}));var G=r.__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED;function X(e,t,n,r){var a=W.hasOwnProperty(t)?W[t]:null;(null!==a?0===a.type:!r&&(2<t.length&&("o"===t[0]||"O"===t[0])&&("n"===t[1]||"N"===t[1])))||(function(e,t,n,r){if(null==t||function(e,t,n,r){if(null!==n&&0===n.type)return!1;switch(typeof t){case"function":case"symbol":return!0;case"boolean":return!r&&(null!==n?!n.acceptsBooleans:"data-"!==(e=e.toLowerCase().slice(0,5))&&"aria-"!==e);default:return!1}}(e,t,n,r))return!0;if(r)return!1;if(null!==n)switch(n.type){case 3:return!t;case 4:return!1===t;case 5:return isNaN(t);case 6:return isNaN(t)||1>t}return!1}(t,n,a,r)&&(n=null),r||null===a?function(e){return!!q.call(Y,e)||!q.call($,e)&&(V.test(e)?Y[e]=!0:($[e]=!0,!1))}(t)&&(null===n?e.removeAttribute(t):e.setAttribute(t,""+n)):a.mustUseProperty?e[a.propertyName]=null===n?3!==a.type&&"":n:(t=a.attributeName,r=a.attributeNamespace,null===n?e.removeAttribute(t):(n=3===(a=a.type)||4===a&&!0===n?"":""+n,r?e.setAttributeNS(r,t,n):e.setAttribute(t,n))))}G.hasOwnProperty("ReactCurrentDispatcher")||(G.ReactCurrentDispatcher={current:null}),G.hasOwnProperty("ReactCurrentBatchConfig")||(G.ReactCurrentBatchConfig={suspense:null});var Z=/^(.*)[\\\/]/,J="function"==typeof Symbol&&Symbol.for,ee=J?Symbol.for("react.element"):60103,te=J?Symbol.for("react.portal"):60106,ne=J?Symbol.for("react.fragment"):60107,re=J?Symbol.for("react.strict_mode"):60108,ae=J?Symbol.for("react.profiler"):60114,ie=J?Symbol.for("react.provider"):60109,oe=J?Symbol.for("react.context"):60110,ue=J?Symbol.for("react.concurrent_mode"):60111,le=J?Symbol.for("react.forward_ref"):60112,se=J?Symbol.for("react.suspense"):60113,ce=J?Symbol.for("react.suspense_list"):60120,fe=J?Symbol.for("react.memo"):60115,pe=J?Symbol.for("react.lazy"):60116,de=J?Symbol.for("react.block"):60121,he="function"==typeof Symbol&&Symbol.iterator;function me(e){return null===e||"object"!=typeof e?null:"function"==typeof(e=he&&e[he]||e["@@iterator"])?e:null}function ge(e){if(null==e)return null;if("function"==typeof e)return e.displayName||e.name||null;if("string"==typeof e)return e;switch(e){case ne:return"Fragment";case te:return"Portal";case ae:return"Profiler";case re:return"StrictMode";case se:return"Suspense";case ce:return"SuspenseList"}if("object"==typeof e)switch(e.$$typeof){case oe:return"Context.Consumer";case ie:return"Context.Provider";case le:var t=e.render;return t=t.displayName||t.name||"",e.displayName||(""!==t?"ForwardRef("+t+")":"ForwardRef");case fe:return ge(e.type);case de:return ge(e.render);case pe:if(e=1===e._status?e._result:null)return ge(e)}return null}function ve(e){var t="";do{e:switch(e.tag){case 3:case 4:case 6:case 7:case 10:case 9:var n="";break e;default:var r=e._debugOwner,a=e._debugSource,i=ge(e.type);n=null,r&&(n=ge(r.type)),r=i,i="",a?i=" (at "+a.fileName.replace(Z,"")+":"+a.lineNumber+")":n&&(i=" (created by "+n+")"),n="\n    in "+(r||"Unknown")+i}t+=n,e=e.return}while(e);return t}function ye(e){switch(typeof e){case"boolean":case"number":case"object":case"string":case"undefined":return e;default:return""}}function be(e){var t=e.type;return(e=e.nodeName)&&"input"===e.toLowerCase()&&("checkbox"===t||"radio"===t)}function xe(e){e._valueTracker||(e._valueTracker=function(e){var t=be(e)?"checked":"value",n=Object.getOwnPropertyDescriptor(e.constructor.prototype,t),r=""+e[t];if(!e.hasOwnProperty(t)&&void 0!==n&&"function"==typeof n.get&&"function"==typeof n.set){var a=n.get,i=n.set;return Object.defineProperty(e,t,{configurable:!0,get:function(){return a.call(this)},set:function(e){r=""+e,i.call(this,e)}}),Object.defineProperty(e,t,{enumerable:n.enumerable}),{getValue:function(){return r},setValue:function(e){r=""+e},stopTracking:function(){e._valueTracker=null,delete e[t]}}}}(e))}function we(e){if(!e)return!1;var t=e._valueTracker;if(!t)return!0;var n=t.getValue(),r="";return e&&(r=be(e)?e.checked?"true":"false":e.value),(e=r)!==n&&(t.setValue(e),!0)}function Ee(e,t){var n=t.checked;return a({},t,{defaultChecked:void 0,defaultValue:void 0,value:void 0,checked:null!=n?n:e._wrapperState.initialChecked})}function Me(e,t){var n=null==t.defaultValue?"":t.defaultValue,r=null!=t.checked?t.checked:t.defaultChecked;n=ye(null!=t.value?t.value:n),e._wrapperState={initialChecked:r,initialValue:n,controlled:"checkbox"===t.type||"radio"===t.type?null!=t.checked:null!=t.value}}function Pe(e,t){null!=(t=t.checked)&&X(e,"checked",t,!1)}function ke(e,t){Pe(e,t);var n=ye(t.value),r=t.type;if(null!=n)"number"===r?(0===n&&""===e.value||e.value!=n)&&(e.value=""+n):e.value!==""+n&&(e.value=""+n);else if("submit"===r||"reset"===r)return void e.removeAttribute("value");t.hasOwnProperty("value")?_e(e,t.type,n):t.hasOwnProperty("defaultValue")&&_e(e,t.type,ye(t.defaultValue)),null==t.checked&&null!=t.defaultChecked&&(e.defaultChecked=!!t.defaultChecked)}function Se(e,t,n){if(t.hasOwnProperty("value")||t.hasOwnProperty("defaultValue")){var r=t.type;if(!("submit"!==r&&"reset"!==r||void 0!==t.value&&null!==t.value))return;t=""+e._wrapperState.initialValue,n||t===e.value||(e.value=t),e.defaultValue=t}""!==(n=e.name)&&(e.name=""),e.defaultChecked=!!e._wrapperState.initialChecked,""!==n&&(e.name=n)}function _e(e,t,n){"number"===t&&e.ownerDocument.activeElement===e||(null==n?e.defaultValue=""+e._wrapperState.initialValue:e.defaultValue!==""+n&&(e.defaultValue=""+n))}function Te(e,t){return e=a({children:void 0},t),(t=function(e){var t="";return r.Children.forEach(e,(function(e){null!=e&&(t+=e)})),t}(t.children))&&(e.children=t),e}function Ne(e,t,n,r){if(e=e.options,t){t={};for(var a=0;a<n.length;a++)t["$"+n[a]]=!0;for(n=0;n<e.length;n++)a=t.hasOwnProperty("$"+e[n].value),e[n].selected!==a&&(e[n].selected=a),a&&r&&(e[n].defaultSelected=!0)}else{for(n=""+ye(n),t=null,a=0;a<e.length;a++){if(e[a].value===n)return e[a].selected=!0,void(r&&(e[a].defaultSelected=!0));null!==t||e[a].disabled||(t=e[a])}null!==t&&(t.selected=!0)}}function Ce(e,t){if(null!=t.dangerouslySetInnerHTML)throw Error(o(91));return a({},t,{value:void 0,defaultValue:void 0,children:""+e._wrapperState.initialValue})}function Ae(e,t){var n=t.value;if(null==n){if(n=t.children,t=t.defaultValue,null!=n){if(null!=t)throw Error(o(92));if(Array.isArray(n)){if(!(1>=n.length))throw Error(o(93));n=n[0]}t=n}null==t&&(t=""),n=t}e._wrapperState={initialValue:ye(n)}}function Oe(e,t){var n=ye(t.value),r=ye(t.defaultValue);null!=n&&((n=""+n)!==e.value&&(e.value=n),null==t.defaultValue&&e.defaultValue!==n&&(e.defaultValue=n)),null!=r&&(e.defaultValue=""+r)}function De(e){var t=e.textContent;t===e._wrapperState.initialValue&&""!==t&&null!==t&&(e.value=t)}var Be="http://www.w3.org/1999/xhtml",Ie="http://www.w3.org/2000/svg";function ze(e){switch(e){case"svg":return"http://www.w3.org/2000/svg";case"math":return"http://www.w3.org/1998/Math/MathML";default:return"http://www.w3.org/1999/xhtml"}}function Le(e,t){return null==e||"http://www.w3.org/1999/xhtml"===e?ze(t):"http://www.w3.org/2000/svg"===e&&"foreignObject"===t?"http://www.w3.org/1999/xhtml":e}var Re,Fe=function(e){return"undefined"!=typeof MSApp&&MSApp.execUnsafeLocalFunction?function(t,n,r,a){MSApp.execUnsafeLocalFunction((function(){return e(t,n)}))}:e}((function(e,t){if(e.namespaceURI!==Ie||"innerHTML"in e)e.innerHTML=t;else{for((Re=Re||document.createElement("div")).innerHTML="<svg>"+t.valueOf().toString()+"</svg>",t=Re.firstChild;e.firstChild;)e.removeChild(e.firstChild);for(;t.firstChild;)e.appendChild(t.firstChild)}}));function je(e,t){if(t){var n=e.firstChild;if(n&&n===e.lastChild&&3===n.nodeType)return void(n.nodeValue=t)}e.textContent=t}function Ue(e,t){var n={};return n[e.toLowerCase()]=t.toLowerCase(),n["Webkit"+e]="webkit"+t,n["Moz"+e]="moz"+t,n}var Ve={animationend:Ue("Animation","AnimationEnd"),animationiteration:Ue("Animation","AnimationIteration"),animationstart:Ue("Animation","AnimationStart"),transitionend:Ue("Transition","TransitionEnd")},qe={},$e={};function Ye(e){if(qe[e])return qe[e];if(!Ve[e])return e;var t,n=Ve[e];for(t in n)if(n.hasOwnProperty(t)&&t in $e)return qe[e]=n[t];return e}_&&($e=document.createElement("div").style,"AnimationEvent"in window||(delete Ve.animationend.animation,delete Ve.animationiteration.animation,delete Ve.animationstart.animation),"TransitionEvent"in window||delete Ve.transitionend.transition);var He=Ye("animationend"),We=Ye("animationiteration"),Qe=Ye("animationstart"),Ke=Ye("transitionend"),Ge="abort canplay canplaythrough durationchange emptied encrypted ended error loadeddata loadedmetadata loadstart pause play playing progress ratechange seeked seeking stalled suspend timeupdate volumechange waiting".split(" "),Xe=new("function"==typeof WeakMap?WeakMap:Map);function Ze(e){var t=Xe.get(e);return void 0===t&&(t=new Map,Xe.set(e,t)),t}function Je(e){var t=e,n=e;if(e.alternate)for(;t.return;)t=t.return;else{e=t;do{0!=(1026&(t=e).effectTag)&&(n=t.return),e=t.return}while(e)}return 3===t.tag?n:null}function et(e){if(13===e.tag){var t=e.memoizedState;if(null===t&&(null!==(e=e.alternate)&&(t=e.memoizedState)),null!==t)return t.dehydrated}return null}function tt(e){if(Je(e)!==e)throw Error(o(188))}function nt(e){if(!(e=function(e){var t=e.alternate;if(!t){if(null===(t=Je(e)))throw Error(o(188));return t!==e?null:e}for(var n=e,r=t;;){var a=n.return;if(null===a)break;var i=a.alternate;if(null===i){if(null!==(r=a.return)){n=r;continue}break}if(a.child===i.child){for(i=a.child;i;){if(i===n)return tt(a),e;if(i===r)return tt(a),t;i=i.sibling}throw Error(o(188))}if(n.return!==r.return)n=a,r=i;else{for(var u=!1,l=a.child;l;){if(l===n){u=!0,n=a,r=i;break}if(l===r){u=!0,r=a,n=i;break}l=l.sibling}if(!u){for(l=i.child;l;){if(l===n){u=!0,n=i,r=a;break}if(l===r){u=!0,r=i,n=a;break}l=l.sibling}if(!u)throw Error(o(189))}}if(n.alternate!==r)throw Error(o(190))}if(3!==n.tag)throw Error(o(188));return n.stateNode.current===n?e:t}(e)))return null;for(var t=e;;){if(5===t.tag||6===t.tag)return t;if(t.child)t.child.return=t,t=t.child;else{if(t===e)break;for(;!t.sibling;){if(!t.return||t.return===e)return null;t=t.return}t.sibling.return=t.return,t=t.sibling}}return null}function rt(e,t){if(null==t)throw Error(o(30));return null==e?t:Array.isArray(e)?Array.isArray(t)?(e.push.apply(e,t),e):(e.push(t),e):Array.isArray(t)?[e].concat(t):[e,t]}function at(e,t,n){Array.isArray(e)?e.forEach(t,n):e&&t.call(n,e)}var it=null;function ot(e){if(e){var t=e._dispatchListeners,n=e._dispatchInstances;if(Array.isArray(t))for(var r=0;r<t.length&&!e.isPropagationStopped();r++)v(e,t[r],n[r]);else t&&v(e,t,n);e._dispatchListeners=null,e._dispatchInstances=null,e.isPersistent()||e.constructor.release(e)}}function ut(e){if(null!==e&&(it=rt(it,e)),e=it,it=null,e){if(at(e,ot),it)throw Error(o(95));if(c)throw e=f,c=!1,f=null,e}}function lt(e){return(e=e.target||e.srcElement||window).correspondingUseElement&&(e=e.correspondingUseElement),3===e.nodeType?e.parentNode:e}function st(e){if(!_)return!1;var t=(e="on"+e)in document;return t||((t=document.createElement("div")).setAttribute(e,"return;"),t="function"==typeof t[e]),t}var ct=[];function ft(e){e.topLevelType=null,e.nativeEvent=null,e.targetInst=null,e.ancestors.length=0,10>ct.length&&ct.push(e)}function pt(e,t,n,r){if(ct.length){var a=ct.pop();return a.topLevelType=e,a.eventSystemFlags=r,a.nativeEvent=t,a.targetInst=n,a}return{topLevelType:e,eventSystemFlags:r,nativeEvent:t,targetInst:n,ancestors:[]}}function dt(e){var t=e.targetInst,n=t;do{if(!n){e.ancestors.push(n);break}var r=n;if(3===r.tag)r=r.stateNode.containerInfo;else{for(;r.return;)r=r.return;r=3!==r.tag?null:r.stateNode.containerInfo}if(!r)break;5!==(t=n.tag)&&6!==t||e.ancestors.push(n),n=_n(r)}while(n);for(n=0;n<e.ancestors.length;n++){t=e.ancestors[n];var a=lt(e.nativeEvent);r=e.topLevelType;var i=e.nativeEvent,o=e.eventSystemFlags;0===n&&(o|=64);for(var u=null,l=0;l<E.length;l++){var s=E[l];s&&(s=s.extractEvents(r,t,i,a,o))&&(u=rt(u,s))}ut(u)}}function ht(e,t,n){if(!n.has(e)){switch(e){case"scroll":Qt(t,"scroll",!0);break;case"focus":case"blur":Qt(t,"focus",!0),Qt(t,"blur",!0),n.set("blur",null),n.set("focus",null);break;case"cancel":case"close":st(e)&&Qt(t,e,!0);break;case"invalid":case"submit":case"reset":break;default:-1===Ge.indexOf(e)&&Wt(e,t)}n.set(e,null)}}var mt,gt,vt,yt=!1,bt=[],xt=null,wt=null,Et=null,Mt=new Map,Pt=new Map,kt=[],St="mousedown mouseup touchcancel touchend touchstart auxclick dblclick pointercancel pointerdown pointerup dragend dragstart drop compositionend compositionstart keydown keypress keyup input textInput close cancel copy cut paste click change contextmenu reset submit".split(" "),_t="focus blur dragenter dragleave mouseover mouseout pointerover pointerout gotpointercapture lostpointercapture".split(" ");function Tt(e,t,n,r,a){return{blockedOn:e,topLevelType:t,eventSystemFlags:32|n,nativeEvent:a,container:r}}function Nt(e,t){switch(e){case"focus":case"blur":xt=null;break;case"dragenter":case"dragleave":wt=null;break;case"mouseover":case"mouseout":Et=null;break;case"pointerover":case"pointerout":Mt.delete(t.pointerId);break;case"gotpointercapture":case"lostpointercapture":Pt.delete(t.pointerId)}}function Ct(e,t,n,r,a,i){return null===e||e.nativeEvent!==i?(e=Tt(t,n,r,a,i),null!==t&&(null!==(t=Tn(t))&&gt(t)),e):(e.eventSystemFlags|=r,e)}function At(e){var t=_n(e.target);if(null!==t){var n=Je(t);if(null!==n)if(13===(t=n.tag)){if(null!==(t=et(n)))return e.blockedOn=t,void i.unstable_runWithPriority(e.priority,(function(){vt(n)}))}else if(3===t&&n.stateNode.hydrate)return void(e.blockedOn=3===n.tag?n.stateNode.containerInfo:null)}e.blockedOn=null}function Ot(e){if(null!==e.blockedOn)return!1;var t=Zt(e.topLevelType,e.eventSystemFlags,e.container,e.nativeEvent);if(null!==t){var n=Tn(t);return null!==n&&gt(n),e.blockedOn=t,!1}return!0}function Dt(e,t,n){Ot(e)&&n.delete(t)}function Bt(){for(yt=!1;0<bt.length;){var e=bt[0];if(null!==e.blockedOn){null!==(e=Tn(e.blockedOn))&&mt(e);break}var t=Zt(e.topLevelType,e.eventSystemFlags,e.container,e.nativeEvent);null!==t?e.blockedOn=t:bt.shift()}null!==xt&&Ot(xt)&&(xt=null),null!==wt&&Ot(wt)&&(wt=null),null!==Et&&Ot(Et)&&(Et=null),Mt.forEach(Dt),Pt.forEach(Dt)}function It(e,t){e.blockedOn===t&&(e.blockedOn=null,yt||(yt=!0,i.unstable_scheduleCallback(i.unstable_NormalPriority,Bt)))}function zt(e){function t(t){return It(t,e)}if(0<bt.length){It(bt[0],e);for(var n=1;n<bt.length;n++){var r=bt[n];r.blockedOn===e&&(r.blockedOn=null)}}for(null!==xt&&It(xt,e),null!==wt&&It(wt,e),null!==Et&&It(Et,e),Mt.forEach(t),Pt.forEach(t),n=0;n<kt.length;n++)(r=kt[n]).blockedOn===e&&(r.blockedOn=null);for(;0<kt.length&&null===(n=kt[0]).blockedOn;)At(n),null===n.blockedOn&&kt.shift()}var Lt={},Rt=new Map,Ft=new Map,jt=["abort","abort",He,"animationEnd",We,"animationIteration",Qe,"animationStart","canplay","canPlay","canplaythrough","canPlayThrough","durationchange","durationChange","emptied","emptied","encrypted","encrypted","ended","ended","error","error","gotpointercapture","gotPointerCapture","load","load","loadeddata","loadedData","loadedmetadata","loadedMetadata","loadstart","loadStart","lostpointercapture","lostPointerCapture","playing","playing","progress","progress","seeking","seeking","stalled","stalled","suspend","suspend","timeupdate","timeUpdate",Ke,"transitionEnd","waiting","waiting"];function Ut(e,t){for(var n=0;n<e.length;n+=2){var r=e[n],a=e[n+1],i="on"+(a[0].toUpperCase()+a.slice(1));i={phasedRegistrationNames:{bubbled:i,captured:i+"Capture"},dependencies:[r],eventPriority:t},Ft.set(r,t),Rt.set(r,i),Lt[a]=i}}Ut("blur blur cancel cancel click click close close contextmenu contextMenu copy copy cut cut auxclick auxClick dblclick doubleClick dragend dragEnd dragstart dragStart drop drop focus focus input input invalid invalid keydown keyDown keypress keyPress keyup keyUp mousedown mouseDown mouseup mouseUp paste paste pause pause play play pointercancel pointerCancel pointerdown pointerDown pointerup pointerUp ratechange rateChange reset reset seeked seeked submit submit touchcancel touchCancel touchend touchEnd touchstart touchStart volumechange volumeChange".split(" "),0),Ut("drag drag dragenter dragEnter dragexit dragExit dragleave dragLeave dragover dragOver mousemove mouseMove mouseout mouseOut mouseover mouseOver pointermove pointerMove pointerout pointerOut pointerover pointerOver scroll scroll toggle toggle touchmove touchMove wheel wheel".split(" "),1),Ut(jt,2);for(var Vt="change selectionchange textInput compositionstart compositionend compositionupdate".split(" "),qt=0;qt<Vt.length;qt++)Ft.set(Vt[qt],0);var $t=i.unstable_UserBlockingPriority,Yt=i.unstable_runWithPriority,Ht=!0;function Wt(e,t){Qt(t,e,!1)}function Qt(e,t,n){var r=Ft.get(t);switch(void 0===r?2:r){case 0:r=Kt.bind(null,t,1,e);break;case 1:r=Gt.bind(null,t,1,e);break;default:r=Xt.bind(null,t,1,e)}n?e.addEventListener(t,r,!0):e.addEventListener(t,r,!1)}function Kt(e,t,n,r){R||z();var a=Xt,i=R;R=!0;try{I(a,e,t,n,r)}finally{(R=i)||j()}}function Gt(e,t,n,r){Yt($t,Xt.bind(null,e,t,n,r))}function Xt(e,t,n,r){if(Ht)if(0<bt.length&&-1<St.indexOf(e))e=Tt(null,e,t,n,r),bt.push(e);else{var a=Zt(e,t,n,r);if(null===a)Nt(e,r);else if(-1<St.indexOf(e))e=Tt(a,e,t,n,r),bt.push(e);else if(!function(e,t,n,r,a){switch(t){case"focus":return xt=Ct(xt,e,t,n,r,a),!0;case"dragenter":return wt=Ct(wt,e,t,n,r,a),!0;case"mouseover":return Et=Ct(Et,e,t,n,r,a),!0;case"pointerover":var i=a.pointerId;return Mt.set(i,Ct(Mt.get(i)||null,e,t,n,r,a)),!0;case"gotpointercapture":return i=a.pointerId,Pt.set(i,Ct(Pt.get(i)||null,e,t,n,r,a)),!0}return!1}(a,e,t,n,r)){Nt(e,r),e=pt(e,r,null,t);try{U(dt,e)}finally{ft(e)}}}}function Zt(e,t,n,r){if(null!==(n=_n(n=lt(r)))){var a=Je(n);if(null===a)n=null;else{var i=a.tag;if(13===i){if(null!==(n=et(a)))return n;n=null}else if(3===i){if(a.stateNode.hydrate)return 3===a.tag?a.stateNode.containerInfo:null;n=null}else a!==n&&(n=null)}}e=pt(e,r,n,t);try{U(dt,e)}finally{ft(e)}return null}var Jt={animationIterationCount:!0,borderImageOutset:!0,borderImageSlice:!0,borderImageWidth:!0,boxFlex:!0,boxFlexGroup:!0,boxOrdinalGroup:!0,columnCount:!0,columns:!0,flex:!0,flexGrow:!0,flexPositive:!0,flexShrink:!0,flexNegative:!0,flexOrder:!0,gridArea:!0,gridRow:!0,gridRowEnd:!0,gridRowSpan:!0,gridRowStart:!0,gridColumn:!0,gridColumnEnd:!0,gridColumnSpan:!0,gridColumnStart:!0,fontWeight:!0,lineClamp:!0,lineHeight:!0,opacity:!0,order:!0,orphans:!0,tabSize:!0,widows:!0,zIndex:!0,zoom:!0,fillOpacity:!0,floodOpacity:!0,stopOpacity:!0,strokeDasharray:!0,strokeDashoffset:!0,strokeMiterlimit:!0,strokeOpacity:!0,strokeWidth:!0},en=["Webkit","ms","Moz","O"];function tn(e,t,n){return null==t||"boolean"==typeof t||""===t?"":n||"number"!=typeof t||0===t||Jt.hasOwnProperty(e)&&Jt[e]?(""+t).trim():t+"px"}function nn(e,t){for(var n in e=e.style,t)if(t.hasOwnProperty(n)){var r=0===n.indexOf("--"),a=tn(n,t[n],r);"float"===n&&(n="cssFloat"),r?e.setProperty(n,a):e[n]=a}}Object.keys(Jt).forEach((function(e){en.forEach((function(t){t=t+e.charAt(0).toUpperCase()+e.substring(1),Jt[t]=Jt[e]}))}));var rn=a({menuitem:!0},{area:!0,base:!0,br:!0,col:!0,embed:!0,hr:!0,img:!0,input:!0,keygen:!0,link:!0,meta:!0,param:!0,source:!0,track:!0,wbr:!0});function an(e,t){if(t){if(rn[e]&&(null!=t.children||null!=t.dangerouslySetInnerHTML))throw Error(o(137,e,""));if(null!=t.dangerouslySetInnerHTML){if(null!=t.children)throw Error(o(60));if("object"!=typeof t.dangerouslySetInnerHTML||!("__html"in t.dangerouslySetInnerHTML))throw Error(o(61))}if(null!=t.style&&"object"!=typeof t.style)throw Error(o(62,""))}}function on(e,t){if(-1===e.indexOf("-"))return"string"==typeof t.is;switch(e){case"annotation-xml":case"color-profile":case"font-face":case"font-face-src":case"font-face-uri":case"font-face-format":case"font-face-name":case"missing-glyph":return!1;default:return!0}}var un=Be;function ln(e,t){var n=Ze(e=9===e.nodeType||11===e.nodeType?e:e.ownerDocument);t=k[t];for(var r=0;r<t.length;r++)ht(t[r],e,n)}function sn(){}function cn(e){if(void 0===(e=e||("undefined"!=typeof document?document:void 0)))return null;try{return e.activeElement||e.body}catch(t){return e.body}}function fn(e){for(;e&&e.firstChild;)e=e.firstChild;return e}function pn(e,t){var n,r=fn(e);for(e=0;r;){if(3===r.nodeType){if(n=e+r.textContent.length,e<=t&&n>=t)return{node:r,offset:t-e};e=n}e:{for(;r;){if(r.nextSibling){r=r.nextSibling;break e}r=r.parentNode}r=void 0}r=fn(r)}}function dn(){for(var e=window,t=cn();t instanceof e.HTMLIFrameElement;){try{var n="string"==typeof t.contentWindow.location.href}catch(e){n=!1}if(!n)break;t=cn((e=t.contentWindow).document)}return t}function hn(e){var t=e&&e.nodeName&&e.nodeName.toLowerCase();return t&&("input"===t&&("text"===e.type||"search"===e.type||"tel"===e.type||"url"===e.type||"password"===e.type)||"textarea"===t||"true"===e.contentEditable)}var mn=null,gn=null;function vn(e,t){switch(e){case"button":case"input":case"select":case"textarea":return!!t.autoFocus}return!1}function yn(e,t){return"textarea"===e||"option"===e||"noscript"===e||"string"==typeof t.children||"number"==typeof t.children||"object"==typeof t.dangerouslySetInnerHTML&&null!==t.dangerouslySetInnerHTML&&null!=t.dangerouslySetInnerHTML.__html}var bn="function"==typeof setTimeout?setTimeout:void 0,xn="function"==typeof clearTimeout?clearTimeout:void 0;function wn(e){for(;null!=e;e=e.nextSibling){var t=e.nodeType;if(1===t||3===t)break}return e}function En(e){e=e.previousSibling;for(var t=0;e;){if(8===e.nodeType){var n=e.data;if("$"===n||"$!"===n||"$?"===n){if(0===t)return e;t--}else"/$"===n&&t++}e=e.previousSibling}return null}var Mn=Math.random().toString(36).slice(2),Pn="__reactInternalInstance$"+Mn,kn="__reactEventHandlers$"+Mn,Sn="__reactContainere$"+Mn;function _n(e){var t=e[Pn];if(t)return t;for(var n=e.parentNode;n;){if(t=n[Sn]||n[Pn]){if(n=t.alternate,null!==t.child||null!==n&&null!==n.child)for(e=En(e);null!==e;){if(n=e[Pn])return n;e=En(e)}return t}n=(e=n).parentNode}return null}function Tn(e){return!(e=e[Pn]||e[Sn])||5!==e.tag&&6!==e.tag&&13!==e.tag&&3!==e.tag?null:e}function Nn(e){if(5===e.tag||6===e.tag)return e.stateNode;throw Error(o(33))}function Cn(e){return e[kn]||null}function An(e){do{e=e.return}while(e&&5!==e.tag);return e||null}function On(e,t){var n=e.stateNode;if(!n)return null;var r=h(n);if(!r)return null;n=r[t];e:switch(t){case"onClick":case"onClickCapture":case"onDoubleClick":case"onDoubleClickCapture":case"onMouseDown":case"onMouseDownCapture":case"onMouseMove":case"onMouseMoveCapture":case"onMouseUp":case"onMouseUpCapture":case"onMouseEnter":(r=!r.disabled)||(r=!("button"===(e=e.type)||"input"===e||"select"===e||"textarea"===e)),e=!r;break e;default:e=!1}if(e)return null;if(n&&"function"!=typeof n)throw Error(o(231,t,typeof n));return n}function Dn(e,t,n){(t=On(e,n.dispatchConfig.phasedRegistrationNames[t]))&&(n._dispatchListeners=rt(n._dispatchListeners,t),n._dispatchInstances=rt(n._dispatchInstances,e))}function Bn(e){if(e&&e.dispatchConfig.phasedRegistrationNames){for(var t=e._targetInst,n=[];t;)n.push(t),t=An(t);for(t=n.length;0<t--;)Dn(n[t],"captured",e);for(t=0;t<n.length;t++)Dn(n[t],"bubbled",e)}}function In(e,t,n){e&&n&&n.dispatchConfig.registrationName&&(t=On(e,n.dispatchConfig.registrationName))&&(n._dispatchListeners=rt(n._dispatchListeners,t),n._dispatchInstances=rt(n._dispatchInstances,e))}function zn(e){e&&e.dispatchConfig.registrationName&&In(e._targetInst,null,e)}function Ln(e){at(e,Bn)}var Rn=null,Fn=null,jn=null;function Un(){if(jn)return jn;var e,t,n=Fn,r=n.length,a="value"in Rn?Rn.value:Rn.textContent,i=a.length;for(e=0;e<r&&n[e]===a[e];e++);var o=r-e;for(t=1;t<=o&&n[r-t]===a[i-t];t++);return jn=a.slice(e,1<t?1-t:void 0)}function Vn(){return!0}function qn(){return!1}function $n(e,t,n,r){for(var a in this.dispatchConfig=e,this._targetInst=t,this.nativeEvent=n,e=this.constructor.Interface)e.hasOwnProperty(a)&&((t=e[a])?this[a]=t(n):"target"===a?this.target=r:this[a]=n[a]);return this.isDefaultPrevented=(null!=n.defaultPrevented?n.defaultPrevented:!1===n.returnValue)?Vn:qn,this.isPropagationStopped=qn,this}function Yn(e,t,n,r){if(this.eventPool.length){var a=this.eventPool.pop();return this.call(a,e,t,n,r),a}return new this(e,t,n,r)}function Hn(e){if(!(e instanceof this))throw Error(o(279));e.destructor(),10>this.eventPool.length&&this.eventPool.push(e)}function Wn(e){e.eventPool=[],e.getPooled=Yn,e.release=Hn}a($n.prototype,{preventDefault:function(){this.defaultPrevented=!0;var e=this.nativeEvent;e&&(e.preventDefault?e.preventDefault():"unknown"!=typeof e.returnValue&&(e.returnValue=!1),this.isDefaultPrevented=Vn)},stopPropagation:function(){var e=this.nativeEvent;e&&(e.stopPropagation?e.stopPropagation():"unknown"!=typeof e.cancelBubble&&(e.cancelBubble=!0),this.isPropagationStopped=Vn)},persist:function(){this.isPersistent=Vn},isPersistent:qn,destructor:function(){var e,t=this.constructor.Interface;for(e in t)this[e]=null;this.nativeEvent=this._targetInst=this.dispatchConfig=null,this.isPropagationStopped=this.isDefaultPrevented=qn,this._dispatchInstances=this._dispatchListeners=null}}),$n.Interface={type:null,target:null,currentTarget:function(){return null},eventPhase:null,bubbles:null,cancelable:null,timeStamp:function(e){return e.timeStamp||Date.now()},defaultPrevented:null,isTrusted:null},$n.extend=function(e){function t(){}function n(){return r.apply(this,arguments)}var r=this;t.prototype=r.prototype;var i=new t;return a(i,n.prototype),n.prototype=i,n.prototype.constructor=n,n.Interface=a({},r.Interface,e),n.extend=r.extend,Wn(n),n},Wn($n);var Qn=$n.extend({data:null}),Kn=$n.extend({data:null}),Gn=[9,13,27,32],Xn=_&&"CompositionEvent"in window,Zn=null;_&&"documentMode"in document&&(Zn=document.documentMode);var Jn=_&&"TextEvent"in window&&!Zn,er=_&&(!Xn||Zn&&8<Zn&&11>=Zn),tr=String.fromCharCode(32),nr={beforeInput:{phasedRegistrationNames:{bubbled:"onBeforeInput",captured:"onBeforeInputCapture"},dependencies:["compositionend","keypress","textInput","paste"]},compositionEnd:{phasedRegistrationNames:{bubbled:"onCompositionEnd",captured:"onCompositionEndCapture"},dependencies:"blur compositionend keydown keypress keyup mousedown".split(" ")},compositionStart:{phasedRegistrationNames:{bubbled:"onCompositionStart",captured:"onCompositionStartCapture"},dependencies:"blur compositionstart keydown keypress keyup mousedown".split(" ")},compositionUpdate:{phasedRegistrationNames:{bubbled:"onCompositionUpdate",captured:"onCompositionUpdateCapture"},dependencies:"blur compositionupdate keydown keypress keyup mousedown".split(" ")}},rr=!1;function ar(e,t){switch(e){case"keyup":return-1!==Gn.indexOf(t.keyCode);case"keydown":return 229!==t.keyCode;case"keypress":case"mousedown":case"blur":return!0;default:return!1}}function ir(e){return"object"==typeof(e=e.detail)&&"data"in e?e.data:null}var or=!1;var ur={eventTypes:nr,extractEvents:function(e,t,n,r){var a;if(Xn)e:{switch(e){case"compositionstart":var i=nr.compositionStart;break e;case"compositionend":i=nr.compositionEnd;break e;case"compositionupdate":i=nr.compositionUpdate;break e}i=void 0}else or?ar(e,n)&&(i=nr.compositionEnd):"keydown"===e&&229===n.keyCode&&(i=nr.compositionStart);return i?(er&&"ko"!==n.locale&&(or||i!==nr.compositionStart?i===nr.compositionEnd&&or&&(a=Un()):(Fn="value"in(Rn=r)?Rn.value:Rn.textContent,or=!0)),i=Qn.getPooled(i,t,n,r),a?i.data=a:null!==(a=ir(n))&&(i.data=a),Ln(i),a=i):a=null,(e=Jn?function(e,t){switch(e){case"compositionend":return ir(t);case"keypress":return 32!==t.which?null:(rr=!0,tr);case"textInput":return(e=t.data)===tr&&rr?null:e;default:return null}}(e,n):function(e,t){if(or)return"compositionend"===e||!Xn&&ar(e,t)?(e=Un(),jn=Fn=Rn=null,or=!1,e):null;switch(e){case"paste":return null;case"keypress":if(!(t.ctrlKey||t.altKey||t.metaKey)||t.ctrlKey&&t.altKey){if(t.char&&1<t.char.length)return t.char;if(t.which)return String.fromCharCode(t.which)}return null;case"compositionend":return er&&"ko"!==t.locale?null:t.data;default:return null}}(e,n))?((t=Kn.getPooled(nr.beforeInput,t,n,r)).data=e,Ln(t)):t=null,null===a?t:null===t?a:[a,t]}},lr={color:!0,date:!0,datetime:!0,"datetime-local":!0,email:!0,month:!0,number:!0,password:!0,range:!0,search:!0,tel:!0,text:!0,time:!0,url:!0,week:!0};function sr(e){var t=e&&e.nodeName&&e.nodeName.toLowerCase();return"input"===t?!!lr[e.type]:"textarea"===t}var cr={change:{phasedRegistrationNames:{bubbled:"onChange",captured:"onChangeCapture"},dependencies:"blur change click focus input keydown keyup selectionchange".split(" ")}};function fr(e,t,n){return(e=$n.getPooled(cr.change,e,t,n)).type="change",O(n),Ln(e),e}var pr=null,dr=null;function hr(e){ut(e)}function mr(e){if(we(Nn(e)))return e}function gr(e,t){if("change"===e)return t}var vr=!1;function yr(){pr&&(pr.detachEvent("onpropertychange",br),dr=pr=null)}function br(e){if("value"===e.propertyName&&mr(dr))if(e=fr(dr,e,lt(e)),R)ut(e);else{R=!0;try{B(hr,e)}finally{R=!1,j()}}}function xr(e,t,n){"focus"===e?(yr(),dr=n,(pr=t).attachEvent("onpropertychange",br)):"blur"===e&&yr()}function wr(e){if("selectionchange"===e||"keyup"===e||"keydown"===e)return mr(dr)}function Er(e,t){if("click"===e)return mr(t)}function Mr(e,t){if("input"===e||"change"===e)return mr(t)}_&&(vr=st("input")&&(!document.documentMode||9<document.documentMode));var Pr={eventTypes:cr,_isInputEventSupported:vr,extractEvents:function(e,t,n,r){var a=t?Nn(t):window,i=a.nodeName&&a.nodeName.toLowerCase();if("select"===i||"input"===i&&"file"===a.type)var o=gr;else if(sr(a))if(vr)o=Mr;else{o=wr;var u=xr}else(i=a.nodeName)&&"input"===i.toLowerCase()&&("checkbox"===a.type||"radio"===a.type)&&(o=Er);if(o&&(o=o(e,t)))return fr(o,n,r);u&&u(e,a,t),"blur"===e&&(e=a._wrapperState)&&e.controlled&&"number"===a.type&&_e(a,"number",a.value)}},kr=$n.extend({view:null,detail:null}),Sr={Alt:"altKey",Control:"ctrlKey",Meta:"metaKey",Shift:"shiftKey"};function _r(e){var t=this.nativeEvent;return t.getModifierState?t.getModifierState(e):!!(e=Sr[e])&&!!t[e]}function Tr(){return _r}var Nr=0,Cr=0,Ar=!1,Or=!1,Dr=kr.extend({screenX:null,screenY:null,clientX:null,clientY:null,pageX:null,pageY:null,ctrlKey:null,shiftKey:null,altKey:null,metaKey:null,getModifierState:Tr,button:null,buttons:null,relatedTarget:function(e){return e.relatedTarget||(e.fromElement===e.srcElement?e.toElement:e.fromElement)},movementX:function(e){if("movementX"in e)return e.movementX;var t=Nr;return Nr=e.screenX,Ar?"mousemove"===e.type?e.screenX-t:0:(Ar=!0,0)},movementY:function(e){if("movementY"in e)return e.movementY;var t=Cr;return Cr=e.screenY,Or?"mousemove"===e.type?e.screenY-t:0:(Or=!0,0)}}),Br=Dr.extend({pointerId:null,width:null,height:null,pressure:null,tangentialPressure:null,tiltX:null,tiltY:null,twist:null,pointerType:null,isPrimary:null}),Ir={mouseEnter:{registrationName:"onMouseEnter",dependencies:["mouseout","mouseover"]},mouseLeave:{registrationName:"onMouseLeave",dependencies:["mouseout","mouseover"]},pointerEnter:{registrationName:"onPointerEnter",dependencies:["pointerout","pointerover"]},pointerLeave:{registrationName:"onPointerLeave",dependencies:["pointerout","pointerover"]}},zr={eventTypes:Ir,extractEvents:function(e,t,n,r,a){var i="mouseover"===e||"pointerover"===e,o="mouseout"===e||"pointerout"===e;if(i&&0==(32&a)&&(n.relatedTarget||n.fromElement)||!o&&!i)return null;(i=r.window===r?r:(i=r.ownerDocument)?i.defaultView||i.parentWindow:window,o)?(o=t,null!==(t=(t=n.relatedTarget||n.toElement)?_n(t):null)&&(t!==Je(t)||5!==t.tag&&6!==t.tag)&&(t=null)):o=null;if(o===t)return null;if("mouseout"===e||"mouseover"===e)var u=Dr,l=Ir.mouseLeave,s=Ir.mouseEnter,c="mouse";else"pointerout"!==e&&"pointerover"!==e||(u=Br,l=Ir.pointerLeave,s=Ir.pointerEnter,c="pointer");if(e=null==o?i:Nn(o),i=null==t?i:Nn(t),(l=u.getPooled(l,o,n,r)).type=c+"leave",l.target=e,l.relatedTarget=i,(n=u.getPooled(s,t,n,r)).type=c+"enter",n.target=i,n.relatedTarget=e,c=t,(r=o)&&c)e:{for(s=c,o=0,e=u=r;e;e=An(e))o++;for(e=0,t=s;t;t=An(t))e++;for(;0<o-e;)u=An(u),o--;for(;0<e-o;)s=An(s),e--;for(;o--;){if(u===s||u===s.alternate)break e;u=An(u),s=An(s)}u=null}else u=null;for(s=u,u=[];r&&r!==s&&(null===(o=r.alternate)||o!==s);)u.push(r),r=An(r);for(r=[];c&&c!==s&&(null===(o=c.alternate)||o!==s);)r.push(c),c=An(c);for(c=0;c<u.length;c++)In(u[c],"bubbled",l);for(c=r.length;0<c--;)In(r[c],"captured",n);return 0==(64&a)?[l]:[l,n]}};var Lr="function"==typeof Object.is?Object.is:function(e,t){return e===t&&(0!==e||1/e==1/t)||e!=e&&t!=t},Rr=Object.prototype.hasOwnProperty;function Fr(e,t){if(Lr(e,t))return!0;if("object"!=typeof e||null===e||"object"!=typeof t||null===t)return!1;var n=Object.keys(e),r=Object.keys(t);if(n.length!==r.length)return!1;for(r=0;r<n.length;r++)if(!Rr.call(t,n[r])||!Lr(e[n[r]],t[n[r]]))return!1;return!0}var jr=_&&"documentMode"in document&&11>=document.documentMode,Ur={select:{phasedRegistrationNames:{bubbled:"onSelect",captured:"onSelectCapture"},dependencies:"blur contextmenu dragend focus keydown keyup mousedown mouseup selectionchange".split(" ")}},Vr=null,qr=null,$r=null,Yr=!1;function Hr(e,t){var n=t.window===t?t.document:9===t.nodeType?t:t.ownerDocument;return Yr||null==Vr||Vr!==cn(n)?null:("selectionStart"in(n=Vr)&&hn(n)?n={start:n.selectionStart,end:n.selectionEnd}:n={anchorNode:(n=(n.ownerDocument&&n.ownerDocument.defaultView||window).getSelection()).anchorNode,anchorOffset:n.anchorOffset,focusNode:n.focusNode,focusOffset:n.focusOffset},$r&&Fr($r,n)?null:($r=n,(e=$n.getPooled(Ur.select,qr,e,t)).type="select",e.target=Vr,Ln(e),e))}var Wr={eventTypes:Ur,extractEvents:function(e,t,n,r,a,i){if(!(i=!(a=i||(r.window===r?r.document:9===r.nodeType?r:r.ownerDocument)))){e:{a=Ze(a),i=k.onSelect;for(var o=0;o<i.length;o++)if(!a.has(i[o])){a=!1;break e}a=!0}i=!a}if(i)return null;switch(a=t?Nn(t):window,e){case"focus":(sr(a)||"true"===a.contentEditable)&&(Vr=a,qr=t,$r=null);break;case"blur":$r=qr=Vr=null;break;case"mousedown":Yr=!0;break;case"contextmenu":case"mouseup":case"dragend":return Yr=!1,Hr(n,r);case"selectionchange":if(jr)break;case"keydown":case"keyup":return Hr(n,r)}return null}},Qr=$n.extend({animationName:null,elapsedTime:null,pseudoElement:null}),Kr=$n.extend({clipboardData:function(e){return"clipboardData"in e?e.clipboardData:window.clipboardData}}),Gr=kr.extend({relatedTarget:null});function Xr(e){var t=e.keyCode;return"charCode"in e?0===(e=e.charCode)&&13===t&&(e=13):e=t,10===e&&(e=13),32<=e||13===e?e:0}var Zr={Esc:"Escape",Spacebar:" ",Left:"ArrowLeft",Up:"ArrowUp",Right:"ArrowRight",Down:"ArrowDown",Del:"Delete",Win:"OS",Menu:"ContextMenu",Apps:"ContextMenu",Scroll:"ScrollLock",MozPrintableKey:"Unidentified"},Jr={8:"Backspace",9:"Tab",12:"Clear",13:"Enter",16:"Shift",17:"Control",18:"Alt",19:"Pause",20:"CapsLock",27:"Escape",32:" ",33:"PageUp",34:"PageDown",35:"End",36:"Home",37:"ArrowLeft",38:"ArrowUp",39:"ArrowRight",40:"ArrowDown",45:"Insert",46:"Delete",112:"F1",113:"F2",114:"F3",115:"F4",116:"F5",117:"F6",118:"F7",119:"F8",120:"F9",121:"F10",122:"F11",123:"F12",144:"NumLock",145:"ScrollLock",224:"Meta"},ea=kr.extend({key:function(e){if(e.key){var t=Zr[e.key]||e.key;if("Unidentified"!==t)return t}return"keypress"===e.type?13===(e=Xr(e))?"Enter":String.fromCharCode(e):"keydown"===e.type||"keyup"===e.type?Jr[e.keyCode]||"Unidentified":""},location:null,ctrlKey:null,shiftKey:null,altKey:null,metaKey:null,repeat:null,locale:null,getModifierState:Tr,charCode:function(e){return"keypress"===e.type?Xr(e):0},keyCode:function(e){return"keydown"===e.type||"keyup"===e.type?e.keyCode:0},which:function(e){return"keypress"===e.type?Xr(e):"keydown"===e.type||"keyup"===e.type?e.keyCode:0}}),ta=Dr.extend({dataTransfer:null}),na=kr.extend({touches:null,targetTouches:null,changedTouches:null,altKey:null,metaKey:null,ctrlKey:null,shiftKey:null,getModifierState:Tr}),ra=$n.extend({propertyName:null,elapsedTime:null,pseudoElement:null}),aa=Dr.extend({deltaX:function(e){return"deltaX"in e?e.deltaX:"wheelDeltaX"in e?-e.wheelDeltaX:0},deltaY:function(e){return"deltaY"in e?e.deltaY:"wheelDeltaY"in e?-e.wheelDeltaY:"wheelDelta"in e?-e.wheelDelta:0},deltaZ:null,deltaMode:null}),ia={eventTypes:Lt,extractEvents:function(e,t,n,r){var a=Rt.get(e);if(!a)return null;switch(e){case"keypress":if(0===Xr(n))return null;case"keydown":case"keyup":e=ea;break;case"blur":case"focus":e=Gr;break;case"click":if(2===n.button)return null;case"auxclick":case"dblclick":case"mousedown":case"mousemove":case"mouseup":case"mouseout":case"mouseover":case"contextmenu":e=Dr;break;case"drag":case"dragend":case"dragenter":case"dragexit":case"dragleave":case"dragover":case"dragstart":case"drop":e=ta;break;case"touchcancel":case"touchend":case"touchmove":case"touchstart":e=na;break;case He:case We:case Qe:e=Qr;break;case Ke:e=ra;break;case"scroll":e=kr;break;case"wheel":e=aa;break;case"copy":case"cut":case"paste":e=Kr;break;case"gotpointercapture":case"lostpointercapture":case"pointercancel":case"pointerdown":case"pointermove":case"pointerout":case"pointerover":case"pointerup":e=Br;break;default:e=$n}return Ln(t=e.getPooled(a,t,n,r)),t}};if(y)throw Error(o(101));y=Array.prototype.slice.call("ResponderEventPlugin SimpleEventPlugin EnterLeaveEventPlugin ChangeEventPlugin SelectEventPlugin BeforeInputEventPlugin".split(" ")),x(),h=Cn,m=Tn,g=Nn,S({SimpleEventPlugin:ia,EnterLeaveEventPlugin:zr,ChangeEventPlugin:Pr,SelectEventPlugin:Wr,BeforeInputEventPlugin:ur});var oa=[],ua=-1;function la(e){0>ua||(e.current=oa[ua],oa[ua]=null,ua--)}function sa(e,t){ua++,oa[ua]=e.current,e.current=t}var ca={},fa={current:ca},pa={current:!1},da=ca;function ha(e,t){var n=e.type.contextTypes;if(!n)return ca;var r=e.stateNode;if(r&&r.__reactInternalMemoizedUnmaskedChildContext===t)return r.__reactInternalMemoizedMaskedChildContext;var a,i={};for(a in n)i[a]=t[a];return r&&((e=e.stateNode).__reactInternalMemoizedUnmaskedChildContext=t,e.__reactInternalMemoizedMaskedChildContext=i),i}function ma(e){return null!=(e=e.childContextTypes)}function ga(){la(pa),la(fa)}function va(e,t,n){if(fa.current!==ca)throw Error(o(168));sa(fa,t),sa(pa,n)}function ya(e,t,n){var r=e.stateNode;if(e=t.childContextTypes,"function"!=typeof r.getChildContext)return n;for(var i in r=r.getChildContext())if(!(i in e))throw Error(o(108,ge(t)||"Unknown",i));return a({},n,{},r)}function ba(e){return e=(e=e.stateNode)&&e.__reactInternalMemoizedMergedChildContext||ca,da=fa.current,sa(fa,e),sa(pa,pa.current),!0}function xa(e,t,n){var r=e.stateNode;if(!r)throw Error(o(169));n?(e=ya(e,t,da),r.__reactInternalMemoizedMergedChildContext=e,la(pa),la(fa),sa(fa,e)):la(pa),sa(pa,n)}var wa=i.unstable_runWithPriority,Ea=i.unstable_scheduleCallback,Ma=i.unstable_cancelCallback,Pa=i.unstable_requestPaint,ka=i.unstable_now,Sa=i.unstable_getCurrentPriorityLevel,_a=i.unstable_ImmediatePriority,Ta=i.unstable_UserBlockingPriority,Na=i.unstable_NormalPriority,Ca=i.unstable_LowPriority,Aa=i.unstable_IdlePriority,Oa={},Da=i.unstable_shouldYield,Ba=void 0!==Pa?Pa:function(){},Ia=null,za=null,La=!1,Ra=ka(),Fa=1e4>Ra?ka:function(){return ka()-Ra};function ja(){switch(Sa()){case _a:return 99;case Ta:return 98;case Na:return 97;case Ca:return 96;case Aa:return 95;default:throw Error(o(332))}}function Ua(e){switch(e){case 99:return _a;case 98:return Ta;case 97:return Na;case 96:return Ca;case 95:return Aa;default:throw Error(o(332))}}function Va(e,t){return e=Ua(e),wa(e,t)}function qa(e,t,n){return e=Ua(e),Ea(e,t,n)}function $a(e){return null===Ia?(Ia=[e],za=Ea(_a,Ha)):Ia.push(e),Oa}function Ya(){if(null!==za){var e=za;za=null,Ma(e)}Ha()}function Ha(){if(!La&&null!==Ia){La=!0;var e=0;try{var t=Ia;Va(99,(function(){for(;e<t.length;e++){var n=t[e];do{n=n(!0)}while(null!==n)}})),Ia=null}catch(t){throw null!==Ia&&(Ia=Ia.slice(e+1)),Ea(_a,Ya),t}finally{La=!1}}}function Wa(e,t,n){return 1073741821-(1+((1073741821-e+t/10)/(n/=10)|0))*n}function Qa(e,t){if(e&&e.defaultProps)for(var n in t=a({},t),e=e.defaultProps)void 0===t[n]&&(t[n]=e[n]);return t}var Ka={current:null},Ga=null,Xa=null,Za=null;function Ja(){Za=Xa=Ga=null}function ei(e){var t=Ka.current;la(Ka),e.type._context._currentValue=t}function ti(e,t){for(;null!==e;){var n=e.alternate;if(e.childExpirationTime<t)e.childExpirationTime=t,null!==n&&n.childExpirationTime<t&&(n.childExpirationTime=t);else{if(!(null!==n&&n.childExpirationTime<t))break;n.childExpirationTime=t}e=e.return}}function ni(e,t){Ga=e,Za=Xa=null,null!==(e=e.dependencies)&&null!==e.firstContext&&(e.expirationTime>=t&&(Co=!0),e.firstContext=null)}function ri(e,t){if(Za!==e&&!1!==t&&0!==t)if("number"==typeof t&&1073741823!==t||(Za=e,t=1073741823),t={context:e,observedBits:t,next:null},null===Xa){if(null===Ga)throw Error(o(308));Xa=t,Ga.dependencies={expirationTime:0,firstContext:t,responders:null}}else Xa=Xa.next=t;return e._currentValue}var ai=!1;function ii(e){e.updateQueue={baseState:e.memoizedState,baseQueue:null,shared:{pending:null},effects:null}}function oi(e,t){e=e.updateQueue,t.updateQueue===e&&(t.updateQueue={baseState:e.baseState,baseQueue:e.baseQueue,shared:e.shared,effects:e.effects})}function ui(e,t){return(e={expirationTime:e,suspenseConfig:t,tag:0,payload:null,callback:null,next:null}).next=e}function li(e,t){if(null!==(e=e.updateQueue)){var n=(e=e.shared).pending;null===n?t.next=t:(t.next=n.next,n.next=t),e.pending=t}}function si(e,t){var n=e.alternate;null!==n&&oi(n,e),null===(n=(e=e.updateQueue).baseQueue)?(e.baseQueue=t.next=t,t.next=t):(t.next=n.next,n.next=t)}function ci(e,t,n,r){var i=e.updateQueue;ai=!1;var o=i.baseQueue,u=i.shared.pending;if(null!==u){if(null!==o){var l=o.next;o.next=u.next,u.next=l}o=u,i.shared.pending=null,null!==(l=e.alternate)&&(null!==(l=l.updateQueue)&&(l.baseQueue=u))}if(null!==o){l=o.next;var s=i.baseState,c=0,f=null,p=null,d=null;if(null!==l)for(var h=l;;){if((u=h.expirationTime)<r){var m={expirationTime:h.expirationTime,suspenseConfig:h.suspenseConfig,tag:h.tag,payload:h.payload,callback:h.callback,next:null};null===d?(p=d=m,f=s):d=d.next=m,u>c&&(c=u)}else{null!==d&&(d=d.next={expirationTime:1073741823,suspenseConfig:h.suspenseConfig,tag:h.tag,payload:h.payload,callback:h.callback,next:null}),il(u,h.suspenseConfig);e:{var g=e,v=h;switch(u=t,m=n,v.tag){case 1:if("function"==typeof(g=v.payload)){s=g.call(m,s,u);break e}s=g;break e;case 3:g.effectTag=-4097&g.effectTag|64;case 0:if(null==(u="function"==typeof(g=v.payload)?g.call(m,s,u):g))break e;s=a({},s,u);break e;case 2:ai=!0}}null!==h.callback&&(e.effectTag|=32,null===(u=i.effects)?i.effects=[h]:u.push(h))}if(null===(h=h.next)||h===l){if(null===(u=i.shared.pending))break;h=o.next=u.next,u.next=l,i.baseQueue=o=u,i.shared.pending=null}}null===d?f=s:d.next=p,i.baseState=f,i.baseQueue=d,ol(c),e.expirationTime=c,e.memoizedState=s}}function fi(e,t,n){if(e=t.effects,t.effects=null,null!==e)for(t=0;t<e.length;t++){var r=e[t],a=r.callback;if(null!==a){if(r.callback=null,r=a,a=n,"function"!=typeof r)throw Error(o(191,r));r.call(a)}}}var pi=G.ReactCurrentBatchConfig,di=(new r.Component).refs;function hi(e,t,n,r){n=null==(n=n(r,t=e.memoizedState))?t:a({},t,n),e.memoizedState=n,0===e.expirationTime&&(e.updateQueue.baseState=n)}var mi={isMounted:function(e){return!!(e=e._reactInternalFiber)&&Je(e)===e},enqueueSetState:function(e,t,n){e=e._reactInternalFiber;var r=Hu(),a=pi.suspense;(a=ui(r=Wu(r,e,a),a)).payload=t,null!=n&&(a.callback=n),li(e,a),Qu(e,r)},enqueueReplaceState:function(e,t,n){e=e._reactInternalFiber;var r=Hu(),a=pi.suspense;(a=ui(r=Wu(r,e,a),a)).tag=1,a.payload=t,null!=n&&(a.callback=n),li(e,a),Qu(e,r)},enqueueForceUpdate:function(e,t){e=e._reactInternalFiber;var n=Hu(),r=pi.suspense;(r=ui(n=Wu(n,e,r),r)).tag=2,null!=t&&(r.callback=t),li(e,r),Qu(e,n)}};function gi(e,t,n,r,a,i,o){return"function"==typeof(e=e.stateNode).shouldComponentUpdate?e.shouldComponentUpdate(r,i,o):!t.prototype||!t.prototype.isPureReactComponent||(!Fr(n,r)||!Fr(a,i))}function vi(e,t,n){var r=!1,a=ca,i=t.contextType;return"object"==typeof i&&null!==i?i=ri(i):(a=ma(t)?da:fa.current,i=(r=null!=(r=t.contextTypes))?ha(e,a):ca),t=new t(n,i),e.memoizedState=null!==t.state&&void 0!==t.state?t.state:null,t.updater=mi,e.stateNode=t,t._reactInternalFiber=e,r&&((e=e.stateNode).__reactInternalMemoizedUnmaskedChildContext=a,e.__reactInternalMemoizedMaskedChildContext=i),t}function yi(e,t,n,r){e=t.state,"function"==typeof t.componentWillReceiveProps&&t.componentWillReceiveProps(n,r),"function"==typeof t.UNSAFE_componentWillReceiveProps&&t.UNSAFE_componentWillReceiveProps(n,r),t.state!==e&&mi.enqueueReplaceState(t,t.state,null)}function bi(e,t,n,r){var a=e.stateNode;a.props=n,a.state=e.memoizedState,a.refs=di,ii(e);var i=t.contextType;"object"==typeof i&&null!==i?a.context=ri(i):(i=ma(t)?da:fa.current,a.context=ha(e,i)),ci(e,n,a,r),a.state=e.memoizedState,"function"==typeof(i=t.getDerivedStateFromProps)&&(hi(e,t,i,n),a.state=e.memoizedState),"function"==typeof t.getDerivedStateFromProps||"function"==typeof a.getSnapshotBeforeUpdate||"function"!=typeof a.UNSAFE_componentWillMount&&"function"!=typeof a.componentWillMount||(t=a.state,"function"==typeof a.componentWillMount&&a.componentWillMount(),"function"==typeof a.UNSAFE_componentWillMount&&a.UNSAFE_componentWillMount(),t!==a.state&&mi.enqueueReplaceState(a,a.state,null),ci(e,n,a,r),a.state=e.memoizedState),"function"==typeof a.componentDidMount&&(e.effectTag|=4)}var xi=Array.isArray;function wi(e,t,n){if(null!==(e=n.ref)&&"function"!=typeof e&&"object"!=typeof e){if(n._owner){if(n=n._owner){if(1!==n.tag)throw Error(o(309));var r=n.stateNode}if(!r)throw Error(o(147,e));var a=""+e;return null!==t&&null!==t.ref&&"function"==typeof t.ref&&t.ref._stringRef===a?t.ref:((t=function(e){var t=r.refs;t===di&&(t=r.refs={}),null===e?delete t[a]:t[a]=e})._stringRef=a,t)}if("string"!=typeof e)throw Error(o(284));if(!n._owner)throw Error(o(290,e))}return e}function Ei(e,t){if("textarea"!==e.type)throw Error(o(31,"[object Object]"===Object.prototype.toString.call(t)?"object with keys {"+Object.keys(t).join(", ")+"}":t,""))}function Mi(e){function t(t,n){if(e){var r=t.lastEffect;null!==r?(r.nextEffect=n,t.lastEffect=n):t.firstEffect=t.lastEffect=n,n.nextEffect=null,n.effectTag=8}}function n(n,r){if(!e)return null;for(;null!==r;)t(n,r),r=r.sibling;return null}function r(e,t){for(e=new Map;null!==t;)null!==t.key?e.set(t.key,t):e.set(t.index,t),t=t.sibling;return e}function a(e,t){return(e=Sl(e,t)).index=0,e.sibling=null,e}function i(t,n,r){return t.index=r,e?null!==(r=t.alternate)?(r=r.index)<n?(t.effectTag=2,n):r:(t.effectTag=2,n):n}function u(t){return e&&null===t.alternate&&(t.effectTag=2),t}function l(e,t,n,r){return null===t||6!==t.tag?((t=Nl(n,e.mode,r)).return=e,t):((t=a(t,n)).return=e,t)}function s(e,t,n,r){return null!==t&&t.elementType===n.type?((r=a(t,n.props)).ref=wi(e,t,n),r.return=e,r):((r=_l(n.type,n.key,n.props,null,e.mode,r)).ref=wi(e,t,n),r.return=e,r)}function c(e,t,n,r){return null===t||4!==t.tag||t.stateNode.containerInfo!==n.containerInfo||t.stateNode.implementation!==n.implementation?((t=Cl(n,e.mode,r)).return=e,t):((t=a(t,n.children||[])).return=e,t)}function f(e,t,n,r,i){return null===t||7!==t.tag?((t=Tl(n,e.mode,r,i)).return=e,t):((t=a(t,n)).return=e,t)}function p(e,t,n){if("string"==typeof t||"number"==typeof t)return(t=Nl(""+t,e.mode,n)).return=e,t;if("object"==typeof t&&null!==t){switch(t.$$typeof){case ee:return(n=_l(t.type,t.key,t.props,null,e.mode,n)).ref=wi(e,null,t),n.return=e,n;case te:return(t=Cl(t,e.mode,n)).return=e,t}if(xi(t)||me(t))return(t=Tl(t,e.mode,n,null)).return=e,t;Ei(e,t)}return null}function d(e,t,n,r){var a=null!==t?t.key:null;if("string"==typeof n||"number"==typeof n)return null!==a?null:l(e,t,""+n,r);if("object"==typeof n&&null!==n){switch(n.$$typeof){case ee:return n.key===a?n.type===ne?f(e,t,n.props.children,r,a):s(e,t,n,r):null;case te:return n.key===a?c(e,t,n,r):null}if(xi(n)||me(n))return null!==a?null:f(e,t,n,r,null);Ei(e,n)}return null}function h(e,t,n,r,a){if("string"==typeof r||"number"==typeof r)return l(t,e=e.get(n)||null,""+r,a);if("object"==typeof r&&null!==r){switch(r.$$typeof){case ee:return e=e.get(null===r.key?n:r.key)||null,r.type===ne?f(t,e,r.props.children,a,r.key):s(t,e,r,a);case te:return c(t,e=e.get(null===r.key?n:r.key)||null,r,a)}if(xi(r)||me(r))return f(t,e=e.get(n)||null,r,a,null);Ei(t,r)}return null}function m(a,o,u,l){for(var s=null,c=null,f=o,m=o=0,g=null;null!==f&&m<u.length;m++){f.index>m?(g=f,f=null):g=f.sibling;var v=d(a,f,u[m],l);if(null===v){null===f&&(f=g);break}e&&f&&null===v.alternate&&t(a,f),o=i(v,o,m),null===c?s=v:c.sibling=v,c=v,f=g}if(m===u.length)return n(a,f),s;if(null===f){for(;m<u.length;m++)null!==(f=p(a,u[m],l))&&(o=i(f,o,m),null===c?s=f:c.sibling=f,c=f);return s}for(f=r(a,f);m<u.length;m++)null!==(g=h(f,a,m,u[m],l))&&(e&&null!==g.alternate&&f.delete(null===g.key?m:g.key),o=i(g,o,m),null===c?s=g:c.sibling=g,c=g);return e&&f.forEach((function(e){return t(a,e)})),s}function g(a,u,l,s){var c=me(l);if("function"!=typeof c)throw Error(o(150));if(null==(l=c.call(l)))throw Error(o(151));for(var f=c=null,m=u,g=u=0,v=null,y=l.next();null!==m&&!y.done;g++,y=l.next()){m.index>g?(v=m,m=null):v=m.sibling;var b=d(a,m,y.value,s);if(null===b){null===m&&(m=v);break}e&&m&&null===b.alternate&&t(a,m),u=i(b,u,g),null===f?c=b:f.sibling=b,f=b,m=v}if(y.done)return n(a,m),c;if(null===m){for(;!y.done;g++,y=l.next())null!==(y=p(a,y.value,s))&&(u=i(y,u,g),null===f?c=y:f.sibling=y,f=y);return c}for(m=r(a,m);!y.done;g++,y=l.next())null!==(y=h(m,a,g,y.value,s))&&(e&&null!==y.alternate&&m.delete(null===y.key?g:y.key),u=i(y,u,g),null===f?c=y:f.sibling=y,f=y);return e&&m.forEach((function(e){return t(a,e)})),c}return function(e,r,i,l){var s="object"==typeof i&&null!==i&&i.type===ne&&null===i.key;s&&(i=i.props.children);var c="object"==typeof i&&null!==i;if(c)switch(i.$$typeof){case ee:e:{for(c=i.key,s=r;null!==s;){if(s.key===c){switch(s.tag){case 7:if(i.type===ne){n(e,s.sibling),(r=a(s,i.props.children)).return=e,e=r;break e}break;default:if(s.elementType===i.type){n(e,s.sibling),(r=a(s,i.props)).ref=wi(e,s,i),r.return=e,e=r;break e}}n(e,s);break}t(e,s),s=s.sibling}i.type===ne?((r=Tl(i.props.children,e.mode,l,i.key)).return=e,e=r):((l=_l(i.type,i.key,i.props,null,e.mode,l)).ref=wi(e,r,i),l.return=e,e=l)}return u(e);case te:e:{for(s=i.key;null!==r;){if(r.key===s){if(4===r.tag&&r.stateNode.containerInfo===i.containerInfo&&r.stateNode.implementation===i.implementation){n(e,r.sibling),(r=a(r,i.children||[])).return=e,e=r;break e}n(e,r);break}t(e,r),r=r.sibling}(r=Cl(i,e.mode,l)).return=e,e=r}return u(e)}if("string"==typeof i||"number"==typeof i)return i=""+i,null!==r&&6===r.tag?(n(e,r.sibling),(r=a(r,i)).return=e,e=r):(n(e,r),(r=Nl(i,e.mode,l)).return=e,e=r),u(e);if(xi(i))return m(e,r,i,l);if(me(i))return g(e,r,i,l);if(c&&Ei(e,i),void 0===i&&!s)switch(e.tag){case 1:case 0:throw e=e.type,Error(o(152,e.displayName||e.name||"Component"))}return n(e,r)}}var Pi=Mi(!0),ki=Mi(!1),Si={},_i={current:Si},Ti={current:Si},Ni={current:Si};function Ci(e){if(e===Si)throw Error(o(174));return e}function Ai(e,t){switch(sa(Ni,t),sa(Ti,e),sa(_i,Si),e=t.nodeType){case 9:case 11:t=(t=t.documentElement)?t.namespaceURI:Le(null,"");break;default:t=Le(t=(e=8===e?t.parentNode:t).namespaceURI||null,e=e.tagName)}la(_i),sa(_i,t)}function Oi(){la(_i),la(Ti),la(Ni)}function Di(e){Ci(Ni.current);var t=Ci(_i.current),n=Le(t,e.type);t!==n&&(sa(Ti,e),sa(_i,n))}function Bi(e){Ti.current===e&&(la(_i),la(Ti))}var Ii={current:0};function zi(e){for(var t=e;null!==t;){if(13===t.tag){var n=t.memoizedState;if(null!==n&&(null===(n=n.dehydrated)||"$?"===n.data||"$!"===n.data))return t}else if(19===t.tag&&void 0!==t.memoizedProps.revealOrder){if(0!=(64&t.effectTag))return t}else if(null!==t.child){t.child.return=t,t=t.child;continue}if(t===e)break;for(;null===t.sibling;){if(null===t.return||t.return===e)return null;t=t.return}t.sibling.return=t.return,t=t.sibling}return null}function Li(e,t){return{responder:e,props:t}}var Ri=G.ReactCurrentDispatcher,Fi=G.ReactCurrentBatchConfig,ji=0,Ui=null,Vi=null,qi=null,$i=!1;function Yi(){throw Error(o(321))}function Hi(e,t){if(null===t)return!1;for(var n=0;n<t.length&&n<e.length;n++)if(!Lr(e[n],t[n]))return!1;return!0}function Wi(e,t,n,r,a,i){if(ji=i,Ui=t,t.memoizedState=null,t.updateQueue=null,t.expirationTime=0,Ri.current=null===e||null===e.memoizedState?vo:yo,e=n(r,a),t.expirationTime===ji){i=0;do{if(t.expirationTime=0,!(25>i))throw Error(o(301));i+=1,qi=Vi=null,t.updateQueue=null,Ri.current=bo,e=n(r,a)}while(t.expirationTime===ji)}if(Ri.current=go,t=null!==Vi&&null!==Vi.next,ji=0,qi=Vi=Ui=null,$i=!1,t)throw Error(o(300));return e}function Qi(){var e={memoizedState:null,baseState:null,baseQueue:null,queue:null,next:null};return null===qi?Ui.memoizedState=qi=e:qi=qi.next=e,qi}function Ki(){if(null===Vi){var e=Ui.alternate;e=null!==e?e.memoizedState:null}else e=Vi.next;var t=null===qi?Ui.memoizedState:qi.next;if(null!==t)qi=t,Vi=e;else{if(null===e)throw Error(o(310));e={memoizedState:(Vi=e).memoizedState,baseState:Vi.baseState,baseQueue:Vi.baseQueue,queue:Vi.queue,next:null},null===qi?Ui.memoizedState=qi=e:qi=qi.next=e}return qi}function Gi(e,t){return"function"==typeof t?t(e):t}function Xi(e){var t=Ki(),n=t.queue;if(null===n)throw Error(o(311));n.lastRenderedReducer=e;var r=Vi,a=r.baseQueue,i=n.pending;if(null!==i){if(null!==a){var u=a.next;a.next=i.next,i.next=u}r.baseQueue=a=i,n.pending=null}if(null!==a){a=a.next,r=r.baseState;var l=u=i=null,s=a;do{var c=s.expirationTime;if(c<ji){var f={expirationTime:s.expirationTime,suspenseConfig:s.suspenseConfig,action:s.action,eagerReducer:s.eagerReducer,eagerState:s.eagerState,next:null};null===l?(u=l=f,i=r):l=l.next=f,c>Ui.expirationTime&&(Ui.expirationTime=c,ol(c))}else null!==l&&(l=l.next={expirationTime:1073741823,suspenseConfig:s.suspenseConfig,action:s.action,eagerReducer:s.eagerReducer,eagerState:s.eagerState,next:null}),il(c,s.suspenseConfig),r=s.eagerReducer===e?s.eagerState:e(r,s.action);s=s.next}while(null!==s&&s!==a);null===l?i=r:l.next=u,Lr(r,t.memoizedState)||(Co=!0),t.memoizedState=r,t.baseState=i,t.baseQueue=l,n.lastRenderedState=r}return[t.memoizedState,n.dispatch]}function Zi(e){var t=Ki(),n=t.queue;if(null===n)throw Error(o(311));n.lastRenderedReducer=e;var r=n.dispatch,a=n.pending,i=t.memoizedState;if(null!==a){n.pending=null;var u=a=a.next;do{i=e(i,u.action),u=u.next}while(u!==a);Lr(i,t.memoizedState)||(Co=!0),t.memoizedState=i,null===t.baseQueue&&(t.baseState=i),n.lastRenderedState=i}return[i,r]}function Ji(e){var t=Qi();return"function"==typeof e&&(e=e()),t.memoizedState=t.baseState=e,e=(e=t.queue={pending:null,dispatch:null,lastRenderedReducer:Gi,lastRenderedState:e}).dispatch=mo.bind(null,Ui,e),[t.memoizedState,e]}function eo(e,t,n,r){return e={tag:e,create:t,destroy:n,deps:r,next:null},null===(t=Ui.updateQueue)?(t={lastEffect:null},Ui.updateQueue=t,t.lastEffect=e.next=e):null===(n=t.lastEffect)?t.lastEffect=e.next=e:(r=n.next,n.next=e,e.next=r,t.lastEffect=e),e}function to(){return Ki().memoizedState}function no(e,t,n,r){var a=Qi();Ui.effectTag|=e,a.memoizedState=eo(1|t,n,void 0,void 0===r?null:r)}function ro(e,t,n,r){var a=Ki();r=void 0===r?null:r;var i=void 0;if(null!==Vi){var o=Vi.memoizedState;if(i=o.destroy,null!==r&&Hi(r,o.deps))return void eo(t,n,i,r)}Ui.effectTag|=e,a.memoizedState=eo(1|t,n,i,r)}function ao(e,t){return no(516,4,e,t)}function io(e,t){return ro(516,4,e,t)}function oo(e,t){return ro(4,2,e,t)}function uo(e,t){return"function"==typeof t?(e=e(),t(e),function(){t(null)}):null!=t?(e=e(),t.current=e,function(){t.current=null}):void 0}function lo(e,t,n){return n=null!=n?n.concat([e]):null,ro(4,2,uo.bind(null,t,e),n)}function so(){}function co(e,t){return Qi().memoizedState=[e,void 0===t?null:t],e}function fo(e,t){var n=Ki();t=void 0===t?null:t;var r=n.memoizedState;return null!==r&&null!==t&&Hi(t,r[1])?r[0]:(n.memoizedState=[e,t],e)}function po(e,t){var n=Ki();t=void 0===t?null:t;var r=n.memoizedState;return null!==r&&null!==t&&Hi(t,r[1])?r[0]:(e=e(),n.memoizedState=[e,t],e)}function ho(e,t,n){var r=ja();Va(98>r?98:r,(function(){e(!0)})),Va(97<r?97:r,(function(){var r=Fi.suspense;Fi.suspense=void 0===t?null:t;try{e(!1),n()}finally{Fi.suspense=r}}))}function mo(e,t,n){var r=Hu(),a=pi.suspense;a={expirationTime:r=Wu(r,e,a),suspenseConfig:a,action:n,eagerReducer:null,eagerState:null,next:null};var i=t.pending;if(null===i?a.next=a:(a.next=i.next,i.next=a),t.pending=a,i=e.alternate,e===Ui||null!==i&&i===Ui)$i=!0,a.expirationTime=ji,Ui.expirationTime=ji;else{if(0===e.expirationTime&&(null===i||0===i.expirationTime)&&null!==(i=t.lastRenderedReducer))try{var o=t.lastRenderedState,u=i(o,n);if(a.eagerReducer=i,a.eagerState=u,Lr(u,o))return}catch(e){}Qu(e,r)}}var go={readContext:ri,useCallback:Yi,useContext:Yi,useEffect:Yi,useImperativeHandle:Yi,useLayoutEffect:Yi,useMemo:Yi,useReducer:Yi,useRef:Yi,useState:Yi,useDebugValue:Yi,useResponder:Yi,useDeferredValue:Yi,useTransition:Yi},vo={readContext:ri,useCallback:co,useContext:ri,useEffect:ao,useImperativeHandle:function(e,t,n){return n=null!=n?n.concat([e]):null,no(4,2,uo.bind(null,t,e),n)},useLayoutEffect:function(e,t){return no(4,2,e,t)},useMemo:function(e,t){var n=Qi();return t=void 0===t?null:t,e=e(),n.memoizedState=[e,t],e},useReducer:function(e,t,n){var r=Qi();return t=void 0!==n?n(t):t,r.memoizedState=r.baseState=t,e=(e=r.queue={pending:null,dispatch:null,lastRenderedReducer:e,lastRenderedState:t}).dispatch=mo.bind(null,Ui,e),[r.memoizedState,e]},useRef:function(e){return e={current:e},Qi().memoizedState=e},useState:Ji,useDebugValue:so,useResponder:Li,useDeferredValue:function(e,t){var n=Ji(e),r=n[0],a=n[1];return ao((function(){var n=Fi.suspense;Fi.suspense=void 0===t?null:t;try{a(e)}finally{Fi.suspense=n}}),[e,t]),r},useTransition:function(e){var t=Ji(!1),n=t[0];return t=t[1],[co(ho.bind(null,t,e),[t,e]),n]}},yo={readContext:ri,useCallback:fo,useContext:ri,useEffect:io,useImperativeHandle:lo,useLayoutEffect:oo,useMemo:po,useReducer:Xi,useRef:to,useState:function(){return Xi(Gi)},useDebugValue:so,useResponder:Li,useDeferredValue:function(e,t){var n=Xi(Gi),r=n[0],a=n[1];return io((function(){var n=Fi.suspense;Fi.suspense=void 0===t?null:t;try{a(e)}finally{Fi.suspense=n}}),[e,t]),r},useTransition:function(e){var t=Xi(Gi),n=t[0];return t=t[1],[fo(ho.bind(null,t,e),[t,e]),n]}},bo={readContext:ri,useCallback:fo,useContext:ri,useEffect:io,useImperativeHandle:lo,useLayoutEffect:oo,useMemo:po,useReducer:Zi,useRef:to,useState:function(){return Zi(Gi)},useDebugValue:so,useResponder:Li,useDeferredValue:function(e,t){var n=Zi(Gi),r=n[0],a=n[1];return io((function(){var n=Fi.suspense;Fi.suspense=void 0===t?null:t;try{a(e)}finally{Fi.suspense=n}}),[e,t]),r},useTransition:function(e){var t=Zi(Gi),n=t[0];return t=t[1],[fo(ho.bind(null,t,e),[t,e]),n]}},xo=null,wo=null,Eo=!1;function Mo(e,t){var n=Pl(5,null,null,0);n.elementType="DELETED",n.type="DELETED",n.stateNode=t,n.return=e,n.effectTag=8,null!==e.lastEffect?(e.lastEffect.nextEffect=n,e.lastEffect=n):e.firstEffect=e.lastEffect=n}function Po(e,t){switch(e.tag){case 5:var n=e.type;return null!==(t=1!==t.nodeType||n.toLowerCase()!==t.nodeName.toLowerCase()?null:t)&&(e.stateNode=t,!0);case 6:return null!==(t=""===e.pendingProps||3!==t.nodeType?null:t)&&(e.stateNode=t,!0);case 13:default:return!1}}function ko(e){if(Eo){var t=wo;if(t){var n=t;if(!Po(e,t)){if(!(t=wn(n.nextSibling))||!Po(e,t))return e.effectTag=-1025&e.effectTag|2,Eo=!1,void(xo=e);Mo(xo,n)}xo=e,wo=wn(t.firstChild)}else e.effectTag=-1025&e.effectTag|2,Eo=!1,xo=e}}function So(e){for(e=e.return;null!==e&&5!==e.tag&&3!==e.tag&&13!==e.tag;)e=e.return;xo=e}function _o(e){if(e!==xo)return!1;if(!Eo)return So(e),Eo=!0,!1;var t=e.type;if(5!==e.tag||"head"!==t&&"body"!==t&&!yn(t,e.memoizedProps))for(t=wo;t;)Mo(e,t),t=wn(t.nextSibling);if(So(e),13===e.tag){if(!(e=null!==(e=e.memoizedState)?e.dehydrated:null))throw Error(o(317));e:{for(e=e.nextSibling,t=0;e;){if(8===e.nodeType){var n=e.data;if("/$"===n){if(0===t){wo=wn(e.nextSibling);break e}t--}else"$"!==n&&"$!"!==n&&"$?"!==n||t++}e=e.nextSibling}wo=null}}else wo=xo?wn(e.stateNode.nextSibling):null;return!0}function To(){wo=xo=null,Eo=!1}var No=G.ReactCurrentOwner,Co=!1;function Ao(e,t,n,r){t.child=null===e?ki(t,null,n,r):Pi(t,e.child,n,r)}function Oo(e,t,n,r,a){n=n.render;var i=t.ref;return ni(t,a),r=Wi(e,t,n,r,i,a),null===e||Co?(t.effectTag|=1,Ao(e,t,r,a),t.child):(t.updateQueue=e.updateQueue,t.effectTag&=-517,e.expirationTime<=a&&(e.expirationTime=0),Qo(e,t,a))}function Do(e,t,n,r,a,i){if(null===e){var o=n.type;return"function"!=typeof o||kl(o)||void 0!==o.defaultProps||null!==n.compare||void 0!==n.defaultProps?((e=_l(n.type,null,r,null,t.mode,i)).ref=t.ref,e.return=t,t.child=e):(t.tag=15,t.type=o,Bo(e,t,o,r,a,i))}return o=e.child,a<i&&(a=o.memoizedProps,(n=null!==(n=n.compare)?n:Fr)(a,r)&&e.ref===t.ref)?Qo(e,t,i):(t.effectTag|=1,(e=Sl(o,r)).ref=t.ref,e.return=t,t.child=e)}function Bo(e,t,n,r,a,i){return null!==e&&Fr(e.memoizedProps,r)&&e.ref===t.ref&&(Co=!1,a<i)?(t.expirationTime=e.expirationTime,Qo(e,t,i)):zo(e,t,n,r,i)}function Io(e,t){var n=t.ref;(null===e&&null!==n||null!==e&&e.ref!==n)&&(t.effectTag|=128)}function zo(e,t,n,r,a){var i=ma(n)?da:fa.current;return i=ha(t,i),ni(t,a),n=Wi(e,t,n,r,i,a),null===e||Co?(t.effectTag|=1,Ao(e,t,n,a),t.child):(t.updateQueue=e.updateQueue,t.effectTag&=-517,e.expirationTime<=a&&(e.expirationTime=0),Qo(e,t,a))}function Lo(e,t,n,r,a){if(ma(n)){var i=!0;ba(t)}else i=!1;if(ni(t,a),null===t.stateNode)null!==e&&(e.alternate=null,t.alternate=null,t.effectTag|=2),vi(t,n,r),bi(t,n,r,a),r=!0;else if(null===e){var o=t.stateNode,u=t.memoizedProps;o.props=u;var l=o.context,s=n.contextType;"object"==typeof s&&null!==s?s=ri(s):s=ha(t,s=ma(n)?da:fa.current);var c=n.getDerivedStateFromProps,f="function"==typeof c||"function"==typeof o.getSnapshotBeforeUpdate;f||"function"!=typeof o.UNSAFE_componentWillReceiveProps&&"function"!=typeof o.componentWillReceiveProps||(u!==r||l!==s)&&yi(t,o,r,s),ai=!1;var p=t.memoizedState;o.state=p,ci(t,r,o,a),l=t.memoizedState,u!==r||p!==l||pa.current||ai?("function"==typeof c&&(hi(t,n,c,r),l=t.memoizedState),(u=ai||gi(t,n,u,r,p,l,s))?(f||"function"!=typeof o.UNSAFE_componentWillMount&&"function"!=typeof o.componentWillMount||("function"==typeof o.componentWillMount&&o.componentWillMount(),"function"==typeof o.UNSAFE_componentWillMount&&o.UNSAFE_componentWillMount()),"function"==typeof o.componentDidMount&&(t.effectTag|=4)):("function"==typeof o.componentDidMount&&(t.effectTag|=4),t.memoizedProps=r,t.memoizedState=l),o.props=r,o.state=l,o.context=s,r=u):("function"==typeof o.componentDidMount&&(t.effectTag|=4),r=!1)}else o=t.stateNode,oi(e,t),u=t.memoizedProps,o.props=t.type===t.elementType?u:Qa(t.type,u),l=o.context,"object"==typeof(s=n.contextType)&&null!==s?s=ri(s):s=ha(t,s=ma(n)?da:fa.current),(f="function"==typeof(c=n.getDerivedStateFromProps)||"function"==typeof o.getSnapshotBeforeUpdate)||"function"!=typeof o.UNSAFE_componentWillReceiveProps&&"function"!=typeof o.componentWillReceiveProps||(u!==r||l!==s)&&yi(t,o,r,s),ai=!1,l=t.memoizedState,o.state=l,ci(t,r,o,a),p=t.memoizedState,u!==r||l!==p||pa.current||ai?("function"==typeof c&&(hi(t,n,c,r),p=t.memoizedState),(c=ai||gi(t,n,u,r,l,p,s))?(f||"function"!=typeof o.UNSAFE_componentWillUpdate&&"function"!=typeof o.componentWillUpdate||("function"==typeof o.componentWillUpdate&&o.componentWillUpdate(r,p,s),"function"==typeof o.UNSAFE_componentWillUpdate&&o.UNSAFE_componentWillUpdate(r,p,s)),"function"==typeof o.componentDidUpdate&&(t.effectTag|=4),"function"==typeof o.getSnapshotBeforeUpdate&&(t.effectTag|=256)):("function"!=typeof o.componentDidUpdate||u===e.memoizedProps&&l===e.memoizedState||(t.effectTag|=4),"function"!=typeof o.getSnapshotBeforeUpdate||u===e.memoizedProps&&l===e.memoizedState||(t.effectTag|=256),t.memoizedProps=r,t.memoizedState=p),o.props=r,o.state=p,o.context=s,r=c):("function"!=typeof o.componentDidUpdate||u===e.memoizedProps&&l===e.memoizedState||(t.effectTag|=4),"function"!=typeof o.getSnapshotBeforeUpdate||u===e.memoizedProps&&l===e.memoizedState||(t.effectTag|=256),r=!1);return Ro(e,t,n,r,i,a)}function Ro(e,t,n,r,a,i){Io(e,t);var o=0!=(64&t.effectTag);if(!r&&!o)return a&&xa(t,n,!1),Qo(e,t,i);r=t.stateNode,No.current=t;var u=o&&"function"!=typeof n.getDerivedStateFromError?null:r.render();return t.effectTag|=1,null!==e&&o?(t.child=Pi(t,e.child,null,i),t.child=Pi(t,null,u,i)):Ao(e,t,u,i),t.memoizedState=r.state,a&&xa(t,n,!0),t.child}function Fo(e){var t=e.stateNode;t.pendingContext?va(0,t.pendingContext,t.pendingContext!==t.context):t.context&&va(0,t.context,!1),Ai(e,t.containerInfo)}var jo,Uo,Vo,qo={dehydrated:null,retryTime:0};function $o(e,t,n){var r,a=t.mode,i=t.pendingProps,o=Ii.current,u=!1;if((r=0!=(64&t.effectTag))||(r=0!=(2&o)&&(null===e||null!==e.memoizedState)),r?(u=!0,t.effectTag&=-65):null!==e&&null===e.memoizedState||void 0===i.fallback||!0===i.unstable_avoidThisFallback||(o|=1),sa(Ii,1&o),null===e){if(void 0!==i.fallback&&ko(t),u){if(u=i.fallback,(i=Tl(null,a,0,null)).return=t,0==(2&t.mode))for(e=null!==t.memoizedState?t.child.child:t.child,i.child=e;null!==e;)e.return=i,e=e.sibling;return(n=Tl(u,a,n,null)).return=t,i.sibling=n,t.memoizedState=qo,t.child=i,n}return a=i.children,t.memoizedState=null,t.child=ki(t,null,a,n)}if(null!==e.memoizedState){if(a=(e=e.child).sibling,u){if(i=i.fallback,(n=Sl(e,e.pendingProps)).return=t,0==(2&t.mode)&&(u=null!==t.memoizedState?t.child.child:t.child)!==e.child)for(n.child=u;null!==u;)u.return=n,u=u.sibling;return(a=Sl(a,i)).return=t,n.sibling=a,n.childExpirationTime=0,t.memoizedState=qo,t.child=n,a}return n=Pi(t,e.child,i.children,n),t.memoizedState=null,t.child=n}if(e=e.child,u){if(u=i.fallback,(i=Tl(null,a,0,null)).return=t,i.child=e,null!==e&&(e.return=i),0==(2&t.mode))for(e=null!==t.memoizedState?t.child.child:t.child,i.child=e;null!==e;)e.return=i,e=e.sibling;return(n=Tl(u,a,n,null)).return=t,i.sibling=n,n.effectTag|=2,i.childExpirationTime=0,t.memoizedState=qo,t.child=i,n}return t.memoizedState=null,t.child=Pi(t,e,i.children,n)}function Yo(e,t){e.expirationTime<t&&(e.expirationTime=t);var n=e.alternate;null!==n&&n.expirationTime<t&&(n.expirationTime=t),ti(e.return,t)}function Ho(e,t,n,r,a,i){var o=e.memoizedState;null===o?e.memoizedState={isBackwards:t,rendering:null,renderingStartTime:0,last:r,tail:n,tailExpiration:0,tailMode:a,lastEffect:i}:(o.isBackwards=t,o.rendering=null,o.renderingStartTime=0,o.last=r,o.tail=n,o.tailExpiration=0,o.tailMode=a,o.lastEffect=i)}function Wo(e,t,n){var r=t.pendingProps,a=r.revealOrder,i=r.tail;if(Ao(e,t,r.children,n),0!=(2&(r=Ii.current)))r=1&r|2,t.effectTag|=64;else{if(null!==e&&0!=(64&e.effectTag))e:for(e=t.child;null!==e;){if(13===e.tag)null!==e.memoizedState&&Yo(e,n);else if(19===e.tag)Yo(e,n);else if(null!==e.child){e.child.return=e,e=e.child;continue}if(e===t)break e;for(;null===e.sibling;){if(null===e.return||e.return===t)break e;e=e.return}e.sibling.return=e.return,e=e.sibling}r&=1}if(sa(Ii,r),0==(2&t.mode))t.memoizedState=null;else switch(a){case"forwards":for(n=t.child,a=null;null!==n;)null!==(e=n.alternate)&&null===zi(e)&&(a=n),n=n.sibling;null===(n=a)?(a=t.child,t.child=null):(a=n.sibling,n.sibling=null),Ho(t,!1,a,n,i,t.lastEffect);break;case"backwards":for(n=null,a=t.child,t.child=null;null!==a;){if(null!==(e=a.alternate)&&null===zi(e)){t.child=a;break}e=a.sibling,a.sibling=n,n=a,a=e}Ho(t,!0,n,null,i,t.lastEffect);break;case"together":Ho(t,!1,null,null,void 0,t.lastEffect);break;default:t.memoizedState=null}return t.child}function Qo(e,t,n){null!==e&&(t.dependencies=e.dependencies);var r=t.expirationTime;if(0!==r&&ol(r),t.childExpirationTime<n)return null;if(null!==e&&t.child!==e.child)throw Error(o(153));if(null!==t.child){for(n=Sl(e=t.child,e.pendingProps),t.child=n,n.return=t;null!==e.sibling;)e=e.sibling,(n=n.sibling=Sl(e,e.pendingProps)).return=t;n.sibling=null}return t.child}function Ko(e,t){switch(e.tailMode){case"hidden":t=e.tail;for(var n=null;null!==t;)null!==t.alternate&&(n=t),t=t.sibling;null===n?e.tail=null:n.sibling=null;break;case"collapsed":n=e.tail;for(var r=null;null!==n;)null!==n.alternate&&(r=n),n=n.sibling;null===r?t||null===e.tail?e.tail=null:e.tail.sibling=null:r.sibling=null}}function Go(e,t,n){var r=t.pendingProps;switch(t.tag){case 2:case 16:case 15:case 0:case 11:case 7:case 8:case 12:case 9:case 14:return null;case 1:return ma(t.type)&&ga(),null;case 3:return Oi(),la(pa),la(fa),(n=t.stateNode).pendingContext&&(n.context=n.pendingContext,n.pendingContext=null),null!==e&&null!==e.child||!_o(t)||(t.effectTag|=4),null;case 5:Bi(t),n=Ci(Ni.current);var i=t.type;if(null!==e&&null!=t.stateNode)Uo(e,t,i,r,n),e.ref!==t.ref&&(t.effectTag|=128);else{if(!r){if(null===t.stateNode)throw Error(o(166));return null}if(e=Ci(_i.current),_o(t)){r=t.stateNode,i=t.type;var u=t.memoizedProps;switch(r[Pn]=t,r[kn]=u,i){case"iframe":case"object":case"embed":Wt("load",r);break;case"video":case"audio":for(e=0;e<Ge.length;e++)Wt(Ge[e],r);break;case"source":Wt("error",r);break;case"img":case"image":case"link":Wt("error",r),Wt("load",r);break;case"form":Wt("reset",r),Wt("submit",r);break;case"details":Wt("toggle",r);break;case"input":Me(r,u),Wt("invalid",r),ln(n,"onChange");break;case"select":r._wrapperState={wasMultiple:!!u.multiple},Wt("invalid",r),ln(n,"onChange");break;case"textarea":Ae(r,u),Wt("invalid",r),ln(n,"onChange")}for(var l in an(i,u),e=null,u)if(u.hasOwnProperty(l)){var s=u[l];"children"===l?"string"==typeof s?r.textContent!==s&&(e=["children",s]):"number"==typeof s&&r.textContent!==""+s&&(e=["children",""+s]):P.hasOwnProperty(l)&&null!=s&&ln(n,l)}switch(i){case"input":xe(r),Se(r,u,!0);break;case"textarea":xe(r),De(r);break;case"select":case"option":break;default:"function"==typeof u.onClick&&(r.onclick=sn)}n=e,t.updateQueue=n,null!==n&&(t.effectTag|=4)}else{switch(l=9===n.nodeType?n:n.ownerDocument,e===un&&(e=ze(i)),e===un?"script"===i?((e=l.createElement("div")).innerHTML="<script><\/script>",e=e.removeChild(e.firstChild)):"string"==typeof r.is?e=l.createElement(i,{is:r.is}):(e=l.createElement(i),"select"===i&&(l=e,r.multiple?l.multiple=!0:r.size&&(l.size=r.size))):e=l.createElementNS(e,i),e[Pn]=t,e[kn]=r,jo(e,t),t.stateNode=e,l=on(i,r),i){case"iframe":case"object":case"embed":Wt("load",e),s=r;break;case"video":case"audio":for(s=0;s<Ge.length;s++)Wt(Ge[s],e);s=r;break;case"source":Wt("error",e),s=r;break;case"img":case"image":case"link":Wt("error",e),Wt("load",e),s=r;break;case"form":Wt("reset",e),Wt("submit",e),s=r;break;case"details":Wt("toggle",e),s=r;break;case"input":Me(e,r),s=Ee(e,r),Wt("invalid",e),ln(n,"onChange");break;case"option":s=Te(e,r);break;case"select":e._wrapperState={wasMultiple:!!r.multiple},s=a({},r,{value:void 0}),Wt("invalid",e),ln(n,"onChange");break;case"textarea":Ae(e,r),s=Ce(e,r),Wt("invalid",e),ln(n,"onChange");break;default:s=r}an(i,s);var c=s;for(u in c)if(c.hasOwnProperty(u)){var f=c[u];"style"===u?nn(e,f):"dangerouslySetInnerHTML"===u?null!=(f=f?f.__html:void 0)&&Fe(e,f):"children"===u?"string"==typeof f?("textarea"!==i||""!==f)&&je(e,f):"number"==typeof f&&je(e,""+f):"suppressContentEditableWarning"!==u&&"suppressHydrationWarning"!==u&&"autoFocus"!==u&&(P.hasOwnProperty(u)?null!=f&&ln(n,u):null!=f&&X(e,u,f,l))}switch(i){case"input":xe(e),Se(e,r,!1);break;case"textarea":xe(e),De(e);break;case"option":null!=r.value&&e.setAttribute("value",""+ye(r.value));break;case"select":e.multiple=!!r.multiple,null!=(n=r.value)?Ne(e,!!r.multiple,n,!1):null!=r.defaultValue&&Ne(e,!!r.multiple,r.defaultValue,!0);break;default:"function"==typeof s.onClick&&(e.onclick=sn)}vn(i,r)&&(t.effectTag|=4)}null!==t.ref&&(t.effectTag|=128)}return null;case 6:if(e&&null!=t.stateNode)Vo(0,t,e.memoizedProps,r);else{if("string"!=typeof r&&null===t.stateNode)throw Error(o(166));n=Ci(Ni.current),Ci(_i.current),_o(t)?(n=t.stateNode,r=t.memoizedProps,n[Pn]=t,n.nodeValue!==r&&(t.effectTag|=4)):((n=(9===n.nodeType?n:n.ownerDocument).createTextNode(r))[Pn]=t,t.stateNode=n)}return null;case 13:return la(Ii),r=t.memoizedState,0!=(64&t.effectTag)?(t.expirationTime=n,t):(n=null!==r,r=!1,null===e?void 0!==t.memoizedProps.fallback&&_o(t):(r=null!==(i=e.memoizedState),n||null===i||null!==(i=e.child.sibling)&&(null!==(u=t.firstEffect)?(t.firstEffect=i,i.nextEffect=u):(t.firstEffect=t.lastEffect=i,i.nextEffect=null),i.effectTag=8)),n&&!r&&0!=(2&t.mode)&&(null===e&&!0!==t.memoizedProps.unstable_avoidThisFallback||0!=(1&Ii.current)?_u===xu&&(_u=wu):(_u!==xu&&_u!==wu||(_u=Eu),0!==Ou&&null!==Pu&&(Dl(Pu,Su),Bl(Pu,Ou)))),(n||r)&&(t.effectTag|=4),null);case 4:return Oi(),null;case 10:return ei(t),null;case 17:return ma(t.type)&&ga(),null;case 19:if(la(Ii),null===(r=t.memoizedState))return null;if(i=0!=(64&t.effectTag),null===(u=r.rendering)){if(i)Ko(r,!1);else if(_u!==xu||null!==e&&0!=(64&e.effectTag))for(u=t.child;null!==u;){if(null!==(e=zi(u))){for(t.effectTag|=64,Ko(r,!1),null!==(i=e.updateQueue)&&(t.updateQueue=i,t.effectTag|=4),null===r.lastEffect&&(t.firstEffect=null),t.lastEffect=r.lastEffect,r=t.child;null!==r;)u=n,(i=r).effectTag&=2,i.nextEffect=null,i.firstEffect=null,i.lastEffect=null,null===(e=i.alternate)?(i.childExpirationTime=0,i.expirationTime=u,i.child=null,i.memoizedProps=null,i.memoizedState=null,i.updateQueue=null,i.dependencies=null):(i.childExpirationTime=e.childExpirationTime,i.expirationTime=e.expirationTime,i.child=e.child,i.memoizedProps=e.memoizedProps,i.memoizedState=e.memoizedState,i.updateQueue=e.updateQueue,u=e.dependencies,i.dependencies=null===u?null:{expirationTime:u.expirationTime,firstContext:u.firstContext,responders:u.responders}),r=r.sibling;return sa(Ii,1&Ii.current|2),t.child}u=u.sibling}}else{if(!i)if(null!==(e=zi(u))){if(t.effectTag|=64,i=!0,null!==(n=e.updateQueue)&&(t.updateQueue=n,t.effectTag|=4),Ko(r,!0),null===r.tail&&"hidden"===r.tailMode&&!u.alternate)return null!==(t=t.lastEffect=r.lastEffect)&&(t.nextEffect=null),null}else 2*Fa()-r.renderingStartTime>r.tailExpiration&&1<n&&(t.effectTag|=64,i=!0,Ko(r,!1),t.expirationTime=t.childExpirationTime=n-1);r.isBackwards?(u.sibling=t.child,t.child=u):(null!==(n=r.last)?n.sibling=u:t.child=u,r.last=u)}return null!==r.tail?(0===r.tailExpiration&&(r.tailExpiration=Fa()+500),n=r.tail,r.rendering=n,r.tail=n.sibling,r.lastEffect=t.lastEffect,r.renderingStartTime=Fa(),n.sibling=null,t=Ii.current,sa(Ii,i?1&t|2:1&t),n):null}throw Error(o(156,t.tag))}function Xo(e){switch(e.tag){case 1:ma(e.type)&&ga();var t=e.effectTag;return 4096&t?(e.effectTag=-4097&t|64,e):null;case 3:if(Oi(),la(pa),la(fa),0!=(64&(t=e.effectTag)))throw Error(o(285));return e.effectTag=-4097&t|64,e;case 5:return Bi(e),null;case 13:return la(Ii),4096&(t=e.effectTag)?(e.effectTag=-4097&t|64,e):null;case 19:return la(Ii),null;case 4:return Oi(),null;case 10:return ei(e),null;default:return null}}function Zo(e,t){return{value:e,source:t,stack:ve(t)}}jo=function(e,t){for(var n=t.child;null!==n;){if(5===n.tag||6===n.tag)e.appendChild(n.stateNode);else if(4!==n.tag&&null!==n.child){n.child.return=n,n=n.child;continue}if(n===t)break;for(;null===n.sibling;){if(null===n.return||n.return===t)return;n=n.return}n.sibling.return=n.return,n=n.sibling}},Uo=function(e,t,n,r,i){var o=e.memoizedProps;if(o!==r){var u,l,s=t.stateNode;switch(Ci(_i.current),e=null,n){case"input":o=Ee(s,o),r=Ee(s,r),e=[];break;case"option":o=Te(s,o),r=Te(s,r),e=[];break;case"select":o=a({},o,{value:void 0}),r=a({},r,{value:void 0}),e=[];break;case"textarea":o=Ce(s,o),r=Ce(s,r),e=[];break;default:"function"!=typeof o.onClick&&"function"==typeof r.onClick&&(s.onclick=sn)}for(u in an(n,r),n=null,o)if(!r.hasOwnProperty(u)&&o.hasOwnProperty(u)&&null!=o[u])if("style"===u)for(l in s=o[u])s.hasOwnProperty(l)&&(n||(n={}),n[l]="");else"dangerouslySetInnerHTML"!==u&&"children"!==u&&"suppressContentEditableWarning"!==u&&"suppressHydrationWarning"!==u&&"autoFocus"!==u&&(P.hasOwnProperty(u)?e||(e=[]):(e=e||[]).push(u,null));for(u in r){var c=r[u];if(s=null!=o?o[u]:void 0,r.hasOwnProperty(u)&&c!==s&&(null!=c||null!=s))if("style"===u)if(s){for(l in s)!s.hasOwnProperty(l)||c&&c.hasOwnProperty(l)||(n||(n={}),n[l]="");for(l in c)c.hasOwnProperty(l)&&s[l]!==c[l]&&(n||(n={}),n[l]=c[l])}else n||(e||(e=[]),e.push(u,n)),n=c;else"dangerouslySetInnerHTML"===u?(c=c?c.__html:void 0,s=s?s.__html:void 0,null!=c&&s!==c&&(e=e||[]).push(u,c)):"children"===u?s===c||"string"!=typeof c&&"number"!=typeof c||(e=e||[]).push(u,""+c):"suppressContentEditableWarning"!==u&&"suppressHydrationWarning"!==u&&(P.hasOwnProperty(u)?(null!=c&&ln(i,u),e||s===c||(e=[])):(e=e||[]).push(u,c))}n&&(e=e||[]).push("style",n),i=e,(t.updateQueue=i)&&(t.effectTag|=4)}},Vo=function(e,t,n,r){n!==r&&(t.effectTag|=4)};var Jo="function"==typeof WeakSet?WeakSet:Set;function eu(e,t){var n=t.source,r=t.stack;null===r&&null!==n&&(r=ve(n)),null!==n&&ge(n.type),t=t.value,null!==e&&1===e.tag&&ge(e.type);try{console.error(t)}catch(e){setTimeout((function(){throw e}))}}function tu(e){var t=e.ref;if(null!==t)if("function"==typeof t)try{t(null)}catch(t){yl(e,t)}else t.current=null}function nu(e,t){switch(t.tag){case 0:case 11:case 15:case 22:return;case 1:if(256&t.effectTag&&null!==e){var n=e.memoizedProps,r=e.memoizedState;t=(e=t.stateNode).getSnapshotBeforeUpdate(t.elementType===t.type?n:Qa(t.type,n),r),e.__reactInternalSnapshotBeforeUpdate=t}return;case 3:case 5:case 6:case 4:case 17:return}throw Error(o(163))}function ru(e,t){if(null!==(t=null!==(t=t.updateQueue)?t.lastEffect:null)){var n=t=t.next;do{if((n.tag&e)===e){var r=n.destroy;n.destroy=void 0,void 0!==r&&r()}n=n.next}while(n!==t)}}function au(e,t){if(null!==(t=null!==(t=t.updateQueue)?t.lastEffect:null)){var n=t=t.next;do{if((n.tag&e)===e){var r=n.create;n.destroy=r()}n=n.next}while(n!==t)}}function iu(e,t,n){switch(n.tag){case 0:case 11:case 15:case 22:return void au(3,n);case 1:if(e=n.stateNode,4&n.effectTag)if(null===t)e.componentDidMount();else{var r=n.elementType===n.type?t.memoizedProps:Qa(n.type,t.memoizedProps);e.componentDidUpdate(r,t.memoizedState,e.__reactInternalSnapshotBeforeUpdate)}return void(null!==(t=n.updateQueue)&&fi(n,t,e));case 3:if(null!==(t=n.updateQueue)){if(e=null,null!==n.child)switch(n.child.tag){case 5:e=n.child.stateNode;break;case 1:e=n.child.stateNode}fi(n,t,e)}return;case 5:return e=n.stateNode,void(null===t&&4&n.effectTag&&vn(n.type,n.memoizedProps)&&e.focus());case 6:case 4:case 12:return;case 13:return void(null===n.memoizedState&&(n=n.alternate,null!==n&&(n=n.memoizedState,null!==n&&(n=n.dehydrated,null!==n&&zt(n)))));case 19:case 17:case 20:case 21:return}throw Error(o(163))}function ou(e,t,n){switch("function"==typeof El&&El(t),t.tag){case 0:case 11:case 14:case 15:case 22:if(null!==(e=t.updateQueue)&&null!==(e=e.lastEffect)){var r=e.next;Va(97<n?97:n,(function(){var e=r;do{var n=e.destroy;if(void 0!==n){var a=t;try{n()}catch(e){yl(a,e)}}e=e.next}while(e!==r)}))}break;case 1:tu(t),"function"==typeof(n=t.stateNode).componentWillUnmount&&function(e,t){try{t.props=e.memoizedProps,t.state=e.memoizedState,t.componentWillUnmount()}catch(t){yl(e,t)}}(t,n);break;case 5:tu(t);break;case 4:cu(e,t,n)}}function uu(e){var t=e.alternate;e.return=null,e.child=null,e.memoizedState=null,e.updateQueue=null,e.dependencies=null,e.alternate=null,e.firstEffect=null,e.lastEffect=null,e.pendingProps=null,e.memoizedProps=null,e.stateNode=null,null!==t&&uu(t)}function lu(e){return 5===e.tag||3===e.tag||4===e.tag}function su(e){e:{for(var t=e.return;null!==t;){if(lu(t)){var n=t;break e}t=t.return}throw Error(o(160))}switch(t=n.stateNode,n.tag){case 5:var r=!1;break;case 3:case 4:t=t.containerInfo,r=!0;break;default:throw Error(o(161))}16&n.effectTag&&(je(t,""),n.effectTag&=-17);e:t:for(n=e;;){for(;null===n.sibling;){if(null===n.return||lu(n.return)){n=null;break e}n=n.return}for(n.sibling.return=n.return,n=n.sibling;5!==n.tag&&6!==n.tag&&18!==n.tag;){if(2&n.effectTag)continue t;if(null===n.child||4===n.tag)continue t;n.child.return=n,n=n.child}if(!(2&n.effectTag)){n=n.stateNode;break e}}r?function e(t,n,r){var a=t.tag,i=5===a||6===a;if(i)t=i?t.stateNode:t.stateNode.instance,n?8===r.nodeType?r.parentNode.insertBefore(t,n):r.insertBefore(t,n):(8===r.nodeType?(n=r.parentNode).insertBefore(t,r):(n=r).appendChild(t),null!==(r=r._reactRootContainer)&&void 0!==r||null!==n.onclick||(n.onclick=sn));else if(4!==a&&null!==(t=t.child))for(e(t,n,r),t=t.sibling;null!==t;)e(t,n,r),t=t.sibling}(e,n,t):function e(t,n,r){var a=t.tag,i=5===a||6===a;if(i)t=i?t.stateNode:t.stateNode.instance,n?r.insertBefore(t,n):r.appendChild(t);else if(4!==a&&null!==(t=t.child))for(e(t,n,r),t=t.sibling;null!==t;)e(t,n,r),t=t.sibling}(e,n,t)}function cu(e,t,n){for(var r,a,i=t,u=!1;;){if(!u){u=i.return;e:for(;;){if(null===u)throw Error(o(160));switch(r=u.stateNode,u.tag){case 5:a=!1;break e;case 3:case 4:r=r.containerInfo,a=!0;break e}u=u.return}u=!0}if(5===i.tag||6===i.tag){e:for(var l=e,s=i,c=n,f=s;;)if(ou(l,f,c),null!==f.child&&4!==f.tag)f.child.return=f,f=f.child;else{if(f===s)break e;for(;null===f.sibling;){if(null===f.return||f.return===s)break e;f=f.return}f.sibling.return=f.return,f=f.sibling}a?(l=r,s=i.stateNode,8===l.nodeType?l.parentNode.removeChild(s):l.removeChild(s)):r.removeChild(i.stateNode)}else if(4===i.tag){if(null!==i.child){r=i.stateNode.containerInfo,a=!0,i.child.return=i,i=i.child;continue}}else if(ou(e,i,n),null!==i.child){i.child.return=i,i=i.child;continue}if(i===t)break;for(;null===i.sibling;){if(null===i.return||i.return===t)return;4===(i=i.return).tag&&(u=!1)}i.sibling.return=i.return,i=i.sibling}}function fu(e,t){switch(t.tag){case 0:case 11:case 14:case 15:case 22:return void ru(3,t);case 1:return;case 5:var n=t.stateNode;if(null!=n){var r=t.memoizedProps,a=null!==e?e.memoizedProps:r;e=t.type;var i=t.updateQueue;if(t.updateQueue=null,null!==i){for(n[kn]=r,"input"===e&&"radio"===r.type&&null!=r.name&&Pe(n,r),on(e,a),t=on(e,r),a=0;a<i.length;a+=2){var u=i[a],l=i[a+1];"style"===u?nn(n,l):"dangerouslySetInnerHTML"===u?Fe(n,l):"children"===u?je(n,l):X(n,u,l,t)}switch(e){case"input":ke(n,r);break;case"textarea":Oe(n,r);break;case"select":t=n._wrapperState.wasMultiple,n._wrapperState.wasMultiple=!!r.multiple,null!=(e=r.value)?Ne(n,!!r.multiple,e,!1):t!==!!r.multiple&&(null!=r.defaultValue?Ne(n,!!r.multiple,r.defaultValue,!0):Ne(n,!!r.multiple,r.multiple?[]:"",!1))}}}return;case 6:if(null===t.stateNode)throw Error(o(162));return void(t.stateNode.nodeValue=t.memoizedProps);case 3:return void((t=t.stateNode).hydrate&&(t.hydrate=!1,zt(t.containerInfo)));case 12:return;case 13:if(n=t,null===t.memoizedState?r=!1:(r=!0,n=t.child,Bu=Fa()),null!==n)e:for(e=n;;){if(5===e.tag)i=e.stateNode,r?"function"==typeof(i=i.style).setProperty?i.setProperty("display","none","important"):i.display="none":(i=e.stateNode,a=null!=(a=e.memoizedProps.style)&&a.hasOwnProperty("display")?a.display:null,i.style.display=tn("display",a));else if(6===e.tag)e.stateNode.nodeValue=r?"":e.memoizedProps;else{if(13===e.tag&&null!==e.memoizedState&&null===e.memoizedState.dehydrated){(i=e.child.sibling).return=e,e=i;continue}if(null!==e.child){e.child.return=e,e=e.child;continue}}if(e===n)break;for(;null===e.sibling;){if(null===e.return||e.return===n)break e;e=e.return}e.sibling.return=e.return,e=e.sibling}return void pu(t);case 19:return void pu(t);case 17:return}throw Error(o(163))}function pu(e){var t=e.updateQueue;if(null!==t){e.updateQueue=null;var n=e.stateNode;null===n&&(n=e.stateNode=new Jo),t.forEach((function(t){var r=xl.bind(null,e,t);n.has(t)||(n.add(t),t.then(r,r))}))}}var du="function"==typeof WeakMap?WeakMap:Map;function hu(e,t,n){(n=ui(n,null)).tag=3,n.payload={element:null};var r=t.value;return n.callback=function(){zu||(zu=!0,Lu=r),eu(e,t)},n}function mu(e,t,n){(n=ui(n,null)).tag=3;var r=e.type.getDerivedStateFromError;if("function"==typeof r){var a=t.value;n.payload=function(){return eu(e,t),r(a)}}var i=e.stateNode;return null!==i&&"function"==typeof i.componentDidCatch&&(n.callback=function(){"function"!=typeof r&&(null===Ru?Ru=new Set([this]):Ru.add(this),eu(e,t));var n=t.stack;this.componentDidCatch(t.value,{componentStack:null!==n?n:""})}),n}var gu,vu=Math.ceil,yu=G.ReactCurrentDispatcher,bu=G.ReactCurrentOwner,xu=0,wu=3,Eu=4,Mu=0,Pu=null,ku=null,Su=0,_u=xu,Tu=null,Nu=1073741823,Cu=1073741823,Au=null,Ou=0,Du=!1,Bu=0,Iu=null,zu=!1,Lu=null,Ru=null,Fu=!1,ju=null,Uu=90,Vu=null,qu=0,$u=null,Yu=0;function Hu(){return 0!=(48&Mu)?1073741821-(Fa()/10|0):0!==Yu?Yu:Yu=1073741821-(Fa()/10|0)}function Wu(e,t,n){if(0==(2&(t=t.mode)))return 1073741823;var r=ja();if(0==(4&t))return 99===r?1073741823:1073741822;if(0!=(16&Mu))return Su;if(null!==n)e=Wa(e,0|n.timeoutMs||5e3,250);else switch(r){case 99:e=1073741823;break;case 98:e=Wa(e,150,100);break;case 97:case 96:e=Wa(e,5e3,250);break;case 95:e=2;break;default:throw Error(o(326))}return null!==Pu&&e===Su&&--e,e}function Qu(e,t){if(50<qu)throw qu=0,$u=null,Error(o(185));if(null!==(e=Ku(e,t))){var n=ja();1073741823===t?0!=(8&Mu)&&0==(48&Mu)?Ju(e):(Xu(e),0===Mu&&Ya()):Xu(e),0==(4&Mu)||98!==n&&99!==n||(null===Vu?Vu=new Map([[e,t]]):(void 0===(n=Vu.get(e))||n>t)&&Vu.set(e,t))}}function Ku(e,t){e.expirationTime<t&&(e.expirationTime=t);var n=e.alternate;null!==n&&n.expirationTime<t&&(n.expirationTime=t);var r=e.return,a=null;if(null===r&&3===e.tag)a=e.stateNode;else for(;null!==r;){if(n=r.alternate,r.childExpirationTime<t&&(r.childExpirationTime=t),null!==n&&n.childExpirationTime<t&&(n.childExpirationTime=t),null===r.return&&3===r.tag){a=r.stateNode;break}r=r.return}return null!==a&&(Pu===a&&(ol(t),_u===Eu&&Dl(a,Su)),Bl(a,t)),a}function Gu(e){var t=e.lastExpiredTime;if(0!==t)return t;if(!Ol(e,t=e.firstPendingTime))return t;var n=e.lastPingedTime;return 2>=(e=n>(e=e.nextKnownPendingLevel)?n:e)&&t!==e?0:e}function Xu(e){if(0!==e.lastExpiredTime)e.callbackExpirationTime=1073741823,e.callbackPriority=99,e.callbackNode=$a(Ju.bind(null,e));else{var t=Gu(e),n=e.callbackNode;if(0===t)null!==n&&(e.callbackNode=null,e.callbackExpirationTime=0,e.callbackPriority=90);else{var r=Hu();if(1073741823===t?r=99:1===t||2===t?r=95:r=0>=(r=10*(1073741821-t)-10*(1073741821-r))?99:250>=r?98:5250>=r?97:95,null!==n){var a=e.callbackPriority;if(e.callbackExpirationTime===t&&a>=r)return;n!==Oa&&Ma(n)}e.callbackExpirationTime=t,e.callbackPriority=r,t=1073741823===t?$a(Ju.bind(null,e)):qa(r,Zu.bind(null,e),{timeout:10*(1073741821-t)-Fa()}),e.callbackNode=t}}}function Zu(e,t){if(Yu=0,t)return Il(e,t=Hu()),Xu(e),null;var n=Gu(e);if(0!==n){if(t=e.callbackNode,0!=(48&Mu))throw Error(o(327));if(ml(),e===Pu&&n===Su||nl(e,n),null!==ku){var r=Mu;Mu|=16;for(var a=al();;)try{ll();break}catch(t){rl(e,t)}if(Ja(),Mu=r,yu.current=a,1===_u)throw t=Tu,nl(e,n),Dl(e,n),Xu(e),t;if(null===ku)switch(a=e.finishedWork=e.current.alternate,e.finishedExpirationTime=n,r=_u,Pu=null,r){case xu:case 1:throw Error(o(345));case 2:Il(e,2<n?2:n);break;case wu:if(Dl(e,n),n===(r=e.lastSuspendedTime)&&(e.nextKnownPendingLevel=fl(a)),1073741823===Nu&&10<(a=Bu+500-Fa())){if(Du){var i=e.lastPingedTime;if(0===i||i>=n){e.lastPingedTime=n,nl(e,n);break}}if(0!==(i=Gu(e))&&i!==n)break;if(0!==r&&r!==n){e.lastPingedTime=r;break}e.timeoutHandle=bn(pl.bind(null,e),a);break}pl(e);break;case Eu:if(Dl(e,n),n===(r=e.lastSuspendedTime)&&(e.nextKnownPendingLevel=fl(a)),Du&&(0===(a=e.lastPingedTime)||a>=n)){e.lastPingedTime=n,nl(e,n);break}if(0!==(a=Gu(e))&&a!==n)break;if(0!==r&&r!==n){e.lastPingedTime=r;break}if(1073741823!==Cu?r=10*(1073741821-Cu)-Fa():1073741823===Nu?r=0:(r=10*(1073741821-Nu)-5e3,0>(r=(a=Fa())-r)&&(r=0),(n=10*(1073741821-n)-a)<(r=(120>r?120:480>r?480:1080>r?1080:1920>r?1920:3e3>r?3e3:4320>r?4320:1960*vu(r/1960))-r)&&(r=n)),10<r){e.timeoutHandle=bn(pl.bind(null,e),r);break}pl(e);break;case 5:if(1073741823!==Nu&&null!==Au){i=Nu;var u=Au;if(0>=(r=0|u.busyMinDurationMs)?r=0:(a=0|u.busyDelayMs,r=(i=Fa()-(10*(1073741821-i)-(0|u.timeoutMs||5e3)))<=a?0:a+r-i),10<r){Dl(e,n),e.timeoutHandle=bn(pl.bind(null,e),r);break}}pl(e);break;default:throw Error(o(329))}if(Xu(e),e.callbackNode===t)return Zu.bind(null,e)}}return null}function Ju(e){var t=e.lastExpiredTime;if(t=0!==t?t:1073741823,0!=(48&Mu))throw Error(o(327));if(ml(),e===Pu&&t===Su||nl(e,t),null!==ku){var n=Mu;Mu|=16;for(var r=al();;)try{ul();break}catch(t){rl(e,t)}if(Ja(),Mu=n,yu.current=r,1===_u)throw n=Tu,nl(e,t),Dl(e,t),Xu(e),n;if(null!==ku)throw Error(o(261));e.finishedWork=e.current.alternate,e.finishedExpirationTime=t,Pu=null,pl(e),Xu(e)}return null}function el(e,t){var n=Mu;Mu|=1;try{return e(t)}finally{0===(Mu=n)&&Ya()}}function tl(e,t){var n=Mu;Mu&=-2,Mu|=8;try{return e(t)}finally{0===(Mu=n)&&Ya()}}function nl(e,t){e.finishedWork=null,e.finishedExpirationTime=0;var n=e.timeoutHandle;if(-1!==n&&(e.timeoutHandle=-1,xn(n)),null!==ku)for(n=ku.return;null!==n;){var r=n;switch(r.tag){case 1:null!=(r=r.type.childContextTypes)&&ga();break;case 3:Oi(),la(pa),la(fa);break;case 5:Bi(r);break;case 4:Oi();break;case 13:case 19:la(Ii);break;case 10:ei(r)}n=n.return}Pu=e,ku=Sl(e.current,null),Su=t,_u=xu,Tu=null,Cu=Nu=1073741823,Au=null,Ou=0,Du=!1}function rl(e,t){for(;;){try{if(Ja(),Ri.current=go,$i)for(var n=Ui.memoizedState;null!==n;){var r=n.queue;null!==r&&(r.pending=null),n=n.next}if(ji=0,qi=Vi=Ui=null,$i=!1,null===ku||null===ku.return)return _u=1,Tu=t,ku=null;e:{var a=e,i=ku.return,o=ku,u=t;if(t=Su,o.effectTag|=2048,o.firstEffect=o.lastEffect=null,null!==u&&"object"==typeof u&&"function"==typeof u.then){var l=u;if(0==(2&o.mode)){var s=o.alternate;s?(o.updateQueue=s.updateQueue,o.memoizedState=s.memoizedState,o.expirationTime=s.expirationTime):(o.updateQueue=null,o.memoizedState=null)}var c=0!=(1&Ii.current),f=i;do{var p;if(p=13===f.tag){var d=f.memoizedState;if(null!==d)p=null!==d.dehydrated;else{var h=f.memoizedProps;p=void 0!==h.fallback&&(!0!==h.unstable_avoidThisFallback||!c)}}if(p){var m=f.updateQueue;if(null===m){var g=new Set;g.add(l),f.updateQueue=g}else m.add(l);if(0==(2&f.mode)){if(f.effectTag|=64,o.effectTag&=-2981,1===o.tag)if(null===o.alternate)o.tag=17;else{var v=ui(1073741823,null);v.tag=2,li(o,v)}o.expirationTime=1073741823;break e}u=void 0,o=t;var y=a.pingCache;if(null===y?(y=a.pingCache=new du,u=new Set,y.set(l,u)):void 0===(u=y.get(l))&&(u=new Set,y.set(l,u)),!u.has(o)){u.add(o);var b=bl.bind(null,a,l,o);l.then(b,b)}f.effectTag|=4096,f.expirationTime=t;break e}f=f.return}while(null!==f);u=Error((ge(o.type)||"A React component")+" suspended while rendering, but no fallback UI was specified.\n\nAdd a <Suspense fallback=...> component higher in the tree to provide a loading indicator or placeholder to display."+ve(o))}5!==_u&&(_u=2),u=Zo(u,o),f=i;do{switch(f.tag){case 3:l=u,f.effectTag|=4096,f.expirationTime=t,si(f,hu(f,l,t));break e;case 1:l=u;var x=f.type,w=f.stateNode;if(0==(64&f.effectTag)&&("function"==typeof x.getDerivedStateFromError||null!==w&&"function"==typeof w.componentDidCatch&&(null===Ru||!Ru.has(w)))){f.effectTag|=4096,f.expirationTime=t,si(f,mu(f,l,t));break e}}f=f.return}while(null!==f)}ku=cl(ku)}catch(e){t=e;continue}break}}function al(){var e=yu.current;return yu.current=go,null===e?go:e}function il(e,t){e<Nu&&2<e&&(Nu=e),null!==t&&e<Cu&&2<e&&(Cu=e,Au=t)}function ol(e){e>Ou&&(Ou=e)}function ul(){for(;null!==ku;)ku=sl(ku)}function ll(){for(;null!==ku&&!Da();)ku=sl(ku)}function sl(e){var t=gu(e.alternate,e,Su);return e.memoizedProps=e.pendingProps,null===t&&(t=cl(e)),bu.current=null,t}function cl(e){ku=e;do{var t=ku.alternate;if(e=ku.return,0==(2048&ku.effectTag)){if(t=Go(t,ku,Su),1===Su||1!==ku.childExpirationTime){for(var n=0,r=ku.child;null!==r;){var a=r.expirationTime,i=r.childExpirationTime;a>n&&(n=a),i>n&&(n=i),r=r.sibling}ku.childExpirationTime=n}if(null!==t)return t;null!==e&&0==(2048&e.effectTag)&&(null===e.firstEffect&&(e.firstEffect=ku.firstEffect),null!==ku.lastEffect&&(null!==e.lastEffect&&(e.lastEffect.nextEffect=ku.firstEffect),e.lastEffect=ku.lastEffect),1<ku.effectTag&&(null!==e.lastEffect?e.lastEffect.nextEffect=ku:e.firstEffect=ku,e.lastEffect=ku))}else{if(null!==(t=Xo(ku)))return t.effectTag&=2047,t;null!==e&&(e.firstEffect=e.lastEffect=null,e.effectTag|=2048)}if(null!==(t=ku.sibling))return t;ku=e}while(null!==ku);return _u===xu&&(_u=5),null}function fl(e){var t=e.expirationTime;return t>(e=e.childExpirationTime)?t:e}function pl(e){var t=ja();return Va(99,dl.bind(null,e,t)),null}function dl(e,t){do{ml()}while(null!==ju);if(0!=(48&Mu))throw Error(o(327));var n=e.finishedWork,r=e.finishedExpirationTime;if(null===n)return null;if(e.finishedWork=null,e.finishedExpirationTime=0,n===e.current)throw Error(o(177));e.callbackNode=null,e.callbackExpirationTime=0,e.callbackPriority=90,e.nextKnownPendingLevel=0;var a=fl(n);if(e.firstPendingTime=a,r<=e.lastSuspendedTime?e.firstSuspendedTime=e.lastSuspendedTime=e.nextKnownPendingLevel=0:r<=e.firstSuspendedTime&&(e.firstSuspendedTime=r-1),r<=e.lastPingedTime&&(e.lastPingedTime=0),r<=e.lastExpiredTime&&(e.lastExpiredTime=0),e===Pu&&(ku=Pu=null,Su=0),1<n.effectTag?null!==n.lastEffect?(n.lastEffect.nextEffect=n,a=n.firstEffect):a=n:a=n.firstEffect,null!==a){var i=Mu;Mu|=32,bu.current=null,mn=Ht;var u=dn();if(hn(u)){if("selectionStart"in u)var l={start:u.selectionStart,end:u.selectionEnd};else e:{var s=(l=(l=u.ownerDocument)&&l.defaultView||window).getSelection&&l.getSelection();if(s&&0!==s.rangeCount){l=s.anchorNode;var c=s.anchorOffset,f=s.focusNode;s=s.focusOffset;try{l.nodeType,f.nodeType}catch(e){l=null;break e}var p=0,d=-1,h=-1,m=0,g=0,v=u,y=null;t:for(;;){for(var b;v!==l||0!==c&&3!==v.nodeType||(d=p+c),v!==f||0!==s&&3!==v.nodeType||(h=p+s),3===v.nodeType&&(p+=v.nodeValue.length),null!==(b=v.firstChild);)y=v,v=b;for(;;){if(v===u)break t;if(y===l&&++m===c&&(d=p),y===f&&++g===s&&(h=p),null!==(b=v.nextSibling))break;y=(v=y).parentNode}v=b}l=-1===d||-1===h?null:{start:d,end:h}}else l=null}l=l||{start:0,end:0}}else l=null;gn={activeElementDetached:null,focusedElem:u,selectionRange:l},Ht=!1,Iu=a;do{try{hl()}catch(e){if(null===Iu)throw Error(o(330));yl(Iu,e),Iu=Iu.nextEffect}}while(null!==Iu);Iu=a;do{try{for(u=e,l=t;null!==Iu;){var x=Iu.effectTag;if(16&x&&je(Iu.stateNode,""),128&x){var w=Iu.alternate;if(null!==w){var E=w.ref;null!==E&&("function"==typeof E?E(null):E.current=null)}}switch(1038&x){case 2:su(Iu),Iu.effectTag&=-3;break;case 6:su(Iu),Iu.effectTag&=-3,fu(Iu.alternate,Iu);break;case 1024:Iu.effectTag&=-1025;break;case 1028:Iu.effectTag&=-1025,fu(Iu.alternate,Iu);break;case 4:fu(Iu.alternate,Iu);break;case 8:cu(u,c=Iu,l),uu(c)}Iu=Iu.nextEffect}}catch(e){if(null===Iu)throw Error(o(330));yl(Iu,e),Iu=Iu.nextEffect}}while(null!==Iu);if(E=gn,w=dn(),x=E.focusedElem,l=E.selectionRange,w!==x&&x&&x.ownerDocument&&function e(t,n){return!(!t||!n)&&(t===n||(!t||3!==t.nodeType)&&(n&&3===n.nodeType?e(t,n.parentNode):"contains"in t?t.contains(n):!!t.compareDocumentPosition&&!!(16&t.compareDocumentPosition(n))))}(x.ownerDocument.documentElement,x)){null!==l&&hn(x)&&(w=l.start,void 0===(E=l.end)&&(E=w),"selectionStart"in x?(x.selectionStart=w,x.selectionEnd=Math.min(E,x.value.length)):(E=(w=x.ownerDocument||document)&&w.defaultView||window).getSelection&&(E=E.getSelection(),c=x.textContent.length,u=Math.min(l.start,c),l=void 0===l.end?u:Math.min(l.end,c),!E.extend&&u>l&&(c=l,l=u,u=c),c=pn(x,u),f=pn(x,l),c&&f&&(1!==E.rangeCount||E.anchorNode!==c.node||E.anchorOffset!==c.offset||E.focusNode!==f.node||E.focusOffset!==f.offset)&&((w=w.createRange()).setStart(c.node,c.offset),E.removeAllRanges(),u>l?(E.addRange(w),E.extend(f.node,f.offset)):(w.setEnd(f.node,f.offset),E.addRange(w))))),w=[];for(E=x;E=E.parentNode;)1===E.nodeType&&w.push({element:E,left:E.scrollLeft,top:E.scrollTop});for("function"==typeof x.focus&&x.focus(),x=0;x<w.length;x++)(E=w[x]).element.scrollLeft=E.left,E.element.scrollTop=E.top}Ht=!!mn,gn=mn=null,e.current=n,Iu=a;do{try{for(x=e;null!==Iu;){var M=Iu.effectTag;if(36&M&&iu(x,Iu.alternate,Iu),128&M){w=void 0;var P=Iu.ref;if(null!==P){var k=Iu.stateNode;switch(Iu.tag){case 5:w=k;break;default:w=k}"function"==typeof P?P(w):P.current=w}}Iu=Iu.nextEffect}}catch(e){if(null===Iu)throw Error(o(330));yl(Iu,e),Iu=Iu.nextEffect}}while(null!==Iu);Iu=null,Ba(),Mu=i}else e.current=n;if(Fu)Fu=!1,ju=e,Uu=t;else for(Iu=a;null!==Iu;)t=Iu.nextEffect,Iu.nextEffect=null,Iu=t;if(0===(t=e.firstPendingTime)&&(Ru=null),1073741823===t?e===$u?qu++:(qu=0,$u=e):qu=0,"function"==typeof wl&&wl(n.stateNode,r),Xu(e),zu)throw zu=!1,e=Lu,Lu=null,e;return 0!=(8&Mu)||Ya(),null}function hl(){for(;null!==Iu;){var e=Iu.effectTag;0!=(256&e)&&nu(Iu.alternate,Iu),0==(512&e)||Fu||(Fu=!0,qa(97,(function(){return ml(),null}))),Iu=Iu.nextEffect}}function ml(){if(90!==Uu){var e=97<Uu?97:Uu;return Uu=90,Va(e,gl)}}function gl(){if(null===ju)return!1;var e=ju;if(ju=null,0!=(48&Mu))throw Error(o(331));var t=Mu;for(Mu|=32,e=e.current.firstEffect;null!==e;){try{var n=e;if(0!=(512&n.effectTag))switch(n.tag){case 0:case 11:case 15:case 22:ru(5,n),au(5,n)}}catch(t){if(null===e)throw Error(o(330));yl(e,t)}n=e.nextEffect,e.nextEffect=null,e=n}return Mu=t,Ya(),!0}function vl(e,t,n){li(e,t=hu(e,t=Zo(n,t),1073741823)),null!==(e=Ku(e,1073741823))&&Xu(e)}function yl(e,t){if(3===e.tag)vl(e,e,t);else for(var n=e.return;null!==n;){if(3===n.tag){vl(n,e,t);break}if(1===n.tag){var r=n.stateNode;if("function"==typeof n.type.getDerivedStateFromError||"function"==typeof r.componentDidCatch&&(null===Ru||!Ru.has(r))){li(n,e=mu(n,e=Zo(t,e),1073741823)),null!==(n=Ku(n,1073741823))&&Xu(n);break}}n=n.return}}function bl(e,t,n){var r=e.pingCache;null!==r&&r.delete(t),Pu===e&&Su===n?_u===Eu||_u===wu&&1073741823===Nu&&Fa()-Bu<500?nl(e,Su):Du=!0:Ol(e,n)&&(0!==(t=e.lastPingedTime)&&t<n||(e.lastPingedTime=n,Xu(e)))}function xl(e,t){var n=e.stateNode;null!==n&&n.delete(t),0===(t=0)&&(t=Wu(t=Hu(),e,null)),null!==(e=Ku(e,t))&&Xu(e)}gu=function(e,t,n){var r=t.expirationTime;if(null!==e){var a=t.pendingProps;if(e.memoizedProps!==a||pa.current)Co=!0;else{if(r<n){switch(Co=!1,t.tag){case 3:Fo(t),To();break;case 5:if(Di(t),4&t.mode&&1!==n&&a.hidden)return t.expirationTime=t.childExpirationTime=1,null;break;case 1:ma(t.type)&&ba(t);break;case 4:Ai(t,t.stateNode.containerInfo);break;case 10:r=t.memoizedProps.value,a=t.type._context,sa(Ka,a._currentValue),a._currentValue=r;break;case 13:if(null!==t.memoizedState)return 0!==(r=t.child.childExpirationTime)&&r>=n?$o(e,t,n):(sa(Ii,1&Ii.current),null!==(t=Qo(e,t,n))?t.sibling:null);sa(Ii,1&Ii.current);break;case 19:if(r=t.childExpirationTime>=n,0!=(64&e.effectTag)){if(r)return Wo(e,t,n);t.effectTag|=64}if(null!==(a=t.memoizedState)&&(a.rendering=null,a.tail=null),sa(Ii,Ii.current),!r)return null}return Qo(e,t,n)}Co=!1}}else Co=!1;switch(t.expirationTime=0,t.tag){case 2:if(r=t.type,null!==e&&(e.alternate=null,t.alternate=null,t.effectTag|=2),e=t.pendingProps,a=ha(t,fa.current),ni(t,n),a=Wi(null,t,r,e,a,n),t.effectTag|=1,"object"==typeof a&&null!==a&&"function"==typeof a.render&&void 0===a.$$typeof){if(t.tag=1,t.memoizedState=null,t.updateQueue=null,ma(r)){var i=!0;ba(t)}else i=!1;t.memoizedState=null!==a.state&&void 0!==a.state?a.state:null,ii(t);var u=r.getDerivedStateFromProps;"function"==typeof u&&hi(t,r,u,e),a.updater=mi,t.stateNode=a,a._reactInternalFiber=t,bi(t,r,e,n),t=Ro(null,t,r,!0,i,n)}else t.tag=0,Ao(null,t,a,n),t=t.child;return t;case 16:e:{if(a=t.elementType,null!==e&&(e.alternate=null,t.alternate=null,t.effectTag|=2),e=t.pendingProps,function(e){if(-1===e._status){e._status=0;var t=e._ctor;t=t(),e._result=t,t.then((function(t){0===e._status&&(t=t.default,e._status=1,e._result=t)}),(function(t){0===e._status&&(e._status=2,e._result=t)}))}}(a),1!==a._status)throw a._result;switch(a=a._result,t.type=a,i=t.tag=function(e){if("function"==typeof e)return kl(e)?1:0;if(null!=e){if((e=e.$$typeof)===le)return 11;if(e===fe)return 14}return 2}(a),e=Qa(a,e),i){case 0:t=zo(null,t,a,e,n);break e;case 1:t=Lo(null,t,a,e,n);break e;case 11:t=Oo(null,t,a,e,n);break e;case 14:t=Do(null,t,a,Qa(a.type,e),r,n);break e}throw Error(o(306,a,""))}return t;case 0:return r=t.type,a=t.pendingProps,zo(e,t,r,a=t.elementType===r?a:Qa(r,a),n);case 1:return r=t.type,a=t.pendingProps,Lo(e,t,r,a=t.elementType===r?a:Qa(r,a),n);case 3:if(Fo(t),r=t.updateQueue,null===e||null===r)throw Error(o(282));if(r=t.pendingProps,a=null!==(a=t.memoizedState)?a.element:null,oi(e,t),ci(t,r,null,n),(r=t.memoizedState.element)===a)To(),t=Qo(e,t,n);else{if((a=t.stateNode.hydrate)&&(wo=wn(t.stateNode.containerInfo.firstChild),xo=t,a=Eo=!0),a)for(n=ki(t,null,r,n),t.child=n;n;)n.effectTag=-3&n.effectTag|1024,n=n.sibling;else Ao(e,t,r,n),To();t=t.child}return t;case 5:return Di(t),null===e&&ko(t),r=t.type,a=t.pendingProps,i=null!==e?e.memoizedProps:null,u=a.children,yn(r,a)?u=null:null!==i&&yn(r,i)&&(t.effectTag|=16),Io(e,t),4&t.mode&&1!==n&&a.hidden?(t.expirationTime=t.childExpirationTime=1,t=null):(Ao(e,t,u,n),t=t.child),t;case 6:return null===e&&ko(t),null;case 13:return $o(e,t,n);case 4:return Ai(t,t.stateNode.containerInfo),r=t.pendingProps,null===e?t.child=Pi(t,null,r,n):Ao(e,t,r,n),t.child;case 11:return r=t.type,a=t.pendingProps,Oo(e,t,r,a=t.elementType===r?a:Qa(r,a),n);case 7:return Ao(e,t,t.pendingProps,n),t.child;case 8:case 12:return Ao(e,t,t.pendingProps.children,n),t.child;case 10:e:{r=t.type._context,a=t.pendingProps,u=t.memoizedProps,i=a.value;var l=t.type._context;if(sa(Ka,l._currentValue),l._currentValue=i,null!==u)if(l=u.value,0===(i=Lr(l,i)?0:0|("function"==typeof r._calculateChangedBits?r._calculateChangedBits(l,i):1073741823))){if(u.children===a.children&&!pa.current){t=Qo(e,t,n);break e}}else for(null!==(l=t.child)&&(l.return=t);null!==l;){var s=l.dependencies;if(null!==s){u=l.child;for(var c=s.firstContext;null!==c;){if(c.context===r&&0!=(c.observedBits&i)){1===l.tag&&((c=ui(n,null)).tag=2,li(l,c)),l.expirationTime<n&&(l.expirationTime=n),null!==(c=l.alternate)&&c.expirationTime<n&&(c.expirationTime=n),ti(l.return,n),s.expirationTime<n&&(s.expirationTime=n);break}c=c.next}}else u=10===l.tag&&l.type===t.type?null:l.child;if(null!==u)u.return=l;else for(u=l;null!==u;){if(u===t){u=null;break}if(null!==(l=u.sibling)){l.return=u.return,u=l;break}u=u.return}l=u}Ao(e,t,a.children,n),t=t.child}return t;case 9:return a=t.type,r=(i=t.pendingProps).children,ni(t,n),r=r(a=ri(a,i.unstable_observedBits)),t.effectTag|=1,Ao(e,t,r,n),t.child;case 14:return i=Qa(a=t.type,t.pendingProps),Do(e,t,a,i=Qa(a.type,i),r,n);case 15:return Bo(e,t,t.type,t.pendingProps,r,n);case 17:return r=t.type,a=t.pendingProps,a=t.elementType===r?a:Qa(r,a),null!==e&&(e.alternate=null,t.alternate=null,t.effectTag|=2),t.tag=1,ma(r)?(e=!0,ba(t)):e=!1,ni(t,n),vi(t,r,a),bi(t,r,a,n),Ro(null,t,r,!0,e,n);case 19:return Wo(e,t,n)}throw Error(o(156,t.tag))};var wl=null,El=null;function Ml(e,t,n,r){this.tag=e,this.key=n,this.sibling=this.child=this.return=this.stateNode=this.type=this.elementType=null,this.index=0,this.ref=null,this.pendingProps=t,this.dependencies=this.memoizedState=this.updateQueue=this.memoizedProps=null,this.mode=r,this.effectTag=0,this.lastEffect=this.firstEffect=this.nextEffect=null,this.childExpirationTime=this.expirationTime=0,this.alternate=null}function Pl(e,t,n,r){return new Ml(e,t,n,r)}function kl(e){return!(!(e=e.prototype)||!e.isReactComponent)}function Sl(e,t){var n=e.alternate;return null===n?((n=Pl(e.tag,t,e.key,e.mode)).elementType=e.elementType,n.type=e.type,n.stateNode=e.stateNode,n.alternate=e,e.alternate=n):(n.pendingProps=t,n.effectTag=0,n.nextEffect=null,n.firstEffect=null,n.lastEffect=null),n.childExpirationTime=e.childExpirationTime,n.expirationTime=e.expirationTime,n.child=e.child,n.memoizedProps=e.memoizedProps,n.memoizedState=e.memoizedState,n.updateQueue=e.updateQueue,t=e.dependencies,n.dependencies=null===t?null:{expirationTime:t.expirationTime,firstContext:t.firstContext,responders:t.responders},n.sibling=e.sibling,n.index=e.index,n.ref=e.ref,n}function _l(e,t,n,r,a,i){var u=2;if(r=e,"function"==typeof e)kl(e)&&(u=1);else if("string"==typeof e)u=5;else e:switch(e){case ne:return Tl(n.children,a,i,t);case ue:u=8,a|=7;break;case re:u=8,a|=1;break;case ae:return(e=Pl(12,n,t,8|a)).elementType=ae,e.type=ae,e.expirationTime=i,e;case se:return(e=Pl(13,n,t,a)).type=se,e.elementType=se,e.expirationTime=i,e;case ce:return(e=Pl(19,n,t,a)).elementType=ce,e.expirationTime=i,e;default:if("object"==typeof e&&null!==e)switch(e.$$typeof){case ie:u=10;break e;case oe:u=9;break e;case le:u=11;break e;case fe:u=14;break e;case pe:u=16,r=null;break e;case de:u=22;break e}throw Error(o(130,null==e?e:typeof e,""))}return(t=Pl(u,n,t,a)).elementType=e,t.type=r,t.expirationTime=i,t}function Tl(e,t,n,r){return(e=Pl(7,e,r,t)).expirationTime=n,e}function Nl(e,t,n){return(e=Pl(6,e,null,t)).expirationTime=n,e}function Cl(e,t,n){return(t=Pl(4,null!==e.children?e.children:[],e.key,t)).expirationTime=n,t.stateNode={containerInfo:e.containerInfo,pendingChildren:null,implementation:e.implementation},t}function Al(e,t,n){this.tag=t,this.current=null,this.containerInfo=e,this.pingCache=this.pendingChildren=null,this.finishedExpirationTime=0,this.finishedWork=null,this.timeoutHandle=-1,this.pendingContext=this.context=null,this.hydrate=n,this.callbackNode=null,this.callbackPriority=90,this.lastExpiredTime=this.lastPingedTime=this.nextKnownPendingLevel=this.lastSuspendedTime=this.firstSuspendedTime=this.firstPendingTime=0}function Ol(e,t){var n=e.firstSuspendedTime;return e=e.lastSuspendedTime,0!==n&&n>=t&&e<=t}function Dl(e,t){var n=e.firstSuspendedTime,r=e.lastSuspendedTime;n<t&&(e.firstSuspendedTime=t),(r>t||0===n)&&(e.lastSuspendedTime=t),t<=e.lastPingedTime&&(e.lastPingedTime=0),t<=e.lastExpiredTime&&(e.lastExpiredTime=0)}function Bl(e,t){t>e.firstPendingTime&&(e.firstPendingTime=t);var n=e.firstSuspendedTime;0!==n&&(t>=n?e.firstSuspendedTime=e.lastSuspendedTime=e.nextKnownPendingLevel=0:t>=e.lastSuspendedTime&&(e.lastSuspendedTime=t+1),t>e.nextKnownPendingLevel&&(e.nextKnownPendingLevel=t))}function Il(e,t){var n=e.lastExpiredTime;(0===n||n>t)&&(e.lastExpiredTime=t)}function zl(e,t,n,r){var a=t.current,i=Hu(),u=pi.suspense;i=Wu(i,a,u);e:if(n){t:{if(Je(n=n._reactInternalFiber)!==n||1!==n.tag)throw Error(o(170));var l=n;do{switch(l.tag){case 3:l=l.stateNode.context;break t;case 1:if(ma(l.type)){l=l.stateNode.__reactInternalMemoizedMergedChildContext;break t}}l=l.return}while(null!==l);throw Error(o(171))}if(1===n.tag){var s=n.type;if(ma(s)){n=ya(n,s,l);break e}}n=l}else n=ca;return null===t.context?t.context=n:t.pendingContext=n,(t=ui(i,u)).payload={element:e},null!==(r=void 0===r?null:r)&&(t.callback=r),li(a,t),Qu(a,i),i}function Ll(e){if(!(e=e.current).child)return null;switch(e.child.tag){case 5:default:return e.child.stateNode}}function Rl(e,t){null!==(e=e.memoizedState)&&null!==e.dehydrated&&e.retryTime<t&&(e.retryTime=t)}function Fl(e,t){Rl(e,t),(e=e.alternate)&&Rl(e,t)}function jl(e,t,n){var r=new Al(e,t,n=null!=n&&!0===n.hydrate),a=Pl(3,null,null,2===t?7:1===t?3:0);r.current=a,a.stateNode=r,ii(a),e[Sn]=r.current,n&&0!==t&&function(e,t){var n=Ze(t);St.forEach((function(e){ht(e,t,n)})),_t.forEach((function(e){ht(e,t,n)}))}(0,9===e.nodeType?e:e.ownerDocument),this._internalRoot=r}function Ul(e){return!(!e||1!==e.nodeType&&9!==e.nodeType&&11!==e.nodeType&&(8!==e.nodeType||" react-mount-point-unstable "!==e.nodeValue))}function Vl(e,t,n,r,a){var i=n._reactRootContainer;if(i){var o=i._internalRoot;if("function"==typeof a){var u=a;a=function(){var e=Ll(o);u.call(e)}}zl(t,o,e,a)}else{if(i=n._reactRootContainer=function(e,t){if(t||(t=!(!(t=e?9===e.nodeType?e.documentElement:e.firstChild:null)||1!==t.nodeType||!t.hasAttribute("data-reactroot"))),!t)for(var n;n=e.lastChild;)e.removeChild(n);return new jl(e,0,t?{hydrate:!0}:void 0)}(n,r),o=i._internalRoot,"function"==typeof a){var l=a;a=function(){var e=Ll(o);l.call(e)}}tl((function(){zl(t,o,e,a)}))}return Ll(o)}function ql(e,t,n){var r=3<arguments.length&&void 0!==arguments[3]?arguments[3]:null;return{$$typeof:te,key:null==r?null:""+r,children:e,containerInfo:t,implementation:n}}function $l(e,t){var n=2<arguments.length&&void 0!==arguments[2]?arguments[2]:null;if(!Ul(t))throw Error(o(200));return ql(e,t,null,n)}jl.prototype.render=function(e){zl(e,this._internalRoot,null,null)},jl.prototype.unmount=function(){var e=this._internalRoot,t=e.containerInfo;zl(null,e,null,(function(){t[Sn]=null}))},mt=function(e){if(13===e.tag){var t=Wa(Hu(),150,100);Qu(e,t),Fl(e,t)}},gt=function(e){13===e.tag&&(Qu(e,3),Fl(e,3))},vt=function(e){if(13===e.tag){var t=Hu();Qu(e,t=Wu(t,e,null)),Fl(e,t)}},T=function(e,t,n){switch(t){case"input":if(ke(e,n),t=n.name,"radio"===n.type&&null!=t){for(n=e;n.parentNode;)n=n.parentNode;for(n=n.querySelectorAll("input[name="+JSON.stringify(""+t)+'][type="radio"]'),t=0;t<n.length;t++){var r=n[t];if(r!==e&&r.form===e.form){var a=Cn(r);if(!a)throw Error(o(90));we(r),ke(r,a)}}}break;case"textarea":Oe(e,n);break;case"select":null!=(t=n.value)&&Ne(e,!!n.multiple,t,!1)}},B=el,I=function(e,t,n,r,a){var i=Mu;Mu|=4;try{return Va(98,e.bind(null,t,n,r,a))}finally{0===(Mu=i)&&Ya()}},z=function(){0==(49&Mu)&&(function(){if(null!==Vu){var e=Vu;Vu=null,e.forEach((function(e,t){Il(t,e),Xu(t)})),Ya()}}(),ml())},L=function(e,t){var n=Mu;Mu|=2;try{return e(t)}finally{0===(Mu=n)&&Ya()}};var Yl,Hl,Wl={Events:[Tn,Nn,Cn,S,M,Ln,function(e){at(e,zn)},O,D,Xt,ut,ml,{current:!1}]};Hl=(Yl={findFiberByHostInstance:_n,bundleType:0,version:"16.13.1",rendererPackageName:"react-dom"}).findFiberByHostInstance,function(e){if("undefined"==typeof __REACT_DEVTOOLS_GLOBAL_HOOK__)return!1;var t=__REACT_DEVTOOLS_GLOBAL_HOOK__;if(t.isDisabled||!t.supportsFiber)return!0;try{var n=t.inject(e);wl=function(e){try{t.onCommitFiberRoot(n,e,void 0,64==(64&e.current.effectTag))}catch(e){}},El=function(e){try{t.onCommitFiberUnmount(n,e)}catch(e){}}}catch(e){}}(a({},Yl,{overrideHookState:null,overrideProps:null,setSuspenseHandler:null,scheduleUpdate:null,currentDispatcherRef:G.ReactCurrentDispatcher,findHostInstanceByFiber:function(e){return null===(e=nt(e))?null:e.stateNode},findFiberByHostInstance:function(e){return Hl?Hl(e):null},findHostInstancesForRefresh:null,scheduleRefresh:null,scheduleRoot:null,setRefreshHandler:null,getCurrentFiber:null})),t.__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED=Wl,t.createPortal=$l,t.findDOMNode=function(e){if(null==e)return null;if(1===e.nodeType)return e;var t=e._reactInternalFiber;if(void 0===t){if("function"==typeof e.render)throw Error(o(188));throw Error(o(268,Object.keys(e)))}return e=null===(e=nt(t))?null:e.stateNode},t.flushSync=function(e,t){if(0!=(48&Mu))throw Error(o(187));var n=Mu;Mu|=1;try{return Va(99,e.bind(null,t))}finally{Mu=n,Ya()}},t.hydrate=function(e,t,n){if(!Ul(t))throw Error(o(200));return Vl(null,e,t,!0,n)},t.render=function(e,t,n){if(!Ul(t))throw Error(o(200));return Vl(null,e,t,!1,n)},t.unmountComponentAtNode=function(e){if(!Ul(e))throw Error(o(40));return!!e._reactRootContainer&&(tl((function(){Vl(null,null,e,!1,(function(){e._reactRootContainer=null,e[Sn]=null}))})),!0)},t.unstable_batchedUpdates=el,t.unstable_createPortal=function(e,t){return $l(e,t,2<arguments.length&&void 0!==arguments[2]?arguments[2]:null)},t.unstable_renderSubtreeIntoContainer=function(e,t,n,r){if(!Ul(n))throw Error(o(200));if(null==e||void 0===e._reactInternalFiber)throw Error(o(38));return Vl(e,t,n,!1,r)},t.version="16.13.1"},function(e,t,n){"use strict";e.exports=n(11)},function(e,t,n){"use strict";
/** @license React v0.19.1
 * scheduler.production.min.js
 *
 * Copyright (c) Facebook, Inc. and its affiliates.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 */var r,a,i,o,u;if("undefined"==typeof window||"function"!=typeof MessageChannel){var l=null,s=null,c=function(){if(null!==l)try{var e=t.unstable_now();l(!0,e),l=null}catch(e){throw setTimeout(c,0),e}},f=Date.now();t.unstable_now=function(){return Date.now()-f},r=function(e){null!==l?setTimeout(r,0,e):(l=e,setTimeout(c,0))},a=function(e,t){s=setTimeout(e,t)},i=function(){clearTimeout(s)},o=function(){return!1},u=t.unstable_forceFrameRate=function(){}}else{var p=window.performance,d=window.Date,h=window.setTimeout,m=window.clearTimeout;if("undefined"!=typeof console){var g=window.cancelAnimationFrame;"function"!=typeof window.requestAnimationFrame&&console.error("This browser doesn't support requestAnimationFrame. Make sure that you load a polyfill in older browsers. https://fb.me/react-polyfills"),"function"!=typeof g&&console.error("This browser doesn't support cancelAnimationFrame. Make sure that you load a polyfill in older browsers. https://fb.me/react-polyfills")}if("object"==typeof p&&"function"==typeof p.now)t.unstable_now=function(){return p.now()};else{var v=d.now();t.unstable_now=function(){return d.now()-v}}var y=!1,b=null,x=-1,w=5,E=0;o=function(){return t.unstable_now()>=E},u=function(){},t.unstable_forceFrameRate=function(e){0>e||125<e?console.error("forceFrameRate takes a positive int between 0 and 125, forcing framerates higher than 125 fps is not unsupported"):w=0<e?Math.floor(1e3/e):5};var M=new MessageChannel,P=M.port2;M.port1.onmessage=function(){if(null!==b){var e=t.unstable_now();E=e+w;try{b(!0,e)?P.postMessage(null):(y=!1,b=null)}catch(e){throw P.postMessage(null),e}}else y=!1},r=function(e){b=e,y||(y=!0,P.postMessage(null))},a=function(e,n){x=h((function(){e(t.unstable_now())}),n)},i=function(){m(x),x=-1}}function k(e,t){var n=e.length;e.push(t);e:for(;;){var r=n-1>>>1,a=e[r];if(!(void 0!==a&&0<T(a,t)))break e;e[r]=t,e[n]=a,n=r}}function S(e){return void 0===(e=e[0])?null:e}function _(e){var t=e[0];if(void 0!==t){var n=e.pop();if(n!==t){e[0]=n;e:for(var r=0,a=e.length;r<a;){var i=2*(r+1)-1,o=e[i],u=i+1,l=e[u];if(void 0!==o&&0>T(o,n))void 0!==l&&0>T(l,o)?(e[r]=l,e[u]=n,r=u):(e[r]=o,e[i]=n,r=i);else{if(!(void 0!==l&&0>T(l,n)))break e;e[r]=l,e[u]=n,r=u}}}return t}return null}function T(e,t){var n=e.sortIndex-t.sortIndex;return 0!==n?n:e.id-t.id}var N=[],C=[],A=1,O=null,D=3,B=!1,I=!1,z=!1;function L(e){for(var t=S(C);null!==t;){if(null===t.callback)_(C);else{if(!(t.startTime<=e))break;_(C),t.sortIndex=t.expirationTime,k(N,t)}t=S(C)}}function R(e){if(z=!1,L(e),!I)if(null!==S(N))I=!0,r(F);else{var t=S(C);null!==t&&a(R,t.startTime-e)}}function F(e,n){I=!1,z&&(z=!1,i()),B=!0;var r=D;try{for(L(n),O=S(N);null!==O&&(!(O.expirationTime>n)||e&&!o());){var u=O.callback;if(null!==u){O.callback=null,D=O.priorityLevel;var l=u(O.expirationTime<=n);n=t.unstable_now(),"function"==typeof l?O.callback=l:O===S(N)&&_(N),L(n)}else _(N);O=S(N)}if(null!==O)var s=!0;else{var c=S(C);null!==c&&a(R,c.startTime-n),s=!1}return s}finally{O=null,D=r,B=!1}}function j(e){switch(e){case 1:return-1;case 2:return 250;case 5:return 1073741823;case 4:return 1e4;default:return 5e3}}var U=u;t.unstable_IdlePriority=5,t.unstable_ImmediatePriority=1,t.unstable_LowPriority=4,t.unstable_NormalPriority=3,t.unstable_Profiling=null,t.unstable_UserBlockingPriority=2,t.unstable_cancelCallback=function(e){e.callback=null},t.unstable_continueExecution=function(){I||B||(I=!0,r(F))},t.unstable_getCurrentPriorityLevel=function(){return D},t.unstable_getFirstCallbackNode=function(){return S(N)},t.unstable_next=function(e){switch(D){case 1:case 2:case 3:var t=3;break;default:t=D}var n=D;D=t;try{return e()}finally{D=n}},t.unstable_pauseExecution=function(){},t.unstable_requestPaint=U,t.unstable_runWithPriority=function(e,t){switch(e){case 1:case 2:case 3:case 4:case 5:break;default:e=3}var n=D;D=e;try{return t()}finally{D=n}},t.unstable_scheduleCallback=function(e,n,o){var u=t.unstable_now();if("object"==typeof o&&null!==o){var l=o.delay;l="number"==typeof l&&0<l?u+l:u,o="number"==typeof o.timeout?o.timeout:j(e)}else o=j(e),l=u;return e={id:A++,callback:n,priorityLevel:e,startTime:l,expirationTime:o=l+o,sortIndex:-1},l>u?(e.sortIndex=l,k(C,e),null===S(N)&&e===S(C)&&(z?i():z=!0,a(R,l-u))):(e.sortIndex=o,k(N,e),I||B||(I=!0,r(F))),e},t.unstable_shouldYield=function(){var e=t.unstable_now();L(e);var n=S(N);return n!==O&&null!==O&&null!==n&&null!==n.callback&&n.startTime<=e&&n.expirationTime<O.expirationTime||o()},t.unstable_wrapCallback=function(e){var t=D;return function(){var n=D;D=t;try{return e.apply(this,arguments)}finally{D=n}}}},function(e,t,n){var r=n(13),a=n(23),i=n(24);e.exports=function(){var e=r(),t=a(),n={Element:e,defaultView:t,withFauxDOM:i(e),createElement:function(t){return new e(t)},createElementNS:function(e,t){return this.createElement(t)},compareDocumentPosition:function(){return 8}};return e.prototype.ownerDocument=n,n}},function(e,t,n){var r=n(0),a=n(14),i=n(15),o=n(3),u=n(19),l=n(20),s=n(21),c=n(4),f=n(22);e.exports=function(){function e(e,t){this.nodeName=e,this.parentNode=t,this.childNodes=[],this.eventListeners={},this.text="";var n=this,r=this.props={ref:function(e){n.component=e},style:{setProperty:function(e,t){r.style[f(e)]=t},getProperty:function(e){return r.style[f(e)]||""},getPropertyValue:function(e){return r.style.getProperty(e)},removeProperty:function(e){delete r.style[f(e)]}}};this.style=r.style}return e.ELEMENT_NODE=1,e.DOCUMENT_POSITION_DISCONNECTED=1,e.DOCUMENT_POSITION_PRECEDING=2,e.DOCUMENT_POSITION_FOLLOWING=4,e.DOCUMENT_POSITION_CONTAINS=8,e.DOCUMENT_POSITION_CONTAINED_BY=16,e.prototype.nodeType=1,e.prototype.eventNameMappings={blur:"onBlur",change:"onChange",click:"onClick",contextmenu:"onContextMenu",copy:"onCopy",cut:"onCut",doubleclick:"onDoubleClick",drag:"onDrag",dragend:"onDragEnd",dragenter:"onDragEnter",dragexit:"onDragExit",dragleave:"onDragLeave",dragover:"onDragOver",dragstart:"onDragStart",drop:"onDrop",error:"onError",focus:"onFocus",input:"onInput",keydown:"onKeyDown",keypress:"onKeyPress",keyup:"onKeyUp",load:"onLoad",mousedown:"onMouseDown",mouseenter:"onMouseEnter",mouseleave:"onMouseLeave",mousemove:"onMouseMove",mouseout:"onMouseOut",mouseover:"onMouseOver",mouseup:"onMouseUp",paste:"onPaste",scroll:"onScroll",submit:"onSubmit",touchcancel:"onTouchCancel",touchend:"onTouchEnd",touchmove:"onTouchMove",touchstart:"onTouchStart",wheel:"onWheel"},e.prototype.skipNameTransformationExpressions=[/^data-/,/^aria-/],e.prototype.attributeNameMappings={class:"className"},e.prototype.attributeToPropName=function(e){return this.skipNameTransformationExpressions.map((function(t){return t.test(e)})).some(Boolean)?e:this.attributeNameMappings[e]||o(e)},e.prototype.setAttribute=function(e,t){if("style"===e&&u(t)){var n=a.parse(t);for(var r in n)this.style.setProperty(r,n[r])}else this.props[this.attributeToPropName(e)]=t},e.prototype.getAttribute=function(e){return this.props[this.attributeToPropName(e)]},e.prototype.getAttributeNode=function(e){var t=this.getAttribute(e);if(!l(t))return{value:t,specified:!0}},e.prototype.removeAttribute=function(e){delete this.props[this.attributeToPropName(e)]},e.prototype.eventToPropName=function(e){return this.eventNameMappings[e]||e},e.prototype.addEventListener=function(e,t){var n=this.eventToPropName(e);this.eventListeners[n]=this.eventListeners[n]||[],this.eventListeners[n].push(t)},e.prototype.removeEventListener=function(e,t){var n=this.eventListeners[this.eventToPropName(e)];if(n){var r=n.indexOf(t);-1!==r&&n.splice(r,1)}},e.prototype.appendChild=function(t){return t instanceof e&&(t.parentNode=this),this.childNodes.push(t),t},e.prototype.insertBefore=function(e,t){var n=this.childNodes.indexOf(t);return e.parentNode=this,-1!==n?this.childNodes.splice(n,0,e):this.childNodes.push(e),e},e.prototype.removeChild=function(e){var t=this.childNodes.indexOf(e);this.childNodes.splice(t,1)},e.prototype.querySelector=function(){return this.querySelectorAll.apply(this,arguments)[0]||null},e.prototype.querySelectorAll=function(e){if(!e)throw new Error("Not enough arguments");return i(e,this)},e.prototype.getElementsByTagName=function(e){var t,n=this.children;if(0===n.length)return[];t="*"!==e?n.filter((function(t){return t.nodeName===e})):n;var r=n.map((function(t){return t.getElementsByTagName(e)}));return t.concat.apply(t,r)},e.prototype.getElementById=function(e){var t=this.children;if(0===t.length)return null;var n=t.filter((function(t){return t.getAttribute("id")===e}))[0];return n||(t.map((function(t){return t.getElementById(e)})).filter((function(e){return null!==e}))[0]||null)},e.prototype.getBoundingClientRect=function(){if(this.component)return this.component.getBoundingClientRect()},e.prototype.cloneNode=function(t){void 0===t&&(t=!0);var n,a=new e(this.nodeName,this.parentNode);for(n in this.nodeType&&(a.nodeType=this.nodeType),this.props)this.props.hasOwnProperty(n)&&"ref"!==n&&"style"!==n&&(a.props[n]=this.props[n]);for(n in this.style)this.style.hasOwnProperty(n)&&-1===["setProperty","getProperty","getPropertyValue","removeProperty"].indexOf(n)&&(a.style[n]=this.style[n]);return t&&(a.childNodes=this.childNodes.map((function(t){return t.nodeType?((t=t.cloneNode(!0))instanceof e&&(t.parentNode=a),t):r.cloneElement(t)}))),a},e.prototype.toReact=function(t){t=t||0;var n=s({},this.props);n.style=s({},n.style);var a=this;return l(n.key)&&(n.key="faux-dom-"+t),delete n.style.setProperty,delete n.style.getProperty,delete n.style.getPropertyValue,delete n.style.removeProperty,s(n,c(this.eventListeners,(function(e){return function(t){var n;t&&((n=t.nativeEvent).syntheticEvent=t),c(e,(function(e){e.call(a,n)}))}}))),r.createElement(this.nodeName,n,this.text||this.children.map((function(t,n){return t instanceof e?t.toReact(n):t})))},e.prototype.compareDocumentPosition=function(t){function n(e,t){for(;t.parentNode;)if((t=t.parentNode)===e)return!0;return!1}function r(e){for(;e.parentNode;)e=e.parentNode;return e}if(this===t)return 0;var a=r(this);if(a!==r(t))return e.DOCUMENT_POSITION_DISCONNECTED;var i,o,u=n(i=this,o=t)?e.DOCUMENT_POSITION_CONTAINED_BY+e.DOCUMENT_POSITION_FOLLOWING:!!n(o,i)&&e.DOCUMENT_POSITION_CONTAINS+e.DOCUMENT_POSITION_PRECEDING;if(u)return u;var l=function e(t,n,r){return t.reduce((function(t,a){return!1!==t?t:a===n?n:a===r?r:!!a.childNodes&&e(a.childNodes,n,r)}),!1)}([a],this,t);return l===this?e.DOCUMENT_POSITION_FOLLOWING:l===t?e.DOCUMENT_POSITION_PRECEDING:e.DOCUMENT_POSITION_DISCONNECTED},Object.defineProperties(e.prototype,{nextSibling:{get:function(){var e=this.parentNode.children,t=e.indexOf(this);return e[t+1]}},previousSibling:{get:function(){var e=this.parentNode.children,t=e.indexOf(this);return e[t-1]}},innerHTML:{get:function(){return this.text},set:function(e){this.text=e}},textContent:{get:function(){return this.text},set:function(e){this.text=e}},children:{get:function(){return this.childNodes.filter((function(e){return!e.nodeType||1===e.nodeType}))}}}),["setAttribute","getAttribute","getAttributeNode","removeAttribute","getElementsByTagName","getElementById"].forEach((function(t){var n=e.prototype[t];e.prototype[t+"NS"]=function(){return n.apply(this,Array.prototype.slice.call(arguments,1))}})),e}},function(e,t){function n(e,t){var n=(t=t||{}).preserveNumbers,r={};return function(e){var t,n=[],r=0,a=/url\([^\)]+$/,i="";for(;r<e.length;)-1===(t=e.indexOf(";",r))&&(t=e.length),i+=e.substring(r,t),a.test(i)?(i+=";",r=t+1):(n.push(i),i="",r=t+1);return n}(e).map((function(e){return e.trim()})).filter(Boolean).forEach((function(e){var t,a=e.indexOf(":"),i=e.substr(0,a).trim(),o=e.substr(a+1).trim();n&&(t=o,!isNaN(parseFloat(t))&&isFinite(t))&&(o=Number(o)),r[i]=o})),r}function r(e){return Object.keys(e).map((function(t){return t+":"+e[t]})).join(";")}e.exports.parse=n,e.exports.stringify=r,e.exports.normalize=function(e,t){return r(n(e,t))}},function(e,t,n){e.exports=n(16)},function(e,t,n){var r,a,i=n(17),o=n(18),u={},l=0,s={},c=function(e,t){return r?i.getSimpleAttr(e,t):i.attr(e,t)},f=i.hasSingleClass,p=i.isTag,d=/^(([+-]?(?:\d+)?)?n)?([+-]?\d+)?$/,h=/\\([\da-fA-F]{1,6}[\x20\t\r\n\f]?|.)/g,m=function(e,t){var n="0x"+t-65536;return isNaN(n)?t:n<0?String.fromCharCode(n+65536):String.fromCharCode(n>>10|55296,1023&n|56320)},g={"nth-child":function(e,t){var n=E(t),r=n.a,a=n.b;if(0===r&&0===a)return 0;var i=0,o=e.parentNode;if(o)for(var u,l,s=o.childNodes,c=0,f=s.length;c<f;c++)if(1===(u=s[c]).nodeType&&void 0!==(l=M(++i,r,a,u===e)))return l;return 0},"nth-last-child":function(e,t){var n=E(t),r=n.a,a=n.b;if(0===r&&0===a)return 0;var i=0,o=e.parentNode;if(o)for(var u,l,s=o.childNodes,c=s.length-1;c>=0;c--)if(1===(u=s[c]).nodeType&&void 0!==(l=M(++i,r,a,u===e)))return l;return 0},"nth-of-type":function(e,t){var n=E(t),r=n.a,a=n.b;if(0===r&&0===a)return 0;var i=0,o=e.parentNode;if(o)for(var u,l,s=o.childNodes,c=e.tagName,f=0,p=s.length;f<p;f++)if((u=s[f]).tagName===c&&void 0!==(l=M(++i,r,a,u===e)))return l;return 0},"nth-last-of-type":function(e,t){var n=E(t),r=n.a,a=n.b;if(0===r&&0===a)return 0;var i=0,o=e.parentNode;if(o)for(var u,l,s=o.childNodes,c=s.length,f=e.tagName,p=c-1;p>=0;p--)if((u=s[p]).tagName===f&&void 0!==(l=M(++i,r,a,u===e)))return l;return 0},lang:function(e,t){var n;t=x(t.toLowerCase());do{if(n=r?e.getAttribute("xml:lang")||e.getAttribute("lang"):e.lang)return(n=n.toLowerCase())===t||0===n.indexOf(t+"-")}while((e=e.parentNode)&&1===e.nodeType);return!1},not:function(e,t){return!a[t.t](e,t.value)}},v={empty:function(e){for(var t,n=e.childNodes,r=0,a=n.length-1;r<a;r++)if(1===(t=n[r].nodeType)||3===t||4===t||5===t)return 0;return 1},root:function(e){return 9===e.nodeType||e.ownerDocument&&e===e.ownerDocument.documentElement},"first-child":function(e){return g["nth-child"](e,1)},"last-child":function(e){return g["nth-last-child"](e,1)},"first-of-type":function(e){return g["nth-of-type"](e,1)},"last-of-type":function(e){return g["nth-last-of-type"](e,1)},"only-child":function(e){return v["first-child"](e)&&v["last-child"](e)},"only-of-type":function(e){return v["first-of-type"](e)&&v["last-of-type"](e)},focus:function(e){var t=e.ownerDocument;return t&&e===t.activeElement&&(!t.hasFocus||t.hasFocus())&&!!(e.type||e.href||e.tabIndex>=0)},target:function(e){var t=location.hash;return t&&t.slice(1)===c(e,"id")},enabled:function(e){return!e.disabled},disabled:function(e){return e.disabled},checked:function(e){var t=e.nodeName.toLowerCase();return"input"===t&&e.checked||"option"===t&&e.selected}},y={"~=":function(e,t){return!t||t.indexOf(" ")>-1?0:-1!==(" "+e+" ").indexOf(" "+t+" ")},"|=":function(e,t){return-1!==(" "+e).indexOf(" "+t+"-")},"^=":function(e,t){return t&&i.startsWith(e,t)},"$=":function(e,t){return t&&i.endsWith(e,t)},"*=":function(e,t){return t&&-1!==e.indexOf(t)},"=":function(e,t){return e===t}},b={">":{dir:"parentNode",immediate:1}," ":{dir:"parentNode"},"+":{dir:"previousSibling",immediate:1},"~":{dir:"previousSibling"}};function x(e){return e.replace(h,m)}function w(e,t){do{e=e[t]}while(e&&1!==e.nodeType);return e}function E(e){var t,n=0,r=0;return"number"==typeof e?r=e:"odd"===e?(n=2,r=1):"even"===e?(n=2,r=0):(t=e.replace(/\s/g,"").match(d))&&(t[1]?(n=parseInt(t[2],10),isNaN(n)&&(n="-"===t[2]?-1:1)):n=0,r=parseInt(t[3],10)||0),{a:n,b:r}}function M(e,t,n,r){if(0===t){if(e===n)return r}else if((e-n)/t>=0&&(e-n)%t==0&&r)return 1}function P(e,t){if(!t)return!0;if(!e)return!1;if(9===e.nodeType)return!1;var n,r,i=1,o=t.suffix;if("tag"===t.t&&(i&=a.tag(e,t.value)),i&&o)for(n=o.length,r=0;i&&r<n;r++){var u=o[r],l=u.t;a[l]&&(i&=a[l](e,u.value))}return i}function k(e,t){var n,r=t;do{if(!P(e,r))return null;if(!(r=r.prev))return!0;e=w(e,(n=b[r.nextCombinator]).dir)}while(e&&n.immediate);return e?{el:e,match:r}:null}function S(e,t){var n;return(n=function(e){var t;return r?(t=e.getAttribute("_ks_data_selector_id_"))||e.setAttribute("_ks_data_selector_id_",t=+new Date+"_"+ ++l):(t=e._ks_data_selector_id_)||(t=e._ks_data_selector_id_=+new Date+"_"+ ++l),t}(e)+"_"+(t.order||0))in s||(s[n]=function(e,t){var n=function(e,t){var n,r=1,a=e,i=t;do{if(!(r&=P(e,t)))return(n=b[t.nextCombinator]).immediate?{el:w(a,b[i.nextCombinator].dir),match:i}:{el:e&&w(e,n.dir),match:t};if(!(t=t&&t.prev))return!0;if(e=w(e,(n=b[t.nextCombinator]).dir),!n.immediate)return{el:e,match:t}}while(e);return{el:w(a,b[i.nextCombinator].dir),match:i}}(e,t);if(!0===n)return!0;for(e=n.el,t=n.match;e;){if(S(e,t))return!0;e=w(e,b[t.nextCombinator].dir)}return!1}(e,t)),s[n]}function _(e,t,n){u[e]||(u[e]=o.parse(e));var a,l,f,p,d=u[e],h=0,m=d.length,g=[];for(n&&(t=t||n[0].ownerDocument),a=t&&t.ownerDocument||"undefined"!=typeof document&&document,t&&9===t.nodeType&&!a&&(a=t),p=(f=t=t||a)&&(f.ownerDocument||f).documentElement,r=!!p&&"html"!==p.nodeName.toLowerCase();h<m;h++){s={};var v,y,b,x,w=(l=d[h]).suffix,E=n,M=null;if(!E){if(w&&!r)for(v=0,y=w.length;v<y;v++){var P=w[v];if("id"===P.t){M=P.value;break}}if(M){var _=!t.getElementById,T=i.contains(a,t),N=_?T?a.getElementById(M):null:t.getElementById(M);if(!N&&_||N&&c(N,"id")!==M){for(var C=i.getElementsByTagName("*",t),A=C.length,O=0;O<A;O++)if(N=C[O],c(N,"id")===M){E=[N];break}O===A&&(E=[])}else T&&N&&t!==a&&(N=i.contains(t,N)?N:null),E=N?[N]:[]}else E=i.getElementsByTagName(l.value||"*",t)}if(b=0,x=E.length)for(;b<x;b++){var D=E[b],B=k(D,l);(!0===B||B&&S(B.el,B.match))&&g.push(D)}}return m>1&&(g=i.unique(g)),g}a={tag:p,cls:f,id:function(e,t){return c(e,"id")===t},attrib:function(e,t){var n=t.ident;r||(n=n.toLowerCase());var a=c(e,n),i=t.match;if(!i&&void 0!==a)return 1;if(i){if(void 0===a)return 0;var o=y[i];if(o)return o(a+"",t.value+"")}return 0},pseudo:function(e,t){var n,r,a;if(r=t.fn){if(!(n=g[r]))throw new SyntaxError("Syntax error: not support pseudo: "+r);return n(e,t.param)}if(a=t.ident){if(!v[a])throw new SyntaxError("Syntax error: not support pseudo: "+a);return v[a](e)}return 0}},o.lexer.yy={trim:i.trim,unEscape:x,unEscapeStr:function(e){return this.unEscape(e.slice(1,-1))}},e.exports=_,_.parse=function(e){return o.parse(e)},_.matches=function(e,t){return _(e,null,t)},_.util=i,_.version="@VERSION@"},function(e,t){var n,r=/^(?:autofocus|autoplay|async|checked|controls|defer|disabled|hidden|loop|multiple|open|readonly|required|scoped|selected)$/i,a=/^(?:button|input|object|select|textarea)$/i,i=/^a(?:rea)?$/i,o=/:|^on/,u={},l={tabindex:{get:function(e){var t=e.getAttributeNode("tabindex");return t&&t.specified?parseInt(t.value,10):a.test(e.nodeName)||i.test(e.nodeName)&&e.href?0:void 0}}},s={get:function(e,t){return e[n[t]||t]?t.toLowerCase():void 0}},c={};l.style={get:function(e){return e.style.cssText}},n={hidefocus:"hideFocus",tabindex:"tabIndex",readonly:"readOnly",for:"htmlFor",class:"className",maxlength:"maxLength",cellspacing:"cellSpacing",cellpadding:"cellPadding",rowspan:"rowSpan",colspan:"colSpan",usemap:"useMap",frameborder:"frameBorder",contenteditable:"contentEditable"};var f="undefined"!=typeof navigator?navigator.userAgent:"",p="undefined"!=typeof document?document:{};function d(e,t){for(var n in t)e[n]=t[n]}var h=function(){var e,t,n;if((e=f.match(/MSIE ([^;]*)|Trident.*; rv(?:\s|:)?([0-9.]+)/))&&(t=e[1]||e[2]))return p.documentMode||(n=0,parseFloat(t.replace(/\./g,(function(){return 0==n++?".":""}))))}();(h&&h<8&&(l.style.set=function(e,t){e.style.cssText=t},d(c,{get:function(e,t){var n=e.getAttributeNode(t);return n&&(n.specified||n.nodeValue)?n.nodeValue:void 0}}),d(u,n),l.tabIndex=l.tabindex,function(e,t){for(var n=0,r=e.length;n<r&&!1!==t(e[n],n);n++);}(["href","src","width","height","colSpan","rowSpan"],(function(e){l[e]={get:function(t){var n=t.getAttribute(e,2);return null===n?void 0:n}}})),l.placeholder={get:function(e,t){return e[t]||c.get(e,t)}}),h)&&((l.href=l.href||{}).set=function(e,t,n){var r,a=e.childNodes,i=a.length,o=i>0;for(i-=1;i>=0;i--)3!==a[i].nodeType&&(o=0);o&&((r=e.ownerDocument.createElement("b")).style.display="none",e.appendChild(r)),e.setAttribute(n,""+t),r&&e.removeChild(r)});var m,g=/^[\s\xa0]+|[\s\xa0]+$/g,v=String.prototype.trim;if(m=function(e,t){return t.getElementsByTagName(e)},p.createElement){var y=p.createElement("div");y.appendChild(document.createComment("")),y.getElementsByTagName("*").length&&(m=function(e,t){var n=t.getElementsByTagName(e),r="*"===e;if(r||"number"!=typeof n.length){for(var a,i=[],o=0;a=n[o++];)r&&1!==a.nodeType||i.push(a);return i}return n})}var b="sourceIndex"in(p&&p.documentElement||{})?function(e,t){return e.sourceIndex-t.sourceIndex}:function(e,t){return e.compareDocumentPosition&&t.compareDocumentPosition?4&e.compareDocumentPosition(t)?-1:1:e.compareDocumentPosition?-1:1},x=e.exports={ie:h,unique:function(){var e,t=!0;function n(t,n){return t===n?(e=!0,0):b(t,n)}return[0,0].sort((function(){return t=!1,0})),function(r){if(e=t,r.sort(n),e)for(var a=1,i=r.length;a<i;)r[a]===r[a-1]?(r.splice(a,1),--i):a++;return r}}(),getElementsByTagName:m,getSimpleAttr:function(e,t){var n=e&&e.getAttributeNode(t);if(n&&n.specified)return"value"in n?n.value:n.nodeValue},contains:h?function(e,t){return 9===e.nodeType&&(e=e.documentElement),e===(t=t.parentNode)||!(!t||1!==t.nodeType)&&(e.contains&&e.contains(t))}:function(e,t){return!!(16&e.compareDocumentPosition(t))},isTag:function(e,t){return"*"===t||e.nodeName.toLowerCase()===t.toLowerCase()},hasSingleClass:function(e,t){var n=e&&x.getSimpleAttr(e,"class");return n&&(n=n.replace(/[\r\t\n]/g," "))&&(" "+n+" ").indexOf(" "+t+" ")>-1},startsWith:function(e,t){return 0===e.lastIndexOf(t,0)},endsWith:function(e,t){var n=e.length-t.length;return n>=0&&e.indexOf(t,n)===n},trim:v?function(e){return null==e?"":v.call(e)}:function(e){return null==e?"":(e+"").replace(g,"")},attr:function(e,t){var n,a;if(t=t.toLowerCase(),t=u[t]||t,n=r.test(t)?s:o.test(t)?c:l[t],e&&1===e.nodeType){if("form"===e.nodeName.toLowerCase()&&(n=c),n&&n.get)return n.get(e,t);if(""===(a=e.getAttribute(t))){var i=e.getAttributeNode(t);if(!i||!i.specified)return}return null===a?void 0:a}}}},function(e,t,n){var r=function(e){var t={},n=1,r=2,a=0,i=0,o=1,u=2;function l(e,t){for(var n in t)e[n]=t[n]}function s(e,t,n){if(e){var r,a,i,o=0;if(n=n||null,u=e,"[object Array]"!==Object.prototype.toString.call(u)){for(r in e)if(!1===t.call(n,e[r],r,e))break}else for(i=e.length,a=e[0];o<i&&!1!==t.call(n,a,o,e);a=e[++o]);}var u}var c=function(e){this.rules=[],l(this,e),this.resetInput(this.input)};c.prototype={resetInput:function(e){l(this,{input:e,matched:"",stateStack:[c.STATIC.INITIAL],match:"",text:"",firstLine:1,lineNumber:1,lastLine:1,firstColumn:1,lastColumn:1})},getCurrentRules:function(){var e=this.stateStack[this.stateStack.length-1],t=[];return this.mapState&&(e=this.mapState(e)),s(this.rules,(function(n){var r=n.state||n[3];r?function(e,t){for(var n=0,r=t.length;n<r;n++)if(t[n]===e)return!0;return!1}(e,r)&&t.push(n):e===c.STATIC.INITIAL&&t.push(n)})),t},pushState:function(e){this.stateStack.push(e)},popState:function(e){var t;for(e=e||1;e--;)t=this.stateStack.pop();return t},showDebugInfo:function(){var e=c.STATIC.DEBUG_CONTEXT_LIMIT,t=this.matched,n=this.match,r=this.input,a=((t=t.slice(0,t.length-n.length)).length>e?"...":"")+t.slice(0-e).replace(/\n/," "),i=n+r;return a+(i=i.slice(0,e)+(i.length>e?"...":""))+"\n"+new Array(a.length+1).join("-")+"^"},mapSymbol:function(e){return this.symbolMap[e]},mapReverseSymbol:function(e){var t,n=this.symbolMap,r=this.reverseSymbolMap;if(!r&&n)for(t in r=this.reverseSymbolMap={},n)r[n[t]]=t;return r?r[e]:e},lex:function(){var e,t,n,r,a,i=this.input,o=this.getCurrentRules();if(this.match=this.text="",!i)return this.mapSymbol(c.STATIC.END_TAG);for(e=0;e<o.length;e++){var u,s=(t=o[e]).regexp||t[1],f=t.token||t[0],p=t.action||t[2]||void 0;if(n=i.match(s))return(a=n[0].match(/\n.*/g))&&(this.lineNumber+=a.length),l(this,{firstLine:this.lastLine,lastLine:this.lineNumber+1,firstColumn:this.lastColumn,lastColumn:a?a[a.length-1].length-1:this.lastColumn+n[0].length}),u=this.match=n[0],this.matches=n,this.text=u,this.matched+=u,r=void 0===(r=p&&p.call(this))?f:this.mapSymbol(r),i=i.slice(u.length),this.input=i,r||this.lex()}}},c.STATIC={INITIAL:"I",DEBUG_CONTEXT_LIMIT:20,END_TAG:"$EOF"};var f=new c({rules:[["b",/^\[(?:[\t\r\n\f\x20]*)/,function(){this.text=this.yy.trim(this.text)}],["c",/^(?:[\t\r\n\f\x20]*)\]/,function(){this.text=this.yy.trim(this.text)}],["d",/^(?:[\t\r\n\f\x20]*)~=(?:[\t\r\n\f\x20]*)/,function(){this.text=this.yy.trim(this.text)}],["e",/^(?:[\t\r\n\f\x20]*)\|=(?:[\t\r\n\f\x20]*)/,function(){this.text=this.yy.trim(this.text)}],["f",/^(?:[\t\r\n\f\x20]*)\^=(?:[\t\r\n\f\x20]*)/,function(){this.text=this.yy.trim(this.text)}],["g",/^(?:[\t\r\n\f\x20]*)\$=(?:[\t\r\n\f\x20]*)/,function(){this.text=this.yy.trim(this.text)}],["h",/^(?:[\t\r\n\f\x20]*)\*=(?:[\t\r\n\f\x20]*)/,function(){this.text=this.yy.trim(this.text)}],["i",/^(?:[\t\r\n\f\x20]*)\=(?:[\t\r\n\f\x20]*)/,function(){this.text=this.yy.trim(this.text)}],["j",/^(?:(?:[\w]|[^\x00-\xa0]|(?:\\[^\n\r\f0-9a-f]))(?:[\w\d-]|[^\x00-\xa0]|(?:\\[^\n\r\f0-9a-f]))*)\(/,function(){this.text=this.yy.trim(this.text).slice(0,-1),this.pushState("fn")}],["k",/^[^\)]*/,function(){this.popState()},["fn"]],["l",/^(?:[\t\r\n\f\x20]*)\)/,function(){this.text=this.yy.trim(this.text)}],["m",/^:not\((?:[\t\r\n\f\x20]*)/i,function(){this.text=this.yy.trim(this.text)}],["n",/^(?:(?:[\w]|[^\x00-\xa0]|(?:\\[^\n\r\f0-9a-f]))(?:[\w\d-]|[^\x00-\xa0]|(?:\\[^\n\r\f0-9a-f]))*)/,function(){this.text=this.yy.unEscape(this.text)}],["o",/^"(\\"|[^"])*"/,function(){this.text=this.yy.unEscapeStr(this.text)}],["o",/^'(\\'|[^'])*'/,function(){this.text=this.yy.unEscapeStr(this.text)}],["p",/^#(?:(?:[\w\d-]|[^\x00-\xa0]|(?:\\[^\n\r\f0-9a-f]))+)/,function(){this.text=this.yy.unEscape(this.text.slice(1))}],["q",/^\.(?:(?:[\w]|[^\x00-\xa0]|(?:\\[^\n\r\f0-9a-f]))(?:[\w\d-]|[^\x00-\xa0]|(?:\\[^\n\r\f0-9a-f]))*)/,function(){this.text=this.yy.unEscape(this.text.slice(1))}],["r",/^(?:[\t\r\n\f\x20]*),(?:[\t\r\n\f\x20]*)/,function(){this.text=this.yy.trim(this.text)}],["s",/^::?/,0],["t",/^(?:[\t\r\n\f\x20]*)\+(?:[\t\r\n\f\x20]*)/,function(){this.text=this.yy.trim(this.text)}],["u",/^(?:[\t\r\n\f\x20]*)>(?:[\t\r\n\f\x20]*)/,function(){this.text=this.yy.trim(this.text)}],["v",/^(?:[\t\r\n\f\x20]*)~(?:[\t\r\n\f\x20]*)/,function(){this.text=this.yy.trim(this.text)}],["w",/^\*/,0],["x",/^(?:[\t\r\n\f\x20]+)/,0],["y",/^./,0]]});return t.lexer=f,f.symbolMap={$EOF:"a",LEFT_BRACKET:"b",RIGHT_BRACKET:"c",INCLUDES:"d",DASH_MATCH:"e",PREFIX_MATCH:"f",SUFFIX_MATCH:"g",SUBSTRING_MATCH:"h",ALL_MATCH:"i",FUNCTION:"j",PARAMETER:"k",RIGHT_PARENTHESES:"l",NOT:"m",IDENT:"n",STRING:"o",HASH:"p",CLASS:"q",COMMA:"r",COLON:"s",PLUS:"t",GREATER:"u",TILDE:"v",UNIVERSAL:"w",S:"x",INVALID:"y",$START:"z",selectors_group:"aa",selector:"ab",simple_selector_sequence:"ac",combinator:"ad",type_selector:"ae",id_selector:"af",class_selector:"ag",attrib_match:"ah",attrib:"ai",attrib_val:"aj",pseudo:"ak",negation:"al",negation_arg:"am",suffix_selector:"an",suffix_selectors:"ao"},t.productions=[["z",["aa"]],["aa",["ab"],function(){return[this.$1]}],["aa",["aa","r","ab"],function(){this.$1.push(this.$3)}],["ab",["ac"]],["ab",["ab","ad","ac"],function(){var e;return this.$1.nextCombinator=this.$3.prevCombinator=this.$2,e=this.$1.order=this.$1.order||0,this.$3.order=e+1,this.$3.prev=this.$1,this.$1.next=this.$3,this.$3}],["ad",["t"]],["ad",["u"]],["ad",["v"]],["ad",["x"],function(){return" "}],["ae",["n"],function(){return{t:"tag",value:this.$1}}],["ae",["w"],function(){return{t:"tag",value:this.$1}}],["af",["p"],function(){return{t:"id",value:this.$1}}],["ag",["q"],function(){return{t:"cls",value:this.$1}}],["ah",["f"]],["ah",["g"]],["ah",["h"]],["ah",["i"]],["ah",["d"]],["ah",["e"]],["ai",["b","n","c"],function(){return{t:"attrib",value:{ident:this.$2}}}],["aj",["n"]],["aj",["o"]],["ai",["b","n","ah","aj","c"],function(){return{t:"attrib",value:{ident:this.$2,match:this.$3,value:this.$4}}}],["ak",["s","j","k","l"],function(){return{t:"pseudo",value:{fn:this.$2.toLowerCase(),param:this.$3}}}],["ak",["s","n"],function(){return{t:"pseudo",value:{ident:this.$2.toLowerCase()}}}],["al",["m","am","l"],function(){return{t:"pseudo",value:{fn:"not",param:this.$2}}}],["am",["ae"]],["am",["af"]],["am",["ag"]],["am",["ai"]],["am",["ak"]],["an",["af"]],["an",["ag"]],["an",["ai"]],["an",["ak"]],["an",["al"]],["ao",["an"],function(){return[this.$1]}],["ao",["ao","an"],function(){this.$1.push(this.$2)}],["ac",["ae"]],["ac",["ao"],function(){return{suffix:this.$1}}],["ac",["ae","ao"],function(){return{t:"tag",value:this.$1.value,suffix:this.$2}}]],t.table={gotos:{0:{aa:8,ab:9,ae:10,af:11,ag:12,ai:13,ak:14,al:15,an:16,ao:17,ac:18},2:{ae:20,af:21,ag:22,ai:23,ak:24,am:25},9:{ad:33},10:{af:11,ag:12,ai:13,ak:14,al:15,an:16,ao:34},17:{af:11,ag:12,ai:13,ak:14,al:15,an:35},19:{ah:43},28:{ab:46,ae:10,af:11,ag:12,ai:13,ak:14,al:15,an:16,ao:17,ac:18},33:{ae:10,af:11,ag:12,ai:13,ak:14,al:15,an:16,ao:17,ac:47},34:{af:11,ag:12,ai:13,ak:14,al:15,an:35},43:{aj:50},46:{ad:33}},action:{0:{b:[1,void 0,1],m:[1,void 0,2],n:[1,void 0,3],p:[1,void 0,4],q:[1,void 0,5],s:[1,void 0,6],w:[1,void 0,7]},1:{n:[1,void 0,19]},2:{b:[1,void 0,1],n:[1,void 0,3],p:[1,void 0,4],q:[1,void 0,5],s:[1,void 0,6],w:[1,void 0,7]},3:{a:[2,9],r:[2,9],t:[2,9],u:[2,9],v:[2,9],x:[2,9],p:[2,9],q:[2,9],b:[2,9],s:[2,9],m:[2,9],l:[2,9]},4:{a:[2,11],r:[2,11],t:[2,11],u:[2,11],v:[2,11],x:[2,11],p:[2,11],q:[2,11],b:[2,11],s:[2,11],m:[2,11],l:[2,11]},5:{a:[2,12],r:[2,12],t:[2,12],u:[2,12],v:[2,12],x:[2,12],p:[2,12],q:[2,12],b:[2,12],s:[2,12],m:[2,12],l:[2,12]},6:{j:[1,void 0,26],n:[1,void 0,27]},7:{a:[2,10],r:[2,10],t:[2,10],u:[2,10],v:[2,10],x:[2,10],p:[2,10],q:[2,10],b:[2,10],s:[2,10],m:[2,10],l:[2,10]},8:{a:[0],r:[1,void 0,28]},9:{a:[2,1],r:[2,1],t:[1,void 0,29],u:[1,void 0,30],v:[1,void 0,31],x:[1,void 0,32]},10:{a:[2,38],r:[2,38],t:[2,38],u:[2,38],v:[2,38],x:[2,38],b:[1,void 0,1],m:[1,void 0,2],p:[1,void 0,4],q:[1,void 0,5],s:[1,void 0,6]},11:{a:[2,31],r:[2,31],t:[2,31],u:[2,31],v:[2,31],x:[2,31],p:[2,31],q:[2,31],b:[2,31],s:[2,31],m:[2,31]},12:{a:[2,32],r:[2,32],t:[2,32],u:[2,32],v:[2,32],x:[2,32],p:[2,32],q:[2,32],b:[2,32],s:[2,32],m:[2,32]},13:{a:[2,33],r:[2,33],t:[2,33],u:[2,33],v:[2,33],x:[2,33],p:[2,33],q:[2,33],b:[2,33],s:[2,33],m:[2,33]},14:{a:[2,34],r:[2,34],t:[2,34],u:[2,34],v:[2,34],x:[2,34],p:[2,34],q:[2,34],b:[2,34],s:[2,34],m:[2,34]},15:{a:[2,35],r:[2,35],t:[2,35],u:[2,35],v:[2,35],x:[2,35],p:[2,35],q:[2,35],b:[2,35],s:[2,35],m:[2,35]},16:{a:[2,36],r:[2,36],t:[2,36],u:[2,36],v:[2,36],x:[2,36],p:[2,36],q:[2,36],b:[2,36],s:[2,36],m:[2,36]},17:{a:[2,39],r:[2,39],t:[2,39],u:[2,39],v:[2,39],x:[2,39],b:[1,void 0,1],m:[1,void 0,2],p:[1,void 0,4],q:[1,void 0,5],s:[1,void 0,6]},18:{a:[2,3],r:[2,3],t:[2,3],u:[2,3],v:[2,3],x:[2,3]},19:{c:[1,void 0,36],d:[1,void 0,37],e:[1,void 0,38],f:[1,void 0,39],g:[1,void 0,40],h:[1,void 0,41],i:[1,void 0,42]},20:{l:[2,26]},21:{l:[2,27]},22:{l:[2,28]},23:{l:[2,29]},24:{l:[2,30]},25:{l:[1,void 0,44]},26:{k:[1,void 0,45]},27:{a:[2,24],r:[2,24],t:[2,24],u:[2,24],v:[2,24],x:[2,24],p:[2,24],q:[2,24],b:[2,24],s:[2,24],m:[2,24],l:[2,24]},28:{b:[1,void 0,1],m:[1,void 0,2],n:[1,void 0,3],p:[1,void 0,4],q:[1,void 0,5],s:[1,void 0,6],w:[1,void 0,7]},29:{n:[2,5],w:[2,5],p:[2,5],q:[2,5],b:[2,5],s:[2,5],m:[2,5]},30:{n:[2,6],w:[2,6],p:[2,6],q:[2,6],b:[2,6],s:[2,6],m:[2,6]},31:{n:[2,7],w:[2,7],p:[2,7],q:[2,7],b:[2,7],s:[2,7],m:[2,7]},32:{n:[2,8],w:[2,8],p:[2,8],q:[2,8],b:[2,8],s:[2,8],m:[2,8]},33:{b:[1,void 0,1],m:[1,void 0,2],n:[1,void 0,3],p:[1,void 0,4],q:[1,void 0,5],s:[1,void 0,6],w:[1,void 0,7]},34:{a:[2,40],r:[2,40],t:[2,40],u:[2,40],v:[2,40],x:[2,40],b:[1,void 0,1],m:[1,void 0,2],p:[1,void 0,4],q:[1,void 0,5],s:[1,void 0,6]},35:{a:[2,37],r:[2,37],t:[2,37],u:[2,37],v:[2,37],x:[2,37],p:[2,37],q:[2,37],b:[2,37],s:[2,37],m:[2,37]},36:{a:[2,19],r:[2,19],t:[2,19],u:[2,19],v:[2,19],x:[2,19],p:[2,19],q:[2,19],b:[2,19],s:[2,19],m:[2,19],l:[2,19]},37:{n:[2,17],o:[2,17]},38:{n:[2,18],o:[2,18]},39:{n:[2,13],o:[2,13]},40:{n:[2,14],o:[2,14]},41:{n:[2,15],o:[2,15]},42:{n:[2,16],o:[2,16]},43:{n:[1,void 0,48],o:[1,void 0,49]},44:{a:[2,25],r:[2,25],t:[2,25],u:[2,25],v:[2,25],x:[2,25],p:[2,25],q:[2,25],b:[2,25],s:[2,25],m:[2,25]},45:{l:[1,void 0,51]},46:{a:[2,2],r:[2,2],t:[1,void 0,29],u:[1,void 0,30],v:[1,void 0,31],x:[1,void 0,32]},47:{a:[2,4],r:[2,4],t:[2,4],u:[2,4],v:[2,4],x:[2,4]},48:{c:[2,20]},49:{c:[2,21]},50:{c:[1,void 0,52]},51:{a:[2,23],r:[2,23],t:[2,23],u:[2,23],v:[2,23],x:[2,23],p:[2,23],q:[2,23],b:[2,23],s:[2,23],m:[2,23],l:[2,23]},52:{a:[2,22],r:[2,22],t:[2,22],u:[2,22],v:[2,22],x:[2,22],p:[2,22],q:[2,22],b:[2,22],s:[2,22],m:[2,22],l:[2,22]}}},t.parse=function(e,t){var l,s,c,f=this.lexer,p=this.table,d=p.gotos,h=p.action,m=this.productions,g=[null],v=t?"in file: "+t+" ":"",y=[0];for(f.resetInput(e);;){if(l=y[y.length-1],s||(s=f.lex()),!(c=s?h[l]&&h[l][s]:null)){var b,x=[];if(h[l])for(var w in h[l])x.push(this.lexer.mapReverseSymbol(w));throw b=v+"syntax error at line "+f.lineNumber+":\n"+f.showDebugInfo()+"\nexpect "+x.join(", "),new Error(b)}switch(c[i]){case n:y.push(s),g.push(f.text),y.push(c[u]),s=null;break;case r:var E,M=m[c[o]],P=M.symbol||M[0],k=M.action||M[2],S=(M.rhs||M[1]).length,_=0,T=g[g.length-S];for(E=void 0,this.$$=T;_<S;_++)this["$"+(S-_)]=g[g.length-1-_];k&&(E=k.call(this)),T=void 0!==E?E:this.$$,y=y.slice(0,-1*S*2),g=g.slice(0,-1*S),y.push(P),g.push(T);var N=d[y[y.length-2]][y[y.length-1]];y.push(N);break;case a:return T}}},t}();e.exports=r},function(e,t){e.exports=function(e){return"string"==typeof e}},function(e,t){e.exports=function(e){return void 0===e}},function(e,t){e.exports=function(e){for(var t,n=arguments,r=1;r<n.length;r++)for(var a in t=n[r])e[a]=t[a];return e}},function(e,t,n){var r=n(3);e.exports=function(e){var t=r(e);return t.charAt(0).toUpperCase()===e.charAt(0)?e.charAt(0)+t.slice(1):"-"===e.charAt(0)?0===t.indexOf("ms")?t:t.charAt(0).toUpperCase()+t.slice(1):t}},function(e,t){e.exports=function(){return{getComputedStyle:function(e){return{getPropertyValue:e.style.getProperty}}}}},function(e,t,n){var r=n(0),a=n(25),i=n(4),o=n(29);e.exports=function(e){return function(t){var n=a({componentWillMount:function(){this.connectedFauxDOM={},this.animateFauxDOMUntil=0},componentWillUnmount:function(){this.stopAnimatingFauxDOM(),this.stopDrawFauxDOM()},connectFauxDOM:function(t,n,r){return this.connectedFauxDOM[n]&&!r||(this.connectedFauxDOM[n]="string"!=typeof t?t:new e(t),this.drawFauxDOMTimeout=setTimeout(this.drawFauxDOM)),this.connectedFauxDOM[n]},drawFauxDOM:function(){var e=i(this.connectedFauxDOM,(function(e){return e.toReact()}));this.setState(e)},animateFauxDOM:function(e){this.animateFauxDOMUntil=Math.max(Date.now()+e,this.animateFauxDOMUntil),this.fauxDOMAnimationInterval||(this.fauxDOMAnimationInterval=setInterval(function(){Date.now()<this.animateFauxDOMUntil?this.drawFauxDOM():this.stopAnimatingFauxDOM()}.bind(this),16))},stopAnimatingFauxDOM:function(){this.fauxDOMAnimationInterval=clearInterval(this.fauxDOMAnimationInterval),this.animateFauxDOMUntil=0},stopDrawFauxDOM:function(){this.drawFauxDOMTimeout=clearTimeout(this.drawFauxDOMTimeout)},isAnimatingFauxDOM:function(){return!!this.fauxDOMAnimationInterval},render:function(){var e=Object.assign({},this.props,this.state,{connectFauxDOM:this.connectFauxDOM,drawFauxDOM:this.drawFauxDOM,animateFauxDOM:this.animateFauxDOM,stopAnimatingFauxDOM:this.stopAnimatingFauxDOM,isAnimatingFauxDOM:this.isAnimatingFauxDOM});return r.createElement(t,e)}});return n.displayName="WithFauxDOM("+function(e){return e.displayName||e.name||"Component"}(t)+")",o(n,t),n}}},function(e,t,n){"use strict";var r=n(0),a=n(26);if(void 0===r)throw Error("create-react-class could not find the React object. If you are using script tags, make sure that React is being loaded before create-react-class.");var i=(new r.Component).updater;e.exports=a(r.Component,r.isValidElement,i)},function(e,t,n){"use strict";var r=n(1),a=n(27),i=n(28);e.exports=function(e,t,n){var o=[],u={mixins:"DEFINE_MANY",statics:"DEFINE_MANY",propTypes:"DEFINE_MANY",contextTypes:"DEFINE_MANY",childContextTypes:"DEFINE_MANY",getDefaultProps:"DEFINE_MANY_MERGED",getInitialState:"DEFINE_MANY_MERGED",getChildContext:"DEFINE_MANY_MERGED",render:"DEFINE_ONCE",componentWillMount:"DEFINE_MANY",componentDidMount:"DEFINE_MANY",componentWillReceiveProps:"DEFINE_MANY",shouldComponentUpdate:"DEFINE_ONCE",componentWillUpdate:"DEFINE_MANY",componentDidUpdate:"DEFINE_MANY",componentWillUnmount:"DEFINE_MANY",UNSAFE_componentWillMount:"DEFINE_MANY",UNSAFE_componentWillReceiveProps:"DEFINE_MANY",UNSAFE_componentWillUpdate:"DEFINE_MANY",updateComponent:"OVERRIDE_BASE"},l={getDerivedStateFromProps:"DEFINE_MANY_MERGED"},s={displayName:function(e,t){e.displayName=t},mixins:function(e,t){if(t)for(var n=0;n<t.length;n++)f(e,t[n])},childContextTypes:function(e,t){e.childContextTypes=r({},e.childContextTypes,t)},contextTypes:function(e,t){e.contextTypes=r({},e.contextTypes,t)},getDefaultProps:function(e,t){e.getDefaultProps?e.getDefaultProps=d(e.getDefaultProps,t):e.getDefaultProps=t},propTypes:function(e,t){e.propTypes=r({},e.propTypes,t)},statics:function(e,t){!function(e,t){if(!t)return;for(var n in t){var r=t[n];if(t.hasOwnProperty(n)){if(i(!(n in s),'ReactClass: You are attempting to define a reserved property, `%s`, that shouldn\'t be on the "statics" key. Define it as an instance property instead; it will still be accessible on the constructor.',n),n in e){var a=l.hasOwnProperty(n)?l[n]:null;return i("DEFINE_MANY_MERGED"===a,"ReactClass: You are attempting to define `%s` on your component more than once. This conflict may be due to a mixin.",n),void(e[n]=d(e[n],r))}e[n]=r}}}(e,t)},autobind:function(){}};function c(e,t){var n=u.hasOwnProperty(t)?u[t]:null;y.hasOwnProperty(t)&&i("OVERRIDE_BASE"===n,"ReactClassInterface: You are attempting to override `%s` from your class specification. Ensure that your method names do not overlap with React methods.",t),e&&i("DEFINE_MANY"===n||"DEFINE_MANY_MERGED"===n,"ReactClassInterface: You are attempting to define `%s` on your component more than once. This conflict may be due to a mixin.",t)}function f(e,n){if(n){i("function"!=typeof n,"ReactClass: You're attempting to use a component class or function as a mixin. Instead, just use a regular object."),i(!t(n),"ReactClass: You're attempting to use a component as a mixin. Instead, just use a regular object.");var r=e.prototype,a=r.__reactAutoBindPairs;for(var o in n.hasOwnProperty("mixins")&&s.mixins(e,n.mixins),n)if(n.hasOwnProperty(o)&&"mixins"!==o){var l=n[o],f=r.hasOwnProperty(o);if(c(f,o),s.hasOwnProperty(o))s[o](e,l);else{var p=u.hasOwnProperty(o);if("function"==typeof l&&!p&&!f&&!1!==n.autobind)a.push(o,l),r[o]=l;else if(f){var m=u[o];i(p&&("DEFINE_MANY_MERGED"===m||"DEFINE_MANY"===m),"ReactClass: Unexpected spec policy %s for key %s when mixing in component specs.",m,o),"DEFINE_MANY_MERGED"===m?r[o]=d(r[o],l):"DEFINE_MANY"===m&&(r[o]=h(r[o],l))}else r[o]=l}}}else;}function p(e,t){for(var n in i(e&&t&&"object"==typeof e&&"object"==typeof t,"mergeIntoWithNoDuplicateKeys(): Cannot merge non-objects."),t)t.hasOwnProperty(n)&&(i(void 0===e[n],"mergeIntoWithNoDuplicateKeys(): Tried to merge two objects with the same key: `%s`. This conflict may be due to a mixin; in particular, this may be caused by two getInitialState() or getDefaultProps() methods returning objects with clashing keys.",n),e[n]=t[n]);return e}function d(e,t){return function(){var n=e.apply(this,arguments),r=t.apply(this,arguments);if(null==n)return r;if(null==r)return n;var a={};return p(a,n),p(a,r),a}}function h(e,t){return function(){e.apply(this,arguments),t.apply(this,arguments)}}function m(e,t){return t.bind(e)}var g={componentDidMount:function(){this.__isMounted=!0}},v={componentWillUnmount:function(){this.__isMounted=!1}},y={replaceState:function(e,t){this.updater.enqueueReplaceState(this,e,t)},isMounted:function(){return!!this.__isMounted}},b=function(){};return r(b.prototype,e.prototype,y),function(e){var t=function(e,r,o){this.__reactAutoBindPairs.length&&function(e){for(var t=e.__reactAutoBindPairs,n=0;n<t.length;n+=2){var r=t[n],a=t[n+1];e[r]=m(e,a)}}(this),this.props=e,this.context=r,this.refs=a,this.updater=o||n,this.state=null;var u=this.getInitialState?this.getInitialState():null;i("object"==typeof u&&!Array.isArray(u),"%s.getInitialState(): must return an object or null",t.displayName||"ReactCompositeComponent"),this.state=u};for(var r in t.prototype=new b,t.prototype.constructor=t,t.prototype.__reactAutoBindPairs=[],o.forEach(f.bind(null,t)),f(t,g),f(t,e),f(t,v),t.getDefaultProps&&(t.defaultProps=t.getDefaultProps()),i(t.prototype.render,"createClass(...): Class specification must implement a `render` method."),u)t.prototype[r]||(t.prototype[r]=null);return t}}},function(e,t,n){"use strict";e.exports={}},function(e,t,n){"use strict";e.exports=function(e,t,n,r,a,i,o,u){if(!e){var l;if(void 0===t)l=new Error("Minified exception occurred; use the non-minified dev environment for the full error message and additional helpful warnings.");else{var s=[n,r,a,i,o,u],c=0;(l=new Error(t.replace(/%s/g,(function(){return s[c++]})))).name="Invariant Violation"}throw l.framesToPop=1,l}}},function(e,t,n){"use strict";var r=n(30),a={childContextTypes:!0,contextType:!0,contextTypes:!0,defaultProps:!0,displayName:!0,getDefaultProps:!0,getDerivedStateFromError:!0,getDerivedStateFromProps:!0,mixins:!0,propTypes:!0,type:!0},i={name:!0,length:!0,prototype:!0,caller:!0,callee:!0,arguments:!0,arity:!0},o={$$typeof:!0,compare:!0,defaultProps:!0,displayName:!0,propTypes:!0,type:!0},u={};function l(e){return r.isMemo(e)?o:u[e.$$typeof]||a}u[r.ForwardRef]={$$typeof:!0,render:!0,defaultProps:!0,displayName:!0,propTypes:!0},u[r.Memo]=o;var s=Object.defineProperty,c=Object.getOwnPropertyNames,f=Object.getOwnPropertySymbols,p=Object.getOwnPropertyDescriptor,d=Object.getPrototypeOf,h=Object.prototype;e.exports=function e(t,n,r){if("string"!=typeof n){if(h){var a=d(n);a&&a!==h&&e(t,a,r)}var o=c(n);f&&(o=o.concat(f(n)));for(var u=l(t),m=l(n),g=0;g<o.length;++g){var v=o[g];if(!(i[v]||r&&r[v]||m&&m[v]||u&&u[v])){var y=p(n,v);try{s(t,v,y)}catch(e){}}}}return t}},function(e,t,n){"use strict";e.exports=n(31)},function(e,t,n){"use strict";
/** @license React v16.13.1
 * react-is.production.min.js
 *
 * Copyright (c) Facebook, Inc. and its affiliates.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 */var r="function"==typeof Symbol&&Symbol.for,a=r?Symbol.for("react.element"):60103,i=r?Symbol.for("react.portal"):60106,o=r?Symbol.for("react.fragment"):60107,u=r?Symbol.for("react.strict_mode"):60108,l=r?Symbol.for("react.profiler"):60114,s=r?Symbol.for("react.provider"):60109,c=r?Symbol.for("react.context"):60110,f=r?Symbol.for("react.async_mode"):60111,p=r?Symbol.for("react.concurrent_mode"):60111,d=r?Symbol.for("react.forward_ref"):60112,h=r?Symbol.for("react.suspense"):60113,m=r?Symbol.for("react.suspense_list"):60120,g=r?Symbol.for("react.memo"):60115,v=r?Symbol.for("react.lazy"):60116,y=r?Symbol.for("react.block"):60121,b=r?Symbol.for("react.fundamental"):60117,x=r?Symbol.for("react.responder"):60118,w=r?Symbol.for("react.scope"):60119;function E(e){if("object"==typeof e&&null!==e){var t=e.$$typeof;switch(t){case a:switch(e=e.type){case f:case p:case o:case l:case u:case h:return e;default:switch(e=e&&e.$$typeof){case c:case d:case v:case g:case s:return e;default:return t}}case i:return t}}}function M(e){return E(e)===p}t.AsyncMode=f,t.ConcurrentMode=p,t.ContextConsumer=c,t.ContextProvider=s,t.Element=a,t.ForwardRef=d,t.Fragment=o,t.Lazy=v,t.Memo=g,t.Portal=i,t.Profiler=l,t.StrictMode=u,t.Suspense=h,t.isAsyncMode=function(e){return M(e)||E(e)===f},t.isConcurrentMode=M,t.isContextConsumer=function(e){return E(e)===c},t.isContextProvider=function(e){return E(e)===s},t.isElement=function(e){return"object"==typeof e&&null!==e&&e.$$typeof===a},t.isForwardRef=function(e){return E(e)===d},t.isFragment=function(e){return E(e)===o},t.isLazy=function(e){return E(e)===v},t.isMemo=function(e){return E(e)===g},t.isPortal=function(e){return E(e)===i},t.isProfiler=function(e){return E(e)===l},t.isStrictMode=function(e){return E(e)===u},t.isSuspense=function(e){return E(e)===h},t.isValidElementType=function(e){return"string"==typeof e||"function"==typeof e||e===o||e===p||e===l||e===u||e===h||e===m||"object"==typeof e&&null!==e&&(e.$$typeof===v||e.$$typeof===g||e.$$typeof===s||e.$$typeof===c||e.$$typeof===d||e.$$typeof===b||e.$$typeof===x||e.$$typeof===w||e.$$typeof===y)},t.typeOf=E},function(e,t,n){var r,a;!function(){var i={version:"3.5.17"},o=[].slice,u=function(e){return o.call(e)},l=this.document;function s(e){return e&&(e.ownerDocument||e.document||e).documentElement}function c(e){return e&&(e.ownerDocument&&e.ownerDocument.defaultView||e.document&&e||e.defaultView)}if(l)try{u(l.documentElement.childNodes)[0].nodeType}catch(e){u=function(e){for(var t=e.length,n=new Array(t);t--;)n[t]=e[t];return n}}if(Date.now||(Date.now=function(){return+new Date}),l)try{l.createElement("DIV").style.setProperty("opacity",0,"")}catch(e){var f=this.Element.prototype,p=f.setAttribute,d=f.setAttributeNS,h=this.CSSStyleDeclaration.prototype,m=h.setProperty;f.setAttribute=function(e,t){p.call(this,e,t+"")},f.setAttributeNS=function(e,t,n){d.call(this,e,t,n+"")},h.setProperty=function(e,t,n){m.call(this,e,t+"",n)}}function g(e,t){return e<t?-1:e>t?1:e>=t?0:NaN}function v(e){return null===e?NaN:+e}function y(e){return!isNaN(e)}function b(e){return{left:function(t,n,r,a){for(arguments.length<3&&(r=0),arguments.length<4&&(a=t.length);r<a;){var i=r+a>>>1;e(t[i],n)<0?r=i+1:a=i}return r},right:function(t,n,r,a){for(arguments.length<3&&(r=0),arguments.length<4&&(a=t.length);r<a;){var i=r+a>>>1;e(t[i],n)>0?a=i:r=i+1}return r}}}i.ascending=g,i.descending=function(e,t){return t<e?-1:t>e?1:t>=e?0:NaN},i.min=function(e,t){var n,r,a=-1,i=e.length;if(1===arguments.length){for(;++a<i;)if(null!=(r=e[a])&&r>=r){n=r;break}for(;++a<i;)null!=(r=e[a])&&n>r&&(n=r)}else{for(;++a<i;)if(null!=(r=t.call(e,e[a],a))&&r>=r){n=r;break}for(;++a<i;)null!=(r=t.call(e,e[a],a))&&n>r&&(n=r)}return n},i.max=function(e,t){var n,r,a=-1,i=e.length;if(1===arguments.length){for(;++a<i;)if(null!=(r=e[a])&&r>=r){n=r;break}for(;++a<i;)null!=(r=e[a])&&r>n&&(n=r)}else{for(;++a<i;)if(null!=(r=t.call(e,e[a],a))&&r>=r){n=r;break}for(;++a<i;)null!=(r=t.call(e,e[a],a))&&r>n&&(n=r)}return n},i.extent=function(e,t){var n,r,a,i=-1,o=e.length;if(1===arguments.length){for(;++i<o;)if(null!=(r=e[i])&&r>=r){n=a=r;break}for(;++i<o;)null!=(r=e[i])&&(n>r&&(n=r),a<r&&(a=r))}else{for(;++i<o;)if(null!=(r=t.call(e,e[i],i))&&r>=r){n=a=r;break}for(;++i<o;)null!=(r=t.call(e,e[i],i))&&(n>r&&(n=r),a<r&&(a=r))}return[n,a]},i.sum=function(e,t){var n,r=0,a=e.length,i=-1;if(1===arguments.length)for(;++i<a;)y(n=+e[i])&&(r+=n);else for(;++i<a;)y(n=+t.call(e,e[i],i))&&(r+=n);return r},i.mean=function(e,t){var n,r=0,a=e.length,i=-1,o=a;if(1===arguments.length)for(;++i<a;)y(n=v(e[i]))?r+=n:--o;else for(;++i<a;)y(n=v(t.call(e,e[i],i)))?r+=n:--o;if(o)return r/o},i.quantile=function(e,t){var n=(e.length-1)*t+1,r=Math.floor(n),a=+e[r-1],i=n-r;return i?a+i*(e[r]-a):a},i.median=function(e,t){var n,r=[],a=e.length,o=-1;if(1===arguments.length)for(;++o<a;)y(n=v(e[o]))&&r.push(n);else for(;++o<a;)y(n=v(t.call(e,e[o],o)))&&r.push(n);if(r.length)return i.quantile(r.sort(g),.5)},i.variance=function(e,t){var n,r,a=e.length,i=0,o=0,u=-1,l=0;if(1===arguments.length)for(;++u<a;)y(n=v(e[u]))&&(o+=(r=n-i)*(n-(i+=r/++l)));else for(;++u<a;)y(n=v(t.call(e,e[u],u)))&&(o+=(r=n-i)*(n-(i+=r/++l)));if(l>1)return o/(l-1)},i.deviation=function(){var e=i.variance.apply(this,arguments);return e?Math.sqrt(e):e};var x=b(g);function w(e){return e.length}i.bisectLeft=x.left,i.bisect=i.bisectRight=x.right,i.bisector=function(e){return b(1===e.length?function(t,n){return g(e(t),n)}:e)},i.shuffle=function(e,t,n){(i=arguments.length)<3&&(n=e.length,i<2&&(t=0));for(var r,a,i=n-t;i;)a=Math.random()*i--|0,r=e[i+t],e[i+t]=e[a+t],e[a+t]=r;return e},i.permute=function(e,t){for(var n=t.length,r=new Array(n);n--;)r[n]=e[t[n]];return r},i.pairs=function(e){for(var t=0,n=e.length-1,r=e[0],a=new Array(n<0?0:n);t<n;)a[t]=[r,r=e[++t]];return a},i.transpose=function(e){if(!(a=e.length))return[];for(var t=-1,n=i.min(e,w),r=new Array(n);++t<n;)for(var a,o=-1,u=r[t]=new Array(a);++o<a;)u[o]=e[o][t];return r},i.zip=function(){return i.transpose(arguments)},i.keys=function(e){var t=[];for(var n in e)t.push(n);return t},i.values=function(e){var t=[];for(var n in e)t.push(e[n]);return t},i.entries=function(e){var t=[];for(var n in e)t.push({key:n,value:e[n]});return t},i.merge=function(e){for(var t,n,r,a=e.length,i=-1,o=0;++i<a;)o+=e[i].length;for(n=new Array(o);--a>=0;)for(t=(r=e[a]).length;--t>=0;)n[--o]=r[t];return n};var E=Math.abs;function M(e){for(var t=1;e*t%1;)t*=10;return t}function P(e,t){for(var n in t)Object.defineProperty(e.prototype,n,{value:t[n],enumerable:!1})}function k(){this._=Object.create(null)}i.range=function(e,t,n){if(arguments.length<3&&(n=1,arguments.length<2&&(t=e,e=0)),(t-e)/n==1/0)throw new Error("infinite range");var r,a=[],i=M(E(n)),o=-1;if(e*=i,t*=i,(n*=i)<0)for(;(r=e+n*++o)>t;)a.push(r/i);else for(;(r=e+n*++o)<t;)a.push(r/i);return a},i.map=function(e,t){var n=new k;if(e instanceof k)e.forEach((function(e,t){n.set(e,t)}));else if(Array.isArray(e)){var r,a=-1,i=e.length;if(1===arguments.length)for(;++a<i;)n.set(a,e[a]);else for(;++a<i;)n.set(t.call(e,r=e[a],a),r)}else for(var o in e)n.set(o,e[o]);return n};function S(e){return"__proto__"==(e+="")||"\0"===e[0]?"\0"+e:e}function _(e){return"\0"===(e+="")[0]?e.slice(1):e}function T(e){return S(e)in this._}function N(e){return(e=S(e))in this._&&delete this._[e]}function C(){var e=[];for(var t in this._)e.push(_(t));return e}function A(){var e=0;for(var t in this._)++e;return e}function O(){for(var e in this._)return!1;return!0}function D(){this._=Object.create(null)}function B(e){return e}function I(e,t,n){return function(){var r=n.apply(t,arguments);return r===t?e:r}}function z(e,t){if(t in e)return t;t=t.charAt(0).toUpperCase()+t.slice(1);for(var n=0,r=L.length;n<r;++n){var a=L[n]+t;if(a in e)return a}}P(k,{has:T,get:function(e){return this._[S(e)]},set:function(e,t){return this._[S(e)]=t},remove:N,keys:C,values:function(){var e=[];for(var t in this._)e.push(this._[t]);return e},entries:function(){var e=[];for(var t in this._)e.push({key:_(t),value:this._[t]});return e},size:A,empty:O,forEach:function(e){for(var t in this._)e.call(this,_(t),this._[t])}}),i.nest=function(){var e,t,n={},r=[],a=[];function o(a,i,u){if(u>=r.length)return t?t.call(n,i):e?i.sort(e):i;for(var l,s,c,f,p=-1,d=i.length,h=r[u++],m=new k;++p<d;)(f=m.get(l=h(s=i[p])))?f.push(s):m.set(l,[s]);return a?(s=a(),c=function(e,t){s.set(e,o(a,t,u))}):(s={},c=function(e,t){s[e]=o(a,t,u)}),m.forEach(c),s}return n.map=function(e,t){return o(t,e,0)},n.entries=function(e){return function e(t,n){if(n>=r.length)return t;var i=[],o=a[n++];return t.forEach((function(t,r){i.push({key:t,values:e(r,n)})})),o?i.sort((function(e,t){return o(e.key,t.key)})):i}(o(i.map,e,0),0)},n.key=function(e){return r.push(e),n},n.sortKeys=function(e){return a[r.length-1]=e,n},n.sortValues=function(t){return e=t,n},n.rollup=function(e){return t=e,n},n},i.set=function(e){var t=new D;if(e)for(var n=0,r=e.length;n<r;++n)t.add(e[n]);return t},P(D,{has:T,add:function(e){return this._[S(e+="")]=!0,e},remove:N,values:C,size:A,empty:O,forEach:function(e){for(var t in this._)e.call(this,_(t))}}),i.behavior={},i.rebind=function(e,t){for(var n,r=1,a=arguments.length;++r<a;)e[n=arguments[r]]=I(e,t,t[n]);return e};var L=["webkit","ms","moz","Moz","o","O"];function R(){}function F(){}function j(e){var t=[],n=new k;function r(){for(var n,r=t,a=-1,i=r.length;++a<i;)(n=r[a].on)&&n.apply(this,arguments);return e}return r.on=function(r,a){var i,o=n.get(r);return arguments.length<2?o&&o.on:(o&&(o.on=null,t=t.slice(0,i=t.indexOf(o)).concat(t.slice(i+1)),n.remove(r)),a&&t.push(n.set(r,{on:a})),e)},r}function U(){i.event.preventDefault()}function V(){for(var e,t=i.event;e=t.sourceEvent;)t=e;return t}function q(e){for(var t=new F,n=0,r=arguments.length;++n<r;)t[arguments[n]]=j(t);return t.of=function(n,r){return function(a){try{var o=a.sourceEvent=i.event;a.target=e,i.event=a,t[a.type].apply(n,r)}finally{i.event=o}}},t}i.dispatch=function(){for(var e=new F,t=-1,n=arguments.length;++t<n;)e[arguments[t]]=j(e);return e},F.prototype.on=function(e,t){var n=e.indexOf("."),r="";if(n>=0&&(r=e.slice(n+1),e=e.slice(0,n)),e)return arguments.length<2?this[e].on(r):this[e].on(r,t);if(2===arguments.length){if(null==t)for(e in this)this.hasOwnProperty(e)&&this[e].on(r,null);return this}},i.event=null,i.requote=function(e){return e.replace($,"\\$&")};var $=/[\\\^\$\*\+\?\|\[\]\(\)\.\{\}]/g,Y={}.__proto__?function(e,t){e.__proto__=t}:function(e,t){for(var n in t)e[n]=t[n]};function H(e){return Y(e,G),e}var W=function(e,t){return t.querySelector(e)},Q=function(e,t){return t.querySelectorAll(e)},K=function(e,t){var n=e.matches||e[z(e,"matchesSelector")];return(K=function(e,t){return n.call(e,t)})(e,t)};"function"==typeof Sizzle&&(W=function(e,t){return Sizzle(e,t)[0]||null},Q=Sizzle,K=Sizzle.matchesSelector),i.selection=function(){return i.select(l.documentElement)};var G=i.selection.prototype=[];function X(e){return"function"==typeof e?e:function(){return W(e,this)}}function Z(e){return"function"==typeof e?e:function(){return Q(e,this)}}G.select=function(e){var t,n,r,a,i=[];e=X(e);for(var o=-1,u=this.length;++o<u;){i.push(t=[]),t.parentNode=(r=this[o]).parentNode;for(var l=-1,s=r.length;++l<s;)(a=r[l])?(t.push(n=e.call(a,a.__data__,l,o)),n&&"__data__"in a&&(n.__data__=a.__data__)):t.push(null)}return H(i)},G.selectAll=function(e){var t,n,r=[];e=Z(e);for(var a=-1,i=this.length;++a<i;)for(var o=this[a],l=-1,s=o.length;++l<s;)(n=o[l])&&(r.push(t=u(e.call(n,n.__data__,l,a))),t.parentNode=n);return H(r)};var J="http://www.w3.org/1999/xhtml",ee={svg:"http://www.w3.org/2000/svg",xhtml:J,xlink:"http://www.w3.org/1999/xlink",xml:"http://www.w3.org/XML/1998/namespace",xmlns:"http://www.w3.org/2000/xmlns/"};function te(e,t){return e=i.ns.qualify(e),null==t?e.local?function(){this.removeAttributeNS(e.space,e.local)}:function(){this.removeAttribute(e)}:"function"==typeof t?e.local?function(){var n=t.apply(this,arguments);null==n?this.removeAttributeNS(e.space,e.local):this.setAttributeNS(e.space,e.local,n)}:function(){var n=t.apply(this,arguments);null==n?this.removeAttribute(e):this.setAttribute(e,n)}:e.local?function(){this.setAttributeNS(e.space,e.local,t)}:function(){this.setAttribute(e,t)}}function ne(e){return e.trim().replace(/\s+/g," ")}function re(e){return new RegExp("(?:^|\\s+)"+i.requote(e)+"(?:\\s+|$)","g")}function ae(e){return(e+"").trim().split(/^|\s+/)}function ie(e,t){var n=(e=ae(e).map(oe)).length;return"function"==typeof t?function(){for(var r=-1,a=t.apply(this,arguments);++r<n;)e[r](this,a)}:function(){for(var r=-1;++r<n;)e[r](this,t)}}function oe(e){var t=re(e);return function(n,r){if(a=n.classList)return r?a.add(e):a.remove(e);var a=n.getAttribute("class")||"";r?(t.lastIndex=0,t.test(a)||n.setAttribute("class",ne(a+" "+e))):n.setAttribute("class",ne(a.replace(t," ")))}}function ue(e,t,n){return null==t?function(){this.style.removeProperty(e)}:"function"==typeof t?function(){var r=t.apply(this,arguments);null==r?this.style.removeProperty(e):this.style.setProperty(e,r,n)}:function(){this.style.setProperty(e,t,n)}}function le(e,t){return null==t?function(){delete this[e]}:"function"==typeof t?function(){var n=t.apply(this,arguments);null==n?delete this[e]:this[e]=n}:function(){this[e]=t}}function se(e){return"function"==typeof e?e:(e=i.ns.qualify(e)).local?function(){return this.ownerDocument.createElementNS(e.space,e.local)}:function(){var t=this.ownerDocument,n=this.namespaceURI;return n===J&&t.documentElement.namespaceURI===J?t.createElement(e):t.createElementNS(n,e)}}function ce(){var e=this.parentNode;e&&e.removeChild(this)}function fe(e){return{__data__:e}}function pe(e){return function(){return K(this,e)}}function de(e){return arguments.length||(e=g),function(t,n){return t&&n?e(t.__data__,n.__data__):!t-!n}}function he(e,t){for(var n=0,r=e.length;n<r;n++)for(var a,i=e[n],o=0,u=i.length;o<u;o++)(a=i[o])&&t(a,o,n);return e}function me(e){return Y(e,ge),e}i.ns={prefix:ee,qualify:function(e){var t=e.indexOf(":"),n=e;return t>=0&&"xmlns"!==(n=e.slice(0,t))&&(e=e.slice(t+1)),ee.hasOwnProperty(n)?{space:ee[n],local:e}:e}},G.attr=function(e,t){if(arguments.length<2){if("string"==typeof e){var n=this.node();return(e=i.ns.qualify(e)).local?n.getAttributeNS(e.space,e.local):n.getAttribute(e)}for(t in e)this.each(te(t,e[t]));return this}return this.each(te(e,t))},G.classed=function(e,t){if(arguments.length<2){if("string"==typeof e){var n=this.node(),r=(e=ae(e)).length,a=-1;if(t=n.classList){for(;++a<r;)if(!t.contains(e[a]))return!1}else for(t=n.getAttribute("class");++a<r;)if(!re(e[a]).test(t))return!1;return!0}for(t in e)this.each(ie(t,e[t]));return this}return this.each(ie(e,t))},G.style=function(e,t,n){var r=arguments.length;if(r<3){if("string"!=typeof e){for(n in r<2&&(t=""),e)this.each(ue(n,e[n],t));return this}if(r<2){var a=this.node();return c(a).getComputedStyle(a,null).getPropertyValue(e)}n=""}return this.each(ue(e,t,n))},G.property=function(e,t){if(arguments.length<2){if("string"==typeof e)return this.node()[e];for(t in e)this.each(le(t,e[t]));return this}return this.each(le(e,t))},G.text=function(e){return arguments.length?this.each("function"==typeof e?function(){var t=e.apply(this,arguments);this.textContent=null==t?"":t}:null==e?function(){this.textContent=""}:function(){this.textContent=e}):this.node().textContent},G.html=function(e){return arguments.length?this.each("function"==typeof e?function(){var t=e.apply(this,arguments);this.innerHTML=null==t?"":t}:null==e?function(){this.innerHTML=""}:function(){this.innerHTML=e}):this.node().innerHTML},G.append=function(e){return e=se(e),this.select((function(){return this.appendChild(e.apply(this,arguments))}))},G.insert=function(e,t){return e=se(e),t=X(t),this.select((function(){return this.insertBefore(e.apply(this,arguments),t.apply(this,arguments)||null)}))},G.remove=function(){return this.each(ce)},G.data=function(e,t){var n,r,a=-1,i=this.length;if(!arguments.length){for(e=new Array(i=(n=this[0]).length);++a<i;)(r=n[a])&&(e[a]=r.__data__);return e}function o(e,n){var r,a,i,o=e.length,c=n.length,f=Math.min(o,c),p=new Array(c),d=new Array(c),h=new Array(o);if(t){var m,g=new k,v=new Array(o);for(r=-1;++r<o;)(a=e[r])&&(g.has(m=t.call(a,a.__data__,r))?h[r]=a:g.set(m,a),v[r]=m);for(r=-1;++r<c;)(a=g.get(m=t.call(n,i=n[r],r)))?!0!==a&&(p[r]=a,a.__data__=i):d[r]=fe(i),g.set(m,!0);for(r=-1;++r<o;)r in v&&!0!==g.get(v[r])&&(h[r]=e[r])}else{for(r=-1;++r<f;)a=e[r],i=n[r],a?(a.__data__=i,p[r]=a):d[r]=fe(i);for(;r<c;++r)d[r]=fe(n[r]);for(;r<o;++r)h[r]=e[r]}d.update=p,d.parentNode=p.parentNode=h.parentNode=e.parentNode,u.push(d),l.push(p),s.push(h)}var u=me([]),l=H([]),s=H([]);if("function"==typeof e)for(;++a<i;)o(n=this[a],e.call(n,n.parentNode.__data__,a));else for(;++a<i;)o(n=this[a],e);return l.enter=function(){return u},l.exit=function(){return s},l},G.datum=function(e){return arguments.length?this.property("__data__",e):this.property("__data__")},G.filter=function(e){var t,n,r,a=[];"function"!=typeof e&&(e=pe(e));for(var i=0,o=this.length;i<o;i++){a.push(t=[]),t.parentNode=(n=this[i]).parentNode;for(var u=0,l=n.length;u<l;u++)(r=n[u])&&e.call(r,r.__data__,u,i)&&t.push(r)}return H(a)},G.order=function(){for(var e=-1,t=this.length;++e<t;)for(var n,r=this[e],a=r.length-1,i=r[a];--a>=0;)(n=r[a])&&(i&&i!==n.nextSibling&&i.parentNode.insertBefore(n,i),i=n);return this},G.sort=function(e){e=de.apply(this,arguments);for(var t=-1,n=this.length;++t<n;)this[t].sort(e);return this.order()},G.each=function(e){return he(this,(function(t,n,r){e.call(t,t.__data__,n,r)}))},G.call=function(e){var t=u(arguments);return e.apply(t[0]=this,t),this},G.empty=function(){return!this.node()},G.node=function(){for(var e=0,t=this.length;e<t;e++)for(var n=this[e],r=0,a=n.length;r<a;r++){var i=n[r];if(i)return i}return null},G.size=function(){var e=0;return he(this,(function(){++e})),e};var ge=[];function ve(e){var t,n;return function(r,a,i){var o,u=e[i].update,l=u.length;for(i!=n&&(n=i,t=0),a>=t&&(t=a+1);!(o=u[t])&&++t<l;);return o}}function ye(e,t,n){var r="__on"+e,a=e.indexOf("."),o=xe;a>0&&(e=e.slice(0,a));var l=be.get(e);function s(){var t=this[r];t&&(this.removeEventListener(e,t,t.$),delete this[r])}return l&&(e=l,o=we),a?t?function(){var a=o(t,u(arguments));s.call(this),this.addEventListener(e,this[r]=a,a.$=n),a._=t}:s:t?R:function(){var t,n=new RegExp("^__on([^.]+)"+i.requote(e)+"$");for(var r in this)if(t=r.match(n)){var a=this[r];this.removeEventListener(t[1],a,a.$),delete this[r]}}}i.selection.enter=me,i.selection.enter.prototype=ge,ge.append=G.append,ge.empty=G.empty,ge.node=G.node,ge.call=G.call,ge.size=G.size,ge.select=function(e){for(var t,n,r,a,i,o=[],u=-1,l=this.length;++u<l;){r=(a=this[u]).update,o.push(t=[]),t.parentNode=a.parentNode;for(var s=-1,c=a.length;++s<c;)(i=a[s])?(t.push(r[s]=n=e.call(a.parentNode,i.__data__,s,u)),n.__data__=i.__data__):t.push(null)}return H(o)},ge.insert=function(e,t){return arguments.length<2&&(t=ve(this)),G.insert.call(this,e,t)},i.select=function(e){var t;return"string"==typeof e?(t=[W(e,l)]).parentNode=l.documentElement:(t=[e]).parentNode=s(e),H([t])},i.selectAll=function(e){var t;return"string"==typeof e?(t=u(Q(e,l))).parentNode=l.documentElement:(t=u(e)).parentNode=null,H([t])},G.on=function(e,t,n){var r=arguments.length;if(r<3){if("string"!=typeof e){for(n in r<2&&(t=!1),e)this.each(ye(n,e[n],t));return this}if(r<2)return(r=this.node()["__on"+e])&&r._;n=!1}return this.each(ye(e,t,n))};var be=i.map({mouseenter:"mouseover",mouseleave:"mouseout"});function xe(e,t){return function(n){var r=i.event;i.event=n,t[0]=this.__data__;try{e.apply(this,t)}finally{i.event=r}}}function we(e,t){var n=xe(e,t);return function(e){var t=e.relatedTarget;t&&(t===this||8&t.compareDocumentPosition(this))||n.call(this,e)}}l&&be.forEach((function(e){"on"+e in l&&be.remove(e)}));var Ee,Me=0;function Pe(e){var t=".dragsuppress-"+ ++Me,n="click"+t,r=i.select(c(e)).on("touchmove"+t,U).on("dragstart"+t,U).on("selectstart"+t,U);if(null==Ee&&(Ee=!("onselectstart"in e)&&z(e.style,"userSelect")),Ee){var a=s(e).style,o=a[Ee];a[Ee]="none"}return function(e){if(r.on(t,null),Ee&&(a[Ee]=o),e){var i=function(){r.on(n,null)};r.on(n,(function(){U(),i()}),!0),setTimeout(i,0)}}}i.mouse=function(e){return Se(e,V())};var ke=this.navigator&&/WebKit/.test(this.navigator.userAgent)?-1:0;function Se(e,t){t.changedTouches&&(t=t.changedTouches[0]);var n=e.ownerSVGElement||e;if(n.createSVGPoint){var r=n.createSVGPoint();if(ke<0){var a=c(e);if(a.scrollX||a.scrollY){var o=(n=i.select("body").append("svg").style({position:"absolute",top:0,left:0,margin:0,padding:0,border:"none"},"important"))[0][0].getScreenCTM();ke=!(o.f||o.e),n.remove()}}return ke?(r.x=t.pageX,r.y=t.pageY):(r.x=t.clientX,r.y=t.clientY),[(r=r.matrixTransform(e.getScreenCTM().inverse())).x,r.y]}var u=e.getBoundingClientRect();return[t.clientX-u.left-e.clientLeft,t.clientY-u.top-e.clientTop]}function _e(){return i.event.changedTouches[0].identifier}i.touch=function(e,t,n){if(arguments.length<3&&(n=t,t=V().changedTouches),t)for(var r,a=0,i=t.length;a<i;++a)if((r=t[a]).identifier===n)return Se(e,r)},i.behavior.drag=function(){var e=q(a,"drag","dragstart","dragend"),t=null,n=o(R,i.mouse,c,"mousemove","mouseup"),r=o(_e,i.touch,B,"touchmove","touchend");function a(){this.on("mousedown.drag",n).on("touchstart.drag",r)}function o(n,r,a,o,u){return function(){var l,s=this,c=i.event.target.correspondingElement||i.event.target,f=s.parentNode,p=e.of(s,arguments),d=0,h=n(),m=".drag"+(null==h?"":"-"+h),g=i.select(a(c)).on(o+m,b).on(u+m,x),v=Pe(c),y=r(f,h);function b(){var e,t,n=r(f,h);n&&(e=n[0]-y[0],t=n[1]-y[1],d|=e|t,y=n,p({type:"drag",x:n[0]+l[0],y:n[1]+l[1],dx:e,dy:t}))}function x(){r(f,h)&&(g.on(o+m,null).on(u+m,null),v(d),p({type:"dragend"}))}l=t?[(l=t.apply(s,arguments)).x-y[0],l.y-y[1]]:[0,0],p({type:"dragstart"})}}return a.origin=function(e){return arguments.length?(t=e,a):t},i.rebind(a,e,"on")},i.touches=function(e,t){return arguments.length<2&&(t=V().touches),t?u(t).map((function(t){var n=Se(e,t);return n.identifier=t.identifier,n})):[]};var Te=1e-6,Ne=1e-12,Ce=Math.PI,Ae=2*Ce,Oe=Ae-Te,De=Ce/2,Be=Ce/180,Ie=180/Ce;function ze(e){return e>0?1:e<0?-1:0}function Le(e,t,n){return(t[0]-e[0])*(n[1]-e[1])-(t[1]-e[1])*(n[0]-e[0])}function Re(e){return e>1?0:e<-1?Ce:Math.acos(e)}function Fe(e){return e>1?De:e<-1?-De:Math.asin(e)}function je(e){return((e=Math.exp(e))+1/e)/2}function Ue(e){return(e=Math.sin(e/2))*e}var Ve=Math.SQRT2;i.interpolateZoom=function(e,t){var n,r,a=e[0],i=e[1],o=e[2],u=t[0],l=t[1],s=t[2],c=u-a,f=l-i,p=c*c+f*f;if(p<Ne)r=Math.log(s/o)/Ve,n=function(e){return[a+e*c,i+e*f,o*Math.exp(Ve*e*r)]};else{var d=Math.sqrt(p),h=(s*s-o*o+4*p)/(2*o*2*d),m=(s*s-o*o-4*p)/(2*s*2*d),g=Math.log(Math.sqrt(h*h+1)-h),v=Math.log(Math.sqrt(m*m+1)-m);r=(v-g)/Ve,n=function(e){var t,n=e*r,u=je(g),l=o/(2*d)*(u*(t=Ve*n+g,((t=Math.exp(2*t))-1)/(t+1))-function(e){return((e=Math.exp(e))-1/e)/2}(g));return[a+l*c,i+l*f,o*u/je(Ve*n+g)]}}return n.duration=1e3*r,n},i.behavior.zoom=function(){var e,t,n,r,a,o,u,s,f,p={x:0,y:0,k:1},d=[960,500],h=Ye,m=250,g=0,v="mousedown.zoom",y="mousemove.zoom",b="mouseup.zoom",x="touchstart.zoom",w=q(E,"zoomstart","zoom","zoomend");function E(e){e.on(v,A).on($e+".zoom",D).on("dblclick.zoom",B).on(x,O)}function M(e){return[(e[0]-p.x)/p.k,(e[1]-p.y)/p.k]}function P(e){p.k=Math.max(h[0],Math.min(h[1],e))}function k(e,t){t=function(e){return[e[0]*p.k+p.x,e[1]*p.k+p.y]}(t),p.x+=e[0]-t[0],p.y+=e[1]-t[1]}function S(e,n,r,a){e.__chart__={x:p.x,y:p.y,k:p.k},P(Math.pow(2,a)),k(t=n,r),e=i.select(e),m>0&&(e=e.transition().duration(m)),e.call(E.event)}function _(){u&&u.domain(o.range().map((function(e){return(e-p.x)/p.k})).map(o.invert)),f&&f.domain(s.range().map((function(e){return(e-p.y)/p.k})).map(s.invert))}function T(e){g++||e({type:"zoomstart"})}function N(e){_(),e({type:"zoom",scale:p.k,translate:[p.x,p.y]})}function C(e){--g||(e({type:"zoomend"}),t=null)}function A(){var e=this,t=w.of(e,arguments),n=0,r=i.select(c(e)).on(y,u).on(b,l),a=M(i.mouse(e)),o=Pe(e);function u(){n=1,k(i.mouse(e),a),N(t)}function l(){r.on(y,null).on(b,null),o(n),C(t)}wu.call(e),T(t)}function O(){var e,t=this,n=w.of(t,arguments),r={},o=0,u=".zoom-"+i.event.changedTouches[0].identifier,l="touchmove"+u,s="touchend"+u,c=[],f=i.select(t),d=Pe(t);function h(){var n=i.touches(t);return e=p.k,n.forEach((function(e){e.identifier in r&&(r[e.identifier]=M(e))})),n}function m(){var e=i.event.target;i.select(e).on(l,g).on(s,y),c.push(e);for(var n=i.event.changedTouches,u=0,f=n.length;u<f;++u)r[n[u].identifier]=null;var d=h(),m=Date.now();if(1===d.length){if(m-a<500){var v=d[0];S(t,v,r[v.identifier],Math.floor(Math.log(p.k)/Math.LN2)+1),U()}a=m}else if(d.length>1){v=d[0];var b=d[1],x=v[0]-b[0],w=v[1]-b[1];o=x*x+w*w}}function g(){var u,l,s,c,f=i.touches(t);wu.call(t);for(var p=0,d=f.length;p<d;++p,c=null)if(s=f[p],c=r[s.identifier]){if(l)break;u=s,l=c}if(c){var h=(h=s[0]-u[0])*h+(h=s[1]-u[1])*h,m=o&&Math.sqrt(h/o);u=[(u[0]+s[0])/2,(u[1]+s[1])/2],l=[(l[0]+c[0])/2,(l[1]+c[1])/2],P(m*e)}a=null,k(u,l),N(n)}function y(){if(i.event.touches.length){for(var e=i.event.changedTouches,t=0,a=e.length;t<a;++t)delete r[e[t].identifier];for(var o in r)return void h()}i.selectAll(c).on(u,null),f.on(v,A).on(x,O),d(),C(n)}m(),T(n),f.on(v,null).on(x,m)}function D(){var a=w.of(this,arguments);r?clearTimeout(r):(wu.call(this),e=M(t=n||i.mouse(this)),T(a)),r=setTimeout((function(){r=null,C(a)}),50),U(),P(Math.pow(2,.002*qe())*p.k),k(t,e),N(a)}function B(){var e=i.mouse(this),t=Math.log(p.k)/Math.LN2;S(this,e,M(e),i.event.shiftKey?Math.ceil(t)-1:Math.floor(t)+1)}return $e||($e="onwheel"in l?(qe=function(){return-i.event.deltaY*(i.event.deltaMode?120:1)},"wheel"):"onmousewheel"in l?(qe=function(){return i.event.wheelDelta},"mousewheel"):(qe=function(){return-i.event.detail},"MozMousePixelScroll")),E.event=function(e){e.each((function(){var e=w.of(this,arguments),n=p;Pu?i.select(this).transition().each("start.zoom",(function(){p=this.__chart__||{x:0,y:0,k:1},T(e)})).tween("zoom:zoom",(function(){var r=d[0],a=d[1],o=t?t[0]:r/2,u=t?t[1]:a/2,l=i.interpolateZoom([(o-p.x)/p.k,(u-p.y)/p.k,r/p.k],[(o-n.x)/n.k,(u-n.y)/n.k,r/n.k]);return function(t){var n=l(t),a=r/n[2];this.__chart__=p={x:o-n[0]*a,y:u-n[1]*a,k:a},N(e)}})).each("interrupt.zoom",(function(){C(e)})).each("end.zoom",(function(){C(e)})):(this.__chart__=p,T(e),N(e),C(e))}))},E.translate=function(e){return arguments.length?(p={x:+e[0],y:+e[1],k:p.k},_(),E):[p.x,p.y]},E.scale=function(e){return arguments.length?(p={x:p.x,y:p.y,k:null},P(+e),_(),E):p.k},E.scaleExtent=function(e){return arguments.length?(h=null==e?Ye:[+e[0],+e[1]],E):h},E.center=function(e){return arguments.length?(n=e&&[+e[0],+e[1]],E):n},E.size=function(e){return arguments.length?(d=e&&[+e[0],+e[1]],E):d},E.duration=function(e){return arguments.length?(m=+e,E):m},E.x=function(e){return arguments.length?(u=e,o=e.copy(),p={x:0,y:0,k:1},E):u},E.y=function(e){return arguments.length?(f=e,s=e.copy(),p={x:0,y:0,k:1},E):f},i.rebind(E,w,"on")};var qe,$e,Ye=[0,1/0];function He(){}function We(e,t,n){return this instanceof We?(this.h=+e,this.s=+t,void(this.l=+n)):arguments.length<2?e instanceof We?new We(e.h,e.s,e.l):pt(""+e,dt,We):new We(e,t,n)}i.color=He,He.prototype.toString=function(){return this.rgb()+""},i.hsl=We;var Qe=We.prototype=new He;function Ke(e,t,n){var r,a;function i(e){return Math.round(255*function(e){return e>360?e-=360:e<0&&(e+=360),e<60?r+(a-r)*e/60:e<180?a:e<240?r+(a-r)*(240-e)/60:r}(e))}return e=isNaN(e)?0:(e%=360)<0?e+360:e,t=isNaN(t)||t<0?0:t>1?1:t,r=2*(n=n<0?0:n>1?1:n)-(a=n<=.5?n*(1+t):n+t-n*t),new ut(i(e+120),i(e),i(e-120))}function Ge(e,t,n){return this instanceof Ge?(this.h=+e,this.c=+t,void(this.l=+n)):arguments.length<2?e instanceof Ge?new Ge(e.h,e.c,e.l):rt(e instanceof Je?e.l:(e=ht((e=i.rgb(e)).r,e.g,e.b)).l,e.a,e.b):new Ge(e,t,n)}Qe.brighter=function(e){return e=Math.pow(.7,arguments.length?e:1),new We(this.h,this.s,this.l/e)},Qe.darker=function(e){return e=Math.pow(.7,arguments.length?e:1),new We(this.h,this.s,e*this.l)},Qe.rgb=function(){return Ke(this.h,this.s,this.l)},i.hcl=Ge;var Xe=Ge.prototype=new He;function Ze(e,t,n){return isNaN(e)&&(e=0),isNaN(t)&&(t=0),new Je(n,Math.cos(e*=Be)*t,Math.sin(e)*t)}function Je(e,t,n){return this instanceof Je?(this.l=+e,this.a=+t,void(this.b=+n)):arguments.length<2?e instanceof Je?new Je(e.l,e.a,e.b):e instanceof Ge?Ze(e.h,e.c,e.l):ht((e=ut(e)).r,e.g,e.b):new Je(e,t,n)}Xe.brighter=function(e){return new Ge(this.h,this.c,Math.min(100,this.l+et*(arguments.length?e:1)))},Xe.darker=function(e){return new Ge(this.h,this.c,Math.max(0,this.l-et*(arguments.length?e:1)))},Xe.rgb=function(){return Ze(this.h,this.c,this.l).rgb()},i.lab=Je;var et=18,tt=Je.prototype=new He;function nt(e,t,n){var r=(e+16)/116,a=r+t/500,i=r-n/200;return new ut(ot(3.2404542*(a=.95047*at(a))-1.5371385*(r=1*at(r))-.4985314*(i=1.08883*at(i))),ot(-.969266*a+1.8760108*r+.041556*i),ot(.0556434*a-.2040259*r+1.0572252*i))}function rt(e,t,n){return e>0?new Ge(Math.atan2(n,t)*Ie,Math.sqrt(t*t+n*n),e):new Ge(NaN,NaN,e)}function at(e){return e>.206893034?e*e*e:(e-4/29)/7.787037}function it(e){return e>.008856?Math.pow(e,1/3):7.787037*e+4/29}function ot(e){return Math.round(255*(e<=.00304?12.92*e:1.055*Math.pow(e,1/2.4)-.055))}function ut(e,t,n){return this instanceof ut?(this.r=~~e,this.g=~~t,void(this.b=~~n)):arguments.length<2?e instanceof ut?new ut(e.r,e.g,e.b):pt(""+e,ut,Ke):new ut(e,t,n)}function lt(e){return new ut(e>>16,e>>8&255,255&e)}function st(e){return lt(e)+""}tt.brighter=function(e){return new Je(Math.min(100,this.l+et*(arguments.length?e:1)),this.a,this.b)},tt.darker=function(e){return new Je(Math.max(0,this.l-et*(arguments.length?e:1)),this.a,this.b)},tt.rgb=function(){return nt(this.l,this.a,this.b)},i.rgb=ut;var ct=ut.prototype=new He;function ft(e){return e<16?"0"+Math.max(0,e).toString(16):Math.min(255,e).toString(16)}function pt(e,t,n){var r,a,i,o=0,u=0,l=0;if(r=/([a-z]+)\((.*)\)/.exec(e=e.toLowerCase()))switch(a=r[2].split(","),r[1]){case"hsl":return n(parseFloat(a[0]),parseFloat(a[1])/100,parseFloat(a[2])/100);case"rgb":return t(gt(a[0]),gt(a[1]),gt(a[2]))}return(i=vt.get(e))?t(i.r,i.g,i.b):(null==e||"#"!==e.charAt(0)||isNaN(i=parseInt(e.slice(1),16))||(4===e.length?(o=(3840&i)>>4,o|=o>>4,u=240&i,u|=u>>4,l=15&i,l|=l<<4):7===e.length&&(o=(16711680&i)>>16,u=(65280&i)>>8,l=255&i)),t(o,u,l))}function dt(e,t,n){var r,a,i=Math.min(e/=255,t/=255,n/=255),o=Math.max(e,t,n),u=o-i,l=(o+i)/2;return u?(a=l<.5?u/(o+i):u/(2-o-i),r=e==o?(t-n)/u+(t<n?6:0):t==o?(n-e)/u+2:(e-t)/u+4,r*=60):(r=NaN,a=l>0&&l<1?0:r),new We(r,a,l)}function ht(e,t,n){var r=it((.4124564*(e=mt(e))+.3575761*(t=mt(t))+.1804375*(n=mt(n)))/.95047),a=it((.2126729*e+.7151522*t+.072175*n)/1);return Je(116*a-16,500*(r-a),200*(a-it((.0193339*e+.119192*t+.9503041*n)/1.08883)))}function mt(e){return(e/=255)<=.04045?e/12.92:Math.pow((e+.055)/1.055,2.4)}function gt(e){var t=parseFloat(e);return"%"===e.charAt(e.length-1)?Math.round(2.55*t):t}ct.brighter=function(e){e=Math.pow(.7,arguments.length?e:1);var t=this.r,n=this.g,r=this.b,a=30;return t||n||r?(t&&t<a&&(t=a),n&&n<a&&(n=a),r&&r<a&&(r=a),new ut(Math.min(255,t/e),Math.min(255,n/e),Math.min(255,r/e))):new ut(a,a,a)},ct.darker=function(e){return new ut((e=Math.pow(.7,arguments.length?e:1))*this.r,e*this.g,e*this.b)},ct.hsl=function(){return dt(this.r,this.g,this.b)},ct.toString=function(){return"#"+ft(this.r)+ft(this.g)+ft(this.b)};var vt=i.map({aliceblue:15792383,antiquewhite:16444375,aqua:65535,aquamarine:8388564,azure:15794175,beige:16119260,bisque:16770244,black:0,blanchedalmond:16772045,blue:255,blueviolet:9055202,brown:10824234,burlywood:14596231,cadetblue:6266528,chartreuse:8388352,chocolate:13789470,coral:16744272,cornflowerblue:6591981,cornsilk:16775388,crimson:14423100,cyan:65535,darkblue:139,darkcyan:35723,darkgoldenrod:12092939,darkgray:11119017,darkgreen:25600,darkgrey:11119017,darkkhaki:12433259,darkmagenta:9109643,darkolivegreen:5597999,darkorange:16747520,darkorchid:10040012,darkred:9109504,darksalmon:15308410,darkseagreen:9419919,darkslateblue:4734347,darkslategray:3100495,darkslategrey:3100495,darkturquoise:52945,darkviolet:9699539,deeppink:16716947,deepskyblue:49151,dimgray:6908265,dimgrey:6908265,dodgerblue:2003199,firebrick:11674146,floralwhite:16775920,forestgreen:2263842,fuchsia:16711935,gainsboro:14474460,ghostwhite:16316671,gold:16766720,goldenrod:14329120,gray:8421504,green:32768,greenyellow:11403055,grey:8421504,honeydew:15794160,hotpink:16738740,indianred:13458524,indigo:4915330,ivory:16777200,khaki:15787660,lavender:15132410,lavenderblush:16773365,lawngreen:8190976,lemonchiffon:16775885,lightblue:11393254,lightcoral:15761536,lightcyan:14745599,lightgoldenrodyellow:16448210,lightgray:13882323,lightgreen:9498256,lightgrey:13882323,lightpink:16758465,lightsalmon:16752762,lightseagreen:2142890,lightskyblue:8900346,lightslategray:7833753,lightslategrey:7833753,lightsteelblue:11584734,lightyellow:16777184,lime:65280,limegreen:3329330,linen:16445670,magenta:16711935,maroon:8388608,mediumaquamarine:6737322,mediumblue:205,mediumorchid:12211667,mediumpurple:9662683,mediumseagreen:3978097,mediumslateblue:8087790,mediumspringgreen:64154,mediumturquoise:4772300,mediumvioletred:13047173,midnightblue:1644912,mintcream:16121850,mistyrose:16770273,moccasin:16770229,navajowhite:16768685,navy:128,oldlace:16643558,olive:8421376,olivedrab:7048739,orange:16753920,orangered:16729344,orchid:14315734,palegoldenrod:15657130,palegreen:10025880,paleturquoise:11529966,palevioletred:14381203,papayawhip:16773077,peachpuff:16767673,peru:13468991,pink:16761035,plum:14524637,powderblue:11591910,purple:8388736,rebeccapurple:6697881,red:16711680,rosybrown:12357519,royalblue:4286945,saddlebrown:9127187,salmon:16416882,sandybrown:16032864,seagreen:3050327,seashell:16774638,sienna:10506797,silver:12632256,skyblue:8900331,slateblue:6970061,slategray:7372944,slategrey:7372944,snow:16775930,springgreen:65407,steelblue:4620980,tan:13808780,teal:32896,thistle:14204888,tomato:16737095,turquoise:4251856,violet:15631086,wheat:16113331,white:16777215,whitesmoke:16119285,yellow:16776960,yellowgreen:10145074});function yt(e){return"function"==typeof e?e:function(){return e}}function bt(e){return function(t,n,r){return 2===arguments.length&&"function"==typeof n&&(r=n,n=null),xt(t,n,e,r)}}function xt(e,t,n,r){var a={},o=i.dispatch("beforesend","progress","load","error"),l={},s=new XMLHttpRequest,c=null;function f(){var e,t=s.status;if(!t&&function(e){var t=e.responseType;return t&&"text"!==t?e.response:e.responseText}(s)||t>=200&&t<300||304===t){try{e=n.call(a,s)}catch(e){return void o.error.call(a,e)}o.load.call(a,e)}else o.error.call(a,s)}return this.XDomainRequest&&!("withCredentials"in s)&&/^(http(s)?:)?\/\//.test(e)&&(s=new XDomainRequest),"onload"in s?s.onload=s.onerror=f:s.onreadystatechange=function(){s.readyState>3&&f()},s.onprogress=function(e){var t=i.event;i.event=e;try{o.progress.call(a,s)}finally{i.event=t}},a.header=function(e,t){return e=(e+"").toLowerCase(),arguments.length<2?l[e]:(null==t?delete l[e]:l[e]=t+"",a)},a.mimeType=function(e){return arguments.length?(t=null==e?null:e+"",a):t},a.responseType=function(e){return arguments.length?(c=e,a):c},a.response=function(e){return n=e,a},["get","post"].forEach((function(e){a[e]=function(){return a.send.apply(a,[e].concat(u(arguments)))}})),a.send=function(n,r,i){if(2===arguments.length&&"function"==typeof r&&(i=r,r=null),s.open(n,e,!0),null==t||"accept"in l||(l.accept=t+",*/*"),s.setRequestHeader)for(var u in l)s.setRequestHeader(u,l[u]);return null!=t&&s.overrideMimeType&&s.overrideMimeType(t),null!=c&&(s.responseType=c),null!=i&&a.on("error",i).on("load",(function(e){i(null,e)})),o.beforesend.call(a,s),s.send(null==r?null:r),a},a.abort=function(){return s.abort(),a},i.rebind(a,o,"on"),null==r?a:a.get(function(e){return 1===e.length?function(t,n){e(null==t?n:null)}:e}(r))}vt.forEach((function(e,t){vt.set(e,lt(t))})),i.functor=yt,i.xhr=bt(B),i.dsv=function(e,t){var n=new RegExp('["'+e+"\n]"),r=e.charCodeAt(0);function a(e,n,r){arguments.length<3&&(r=n,n=null);var a=xt(e,t,null==n?i:o(n),r);return a.row=function(e){return arguments.length?a.response(null==(n=e)?i:o(e)):n},a}function i(e){return a.parse(e.responseText)}function o(e){return function(t){return a.parse(t.responseText,e)}}function u(t){return t.map(l).join(e)}function l(e){return n.test(e)?'"'+e.replace(/\"/g,'""')+'"':e}return a.parse=function(e,t){var n;return a.parseRows(e,(function(e,r){if(n)return n(e,r-1);var a=new Function("d","return {"+e.map((function(e,t){return JSON.stringify(e)+": d["+t+"]"})).join(",")+"}");n=t?function(e,n){return t(a(e),n)}:a}))},a.parseRows=function(e,t){var n,a,i={},o={},u=[],l=e.length,s=0,c=0;function f(){if(s>=l)return o;if(a)return a=!1,i;var t=s;if(34===e.charCodeAt(t)){for(var n=t;n++<l;)if(34===e.charCodeAt(n)){if(34!==e.charCodeAt(n+1))break;++n}return s=n+2,13===(u=e.charCodeAt(n+1))?(a=!0,10===e.charCodeAt(n+2)&&++s):10===u&&(a=!0),e.slice(t+1,n).replace(/""/g,'"')}for(;s<l;){var u,c=1;if(10===(u=e.charCodeAt(s++)))a=!0;else if(13===u)a=!0,10===e.charCodeAt(s)&&(++s,++c);else if(u!==r)continue;return e.slice(t,s-c)}return e.slice(t)}for(;(n=f())!==o;){for(var p=[];n!==i&&n!==o;)p.push(n),n=f();t&&null==(p=t(p,c++))||u.push(p)}return u},a.format=function(t){if(Array.isArray(t[0]))return a.formatRows(t);var n=new D,r=[];return t.forEach((function(e){for(var t in e)n.has(t)||r.push(n.add(t))})),[r.map(l).join(e)].concat(t.map((function(t){return r.map((function(e){return l(t[e])})).join(e)}))).join("\n")},a.formatRows=function(e){return e.map(u).join("\n")},a},i.csv=i.dsv(",","text/csv"),i.tsv=i.dsv("\t","text/tab-separated-values");var wt,Et,Mt,Pt,kt=this[z(this,"requestAnimationFrame")]||function(e){setTimeout(e,17)};function St(e,t,n){var r=arguments.length;r<2&&(t=0),r<3&&(n=Date.now());var a=n+t,i={c:e,t:a,n:null};return Et?Et.n=i:wt=i,Et=i,Mt||(Pt=clearTimeout(Pt),Mt=1,kt(_t)),i}function _t(){var e=Tt(),t=Nt()-e;t>24?(isFinite(t)&&(clearTimeout(Pt),Pt=setTimeout(_t,t)),Mt=0):(Mt=1,kt(_t))}function Tt(){for(var e=Date.now(),t=wt;t;)e>=t.t&&t.c(e-t.t)&&(t.c=null),t=t.n;return e}function Nt(){for(var e,t=wt,n=1/0;t;)t.c?(t.t<n&&(n=t.t),t=(e=t).n):t=e?e.n=t.n:wt=t.n;return Et=e,n}function Ct(e,t){return t-(e?Math.ceil(Math.log(e)/Math.LN10):1)}i.timer=function(){St.apply(this,arguments)},i.timer.flush=function(){Tt(),Nt()},i.round=function(e,t){return t?Math.round(e*(t=Math.pow(10,t)))/t:Math.round(e)};var At=["y","z","a","f","p","n","µ","m","","k","M","G","T","P","E","Z","Y"].map((function(e,t){var n=Math.pow(10,3*E(8-t));return{scale:t>8?function(e){return e/n}:function(e){return e*n},symbol:e}}));function Ot(e){var t=e.decimal,n=e.thousands,r=e.grouping,a=e.currency,o=r&&n?function(e,t){for(var a=e.length,i=[],o=0,u=r[0],l=0;a>0&&u>0&&(l+u+1>t&&(u=Math.max(1,t-l)),i.push(e.substring(a-=u,a+u)),!((l+=u+1)>t));)u=r[o=(o+1)%r.length];return i.reverse().join(n)}:B;return function(e){var n=Dt.exec(e),r=n[1]||" ",u=n[2]||">",l=n[3]||"-",s=n[4]||"",c=n[5],f=+n[6],p=n[7],d=n[8],h=n[9],m=1,g="",v="",y=!1,b=!0;switch(d&&(d=+d.substring(1)),(c||"0"===r&&"="===u)&&(c=r="0",u="="),h){case"n":p=!0,h="g";break;case"%":m=100,v="%",h="f";break;case"p":m=100,v="%",h="r";break;case"b":case"o":case"x":case"X":"#"===s&&(g="0"+h.toLowerCase());case"c":b=!1;case"d":y=!0,d=0;break;case"s":m=-1,h="r"}"$"===s&&(g=a[0],v=a[1]),"r"!=h||d||(h="g"),null!=d&&("g"==h?d=Math.max(1,Math.min(21,d)):"e"!=h&&"f"!=h||(d=Math.max(0,Math.min(20,d)))),h=Bt.get(h)||It;var x=c&&p;return function(e){var n=v;if(y&&e%1)return"";var a=e<0||0===e&&1/e<0?(e=-e,"-"):"-"===l?"":l;if(m<0){var s=i.formatPrefix(e,d);e=s.scale(e),n=s.symbol+v}else e*=m;var w,E,M=(e=h(e,d)).lastIndexOf(".");if(M<0){var P=b?e.lastIndexOf("e"):-1;P<0?(w=e,E=""):(w=e.substring(0,P),E=e.substring(P))}else w=e.substring(0,M),E=t+e.substring(M+1);!c&&p&&(w=o(w,1/0));var k=g.length+w.length+E.length+(x?0:a.length),S=k<f?new Array(k=f-k+1).join(r):"";return x&&(w=o(S+w,S.length?f-E.length:1/0)),a+=g,e=w+E,("<"===u?a+e+S:">"===u?S+a+e:"^"===u?S.substring(0,k>>=1)+a+e+S.substring(k):a+(x?e:S+e))+n}}}i.formatPrefix=function(e,t){var n=0;return(e=+e)&&(e<0&&(e*=-1),t&&(e=i.round(e,Ct(e,t))),n=1+Math.floor(1e-12+Math.log(e)/Math.LN10),n=Math.max(-24,Math.min(24,3*Math.floor((n-1)/3)))),At[8+n/3]};var Dt=/(?:([^{])?([<>=^]))?([+\- ])?([$#])?(0)?(\d+)?(,)?(\.-?\d+)?([a-z%])?/i,Bt=i.map({b:function(e){return e.toString(2)},c:function(e){return String.fromCharCode(e)},o:function(e){return e.toString(8)},x:function(e){return e.toString(16)},X:function(e){return e.toString(16).toUpperCase()},g:function(e,t){return e.toPrecision(t)},e:function(e,t){return e.toExponential(t)},f:function(e,t){return e.toFixed(t)},r:function(e,t){return(e=i.round(e,Ct(e,t))).toFixed(Math.max(0,Math.min(20,Ct(e*(1+1e-15),t))))}});function It(e){return e+""}var zt=i.time={},Lt=Date;function Rt(){this._=new Date(arguments.length>1?Date.UTC.apply(this,arguments):arguments[0])}Rt.prototype={getDate:function(){return this._.getUTCDate()},getDay:function(){return this._.getUTCDay()},getFullYear:function(){return this._.getUTCFullYear()},getHours:function(){return this._.getUTCHours()},getMilliseconds:function(){return this._.getUTCMilliseconds()},getMinutes:function(){return this._.getUTCMinutes()},getMonth:function(){return this._.getUTCMonth()},getSeconds:function(){return this._.getUTCSeconds()},getTime:function(){return this._.getTime()},getTimezoneOffset:function(){return 0},valueOf:function(){return this._.valueOf()},setDate:function(){Ft.setUTCDate.apply(this._,arguments)},setDay:function(){Ft.setUTCDay.apply(this._,arguments)},setFullYear:function(){Ft.setUTCFullYear.apply(this._,arguments)},setHours:function(){Ft.setUTCHours.apply(this._,arguments)},setMilliseconds:function(){Ft.setUTCMilliseconds.apply(this._,arguments)},setMinutes:function(){Ft.setUTCMinutes.apply(this._,arguments)},setMonth:function(){Ft.setUTCMonth.apply(this._,arguments)},setSeconds:function(){Ft.setUTCSeconds.apply(this._,arguments)},setTime:function(){Ft.setTime.apply(this._,arguments)}};var Ft=Date.prototype;function jt(e,t,n){function r(t){var n=e(t),r=i(n,1);return t-n<r-t?n:r}function a(n){return t(n=e(new Lt(n-1)),1),n}function i(e,n){return t(e=new Lt(+e),n),e}function o(e,r,i){var o=a(e),u=[];if(i>1)for(;o<r;)n(o)%i||u.push(new Date(+o)),t(o,1);else for(;o<r;)u.push(new Date(+o)),t(o,1);return u}e.floor=e,e.round=r,e.ceil=a,e.offset=i,e.range=o;var u=e.utc=Ut(e);return u.floor=u,u.round=Ut(r),u.ceil=Ut(a),u.offset=Ut(i),u.range=function(e,t,n){try{Lt=Rt;var r=new Rt;return r._=e,o(r,t,n)}finally{Lt=Date}},e}function Ut(e){return function(t,n){try{Lt=Rt;var r=new Rt;return r._=t,e(r,n)._}finally{Lt=Date}}}function Vt(e){var t=e.dateTime,n=e.date,r=e.time,a=e.periods,o=e.days,u=e.shortDays,l=e.months,s=e.shortMonths;function c(e){var t=e.length;function n(n){for(var r,a,i,o=[],u=-1,l=0;++u<t;)37===e.charCodeAt(u)&&(o.push(e.slice(l,u)),null!=(a=qt[r=e.charAt(++u)])&&(r=e.charAt(++u)),(i=w[r])&&(r=i(n,null==a?"e"===r?" ":"0":a)),o.push(r),l=u+1);return o.push(e.slice(l,u)),o.join("")}return n.parse=function(t){var n={y:1900,m:0,d:1,H:0,M:0,S:0,L:0,Z:null};if(f(n,e,t,0)!=t.length)return null;"p"in n&&(n.H=n.H%12+12*n.p);var r=null!=n.Z&&Lt!==Rt,a=new(r?Rt:Lt);return"j"in n?a.setFullYear(n.y,0,n.j):"W"in n||"U"in n?("w"in n||(n.w="W"in n?1:0),a.setFullYear(n.y,0,1),a.setFullYear(n.y,0,"W"in n?(n.w+6)%7+7*n.W-(a.getDay()+5)%7:n.w+7*n.U-(a.getDay()+6)%7)):a.setFullYear(n.y,n.m,n.d),a.setHours(n.H+(n.Z/100|0),n.M+n.Z%100,n.S,n.L),r?a._:a},n.toString=function(){return e},n}function f(e,t,n,r){for(var a,i,o,u=0,l=t.length,s=n.length;u<l;){if(r>=s)return-1;if(37===(a=t.charCodeAt(u++))){if(o=t.charAt(u++),!(i=E[o in qt?t.charAt(u++):o])||(r=i(e,n,r))<0)return-1}else if(a!=n.charCodeAt(r++))return-1}return r}c.utc=function(e){var t=c(e);function n(e){try{var n=new(Lt=Rt);return n._=e,t(n)}finally{Lt=Date}}return n.parse=function(e){try{Lt=Rt;var n=t.parse(e);return n&&n._}finally{Lt=Date}},n.toString=t.toString,n},c.multi=c.utc.multi=fn;var p=i.map(),d=Wt(o),h=Qt(o),m=Wt(u),g=Qt(u),v=Wt(l),y=Qt(l),b=Wt(s),x=Qt(s);a.forEach((function(e,t){p.set(e.toLowerCase(),t)}));var w={a:function(e){return u[e.getDay()]},A:function(e){return o[e.getDay()]},b:function(e){return s[e.getMonth()]},B:function(e){return l[e.getMonth()]},c:c(t),d:function(e,t){return Ht(e.getDate(),t,2)},e:function(e,t){return Ht(e.getDate(),t,2)},H:function(e,t){return Ht(e.getHours(),t,2)},I:function(e,t){return Ht(e.getHours()%12||12,t,2)},j:function(e,t){return Ht(1+zt.dayOfYear(e),t,3)},L:function(e,t){return Ht(e.getMilliseconds(),t,3)},m:function(e,t){return Ht(e.getMonth()+1,t,2)},M:function(e,t){return Ht(e.getMinutes(),t,2)},p:function(e){return a[+(e.getHours()>=12)]},S:function(e,t){return Ht(e.getSeconds(),t,2)},U:function(e,t){return Ht(zt.sundayOfYear(e),t,2)},w:function(e){return e.getDay()},W:function(e,t){return Ht(zt.mondayOfYear(e),t,2)},x:c(n),X:c(r),y:function(e,t){return Ht(e.getFullYear()%100,t,2)},Y:function(e,t){return Ht(e.getFullYear()%1e4,t,4)},Z:sn,"%":function(){return"%"}},E={a:function(e,t,n){m.lastIndex=0;var r=m.exec(t.slice(n));return r?(e.w=g.get(r[0].toLowerCase()),n+r[0].length):-1},A:function(e,t,n){d.lastIndex=0;var r=d.exec(t.slice(n));return r?(e.w=h.get(r[0].toLowerCase()),n+r[0].length):-1},b:function(e,t,n){b.lastIndex=0;var r=b.exec(t.slice(n));return r?(e.m=x.get(r[0].toLowerCase()),n+r[0].length):-1},B:function(e,t,n){v.lastIndex=0;var r=v.exec(t.slice(n));return r?(e.m=y.get(r[0].toLowerCase()),n+r[0].length):-1},c:function(e,t,n){return f(e,w.c.toString(),t,n)},d:nn,e:nn,H:an,I:an,j:rn,L:ln,m:tn,M:on,p:function(e,t,n){var r=p.get(t.slice(n,n+=2).toLowerCase());return null==r?-1:(e.p=r,n)},S:un,U:Gt,w:Kt,W:Xt,x:function(e,t,n){return f(e,w.x.toString(),t,n)},X:function(e,t,n){return f(e,w.X.toString(),t,n)},y:Jt,Y:Zt,Z:en,"%":cn};return c}zt.year=jt((function(e){return(e=zt.day(e)).setMonth(0,1),e}),(function(e,t){e.setFullYear(e.getFullYear()+t)}),(function(e){return e.getFullYear()})),zt.years=zt.year.range,zt.years.utc=zt.year.utc.range,zt.day=jt((function(e){var t=new Lt(2e3,0);return t.setFullYear(e.getFullYear(),e.getMonth(),e.getDate()),t}),(function(e,t){e.setDate(e.getDate()+t)}),(function(e){return e.getDate()-1})),zt.days=zt.day.range,zt.days.utc=zt.day.utc.range,zt.dayOfYear=function(e){var t=zt.year(e);return Math.floor((e-t-6e4*(e.getTimezoneOffset()-t.getTimezoneOffset()))/864e5)},["sunday","monday","tuesday","wednesday","thursday","friday","saturday"].forEach((function(e,t){t=7-t;var n=zt[e]=jt((function(e){return(e=zt.day(e)).setDate(e.getDate()-(e.getDay()+t)%7),e}),(function(e,t){e.setDate(e.getDate()+7*Math.floor(t))}),(function(e){var n=zt.year(e).getDay();return Math.floor((zt.dayOfYear(e)+(n+t)%7)/7)-(n!==t)}));zt[e+"s"]=n.range,zt[e+"s"].utc=n.utc.range,zt[e+"OfYear"]=function(e){var n=zt.year(e).getDay();return Math.floor((zt.dayOfYear(e)+(n+t)%7)/7)}})),zt.week=zt.sunday,zt.weeks=zt.sunday.range,zt.weeks.utc=zt.sunday.utc.range,zt.weekOfYear=zt.sundayOfYear;var qt={"-":"",_:" ",0:"0"},$t=/^\s*\d+/,Yt=/^%/;function Ht(e,t,n){var r=e<0?"-":"",a=(r?-e:e)+"",i=a.length;return r+(i<n?new Array(n-i+1).join(t)+a:a)}function Wt(e){return new RegExp("^(?:"+e.map(i.requote).join("|")+")","i")}function Qt(e){for(var t=new k,n=-1,r=e.length;++n<r;)t.set(e[n].toLowerCase(),n);return t}function Kt(e,t,n){$t.lastIndex=0;var r=$t.exec(t.slice(n,n+1));return r?(e.w=+r[0],n+r[0].length):-1}function Gt(e,t,n){$t.lastIndex=0;var r=$t.exec(t.slice(n));return r?(e.U=+r[0],n+r[0].length):-1}function Xt(e,t,n){$t.lastIndex=0;var r=$t.exec(t.slice(n));return r?(e.W=+r[0],n+r[0].length):-1}function Zt(e,t,n){$t.lastIndex=0;var r=$t.exec(t.slice(n,n+4));return r?(e.y=+r[0],n+r[0].length):-1}function Jt(e,t,n){$t.lastIndex=0;var r,a=$t.exec(t.slice(n,n+2));return a?(e.y=(r=+a[0])+(r>68?1900:2e3),n+a[0].length):-1}function en(e,t,n){return/^[+-]\d{4}$/.test(t=t.slice(n,n+5))?(e.Z=-t,n+5):-1}function tn(e,t,n){$t.lastIndex=0;var r=$t.exec(t.slice(n,n+2));return r?(e.m=r[0]-1,n+r[0].length):-1}function nn(e,t,n){$t.lastIndex=0;var r=$t.exec(t.slice(n,n+2));return r?(e.d=+r[0],n+r[0].length):-1}function rn(e,t,n){$t.lastIndex=0;var r=$t.exec(t.slice(n,n+3));return r?(e.j=+r[0],n+r[0].length):-1}function an(e,t,n){$t.lastIndex=0;var r=$t.exec(t.slice(n,n+2));return r?(e.H=+r[0],n+r[0].length):-1}function on(e,t,n){$t.lastIndex=0;var r=$t.exec(t.slice(n,n+2));return r?(e.M=+r[0],n+r[0].length):-1}function un(e,t,n){$t.lastIndex=0;var r=$t.exec(t.slice(n,n+2));return r?(e.S=+r[0],n+r[0].length):-1}function ln(e,t,n){$t.lastIndex=0;var r=$t.exec(t.slice(n,n+3));return r?(e.L=+r[0],n+r[0].length):-1}function sn(e){var t=e.getTimezoneOffset(),n=t>0?"-":"+",r=E(t)/60|0,a=E(t)%60;return n+Ht(r,"0",2)+Ht(a,"0",2)}function cn(e,t,n){Yt.lastIndex=0;var r=Yt.exec(t.slice(n,n+1));return r?n+r[0].length:-1}function fn(e){for(var t=e.length,n=-1;++n<t;)e[n][0]=this(e[n][0]);return function(t){for(var n=0,r=e[n];!r[1](t);)r=e[++n];return r[0](t)}}i.locale=function(e){return{numberFormat:Ot(e),timeFormat:Vt(e)}};var pn=i.locale({decimal:".",thousands:",",grouping:[3],currency:["$",""],dateTime:"%a %b %e %X %Y",date:"%m/%d/%Y",time:"%H:%M:%S",periods:["AM","PM"],days:["Sunday","Monday","Tuesday","Wednesday","Thursday","Friday","Saturday"],shortDays:["Sun","Mon","Tue","Wed","Thu","Fri","Sat"],months:["January","February","March","April","May","June","July","August","September","October","November","December"],shortMonths:["Jan","Feb","Mar","Apr","May","Jun","Jul","Aug","Sep","Oct","Nov","Dec"]});function dn(){}i.format=pn.numberFormat,i.geo={},dn.prototype={s:0,t:0,add:function(e){mn(e,this.t,hn),mn(hn.s,this.s,this),this.s?this.t+=hn.t:this.s=hn.t},reset:function(){this.s=this.t=0},valueOf:function(){return this.s}};var hn=new dn;function mn(e,t,n){var r=n.s=e+t,a=r-e,i=r-a;n.t=e-i+(t-a)}function gn(e,t){e&&yn.hasOwnProperty(e.type)&&yn[e.type](e,t)}i.geo.stream=function(e,t){e&&vn.hasOwnProperty(e.type)?vn[e.type](e,t):gn(e,t)};var vn={Feature:function(e,t){gn(e.geometry,t)},FeatureCollection:function(e,t){for(var n=e.features,r=-1,a=n.length;++r<a;)gn(n[r].geometry,t)}},yn={Sphere:function(e,t){t.sphere()},Point:function(e,t){e=e.coordinates,t.point(e[0],e[1],e[2])},MultiPoint:function(e,t){for(var n=e.coordinates,r=-1,a=n.length;++r<a;)e=n[r],t.point(e[0],e[1],e[2])},LineString:function(e,t){bn(e.coordinates,t,0)},MultiLineString:function(e,t){for(var n=e.coordinates,r=-1,a=n.length;++r<a;)bn(n[r],t,0)},Polygon:function(e,t){xn(e.coordinates,t)},MultiPolygon:function(e,t){for(var n=e.coordinates,r=-1,a=n.length;++r<a;)xn(n[r],t)},GeometryCollection:function(e,t){for(var n=e.geometries,r=-1,a=n.length;++r<a;)gn(n[r],t)}};function bn(e,t,n){var r,a=-1,i=e.length-n;for(t.lineStart();++a<i;)r=e[a],t.point(r[0],r[1],r[2]);t.lineEnd()}function xn(e,t){var n=-1,r=e.length;for(t.polygonStart();++n<r;)bn(e[n],t,1);t.polygonEnd()}i.geo.area=function(e){return wn=0,i.geo.stream(e,Bn),wn};var wn,En,Mn,Pn,kn,Sn,_n,Tn,Nn,Cn,An,On,Dn=new dn,Bn={sphere:function(){wn+=4*Ce},point:R,lineStart:R,lineEnd:R,polygonStart:function(){Dn.reset(),Bn.lineStart=In},polygonEnd:function(){var e=2*Dn;wn+=e<0?4*Ce+e:e,Bn.lineStart=Bn.lineEnd=Bn.point=R}};function In(){var e,t,n,r,a;function i(e,t){t=t*Be/2+Ce/4;var i=(e*=Be)-n,o=i>=0?1:-1,u=o*i,l=Math.cos(t),s=Math.sin(t),c=a*s,f=r*l+c*Math.cos(u),p=c*o*Math.sin(u);Dn.add(Math.atan2(p,f)),n=e,r=l,a=s}Bn.point=function(o,u){Bn.point=i,n=(e=o)*Be,r=Math.cos(u=(t=u)*Be/2+Ce/4),a=Math.sin(u)},Bn.lineEnd=function(){i(e,t)}}function zn(e){var t=e[0],n=e[1],r=Math.cos(n);return[r*Math.cos(t),r*Math.sin(t),Math.sin(n)]}function Ln(e,t){return e[0]*t[0]+e[1]*t[1]+e[2]*t[2]}function Rn(e,t){return[e[1]*t[2]-e[2]*t[1],e[2]*t[0]-e[0]*t[2],e[0]*t[1]-e[1]*t[0]]}function Fn(e,t){e[0]+=t[0],e[1]+=t[1],e[2]+=t[2]}function jn(e,t){return[e[0]*t,e[1]*t,e[2]*t]}function Un(e){var t=Math.sqrt(e[0]*e[0]+e[1]*e[1]+e[2]*e[2]);e[0]/=t,e[1]/=t,e[2]/=t}function Vn(e){return[Math.atan2(e[1],e[0]),Fe(e[2])]}function qn(e,t){return E(e[0]-t[0])<Te&&E(e[1]-t[1])<Te}i.geo.bounds=function(){var e,t,n,r,a,o,u,l,s,c,f,p={point:d,lineStart:m,lineEnd:g,polygonStart:function(){p.point=v,p.lineStart=y,p.lineEnd=b,s=0,Bn.polygonStart()},polygonEnd:function(){Bn.polygonEnd(),p.point=d,p.lineStart=m,p.lineEnd=g,Dn<0?(e=-(n=180),t=-(r=90)):s>Te?r=90:s<-Te&&(t=-90),f[0]=e,f[1]=n}};function d(a,i){c.push(f=[e=a,n=a]),i<t&&(t=i),i>r&&(r=i)}function h(i,o){var u=zn([i*Be,o*Be]);if(l){var s=Rn(l,u),c=Rn([s[1],-s[0],0],s);Un(c),c=Vn(c);var f=i-a,p=f>0?1:-1,h=c[0]*Ie*p,m=E(f)>180;if(m^(p*a<h&&h<p*i))(g=c[1]*Ie)>r&&(r=g);else if(m^(p*a<(h=(h+360)%360-180)&&h<p*i)){var g;(g=-c[1]*Ie)<t&&(t=g)}else o<t&&(t=o),o>r&&(r=o);m?i<a?x(e,i)>x(e,n)&&(n=i):x(i,n)>x(e,n)&&(e=i):n>=e?(i<e&&(e=i),i>n&&(n=i)):i>a?x(e,i)>x(e,n)&&(n=i):x(i,n)>x(e,n)&&(e=i)}else d(i,o);l=u,a=i}function m(){p.point=h}function g(){f[0]=e,f[1]=n,p.point=d,l=null}function v(e,t){if(l){var n=e-a;s+=E(n)>180?n+(n>0?360:-360):n}else o=e,u=t;Bn.point(e,t),h(e,t)}function y(){Bn.lineStart()}function b(){v(o,u),Bn.lineEnd(),E(s)>Te&&(e=-(n=180)),f[0]=e,f[1]=n,l=null}function x(e,t){return(t-=e)<0?t+360:t}function w(e,t){return e[0]-t[0]}function M(e,t){return t[0]<=t[1]?t[0]<=e&&e<=t[1]:e<t[0]||t[1]<e}return function(a){if(r=n=-(e=t=1/0),c=[],i.geo.stream(a,p),s=c.length){c.sort(w);for(var o=1,u=[m=c[0]];o<s;++o)M((d=c[o])[0],m)||M(d[1],m)?(x(m[0],d[1])>x(m[0],m[1])&&(m[1]=d[1]),x(d[0],m[1])>x(m[0],m[1])&&(m[0]=d[0])):u.push(m=d);for(var l,s,d,h=-1/0,m=(o=0,u[s=u.length-1]);o<=s;m=d,++o)d=u[o],(l=x(m[1],d[0]))>h&&(h=l,e=d[0],n=m[1])}return c=f=null,e===1/0||t===1/0?[[NaN,NaN],[NaN,NaN]]:[[e,t],[n,r]]}}(),i.geo.centroid=function(e){En=Mn=Pn=kn=Sn=_n=Tn=Nn=Cn=An=On=0,i.geo.stream(e,$n);var t=Cn,n=An,r=On,a=t*t+n*n+r*r;return a<Ne&&(t=_n,n=Tn,r=Nn,Mn<Te&&(t=Pn,n=kn,r=Sn),(a=t*t+n*n+r*r)<Ne)?[NaN,NaN]:[Math.atan2(n,t)*Ie,Fe(r/Math.sqrt(a))*Ie]};var $n={sphere:R,point:Yn,lineStart:Wn,lineEnd:Qn,polygonStart:function(){$n.lineStart=Kn},polygonEnd:function(){$n.lineStart=Wn}};function Yn(e,t){e*=Be;var n=Math.cos(t*=Be);Hn(n*Math.cos(e),n*Math.sin(e),Math.sin(t))}function Hn(e,t,n){++En,Pn+=(e-Pn)/En,kn+=(t-kn)/En,Sn+=(n-Sn)/En}function Wn(){var e,t,n;function r(r,a){r*=Be;var i=Math.cos(a*=Be),o=i*Math.cos(r),u=i*Math.sin(r),l=Math.sin(a),s=Math.atan2(Math.sqrt((s=t*l-n*u)*s+(s=n*o-e*l)*s+(s=e*u-t*o)*s),e*o+t*u+n*l);Mn+=s,_n+=s*(e+(e=o)),Tn+=s*(t+(t=u)),Nn+=s*(n+(n=l)),Hn(e,t,n)}$n.point=function(a,i){a*=Be;var o=Math.cos(i*=Be);e=o*Math.cos(a),t=o*Math.sin(a),n=Math.sin(i),$n.point=r,Hn(e,t,n)}}function Qn(){$n.point=Yn}function Kn(){var e,t,n,r,a;function i(e,t){e*=Be;var i=Math.cos(t*=Be),o=i*Math.cos(e),u=i*Math.sin(e),l=Math.sin(t),s=r*l-a*u,c=a*o-n*l,f=n*u-r*o,p=Math.sqrt(s*s+c*c+f*f),d=n*o+r*u+a*l,h=p&&-Re(d)/p,m=Math.atan2(p,d);Cn+=h*s,An+=h*c,On+=h*f,Mn+=m,_n+=m*(n+(n=o)),Tn+=m*(r+(r=u)),Nn+=m*(a+(a=l)),Hn(n,r,a)}$n.point=function(o,u){e=o,t=u,$n.point=i,o*=Be;var l=Math.cos(u*=Be);n=l*Math.cos(o),r=l*Math.sin(o),a=Math.sin(u),Hn(n,r,a)},$n.lineEnd=function(){i(e,t),$n.lineEnd=Qn,$n.point=Yn}}function Gn(e,t){function n(n,r){return n=e(n,r),t(n[0],n[1])}return e.invert&&t.invert&&(n.invert=function(n,r){return(n=t.invert(n,r))&&e.invert(n[0],n[1])}),n}function Xn(){return!0}function Zn(e,t,n,r,a){var i=[],o=[];if(e.forEach((function(e){if(!((t=e.length-1)<=0)){var t,n=e[0],r=e[t];if(qn(n,r)){a.lineStart();for(var u=0;u<t;++u)a.point((n=e[u])[0],n[1]);a.lineEnd()}else{var l=new er(n,e,null,!0),s=new er(n,null,l,!1);l.o=s,i.push(l),o.push(s),l=new er(r,e,null,!1),s=new er(r,null,l,!0),l.o=s,i.push(l),o.push(s)}}})),o.sort(t),Jn(i),Jn(o),i.length){for(var u=0,l=n,s=o.length;u<s;++u)o[u].e=l=!l;for(var c,f,p=i[0];;){for(var d=p,h=!0;d.v;)if((d=d.n)===p)return;c=d.z,a.lineStart();do{if(d.v=d.o.v=!0,d.e){if(h)for(u=0,s=c.length;u<s;++u)a.point((f=c[u])[0],f[1]);else r(d.x,d.n.x,1,a);d=d.n}else{if(h)for(u=(c=d.p.z).length-1;u>=0;--u)a.point((f=c[u])[0],f[1]);else r(d.x,d.p.x,-1,a);d=d.p}c=(d=d.o).z,h=!h}while(!d.v);a.lineEnd()}}}function Jn(e){if(t=e.length){for(var t,n,r=0,a=e[0];++r<t;)a.n=n=e[r],n.p=a,a=n;a.n=n=e[0],n.p=a}}function er(e,t,n,r){this.x=e,this.z=t,this.o=n,this.e=r,this.v=!1,this.n=this.p=null}function tr(e,t,n,r){return function(a,o){var u,l=t(o),s=a.invert(r[0],r[1]),c={point:f,lineStart:d,lineEnd:h,polygonStart:function(){c.point=x,c.lineStart=w,c.lineEnd=E,u=[],m=[]},polygonEnd:function(){c.point=f,c.lineStart=d,c.lineEnd=h,u=i.merge(u);var e=function(e,t){var n=e[0],r=e[1],a=[Math.sin(n),-Math.cos(n),0],i=0,o=0;Dn.reset();for(var u=0,l=t.length;u<l;++u){var s=t[u],c=s.length;if(c)for(var f=s[0],p=f[0],d=f[1]/2+Ce/4,h=Math.sin(d),m=Math.cos(d),g=1;;){g===c&&(g=0);var v=(e=s[g])[0],y=e[1]/2+Ce/4,b=Math.sin(y),x=Math.cos(y),w=v-p,E=w>=0?1:-1,M=E*w,P=M>Ce,k=h*b;if(Dn.add(Math.atan2(k*E*Math.sin(M),m*x+k*Math.cos(M))),i+=P?w+E*Ae:w,P^p>=n^v>=n){var S=Rn(zn(f),zn(e));Un(S);var _=Rn(a,S);Un(_);var T=(P^w>=0?-1:1)*Fe(_[2]);(r>T||r===T&&(S[0]||S[1]))&&(o+=P^w>=0?1:-1)}if(!g++)break;p=v,h=b,m=x,f=e}}return(i<-Te||i<Te&&Dn<-Te)^1&o}(s,m);u.length?(b||(o.polygonStart(),b=!0),Zn(u,ar,e,n,o)):e&&(b||(o.polygonStart(),b=!0),o.lineStart(),n(null,null,1,o),o.lineEnd()),b&&(o.polygonEnd(),b=!1),u=m=null},sphere:function(){o.polygonStart(),o.lineStart(),n(null,null,1,o),o.lineEnd(),o.polygonEnd()}};function f(t,n){var r=a(t,n);e(t=r[0],n=r[1])&&o.point(t,n)}function p(e,t){var n=a(e,t);l.point(n[0],n[1])}function d(){c.point=p,l.lineStart()}function h(){c.point=f,l.lineEnd()}var m,g,v=rr(),y=t(v),b=!1;function x(e,t){g.push([e,t]);var n=a(e,t);y.point(n[0],n[1])}function w(){y.lineStart(),g=[]}function E(){x(g[0][0],g[0][1]),y.lineEnd();var e,t=y.clean(),n=v.buffer(),r=n.length;if(g.pop(),m.push(g),g=null,r)if(1&t){var a,i=-1;if((r=(e=n[0]).length-1)>0){for(b||(o.polygonStart(),b=!0),o.lineStart();++i<r;)o.point((a=e[i])[0],a[1]);o.lineEnd()}}else r>1&&2&t&&n.push(n.pop().concat(n.shift())),u.push(n.filter(nr))}return c}}function nr(e){return e.length>1}function rr(){var e,t=[];return{lineStart:function(){t.push(e=[])},point:function(t,n){e.push([t,n])},lineEnd:R,buffer:function(){var n=t;return t=[],e=null,n},rejoin:function(){t.length>1&&t.push(t.pop().concat(t.shift()))}}}function ar(e,t){return((e=e.x)[0]<0?e[1]-De-Te:De-e[1])-((t=t.x)[0]<0?t[1]-De-Te:De-t[1])}var ir=tr(Xn,(function(e){var t,n=NaN,r=NaN,a=NaN;return{lineStart:function(){e.lineStart(),t=1},point:function(i,o){var u=i>0?Ce:-Ce,l=E(i-n);E(l-Ce)<Te?(e.point(n,r=(r+o)/2>0?De:-De),e.point(a,r),e.lineEnd(),e.lineStart(),e.point(u,r),e.point(i,r),t=0):a!==u&&l>=Ce&&(E(n-a)<Te&&(n-=a*Te),E(i-u)<Te&&(i-=u*Te),r=function(e,t,n,r){var a,i,o=Math.sin(e-n);return E(o)>Te?Math.atan((Math.sin(t)*(i=Math.cos(r))*Math.sin(n)-Math.sin(r)*(a=Math.cos(t))*Math.sin(e))/(a*i*o)):(t+r)/2}(n,r,i,o),e.point(a,r),e.lineEnd(),e.lineStart(),e.point(u,r),t=0),e.point(n=i,r=o),a=u},lineEnd:function(){e.lineEnd(),n=r=NaN},clean:function(){return 2-t}}}),(function(e,t,n,r){var a;if(null==e)a=n*De,r.point(-Ce,a),r.point(0,a),r.point(Ce,a),r.point(Ce,0),r.point(Ce,-a),r.point(0,-a),r.point(-Ce,-a),r.point(-Ce,0),r.point(-Ce,a);else if(E(e[0]-t[0])>Te){var i=e[0]<t[0]?Ce:-Ce;a=n*i/2,r.point(-i,a),r.point(0,a),r.point(i,a)}else r.point(t[0],t[1])}),[-Ce,-Ce/2]);function or(e){var t=Math.cos(e),n=t>0,r=E(t)>Te;return tr(a,(function(e){var t,u,l,s,c;return{lineStart:function(){s=l=!1,c=1},point:function(f,p){var d,h=[f,p],m=a(f,p),g=n?m?0:o(f,p):m?o(f+(f<0?Ce:-Ce),p):0;if(!t&&(s=l=m)&&e.lineStart(),m!==l&&(d=i(t,h),(qn(t,d)||qn(h,d))&&(h[0]+=Te,h[1]+=Te,m=a(h[0],h[1]))),m!==l)c=0,m?(e.lineStart(),d=i(h,t),e.point(d[0],d[1])):(d=i(t,h),e.point(d[0],d[1]),e.lineEnd()),t=d;else if(r&&t&&n^m){var v;g&u||!(v=i(h,t,!0))||(c=0,n?(e.lineStart(),e.point(v[0][0],v[0][1]),e.point(v[1][0],v[1][1]),e.lineEnd()):(e.point(v[1][0],v[1][1]),e.lineEnd(),e.lineStart(),e.point(v[0][0],v[0][1])))}!m||t&&qn(t,h)||e.point(h[0],h[1]),t=h,l=m,u=g},lineEnd:function(){l&&e.lineEnd(),t=null},clean:function(){return c|(s&&l)<<1}}}),Vr(e,6*Be),n?[0,-e]:[-Ce,e-Ce]);function a(e,n){return Math.cos(e)*Math.cos(n)>t}function i(e,n,r){var a=[1,0,0],i=Rn(zn(e),zn(n)),o=Ln(i,i),u=i[0],l=o-u*u;if(!l)return!r&&e;var s=t*o/l,c=-t*u/l,f=Rn(a,i),p=jn(a,s);Fn(p,jn(i,c));var d=f,h=Ln(p,d),m=Ln(d,d),g=h*h-m*(Ln(p,p)-1);if(!(g<0)){var v=Math.sqrt(g),y=jn(d,(-h-v)/m);if(Fn(y,p),y=Vn(y),!r)return y;var b,x=e[0],w=n[0],M=e[1],P=n[1];w<x&&(b=x,x=w,w=b);var k=w-x,S=E(k-Ce)<Te;if(!S&&P<M&&(b=M,M=P,P=b),S||k<Te?S?M+P>0^y[1]<(E(y[0]-x)<Te?M:P):M<=y[1]&&y[1]<=P:k>Ce^(x<=y[0]&&y[0]<=w)){var _=jn(d,(-h+v)/m);return Fn(_,p),[y,Vn(_)]}}}function o(t,r){var a=n?e:Ce-e,i=0;return t<-a?i|=1:t>a&&(i|=2),r<-a?i|=4:r>a&&(i|=8),i}}function ur(e,t,n,r){return function(a){var i,o=a.a,u=a.b,l=o.x,s=o.y,c=0,f=1,p=u.x-l,d=u.y-s;if(i=e-l,p||!(i>0)){if(i/=p,p<0){if(i<c)return;i<f&&(f=i)}else if(p>0){if(i>f)return;i>c&&(c=i)}if(i=n-l,p||!(i<0)){if(i/=p,p<0){if(i>f)return;i>c&&(c=i)}else if(p>0){if(i<c)return;i<f&&(f=i)}if(i=t-s,d||!(i>0)){if(i/=d,d<0){if(i<c)return;i<f&&(f=i)}else if(d>0){if(i>f)return;i>c&&(c=i)}if(i=r-s,d||!(i<0)){if(i/=d,d<0){if(i>f)return;i>c&&(c=i)}else if(d>0){if(i<c)return;i<f&&(f=i)}return c>0&&(a.a={x:l+c*p,y:s+c*d}),f<1&&(a.b={x:l+f*p,y:s+f*d}),a}}}}}}function lr(e,t,n,r){return function(l){var s,c,f,p,d,h,m,g,v,y,b,x=l,w=rr(),E=ur(e,t,n,r),M={point:S,lineStart:function(){M.point=_,c&&c.push(f=[]);y=!0,v=!1,m=g=NaN},lineEnd:function(){s&&(_(p,d),h&&v&&w.rejoin(),s.push(w.buffer()));M.point=S,v&&l.lineEnd()},polygonStart:function(){l=w,s=[],c=[],b=!0},polygonEnd:function(){l=x,s=i.merge(s);var t=function(e){for(var t=0,n=c.length,r=e[1],a=0;a<n;++a)for(var i,o=1,u=c[a],l=u.length,s=u[0];o<l;++o)i=u[o],s[1]<=r?i[1]>r&&Le(s,i,e)>0&&++t:i[1]<=r&&Le(s,i,e)<0&&--t,s=i;return 0!==t}([e,r]),n=b&&t,a=s.length;(n||a)&&(l.polygonStart(),n&&(l.lineStart(),P(null,null,1,l),l.lineEnd()),a&&Zn(s,o,t,P,l),l.polygonEnd()),s=c=f=null}};function P(i,o,l,s){var c=0,f=0;if(null==i||(c=a(i,l))!==(f=a(o,l))||u(i,o)<0^l>0)do{s.point(0===c||3===c?e:n,c>1?r:t)}while((c=(c+l+4)%4)!==f);else s.point(o[0],o[1])}function k(a,i){return e<=a&&a<=n&&t<=i&&i<=r}function S(e,t){k(e,t)&&l.point(e,t)}function _(e,t){var n=k(e=Math.max(-1e9,Math.min(1e9,e)),t=Math.max(-1e9,Math.min(1e9,t)));if(c&&f.push([e,t]),y)p=e,d=t,h=n,y=!1,n&&(l.lineStart(),l.point(e,t));else if(n&&v)l.point(e,t);else{var r={a:{x:m,y:g},b:{x:e,y:t}};E(r)?(v||(l.lineStart(),l.point(r.a.x,r.a.y)),l.point(r.b.x,r.b.y),n||l.lineEnd(),b=!1):n&&(l.lineStart(),l.point(e,t),b=!1)}m=e,g=t,v=n}return M};function a(r,a){return E(r[0]-e)<Te?a>0?0:3:E(r[0]-n)<Te?a>0?2:1:E(r[1]-t)<Te?a>0?1:0:a>0?3:2}function o(e,t){return u(e.x,t.x)}function u(e,t){var n=a(e,1),r=a(t,1);return n!==r?n-r:0===n?t[1]-e[1]:1===n?e[0]-t[0]:2===n?e[1]-t[1]:t[0]-e[0]}}function sr(e){var t=0,n=Ce/3,r=Br(e),a=r(t,n);return a.parallels=function(e){return arguments.length?r(t=e[0]*Ce/180,n=e[1]*Ce/180):[t/Ce*180,n/Ce*180]},a}function cr(e,t){var n=Math.sin(e),r=(n+Math.sin(t))/2,a=1+n*(2*r-n),i=Math.sqrt(a)/r;function o(e,t){var n=Math.sqrt(a-2*r*Math.sin(t))/r;return[n*Math.sin(e*=r),i-n*Math.cos(e)]}return o.invert=function(e,t){var n=i-t;return[Math.atan2(e,n)/r,Fe((a-(e*e+n*n)*r*r)/(2*r))]},o}i.geo.clipExtent=function(){var e,t,n,r,a,i,o={stream:function(e){return a&&(a.valid=!1),(a=i(e)).valid=!0,a},extent:function(u){return arguments.length?(i=lr(e=+u[0][0],t=+u[0][1],n=+u[1][0],r=+u[1][1]),a&&(a.valid=!1,a=null),o):[[e,t],[n,r]]}};return o.extent([[0,0],[960,500]])},(i.geo.conicEqualArea=function(){return sr(cr)}).raw=cr,i.geo.albers=function(){return i.geo.conicEqualArea().rotate([96,0]).center([-.6,38.7]).parallels([29.5,45.5]).scale(1070)},i.geo.albersUsa=function(){var e,t,n,r,a=i.geo.albers(),o=i.geo.conicEqualArea().rotate([154,0]).center([-2,58.5]).parallels([55,65]),u=i.geo.conicEqualArea().rotate([157,0]).center([-3,19.9]).parallels([8,18]),l={point:function(t,n){e=[t,n]}};function s(a){var i=a[0],o=a[1];return e=null,t(i,o),e||(n(i,o),e)||r(i,o),e}return s.invert=function(e){var t=a.scale(),n=a.translate(),r=(e[0]-n[0])/t,i=(e[1]-n[1])/t;return(i>=.12&&i<.234&&r>=-.425&&r<-.214?o:i>=.166&&i<.234&&r>=-.214&&r<-.115?u:a).invert(e)},s.stream=function(e){var t=a.stream(e),n=o.stream(e),r=u.stream(e);return{point:function(e,a){t.point(e,a),n.point(e,a),r.point(e,a)},sphere:function(){t.sphere(),n.sphere(),r.sphere()},lineStart:function(){t.lineStart(),n.lineStart(),r.lineStart()},lineEnd:function(){t.lineEnd(),n.lineEnd(),r.lineEnd()},polygonStart:function(){t.polygonStart(),n.polygonStart(),r.polygonStart()},polygonEnd:function(){t.polygonEnd(),n.polygonEnd(),r.polygonEnd()}}},s.precision=function(e){return arguments.length?(a.precision(e),o.precision(e),u.precision(e),s):a.precision()},s.scale=function(e){return arguments.length?(a.scale(e),o.scale(.35*e),u.scale(e),s.translate(a.translate())):a.scale()},s.translate=function(e){if(!arguments.length)return a.translate();var i=a.scale(),c=+e[0],f=+e[1];return t=a.translate(e).clipExtent([[c-.455*i,f-.238*i],[c+.455*i,f+.238*i]]).stream(l).point,n=o.translate([c-.307*i,f+.201*i]).clipExtent([[c-.425*i+Te,f+.12*i+Te],[c-.214*i-Te,f+.234*i-Te]]).stream(l).point,r=u.translate([c-.205*i,f+.212*i]).clipExtent([[c-.214*i+Te,f+.166*i+Te],[c-.115*i-Te,f+.234*i-Te]]).stream(l).point,s},s.scale(1070)};var fr,pr,dr,hr,mr,gr,vr={point:R,lineStart:R,lineEnd:R,polygonStart:function(){pr=0,vr.lineStart=yr},polygonEnd:function(){vr.lineStart=vr.lineEnd=vr.point=R,fr+=E(pr/2)}};function yr(){var e,t,n,r;function a(e,t){pr+=r*e-n*t,n=e,r=t}vr.point=function(i,o){vr.point=a,e=n=i,t=r=o},vr.lineEnd=function(){a(e,t)}}var br={point:function(e,t){e<dr&&(dr=e);e>mr&&(mr=e);t<hr&&(hr=t);t>gr&&(gr=t)},lineStart:R,lineEnd:R,polygonStart:R,polygonEnd:R};function xr(){var e=wr(4.5),t=[],n={point:r,lineStart:function(){n.point=a},lineEnd:o,polygonStart:function(){n.lineEnd=u},polygonEnd:function(){n.lineEnd=o,n.point=r},pointRadius:function(t){return e=wr(t),n},result:function(){if(t.length){var e=t.join("");return t=[],e}}};function r(n,r){t.push("M",n,",",r,e)}function a(e,r){t.push("M",e,",",r),n.point=i}function i(e,n){t.push("L",e,",",n)}function o(){n.point=r}function u(){t.push("Z")}return n}function wr(e){return"m0,"+e+"a"+e+","+e+" 0 1,1 0,"+-2*e+"a"+e+","+e+" 0 1,1 0,"+2*e+"z"}var Er,Mr={point:Pr,lineStart:kr,lineEnd:Sr,polygonStart:function(){Mr.lineStart=_r},polygonEnd:function(){Mr.point=Pr,Mr.lineStart=kr,Mr.lineEnd=Sr}};function Pr(e,t){Pn+=e,kn+=t,++Sn}function kr(){var e,t;function n(n,r){var a=n-e,i=r-t,o=Math.sqrt(a*a+i*i);_n+=o*(e+n)/2,Tn+=o*(t+r)/2,Nn+=o,Pr(e=n,t=r)}Mr.point=function(r,a){Mr.point=n,Pr(e=r,t=a)}}function Sr(){Mr.point=Pr}function _r(){var e,t,n,r;function a(e,t){var a=e-n,i=t-r,o=Math.sqrt(a*a+i*i);_n+=o*(n+e)/2,Tn+=o*(r+t)/2,Nn+=o,Cn+=(o=r*e-n*t)*(n+e),An+=o*(r+t),On+=3*o,Pr(n=e,r=t)}Mr.point=function(i,o){Mr.point=a,Pr(e=n=i,t=r=o)},Mr.lineEnd=function(){a(e,t)}}function Tr(e){var t=4.5,n={point:r,lineStart:function(){n.point=a},lineEnd:o,polygonStart:function(){n.lineEnd=u},polygonEnd:function(){n.lineEnd=o,n.point=r},pointRadius:function(e){return t=e,n},result:R};function r(n,r){e.moveTo(n+t,r),e.arc(n,r,t,0,Ae)}function a(t,r){e.moveTo(t,r),n.point=i}function i(t,n){e.lineTo(t,n)}function o(){n.point=r}function u(){e.closePath()}return n}function Nr(e){var t=.5,n=Math.cos(30*Be),r=16;function a(e){return(r?o:i)(e)}function i(t){return Or(t,(function(n,r){n=e(n,r),t.point(n[0],n[1])}))}function o(t){var n,a,i,o,l,s,c,f,p,d,h,m,g={point:v,lineStart:y,lineEnd:x,polygonStart:function(){t.polygonStart(),g.lineStart=w},polygonEnd:function(){t.polygonEnd(),g.lineStart=y}};function v(n,r){n=e(n,r),t.point(n[0],n[1])}function y(){f=NaN,g.point=b,t.lineStart()}function b(n,a){var i=zn([n,a]),o=e(n,a);u(f,p,c,d,h,m,f=o[0],p=o[1],c=n,d=i[0],h=i[1],m=i[2],r,t),t.point(f,p)}function x(){g.point=v,t.lineEnd()}function w(){y(),g.point=E,g.lineEnd=M}function E(e,t){b(n=e,t),a=f,i=p,o=d,l=h,s=m,g.point=b}function M(){u(f,p,c,d,h,m,a,i,n,o,l,s,r,t),g.lineEnd=x,x()}return g}function u(r,a,i,o,l,s,c,f,p,d,h,m,g,v){var y=c-r,b=f-a,x=y*y+b*b;if(x>4*t&&g--){var w=o+d,M=l+h,P=s+m,k=Math.sqrt(w*w+M*M+P*P),S=Math.asin(P/=k),_=E(E(P)-1)<Te||E(i-p)<Te?(i+p)/2:Math.atan2(M,w),T=e(_,S),N=T[0],C=T[1],A=N-r,O=C-a,D=b*A-y*O;(D*D/x>t||E((y*A+b*O)/x-.5)>.3||o*d+l*h+s*m<n)&&(u(r,a,i,o,l,s,N,C,_,w/=k,M/=k,P,g,v),v.point(N,C),u(N,C,_,w,M,P,c,f,p,d,h,m,g,v))}}return a.precision=function(e){return arguments.length?(r=(t=e*e)>0&&16,a):Math.sqrt(t)},a}function Cr(e){var t=Nr((function(t,n){return e([t*Ie,n*Ie])}));return function(e){return Ir(t(e))}}function Ar(e){this.stream=e}function Or(e,t){return{point:t,sphere:function(){e.sphere()},lineStart:function(){e.lineStart()},lineEnd:function(){e.lineEnd()},polygonStart:function(){e.polygonStart()},polygonEnd:function(){e.polygonEnd()}}}function Dr(e){return Br((function(){return e}))()}function Br(e){var t,n,r,a,o,u,l=Nr((function(e,n){return[(e=t(e,n))[0]*s+a,o-e[1]*s]})),s=150,c=480,f=250,p=0,d=0,h=0,m=0,g=0,v=ir,y=B,b=null,x=null;function w(e){return[(e=r(e[0]*Be,e[1]*Be))[0]*s+a,o-e[1]*s]}function E(e){return(e=r.invert((e[0]-a)/s,(o-e[1])/s))&&[e[0]*Ie,e[1]*Ie]}function M(){r=Gn(n=Rr(h,m,g),t);var e=t(p,d);return a=c-e[0]*s,o=f+e[1]*s,P()}function P(){return u&&(u.valid=!1,u=null),w}return w.stream=function(e){return u&&(u.valid=!1),(u=Ir(v(n,l(y(e))))).valid=!0,u},w.clipAngle=function(e){return arguments.length?(v=null==e?(b=e,ir):or((b=+e)*Be),P()):b},w.clipExtent=function(e){return arguments.length?(x=e,y=e?lr(e[0][0],e[0][1],e[1][0],e[1][1]):B,P()):x},w.scale=function(e){return arguments.length?(s=+e,M()):s},w.translate=function(e){return arguments.length?(c=+e[0],f=+e[1],M()):[c,f]},w.center=function(e){return arguments.length?(p=e[0]%360*Be,d=e[1]%360*Be,M()):[p*Ie,d*Ie]},w.rotate=function(e){return arguments.length?(h=e[0]%360*Be,m=e[1]%360*Be,g=e.length>2?e[2]%360*Be:0,M()):[h*Ie,m*Ie,g*Ie]},i.rebind(w,l,"precision"),function(){return t=e.apply(this,arguments),w.invert=t.invert&&E,M()}}function Ir(e){return Or(e,(function(t,n){e.point(t*Be,n*Be)}))}function zr(e,t){return[e,t]}function Lr(e,t){return[e>Ce?e-Ae:e<-Ce?e+Ae:e,t]}function Rr(e,t,n){return e?t||n?Gn(jr(e),Ur(t,n)):jr(e):t||n?Ur(t,n):Lr}function Fr(e){return function(t,n){return[(t+=e)>Ce?t-Ae:t<-Ce?t+Ae:t,n]}}function jr(e){var t=Fr(e);return t.invert=Fr(-e),t}function Ur(e,t){var n=Math.cos(e),r=Math.sin(e),a=Math.cos(t),i=Math.sin(t);function o(e,t){var o=Math.cos(t),u=Math.cos(e)*o,l=Math.sin(e)*o,s=Math.sin(t),c=s*n+u*r;return[Math.atan2(l*a-c*i,u*n-s*r),Fe(c*a+l*i)]}return o.invert=function(e,t){var o=Math.cos(t),u=Math.cos(e)*o,l=Math.sin(e)*o,s=Math.sin(t),c=s*a-l*i;return[Math.atan2(l*a+s*i,u*n+c*r),Fe(c*n-u*r)]},o}function Vr(e,t){var n=Math.cos(e),r=Math.sin(e);return function(a,i,o,u){var l=o*t;null!=a?(a=qr(n,a),i=qr(n,i),(o>0?a<i:a>i)&&(a+=o*Ae)):(a=e+o*Ae,i=e-.5*l);for(var s,c=a;o>0?c>i:c<i;c-=l)u.point((s=Vn([n,-r*Math.cos(c),-r*Math.sin(c)]))[0],s[1])}}function qr(e,t){var n=zn(t);n[0]-=e,Un(n);var r=Re(-n[1]);return((-n[2]<0?-r:r)+2*Math.PI-Te)%(2*Math.PI)}function $r(e,t,n){var r=i.range(e,t-Te,n).concat(t);return function(e){return r.map((function(t){return[e,t]}))}}function Yr(e,t,n){var r=i.range(e,t-Te,n).concat(t);return function(e){return r.map((function(t){return[t,e]}))}}function Hr(e){return e.source}function Wr(e){return e.target}i.geo.path=function(){var e,t,n,r,a,o=4.5;function u(e){return e&&("function"==typeof o&&r.pointRadius(+o.apply(this,arguments)),a&&a.valid||(a=n(r)),i.geo.stream(e,a)),r.result()}function l(){return a=null,u}return u.area=function(e){return fr=0,i.geo.stream(e,n(vr)),fr},u.centroid=function(e){return Pn=kn=Sn=_n=Tn=Nn=Cn=An=On=0,i.geo.stream(e,n(Mr)),On?[Cn/On,An/On]:Nn?[_n/Nn,Tn/Nn]:Sn?[Pn/Sn,kn/Sn]:[NaN,NaN]},u.bounds=function(e){return mr=gr=-(dr=hr=1/0),i.geo.stream(e,n(br)),[[dr,hr],[mr,gr]]},u.projection=function(t){return arguments.length?(n=(e=t)?t.stream||Cr(t):B,l()):e},u.context=function(e){return arguments.length?(r=null==(t=e)?new xr:new Tr(e),"function"!=typeof o&&r.pointRadius(o),l()):t},u.pointRadius=function(e){return arguments.length?(o="function"==typeof e?e:(r.pointRadius(+e),+e),u):o},u.projection(i.geo.albersUsa()).context(null)},i.geo.transform=function(e){return{stream:function(t){var n=new Ar(t);for(var r in e)n[r]=e[r];return n}}},Ar.prototype={point:function(e,t){this.stream.point(e,t)},sphere:function(){this.stream.sphere()},lineStart:function(){this.stream.lineStart()},lineEnd:function(){this.stream.lineEnd()},polygonStart:function(){this.stream.polygonStart()},polygonEnd:function(){this.stream.polygonEnd()}},i.geo.projection=Dr,i.geo.projectionMutator=Br,(i.geo.equirectangular=function(){return Dr(zr)}).raw=zr.invert=zr,i.geo.rotation=function(e){function t(t){return(t=e(t[0]*Be,t[1]*Be))[0]*=Ie,t[1]*=Ie,t}return e=Rr(e[0]%360*Be,e[1]*Be,e.length>2?e[2]*Be:0),t.invert=function(t){return(t=e.invert(t[0]*Be,t[1]*Be))[0]*=Ie,t[1]*=Ie,t},t},Lr.invert=zr,i.geo.circle=function(){var e,t,n=[0,0],r=6;function a(){var e="function"==typeof n?n.apply(this,arguments):n,r=Rr(-e[0]*Be,-e[1]*Be,0).invert,a=[];return t(null,null,1,{point:function(e,t){a.push(e=r(e,t)),e[0]*=Ie,e[1]*=Ie}}),{type:"Polygon",coordinates:[a]}}return a.origin=function(e){return arguments.length?(n=e,a):n},a.angle=function(n){return arguments.length?(t=Vr((e=+n)*Be,r*Be),a):e},a.precision=function(n){return arguments.length?(t=Vr(e*Be,(r=+n)*Be),a):r},a.angle(90)},i.geo.distance=function(e,t){var n,r=(t[0]-e[0])*Be,a=e[1]*Be,i=t[1]*Be,o=Math.sin(r),u=Math.cos(r),l=Math.sin(a),s=Math.cos(a),c=Math.sin(i),f=Math.cos(i);return Math.atan2(Math.sqrt((n=f*o)*n+(n=s*c-l*f*u)*n),l*c+s*f*u)},i.geo.graticule=function(){var e,t,n,r,a,o,u,l,s,c,f,p,d=10,h=d,m=90,g=360,v=2.5;function y(){return{type:"MultiLineString",coordinates:b()}}function b(){return i.range(Math.ceil(r/m)*m,n,m).map(f).concat(i.range(Math.ceil(l/g)*g,u,g).map(p)).concat(i.range(Math.ceil(t/d)*d,e,d).filter((function(e){return E(e%m)>Te})).map(s)).concat(i.range(Math.ceil(o/h)*h,a,h).filter((function(e){return E(e%g)>Te})).map(c))}return y.lines=function(){return b().map((function(e){return{type:"LineString",coordinates:e}}))},y.outline=function(){return{type:"Polygon",coordinates:[f(r).concat(p(u).slice(1),f(n).reverse().slice(1),p(l).reverse().slice(1))]}},y.extent=function(e){return arguments.length?y.majorExtent(e).minorExtent(e):y.minorExtent()},y.majorExtent=function(e){return arguments.length?(r=+e[0][0],n=+e[1][0],l=+e[0][1],u=+e[1][1],r>n&&(e=r,r=n,n=e),l>u&&(e=l,l=u,u=e),y.precision(v)):[[r,l],[n,u]]},y.minorExtent=function(n){return arguments.length?(t=+n[0][0],e=+n[1][0],o=+n[0][1],a=+n[1][1],t>e&&(n=t,t=e,e=n),o>a&&(n=o,o=a,a=n),y.precision(v)):[[t,o],[e,a]]},y.step=function(e){return arguments.length?y.majorStep(e).minorStep(e):y.minorStep()},y.majorStep=function(e){return arguments.length?(m=+e[0],g=+e[1],y):[m,g]},y.minorStep=function(e){return arguments.length?(d=+e[0],h=+e[1],y):[d,h]},y.precision=function(i){return arguments.length?(v=+i,s=$r(o,a,90),c=Yr(t,e,v),f=$r(l,u,90),p=Yr(r,n,v),y):v},y.majorExtent([[-180,-90+Te],[180,90-Te]]).minorExtent([[-180,-80-Te],[180,80+Te]])},i.geo.greatArc=function(){var e,t,n=Hr,r=Wr;function a(){return{type:"LineString",coordinates:[e||n.apply(this,arguments),t||r.apply(this,arguments)]}}return a.distance=function(){return i.geo.distance(e||n.apply(this,arguments),t||r.apply(this,arguments))},a.source=function(t){return arguments.length?(n=t,e="function"==typeof t?null:t,a):n},a.target=function(e){return arguments.length?(r=e,t="function"==typeof e?null:e,a):r},a.precision=function(){return arguments.length?a:0},a},i.geo.interpolate=function(e,t){return n=e[0]*Be,r=e[1]*Be,a=t[0]*Be,i=t[1]*Be,o=Math.cos(r),u=Math.sin(r),l=Math.cos(i),s=Math.sin(i),c=o*Math.cos(n),f=o*Math.sin(n),p=l*Math.cos(a),d=l*Math.sin(a),h=2*Math.asin(Math.sqrt(Ue(i-r)+o*l*Ue(a-n))),m=1/Math.sin(h),(g=h?function(e){var t=Math.sin(e*=h)*m,n=Math.sin(h-e)*m,r=n*c+t*p,a=n*f+t*d,i=n*u+t*s;return[Math.atan2(a,r)*Ie,Math.atan2(i,Math.sqrt(r*r+a*a))*Ie]}:function(){return[n*Ie,r*Ie]}).distance=h,g;var n,r,a,i,o,u,l,s,c,f,p,d,h,m,g},i.geo.length=function(e){return Er=0,i.geo.stream(e,Qr),Er};var Qr={sphere:R,point:R,lineStart:function(){var e,t,n;function r(r,a){var i=Math.sin(a*=Be),o=Math.cos(a),u=E((r*=Be)-e),l=Math.cos(u);Er+=Math.atan2(Math.sqrt((u=o*Math.sin(u))*u+(u=n*i-t*o*l)*u),t*i+n*o*l),e=r,t=i,n=o}Qr.point=function(a,i){e=a*Be,t=Math.sin(i*=Be),n=Math.cos(i),Qr.point=r},Qr.lineEnd=function(){Qr.point=Qr.lineEnd=R}},lineEnd:R,polygonStart:R,polygonEnd:R};function Kr(e,t){function n(t,n){var r=Math.cos(t),a=Math.cos(n),i=e(r*a);return[i*a*Math.sin(t),i*Math.sin(n)]}return n.invert=function(e,n){var r=Math.sqrt(e*e+n*n),a=t(r),i=Math.sin(a),o=Math.cos(a);return[Math.atan2(e*i,r*o),Math.asin(r&&n*i/r)]},n}var Gr=Kr((function(e){return Math.sqrt(2/(1+e))}),(function(e){return 2*Math.asin(e/2)}));(i.geo.azimuthalEqualArea=function(){return Dr(Gr)}).raw=Gr;var Xr=Kr((function(e){var t=Math.acos(e);return t&&t/Math.sin(t)}),B);function Zr(e,t){var n=Math.cos(e),r=function(e){return Math.tan(Ce/4+e/2)},a=e===t?Math.sin(e):Math.log(n/Math.cos(t))/Math.log(r(t)/r(e)),i=n*Math.pow(r(e),a)/a;if(!a)return ta;function o(e,t){i>0?t<-De+Te&&(t=-De+Te):t>De-Te&&(t=De-Te);var n=i/Math.pow(r(t),a);return[n*Math.sin(a*e),i-n*Math.cos(a*e)]}return o.invert=function(e,t){var n=i-t,r=ze(a)*Math.sqrt(e*e+n*n);return[Math.atan2(e,n)/a,2*Math.atan(Math.pow(i/r,1/a))-De]},o}function Jr(e,t){var n=Math.cos(e),r=e===t?Math.sin(e):(n-Math.cos(t))/(t-e),a=n/r+e;if(E(r)<Te)return zr;function i(e,t){var n=a-t;return[n*Math.sin(r*e),a-n*Math.cos(r*e)]}return i.invert=function(e,t){var n=a-t;return[Math.atan2(e,n)/r,a-ze(r)*Math.sqrt(e*e+n*n)]},i}(i.geo.azimuthalEquidistant=function(){return Dr(Xr)}).raw=Xr,(i.geo.conicConformal=function(){return sr(Zr)}).raw=Zr,(i.geo.conicEquidistant=function(){return sr(Jr)}).raw=Jr;var ea=Kr((function(e){return 1/e}),Math.atan);function ta(e,t){return[e,Math.log(Math.tan(Ce/4+t/2))]}function na(e){var t,n=Dr(e),r=n.scale,a=n.translate,i=n.clipExtent;return n.scale=function(){var e=r.apply(n,arguments);return e===n?t?n.clipExtent(null):n:e},n.translate=function(){var e=a.apply(n,arguments);return e===n?t?n.clipExtent(null):n:e},n.clipExtent=function(e){var o=i.apply(n,arguments);if(o===n){if(t=null==e){var u=Ce*r(),l=a();i([[l[0]-u,l[1]-u],[l[0]+u,l[1]+u]])}}else t&&(o=null);return o},n.clipExtent(null)}(i.geo.gnomonic=function(){return Dr(ea)}).raw=ea,ta.invert=function(e,t){return[e,2*Math.atan(Math.exp(t))-De]},(i.geo.mercator=function(){return na(ta)}).raw=ta;var ra=Kr((function(){return 1}),Math.asin);(i.geo.orthographic=function(){return Dr(ra)}).raw=ra;var aa=Kr((function(e){return 1/(1+e)}),(function(e){return 2*Math.atan(e)}));function ia(e,t){return[Math.log(Math.tan(Ce/4+t/2)),-e]}function oa(e){return e[0]}function ua(e){return e[1]}function la(e){for(var t=e.length,n=[0,1],r=2,a=2;a<t;a++){for(;r>1&&Le(e[n[r-2]],e[n[r-1]],e[a])<=0;)--r;n[r++]=a}return n.slice(0,r)}function sa(e,t){return e[0]-t[0]||e[1]-t[1]}(i.geo.stereographic=function(){return Dr(aa)}).raw=aa,ia.invert=function(e,t){return[-t,2*Math.atan(Math.exp(e))-De]},(i.geo.transverseMercator=function(){var e=na(ia),t=e.center,n=e.rotate;return e.center=function(e){return e?t([-e[1],e[0]]):[(e=t())[1],-e[0]]},e.rotate=function(e){return e?n([e[0],e[1],e.length>2?e[2]+90:90]):[(e=n())[0],e[1],e[2]-90]},n([0,0,90])}).raw=ia,i.geom={},i.geom.hull=function(e){var t=oa,n=ua;if(arguments.length)return r(e);function r(e){if(e.length<3)return[];var r,a=yt(t),i=yt(n),o=e.length,u=[],l=[];for(r=0;r<o;r++)u.push([+a.call(this,e[r],r),+i.call(this,e[r],r),r]);for(u.sort(sa),r=0;r<o;r++)l.push([u[r][0],-u[r][1]]);var s=la(u),c=la(l),f=c[0]===s[0],p=c[c.length-1]===s[s.length-1],d=[];for(r=s.length-1;r>=0;--r)d.push(e[u[s[r]][2]]);for(r=+f;r<c.length-p;++r)d.push(e[u[c[r]][2]]);return d}return r.x=function(e){return arguments.length?(t=e,r):t},r.y=function(e){return arguments.length?(n=e,r):n},r},i.geom.polygon=function(e){return Y(e,ca),e};var ca=i.geom.polygon.prototype=[];function fa(e,t,n){return(n[0]-t[0])*(e[1]-t[1])<(n[1]-t[1])*(e[0]-t[0])}function pa(e,t,n,r){var a=e[0],i=n[0],o=t[0]-a,u=r[0]-i,l=e[1],s=n[1],c=t[1]-l,f=r[1]-s,p=(u*(l-s)-f*(a-i))/(f*o-u*c);return[a+p*o,l+p*c]}function da(e){var t=e[0],n=e[e.length-1];return!(t[0]-n[0]||t[1]-n[1])}ca.area=function(){for(var e,t=-1,n=this.length,r=this[n-1],a=0;++t<n;)e=r,r=this[t],a+=e[1]*r[0]-e[0]*r[1];return.5*a},ca.centroid=function(e){var t,n,r=-1,a=this.length,i=0,o=0,u=this[a-1];for(arguments.length||(e=-1/(6*this.area()));++r<a;)t=u,u=this[r],n=t[0]*u[1]-u[0]*t[1],i+=(t[0]+u[0])*n,o+=(t[1]+u[1])*n;return[i*e,o*e]},ca.clip=function(e){for(var t,n,r,a,i,o,u=da(e),l=-1,s=this.length-da(this),c=this[s-1];++l<s;){for(t=e.slice(),e.length=0,a=this[l],i=t[(r=t.length-u)-1],n=-1;++n<r;)fa(o=t[n],c,a)?(fa(i,c,a)||e.push(pa(i,o,c,a)),e.push(o)):fa(i,c,a)&&e.push(pa(i,o,c,a)),i=o;u&&e.push(e[0]),c=a}return e};var ha,ma,ga,va,ya,ba=[],xa=[];function wa(){ja(this),this.edge=this.site=this.circle=null}function Ea(e){var t=ba.pop()||new wa;return t.site=e,t}function Ma(e){Oa(e),ga.remove(e),ba.push(e),ja(e)}function Pa(e){var t=e.circle,n=t.x,r=t.cy,a={x:n,y:r},i=e.P,o=e.N,u=[e];Ma(e);for(var l=i;l.circle&&E(n-l.circle.x)<Te&&E(r-l.circle.cy)<Te;)i=l.P,u.unshift(l),Ma(l),l=i;u.unshift(l),Oa(l);for(var s=o;s.circle&&E(n-s.circle.x)<Te&&E(r-s.circle.cy)<Te;)o=s.N,u.push(s),Ma(s),s=o;u.push(s),Oa(s);var c,f=u.length;for(c=1;c<f;++c)s=u[c],l=u[c-1],La(s.edge,l.site,s.site,a);l=u[0],(s=u[f-1]).edge=Ia(l.site,s.site,null,a),Aa(l),Aa(s)}function ka(e){for(var t,n,r,a,i=e.x,o=e.y,u=ga._;u;)if((r=Sa(u,o)-i)>Te)u=u.L;else{if(!((a=i-_a(u,o))>Te)){r>-Te?(t=u.P,n=u):a>-Te?(t=u,n=u.N):t=n=u;break}if(!u.R){t=u;break}u=u.R}var l=Ea(e);if(ga.insert(t,l),t||n){if(t===n)return Oa(t),n=Ea(t.site),ga.insert(l,n),l.edge=n.edge=Ia(t.site,l.site),Aa(t),void Aa(n);if(n){Oa(t),Oa(n);var s=t.site,c=s.x,f=s.y,p=e.x-c,d=e.y-f,h=n.site,m=h.x-c,g=h.y-f,v=2*(p*g-d*m),y=p*p+d*d,b=m*m+g*g,x={x:(g*y-d*b)/v+c,y:(p*b-m*y)/v+f};La(n.edge,s,h,x),l.edge=Ia(s,e,null,x),n.edge=Ia(e,h,null,x),Aa(t),Aa(n)}else l.edge=Ia(t.site,l.site)}}function Sa(e,t){var n=e.site,r=n.x,a=n.y,i=a-t;if(!i)return r;var o=e.P;if(!o)return-1/0;var u=(n=o.site).x,l=n.y,s=l-t;if(!s)return u;var c=u-r,f=1/i-1/s,p=c/s;return f?(-p+Math.sqrt(p*p-2*f*(c*c/(-2*s)-l+s/2+a-i/2)))/f+r:(r+u)/2}function _a(e,t){var n=e.N;if(n)return Sa(n,t);var r=e.site;return r.y===t?r.x:1/0}function Ta(e){this.site=e,this.edges=[]}function Na(e,t){return t.angle-e.angle}function Ca(){ja(this),this.x=this.y=this.arc=this.site=this.cy=null}function Aa(e){var t=e.P,n=e.N;if(t&&n){var r=t.site,a=e.site,i=n.site;if(r!==i){var o=a.x,u=a.y,l=r.x-o,s=r.y-u,c=i.x-o,f=2*(l*(g=i.y-u)-s*c);if(!(f>=-Ne)){var p=l*l+s*s,d=c*c+g*g,h=(g*p-s*d)/f,m=(l*d-c*p)/f,g=m+u,v=xa.pop()||new Ca;v.arc=e,v.site=a,v.x=h+o,v.y=g+Math.sqrt(h*h+m*m),v.cy=g,e.circle=v;for(var y=null,b=ya._;b;)if(v.y<b.y||v.y===b.y&&v.x<=b.x){if(!b.L){y=b.P;break}b=b.L}else{if(!b.R){y=b;break}b=b.R}ya.insert(y,v),y||(va=v)}}}}function Oa(e){var t=e.circle;t&&(t.P||(va=t.N),ya.remove(t),xa.push(t),ja(t),e.circle=null)}function Da(e,t){var n=e.b;if(n)return!0;var r,a,i=e.a,o=t[0][0],u=t[1][0],l=t[0][1],s=t[1][1],c=e.l,f=e.r,p=c.x,d=c.y,h=f.x,m=f.y,g=(p+h)/2,v=(d+m)/2;if(m===d){if(g<o||g>=u)return;if(p>h){if(i){if(i.y>=s)return}else i={x:g,y:l};n={x:g,y:s}}else{if(i){if(i.y<l)return}else i={x:g,y:s};n={x:g,y:l}}}else if(a=v-(r=(p-h)/(m-d))*g,r<-1||r>1)if(p>h){if(i){if(i.y>=s)return}else i={x:(l-a)/r,y:l};n={x:(s-a)/r,y:s}}else{if(i){if(i.y<l)return}else i={x:(s-a)/r,y:s};n={x:(l-a)/r,y:l}}else if(d<m){if(i){if(i.x>=u)return}else i={x:o,y:r*o+a};n={x:u,y:r*u+a}}else{if(i){if(i.x<o)return}else i={x:u,y:r*u+a};n={x:o,y:r*o+a}}return e.a=i,e.b=n,!0}function Ba(e,t){this.l=e,this.r=t,this.a=this.b=null}function Ia(e,t,n,r){var a=new Ba(e,t);return ha.push(a),n&&La(a,e,t,n),r&&La(a,t,e,r),ma[e.i].edges.push(new Ra(a,e,t)),ma[t.i].edges.push(new Ra(a,t,e)),a}function za(e,t,n){var r=new Ba(e,null);return r.a=t,r.b=n,ha.push(r),r}function La(e,t,n,r){e.a||e.b?e.l===n?e.b=r:e.a=r:(e.a=r,e.l=t,e.r=n)}function Ra(e,t,n){var r=e.a,a=e.b;this.edge=e,this.site=t,this.angle=n?Math.atan2(n.y-t.y,n.x-t.x):e.l===t?Math.atan2(a.x-r.x,r.y-a.y):Math.atan2(r.x-a.x,a.y-r.y)}function Fa(){this._=null}function ja(e){e.U=e.C=e.L=e.R=e.P=e.N=null}function Ua(e,t){var n=t,r=t.R,a=n.U;a?a.L===n?a.L=r:a.R=r:e._=r,r.U=a,n.U=r,n.R=r.L,n.R&&(n.R.U=n),r.L=n}function Va(e,t){var n=t,r=t.L,a=n.U;a?a.L===n?a.L=r:a.R=r:e._=r,r.U=a,n.U=r,n.L=r.R,n.L&&(n.L.U=n),r.R=n}function qa(e){for(;e.L;)e=e.L;return e}function $a(e,t){var n,r,a,i=e.sort(Ya).pop();for(ha=[],ma=new Array(e.length),ga=new Fa,ya=new Fa;;)if(a=va,i&&(!a||i.y<a.y||i.y===a.y&&i.x<a.x))i.x===n&&i.y===r||(ma[i.i]=new Ta(i),ka(i),n=i.x,r=i.y),i=e.pop();else{if(!a)break;Pa(a.arc)}t&&(function(e){for(var t,n=ha,r=ur(e[0][0],e[0][1],e[1][0],e[1][1]),a=n.length;a--;)(!Da(t=n[a],e)||!r(t)||E(t.a.x-t.b.x)<Te&&E(t.a.y-t.b.y)<Te)&&(t.a=t.b=null,n.splice(a,1))}(t),function(e){for(var t,n,r,a,i,o,u,l,s,c,f=e[0][0],p=e[1][0],d=e[0][1],h=e[1][1],m=ma,g=m.length;g--;)if((i=m[g])&&i.prepare())for(l=(u=i.edges).length,o=0;o<l;)r=(c=u[o].end()).x,a=c.y,t=(s=u[++o%l].start()).x,n=s.y,(E(r-t)>Te||E(a-n)>Te)&&(u.splice(o,0,new Ra(za(i.site,c,E(r-f)<Te&&h-a>Te?{x:f,y:E(t-f)<Te?n:h}:E(a-h)<Te&&p-r>Te?{x:E(n-h)<Te?t:p,y:h}:E(r-p)<Te&&a-d>Te?{x:p,y:E(t-p)<Te?n:d}:E(a-d)<Te&&r-f>Te?{x:E(n-d)<Te?t:f,y:d}:null),i.site,null)),++l)}(t));var o={cells:ma,edges:ha};return ga=ya=ha=ma=null,o}function Ya(e,t){return t.y-e.y||t.x-e.x}Ta.prototype.prepare=function(){for(var e,t=this.edges,n=t.length;n--;)(e=t[n].edge).b&&e.a||t.splice(n,1);return t.sort(Na),t.length},Ra.prototype={start:function(){return this.edge.l===this.site?this.edge.a:this.edge.b},end:function(){return this.edge.l===this.site?this.edge.b:this.edge.a}},Fa.prototype={insert:function(e,t){var n,r,a;if(e){if(t.P=e,t.N=e.N,e.N&&(e.N.P=t),e.N=t,e.R){for(e=e.R;e.L;)e=e.L;e.L=t}else e.R=t;n=e}else this._?(e=qa(this._),t.P=null,t.N=e,e.P=e.L=t,n=e):(t.P=t.N=null,this._=t,n=null);for(t.L=t.R=null,t.U=n,t.C=!0,e=t;n&&n.C;)n===(r=n.U).L?(a=r.R)&&a.C?(n.C=a.C=!1,r.C=!0,e=r):(e===n.R&&(Ua(this,n),n=(e=n).U),n.C=!1,r.C=!0,Va(this,r)):(a=r.L)&&a.C?(n.C=a.C=!1,r.C=!0,e=r):(e===n.L&&(Va(this,n),n=(e=n).U),n.C=!1,r.C=!0,Ua(this,r)),n=e.U;this._.C=!1},remove:function(e){e.N&&(e.N.P=e.P),e.P&&(e.P.N=e.N),e.N=e.P=null;var t,n,r,a=e.U,i=e.L,o=e.R;if(n=i?o?qa(o):i:o,a?a.L===e?a.L=n:a.R=n:this._=n,i&&o?(r=n.C,n.C=e.C,n.L=i,i.U=n,n!==o?(a=n.U,n.U=e.U,e=n.R,a.L=e,n.R=o,o.U=n):(n.U=a,a=n,e=n.R)):(r=e.C,e=n),e&&(e.U=a),!r)if(e&&e.C)e.C=!1;else{do{if(e===this._)break;if(e===a.L){if((t=a.R).C&&(t.C=!1,a.C=!0,Ua(this,a),t=a.R),t.L&&t.L.C||t.R&&t.R.C){t.R&&t.R.C||(t.L.C=!1,t.C=!0,Va(this,t),t=a.R),t.C=a.C,a.C=t.R.C=!1,Ua(this,a),e=this._;break}}else if((t=a.L).C&&(t.C=!1,a.C=!0,Va(this,a),t=a.L),t.L&&t.L.C||t.R&&t.R.C){t.L&&t.L.C||(t.R.C=!1,t.C=!0,Ua(this,t),t=a.L),t.C=a.C,a.C=t.L.C=!1,Va(this,a),e=this._;break}t.C=!0,e=a,a=a.U}while(!e.C);e&&(e.C=!1)}}},i.geom.voronoi=function(e){var t=oa,n=ua,r=t,a=n,i=Ha;if(e)return o(e);function o(e){var t=new Array(e.length),n=i[0][0],r=i[0][1],a=i[1][0],o=i[1][1];return $a(u(e),i).cells.forEach((function(i,u){var l=i.edges,s=i.site;(t[u]=l.length?l.map((function(e){var t=e.start();return[t.x,t.y]})):s.x>=n&&s.x<=a&&s.y>=r&&s.y<=o?[[n,o],[a,o],[a,r],[n,r]]:[]).point=e[u]})),t}function u(e){return e.map((function(e,t){return{x:Math.round(r(e,t)/Te)*Te,y:Math.round(a(e,t)/Te)*Te,i:t}}))}return o.links=function(e){return $a(u(e)).edges.filter((function(e){return e.l&&e.r})).map((function(t){return{source:e[t.l.i],target:e[t.r.i]}}))},o.triangles=function(e){var t=[];return $a(u(e)).cells.forEach((function(n,r){for(var a,i,o,u,l=n.site,s=n.edges.sort(Na),c=-1,f=s.length,p=s[f-1].edge,d=p.l===l?p.r:p.l;++c<f;)p,a=d,d=(p=s[c].edge).l===l?p.r:p.l,r<a.i&&r<d.i&&(o=a,u=d,((i=l).x-u.x)*(o.y-i.y)-(i.x-o.x)*(u.y-i.y)<0)&&t.push([e[r],e[a.i],e[d.i]])})),t},o.x=function(e){return arguments.length?(r=yt(t=e),o):t},o.y=function(e){return arguments.length?(a=yt(n=e),o):n},o.clipExtent=function(e){return arguments.length?(i=null==e?Ha:e,o):i===Ha?null:i},o.size=function(e){return arguments.length?o.clipExtent(e&&[[0,0],e]):i===Ha?null:i&&i[1]},o};var Ha=[[-1e6,-1e6],[1e6,1e6]];function Wa(e){return e.x}function Qa(e){return e.y}function Ka(e,t,n,r,a,i){if(!e(t,n,r,a,i)){var o=.5*(n+a),u=.5*(r+i),l=t.nodes;l[0]&&Ka(e,l[0],n,r,o,u),l[1]&&Ka(e,l[1],o,r,a,u),l[2]&&Ka(e,l[2],n,u,o,i),l[3]&&Ka(e,l[3],o,u,a,i)}}function Ga(e,t,n,r,a,i,o){var u,l=1/0;return function e(s,c,f,p,d){if(!(c>i||f>o||p<r||d<a)){if(h=s.point){var h,m=t-s.x,g=n-s.y,v=m*m+g*g;if(v<l){var y=Math.sqrt(l=v);r=t-y,a=n-y,i=t+y,o=n+y,u=h}}for(var b=s.nodes,x=.5*(c+p),w=.5*(f+d),E=(n>=w)<<1|t>=x,M=E+4;E<M;++E)if(s=b[3&E])switch(3&E){case 0:e(s,c,f,x,w);break;case 1:e(s,x,f,p,w);break;case 2:e(s,c,w,x,d);break;case 3:e(s,x,w,p,d)}}}(e,r,a,i,o),u}function Xa(e,t){e=i.rgb(e),t=i.rgb(t);var n=e.r,r=e.g,a=e.b,o=t.r-n,u=t.g-r,l=t.b-a;return function(e){return"#"+ft(Math.round(n+o*e))+ft(Math.round(r+u*e))+ft(Math.round(a+l*e))}}function Za(e,t){var n,r={},a={};for(n in e)n in t?r[n]=ri(e[n],t[n]):a[n]=e[n];for(n in t)n in e||(a[n]=t[n]);return function(e){for(n in r)a[n]=r[n](e);return a}}function Ja(e,t){return e=+e,t=+t,function(n){return e*(1-n)+t*n}}function ei(e,t){var n,r,a,i=ti.lastIndex=ni.lastIndex=0,o=-1,u=[],l=[];for(e+="",t+="";(n=ti.exec(e))&&(r=ni.exec(t));)(a=r.index)>i&&(a=t.slice(i,a),u[o]?u[o]+=a:u[++o]=a),(n=n[0])===(r=r[0])?u[o]?u[o]+=r:u[++o]=r:(u[++o]=null,l.push({i:o,x:Ja(n,r)})),i=ni.lastIndex;return i<t.length&&(a=t.slice(i),u[o]?u[o]+=a:u[++o]=a),u.length<2?l[0]?(t=l[0].x,function(e){return t(e)+""}):function(){return t}:(t=l.length,function(e){for(var n,r=0;r<t;++r)u[(n=l[r]).i]=n.x(e);return u.join("")})}i.geom.delaunay=function(e){return i.geom.voronoi().triangles(e)},i.geom.quadtree=function(e,t,n,r,a){var i,o=oa,u=ua;if(i=arguments.length)return o=Wa,u=Qa,3===i&&(a=n,r=t,n=t=0),l(e);function l(e){var l,s,c,f,p,d,h,m,g,v=yt(o),y=yt(u);if(null!=t)d=t,h=n,m=r,g=a;else if(m=g=-(d=h=1/0),s=[],c=[],p=e.length,i)for(f=0;f<p;++f)(l=e[f]).x<d&&(d=l.x),l.y<h&&(h=l.y),l.x>m&&(m=l.x),l.y>g&&(g=l.y),s.push(l.x),c.push(l.y);else for(f=0;f<p;++f){var b=+v(l=e[f],f),x=+y(l,f);b<d&&(d=b),x<h&&(h=x),b>m&&(m=b),x>g&&(g=x),s.push(b),c.push(x)}var w=m-d,M=g-h;function P(e,t,n,r,a,i,o,u){if(!isNaN(n)&&!isNaN(r))if(e.leaf){var l=e.x,s=e.y;if(null!=l)if(E(l-n)+E(s-r)<.01)k(e,t,n,r,a,i,o,u);else{var c=e.point;e.x=e.y=e.point=null,k(e,c,l,s,a,i,o,u),k(e,t,n,r,a,i,o,u)}else e.x=n,e.y=r,e.point=t}else k(e,t,n,r,a,i,o,u)}function k(e,t,n,r,a,i,o,u){var l=.5*(a+o),s=.5*(i+u),c=n>=l,f=r>=s,p=f<<1|c;e.leaf=!1,c?a=l:o=l,f?i=s:u=s,P(e=e.nodes[p]||(e.nodes[p]={leaf:!0,nodes:[],point:null,x:null,y:null}),t,n,r,a,i,o,u)}w>M?g=h+w:m=d+M;var S={leaf:!0,nodes:[],point:null,x:null,y:null,add:function(e){P(S,e,+v(e,++f),+y(e,f),d,h,m,g)},visit:function(e){Ka(e,S,d,h,m,g)},find:function(e){return Ga(S,e[0],e[1],d,h,m,g)}};if(f=-1,null==t){for(;++f<p;)P(S,e[f],s[f],c[f],d,h,m,g);--f}else e.forEach(S.add);return s=c=e=l=null,S}return l.x=function(e){return arguments.length?(o=e,l):o},l.y=function(e){return arguments.length?(u=e,l):u},l.extent=function(e){return arguments.length?(null==e?t=n=r=a=null:(t=+e[0][0],n=+e[0][1],r=+e[1][0],a=+e[1][1]),l):null==t?null:[[t,n],[r,a]]},l.size=function(e){return arguments.length?(null==e?t=n=r=a=null:(t=n=0,r=+e[0],a=+e[1]),l):null==t?null:[r-t,a-n]},l},i.interpolateRgb=Xa,i.interpolateObject=Za,i.interpolateNumber=Ja,i.interpolateString=ei;var ti=/[-+]?(?:\d+\.?\d*|\.?\d+)(?:[eE][-+]?\d+)?/g,ni=new RegExp(ti.source,"g");function ri(e,t){for(var n,r=i.interpolators.length;--r>=0&&!(n=i.interpolators[r](e,t)););return n}function ai(e,t){var n,r=[],a=[],i=e.length,o=t.length,u=Math.min(e.length,t.length);for(n=0;n<u;++n)r.push(ri(e[n],t[n]));for(;n<i;++n)a[n]=e[n];for(;n<o;++n)a[n]=t[n];return function(e){for(n=0;n<u;++n)a[n]=r[n](e);return a}}i.interpolate=ri,i.interpolators=[function(e,t){var n=typeof t;return("string"===n?vt.has(t.toLowerCase())||/^(#|rgb\(|hsl\()/i.test(t)?Xa:ei:t instanceof He?Xa:Array.isArray(t)?ai:"object"===n&&isNaN(t)?Za:Ja)(e,t)}],i.interpolateArray=ai;var ii=function(){return B},oi=i.map({linear:ii,poly:function(e){return function(t){return Math.pow(t,e)}},quad:function(){return fi},cubic:function(){return pi},sin:function(){return hi},exp:function(){return mi},circle:function(){return gi},elastic:function(e,t){var n;arguments.length<2&&(t=.45);arguments.length?n=t/Ae*Math.asin(1/e):(e=1,n=t/4);return function(r){return 1+e*Math.pow(2,-10*r)*Math.sin((r-n)*Ae/t)}},back:function(e){e||(e=1.70158);return function(t){return t*t*((e+1)*t-e)}},bounce:function(){return vi}}),ui=i.map({in:B,out:si,"in-out":ci,"out-in":function(e){return ci(si(e))}});function li(e){return function(t){return t<=0?0:t>=1?1:e(t)}}function si(e){return function(t){return 1-e(1-t)}}function ci(e){return function(t){return.5*(t<.5?e(2*t):2-e(2-2*t))}}function fi(e){return e*e}function pi(e){return e*e*e}function di(e){if(e<=0)return 0;if(e>=1)return 1;var t=e*e,n=t*e;return 4*(e<.5?n:3*(e-t)+n-.75)}function hi(e){return 1-Math.cos(e*De)}function mi(e){return Math.pow(2,10*(e-1))}function gi(e){return 1-Math.sqrt(1-e*e)}function vi(e){return e<1/2.75?7.5625*e*e:e<2/2.75?7.5625*(e-=1.5/2.75)*e+.75:e<2.5/2.75?7.5625*(e-=2.25/2.75)*e+.9375:7.5625*(e-=2.625/2.75)*e+.984375}function yi(e,t){return t-=e,function(n){return Math.round(e+t*n)}}function bi(e){var t,n,r,a=[e.a,e.b],i=[e.c,e.d],o=wi(a),u=xi(a,i),l=wi(((t=i)[0]+=(r=-u)*(n=a)[0],t[1]+=r*n[1],t))||0;a[0]*i[1]<i[0]*a[1]&&(a[0]*=-1,a[1]*=-1,o*=-1,u*=-1),this.rotate=(o?Math.atan2(a[1],a[0]):Math.atan2(-i[0],i[1]))*Ie,this.translate=[e.e,e.f],this.scale=[o,l],this.skew=l?Math.atan2(u,l)*Ie:0}function xi(e,t){return e[0]*t[0]+e[1]*t[1]}function wi(e){var t=Math.sqrt(xi(e,e));return t&&(e[0]/=t,e[1]/=t),t}i.ease=function(e){var t=e.indexOf("-"),n=t>=0?e.slice(0,t):e,r=t>=0?e.slice(t+1):"in";return n=oi.get(n)||ii,li((r=ui.get(r)||B)(n.apply(null,o.call(arguments,1))))},i.interpolateHcl=function(e,t){e=i.hcl(e),t=i.hcl(t);var n=e.h,r=e.c,a=e.l,o=t.h-n,u=t.c-r,l=t.l-a;isNaN(u)&&(u=0,r=isNaN(r)?t.c:r);isNaN(o)?(o=0,n=isNaN(n)?t.h:n):o>180?o-=360:o<-180&&(o+=360);return function(e){return Ze(n+o*e,r+u*e,a+l*e)+""}},i.interpolateHsl=function(e,t){e=i.hsl(e),t=i.hsl(t);var n=e.h,r=e.s,a=e.l,o=t.h-n,u=t.s-r,l=t.l-a;isNaN(u)&&(u=0,r=isNaN(r)?t.s:r);isNaN(o)?(o=0,n=isNaN(n)?t.h:n):o>180?o-=360:o<-180&&(o+=360);return function(e){return Ke(n+o*e,r+u*e,a+l*e)+""}},i.interpolateLab=function(e,t){e=i.lab(e),t=i.lab(t);var n=e.l,r=e.a,a=e.b,o=t.l-n,u=t.a-r,l=t.b-a;return function(e){return nt(n+o*e,r+u*e,a+l*e)+""}},i.interpolateRound=yi,i.transform=function(e){var t=l.createElementNS(i.ns.prefix.svg,"g");return(i.transform=function(e){if(null!=e){t.setAttribute("transform",e);var n=t.transform.baseVal.consolidate()}return new bi(n?n.matrix:Ei)})(e)},bi.prototype.toString=function(){return"translate("+this.translate+")rotate("+this.rotate+")skewX("+this.skew+")scale("+this.scale+")"};var Ei={a:1,b:0,c:0,d:1,e:0,f:0};function Mi(e){return e.length?e.pop()+",":""}function Pi(e,t){var n=[],r=[];return e=i.transform(e),t=i.transform(t),function(e,t,n,r){if(e[0]!==t[0]||e[1]!==t[1]){var a=n.push("translate(",null,",",null,")");r.push({i:a-4,x:Ja(e[0],t[0])},{i:a-2,x:Ja(e[1],t[1])})}else(t[0]||t[1])&&n.push("translate("+t+")")}(e.translate,t.translate,n,r),function(e,t,n,r){e!==t?(e-t>180?t+=360:t-e>180&&(e+=360),r.push({i:n.push(Mi(n)+"rotate(",null,")")-2,x:Ja(e,t)})):t&&n.push(Mi(n)+"rotate("+t+")")}(e.rotate,t.rotate,n,r),function(e,t,n,r){e!==t?r.push({i:n.push(Mi(n)+"skewX(",null,")")-2,x:Ja(e,t)}):t&&n.push(Mi(n)+"skewX("+t+")")}(e.skew,t.skew,n,r),function(e,t,n,r){if(e[0]!==t[0]||e[1]!==t[1]){var a=n.push(Mi(n)+"scale(",null,",",null,")");r.push({i:a-4,x:Ja(e[0],t[0])},{i:a-2,x:Ja(e[1],t[1])})}else 1===t[0]&&1===t[1]||n.push(Mi(n)+"scale("+t+")")}(e.scale,t.scale,n,r),e=t=null,function(e){for(var t,a=-1,i=r.length;++a<i;)n[(t=r[a]).i]=t.x(e);return n.join("")}}function ki(e,t){return t=(t-=e=+e)||1/t,function(n){return(n-e)/t}}function Si(e,t){return t=(t-=e=+e)||1/t,function(n){return Math.max(0,Math.min(1,(n-e)/t))}}function _i(e){for(var t=e.source,n=e.target,r=function(e,t){if(e===t)return e;var n=Ti(e),r=Ti(t),a=n.pop(),i=r.pop(),o=null;for(;a===i;)o=a,a=n.pop(),i=r.pop();return o}(t,n),a=[t];t!==r;)t=t.parent,a.push(t);for(var i=a.length;n!==r;)a.splice(i,0,n),n=n.parent;return a}function Ti(e){for(var t=[],n=e.parent;null!=n;)t.push(e),e=n,n=n.parent;return t.push(e),t}function Ni(e){e.fixed|=2}function Ci(e){e.fixed&=-7}function Ai(e){e.fixed|=4,e.px=e.x,e.py=e.y}function Oi(e){e.fixed&=-5}i.interpolateTransform=Pi,i.layout={},i.layout.bundle=function(){return function(e){for(var t=[],n=-1,r=e.length;++n<r;)t.push(_i(e[n]));return t}},i.layout.chord=function(){var e,t,n,r,a,o,u,l={},s=0;function c(){var l,c,p,d,h,m={},g=[],v=i.range(r),y=[];for(e=[],t=[],l=0,d=-1;++d<r;){for(c=0,h=-1;++h<r;)c+=n[d][h];g.push(c),y.push(i.range(r)),l+=c}for(a&&v.sort((function(e,t){return a(g[e],g[t])})),o&&y.forEach((function(e,t){e.sort((function(e,r){return o(n[t][e],n[t][r])}))})),l=(Ae-s*r)/l,c=0,d=-1;++d<r;){for(p=c,h=-1;++h<r;){var b=v[d],x=y[b][h],w=n[b][x],E=c,M=c+=w*l;m[b+"-"+x]={index:b,subindex:x,startAngle:E,endAngle:M,value:w}}t[b]={index:b,startAngle:p,endAngle:c,value:g[b]},c+=s}for(d=-1;++d<r;)for(h=d-1;++h<r;){var P=m[d+"-"+h],k=m[h+"-"+d];(P.value||k.value)&&e.push(P.value<k.value?{source:k,target:P}:{source:P,target:k})}u&&f()}function f(){e.sort((function(e,t){return u((e.source.value+e.target.value)/2,(t.source.value+t.target.value)/2)}))}return l.matrix=function(a){return arguments.length?(r=(n=a)&&n.length,e=t=null,l):n},l.padding=function(n){return arguments.length?(s=n,e=t=null,l):s},l.sortGroups=function(n){return arguments.length?(a=n,e=t=null,l):a},l.sortSubgroups=function(t){return arguments.length?(o=t,e=null,l):o},l.sortChords=function(t){return arguments.length?(u=t,e&&f(),l):u},l.chords=function(){return e||c(),e},l.groups=function(){return t||c(),t},l},i.layout.force=function(){var e,t,n,r,a,o,u={},l=i.dispatch("start","tick","end"),s=[1,1],c=.9,f=Di,p=Bi,d=-30,h=Ii,m=.1,g=.64,v=[],y=[];function b(e){return function(t,n,r,a){if(t.point!==e){var i=t.cx-e.x,o=t.cy-e.y,u=a-n,l=i*i+o*o;if(u*u/g<l){if(l<h){var s=t.charge/l;e.px-=i*s,e.py-=o*s}return!0}if(t.point&&l&&l<h){s=t.pointCharge/l;e.px-=i*s,e.py-=o*s}}return!t.charge}}function x(e){e.px=i.event.x,e.py=i.event.y,u.resume()}return u.tick=function(){if((n*=.99)<.005)return e=null,l.end({type:"end",alpha:n=0}),!0;var t,u,f,p,h,g,x,w,E,M=v.length,P=y.length;for(u=0;u<P;++u)p=(f=y[u]).source,(g=(w=(h=f.target).x-p.x)*w+(E=h.y-p.y)*E)&&(w*=g=n*a[u]*((g=Math.sqrt(g))-r[u])/g,E*=g,h.x-=w*(x=p.weight+h.weight?p.weight/(p.weight+h.weight):.5),h.y-=E*x,p.x+=w*(x=1-x),p.y+=E*x);if((x=n*m)&&(w=s[0]/2,E=s[1]/2,u=-1,x))for(;++u<M;)(f=v[u]).x+=(w-f.x)*x,f.y+=(E-f.y)*x;if(d)for(!function e(t,n,r){var a=0,i=0;if(t.charge=0,!t.leaf)for(var o,u=t.nodes,l=u.length,s=-1;++s<l;)null!=(o=u[s])&&(e(o,n,r),t.charge+=o.charge,a+=o.charge*o.cx,i+=o.charge*o.cy);if(t.point){t.leaf||(t.point.x+=Math.random()-.5,t.point.y+=Math.random()-.5);var c=n*r[t.point.index];t.charge+=t.pointCharge=c,a+=c*t.point.x,i+=c*t.point.y}t.cx=a/t.charge,t.cy=i/t.charge}(t=i.geom.quadtree(v),n,o),u=-1;++u<M;)(f=v[u]).fixed||t.visit(b(f));for(u=-1;++u<M;)(f=v[u]).fixed?(f.x=f.px,f.y=f.py):(f.x-=(f.px-(f.px=f.x))*c,f.y-=(f.py-(f.py=f.y))*c);l.tick({type:"tick",alpha:n})},u.nodes=function(e){return arguments.length?(v=e,u):v},u.links=function(e){return arguments.length?(y=e,u):y},u.size=function(e){return arguments.length?(s=e,u):s},u.linkDistance=function(e){return arguments.length?(f="function"==typeof e?e:+e,u):f},u.distance=u.linkDistance,u.linkStrength=function(e){return arguments.length?(p="function"==typeof e?e:+e,u):p},u.friction=function(e){return arguments.length?(c=+e,u):c},u.charge=function(e){return arguments.length?(d="function"==typeof e?e:+e,u):d},u.chargeDistance=function(e){return arguments.length?(h=e*e,u):Math.sqrt(h)},u.gravity=function(e){return arguments.length?(m=+e,u):m},u.theta=function(e){return arguments.length?(g=e*e,u):Math.sqrt(g)},u.alpha=function(t){return arguments.length?(t=+t,n?t>0?n=t:(e.c=null,e.t=NaN,e=null,l.end({type:"end",alpha:n=0})):t>0&&(l.start({type:"start",alpha:n=t}),e=St(u.tick)),u):n},u.start=function(){var e,t,n,i=v.length,l=y.length,c=s[0],h=s[1];for(e=0;e<i;++e)(n=v[e]).index=e,n.weight=0;for(e=0;e<l;++e)"number"==typeof(n=y[e]).source&&(n.source=v[n.source]),"number"==typeof n.target&&(n.target=v[n.target]),++n.source.weight,++n.target.weight;for(e=0;e<i;++e)n=v[e],isNaN(n.x)&&(n.x=m("x",c)),isNaN(n.y)&&(n.y=m("y",h)),isNaN(n.px)&&(n.px=n.x),isNaN(n.py)&&(n.py=n.y);if(r=[],"function"==typeof f)for(e=0;e<l;++e)r[e]=+f.call(this,y[e],e);else for(e=0;e<l;++e)r[e]=f;if(a=[],"function"==typeof p)for(e=0;e<l;++e)a[e]=+p.call(this,y[e],e);else for(e=0;e<l;++e)a[e]=p;if(o=[],"function"==typeof d)for(e=0;e<i;++e)o[e]=+d.call(this,v[e],e);else for(e=0;e<i;++e)o[e]=d;function m(n,r){if(!t){for(t=new Array(i),s=0;s<i;++s)t[s]=[];for(s=0;s<l;++s){var a=y[s];t[a.source.index].push(a.target),t[a.target.index].push(a.source)}}for(var o,u=t[e],s=-1,c=u.length;++s<c;)if(!isNaN(o=u[s][n]))return o;return Math.random()*r}return u.resume()},u.resume=function(){return u.alpha(.1)},u.stop=function(){return u.alpha(0)},u.drag=function(){if(t||(t=i.behavior.drag().origin(B).on("dragstart.force",Ni).on("drag.force",x).on("dragend.force",Ci)),!arguments.length)return t;this.on("mouseover.force",Ai).on("mouseout.force",Oi).call(t)},i.rebind(u,l,"on")};var Di=20,Bi=1,Ii=1/0;function zi(e,t){return i.rebind(e,t,"sort","children","value"),e.nodes=e,e.links=Vi,e}function Li(e,t){for(var n=[e];null!=(e=n.pop());)if(t(e),(a=e.children)&&(r=a.length))for(var r,a;--r>=0;)n.push(a[r])}function Ri(e,t){for(var n=[e],r=[];null!=(e=n.pop());)if(r.push(e),(i=e.children)&&(a=i.length))for(var a,i,o=-1;++o<a;)n.push(i[o]);for(;null!=(e=r.pop());)t(e)}function Fi(e){return e.children}function ji(e){return e.value}function Ui(e,t){return t.value-e.value}function Vi(e){return i.merge(e.map((function(e){return(e.children||[]).map((function(t){return{source:e,target:t}}))})))}i.layout.hierarchy=function(){var e=Ui,t=Fi,n=ji;function r(a){var i,o=[a],u=[];for(a.depth=0;null!=(i=o.pop());)if(u.push(i),(s=t.call(r,i,i.depth))&&(l=s.length)){for(var l,s,c;--l>=0;)o.push(c=s[l]),c.parent=i,c.depth=i.depth+1;n&&(i.value=0),i.children=s}else n&&(i.value=+n.call(r,i,i.depth)||0),delete i.children;return Ri(a,(function(t){var r,a;e&&(r=t.children)&&r.sort(e),n&&(a=t.parent)&&(a.value+=t.value)})),u}return r.sort=function(t){return arguments.length?(e=t,r):e},r.children=function(e){return arguments.length?(t=e,r):t},r.value=function(e){return arguments.length?(n=e,r):n},r.revalue=function(e){return n&&(Li(e,(function(e){e.children&&(e.value=0)})),Ri(e,(function(e){var t;e.children||(e.value=+n.call(r,e,e.depth)||0),(t=e.parent)&&(t.value+=e.value)}))),e},r},i.layout.partition=function(){var e=i.layout.hierarchy(),t=[1,1];function n(n,r){var a=e.call(this,n,r);return function e(t,n,r,a){var i=t.children;if(t.x=n,t.y=t.depth*a,t.dx=r,t.dy=a,i&&(o=i.length)){var o,u,l,s=-1;for(r=t.value?r/t.value:0;++s<o;)e(u=i[s],n,l=u.value*r,a),n+=l}}(a[0],0,t[0],t[1]/function e(t){var n=t.children,r=0;if(n&&(a=n.length))for(var a,i=-1;++i<a;)r=Math.max(r,e(n[i]));return 1+r}(a[0])),a}return n.size=function(e){return arguments.length?(t=e,n):t},zi(n,e)},i.layout.pie=function(){var e=Number,t=qi,n=0,r=Ae,a=0;function o(u){var l,s=u.length,c=u.map((function(t,n){return+e.call(o,t,n)})),f=+("function"==typeof n?n.apply(this,arguments):n),p=("function"==typeof r?r.apply(this,arguments):r)-f,d=Math.min(Math.abs(p)/s,+("function"==typeof a?a.apply(this,arguments):a)),h=d*(p<0?-1:1),m=i.sum(c),g=m?(p-s*h)/m:0,v=i.range(s),y=[];return null!=t&&v.sort(t===qi?function(e,t){return c[t]-c[e]}:function(e,n){return t(u[e],u[n])}),v.forEach((function(e){y[e]={data:u[e],value:l=c[e],startAngle:f,endAngle:f+=l*g+h,padAngle:d}})),y}return o.value=function(t){return arguments.length?(e=t,o):e},o.sort=function(e){return arguments.length?(t=e,o):t},o.startAngle=function(e){return arguments.length?(n=e,o):n},o.endAngle=function(e){return arguments.length?(r=e,o):r},o.padAngle=function(e){return arguments.length?(a=e,o):a},o};var qi={};function $i(e){return e.x}function Yi(e){return e.y}function Hi(e,t,n){e.y0=t,e.y=n}i.layout.stack=function(){var e=B,t=Ki,n=Gi,r=Hi,a=$i,o=Yi;function u(l,s){if(!(d=l.length))return l;var c=l.map((function(t,n){return e.call(u,t,n)})),f=c.map((function(e){return e.map((function(e,t){return[a.call(u,e,t),o.call(u,e,t)]}))})),p=t.call(u,f,s);c=i.permute(c,p),f=i.permute(f,p);var d,h,m,g,v=n.call(u,f,s),y=c[0].length;for(m=0;m<y;++m)for(r.call(u,c[0][m],g=v[m],f[0][m][1]),h=1;h<d;++h)r.call(u,c[h][m],g+=f[h-1][m][1],f[h][m][1]);return l}return u.values=function(t){return arguments.length?(e=t,u):e},u.order=function(e){return arguments.length?(t="function"==typeof e?e:Wi.get(e)||Ki,u):t},u.offset=function(e){return arguments.length?(n="function"==typeof e?e:Qi.get(e)||Gi,u):n},u.x=function(e){return arguments.length?(a=e,u):a},u.y=function(e){return arguments.length?(o=e,u):o},u.out=function(e){return arguments.length?(r=e,u):r},u};var Wi=i.map({"inside-out":function(e){var t,n,r=e.length,a=e.map(Xi),o=e.map(Zi),u=i.range(r).sort((function(e,t){return a[e]-a[t]})),l=0,s=0,c=[],f=[];for(t=0;t<r;++t)n=u[t],l<s?(l+=o[n],c.push(n)):(s+=o[n],f.push(n));return f.reverse().concat(c)},reverse:function(e){return i.range(e.length).reverse()},default:Ki}),Qi=i.map({silhouette:function(e){var t,n,r,a=e.length,i=e[0].length,o=[],u=0,l=[];for(n=0;n<i;++n){for(t=0,r=0;t<a;t++)r+=e[t][n][1];r>u&&(u=r),o.push(r)}for(n=0;n<i;++n)l[n]=(u-o[n])/2;return l},wiggle:function(e){var t,n,r,a,i,o,u,l,s,c=e.length,f=e[0],p=f.length,d=[];for(d[0]=l=s=0,n=1;n<p;++n){for(t=0,a=0;t<c;++t)a+=e[t][n][1];for(t=0,i=0,u=f[n][0]-f[n-1][0];t<c;++t){for(r=0,o=(e[t][n][1]-e[t][n-1][1])/(2*u);r<t;++r)o+=(e[r][n][1]-e[r][n-1][1])/u;i+=o*e[t][n][1]}d[n]=l-=a?i/a*u:0,l<s&&(s=l)}for(n=0;n<p;++n)d[n]-=s;return d},expand:function(e){var t,n,r,a=e.length,i=e[0].length,o=1/a,u=[];for(n=0;n<i;++n){for(t=0,r=0;t<a;t++)r+=e[t][n][1];if(r)for(t=0;t<a;t++)e[t][n][1]/=r;else for(t=0;t<a;t++)e[t][n][1]=o}for(n=0;n<i;++n)u[n]=0;return u},zero:Gi});function Ki(e){return i.range(e.length)}function Gi(e){for(var t=-1,n=e[0].length,r=[];++t<n;)r[t]=0;return r}function Xi(e){for(var t,n=1,r=0,a=e[0][1],i=e.length;n<i;++n)(t=e[n][1])>a&&(r=n,a=t);return r}function Zi(e){return e.reduce(Ji,0)}function Ji(e,t){return e+t[1]}function eo(e,t){return to(e,Math.ceil(Math.log(t.length)/Math.LN2+1))}function to(e,t){for(var n=-1,r=+e[0],a=(e[1]-r)/t,i=[];++n<=t;)i[n]=a*n+r;return i}function no(e){return[i.min(e),i.max(e)]}function ro(e,t){return e.value-t.value}function ao(e,t){var n=e._pack_next;e._pack_next=t,t._pack_prev=e,t._pack_next=n,n._pack_prev=t}function io(e,t){e._pack_next=t,t._pack_prev=e}function oo(e,t){var n=t.x-e.x,r=t.y-e.y,a=e.r+t.r;return.999*a*a>n*n+r*r}function uo(e){if((t=e.children)&&(l=t.length)){var t,n,r,a,i,o,u,l,s=1/0,c=-1/0,f=1/0,p=-1/0;if(t.forEach(lo),(n=t[0]).x=-n.r,n.y=0,b(n),l>1&&((r=t[1]).x=r.r,r.y=0,b(r),l>2))for(co(n,r,a=t[2]),b(a),ao(n,a),n._pack_prev=a,ao(a,r),r=n._pack_next,i=3;i<l;i++){co(n,r,a=t[i]);var d=0,h=1,m=1;for(o=r._pack_next;o!==r;o=o._pack_next,h++)if(oo(o,a)){d=1;break}if(1==d)for(u=n._pack_prev;u!==o._pack_prev&&!oo(u,a);u=u._pack_prev,m++);d?(h<m||h==m&&r.r<n.r?io(n,r=o):io(n=u,r),i--):(ao(n,a),r=a,b(a))}var g=(s+c)/2,v=(f+p)/2,y=0;for(i=0;i<l;i++)(a=t[i]).x-=g,a.y-=v,y=Math.max(y,a.r+Math.sqrt(a.x*a.x+a.y*a.y));e.r=y,t.forEach(so)}function b(e){s=Math.min(e.x-e.r,s),c=Math.max(e.x+e.r,c),f=Math.min(e.y-e.r,f),p=Math.max(e.y+e.r,p)}}function lo(e){e._pack_next=e._pack_prev=e}function so(e){delete e._pack_next,delete e._pack_prev}function co(e,t,n){var r=e.r+n.r,a=t.x-e.x,i=t.y-e.y;if(r&&(a||i)){var o=t.r+n.r,u=a*a+i*i,l=.5+((r*=r)-(o*=o))/(2*u),s=Math.sqrt(Math.max(0,2*o*(r+u)-(r-=u)*r-o*o))/(2*u);n.x=e.x+l*a+s*i,n.y=e.y+l*i-s*a}else n.x=e.x+r,n.y=e.y}function fo(e,t){return e.parent==t.parent?1:2}function po(e){var t=e.children;return t.length?t[0]:e.t}function ho(e){var t,n=e.children;return(t=n.length)?n[t-1]:e.t}function mo(e,t,n){var r=n/(t.i-e.i);t.c-=r,t.s+=n,e.c+=r,t.z+=n,t.m+=n}function go(e,t,n){return e.a.parent===t.parent?e.a:n}function vo(e){return{x:e.x,y:e.y,dx:e.dx,dy:e.dy}}function yo(e,t){var n=e.x+t[3],r=e.y+t[0],a=e.dx-t[1]-t[3],i=e.dy-t[0]-t[2];return a<0&&(n+=a/2,a=0),i<0&&(r+=i/2,i=0),{x:n,y:r,dx:a,dy:i}}function bo(e){var t=e[0],n=e[e.length-1];return t<n?[t,n]:[n,t]}function xo(e){return e.rangeExtent?e.rangeExtent():bo(e.range())}function wo(e,t,n,r){var a=n(e[0],e[1]),i=r(t[0],t[1]);return function(e){return i(a(e))}}function Eo(e,t){var n,r=0,a=e.length-1,i=e[r],o=e[a];return o<i&&(n=r,r=a,a=n,n=i,i=o,o=n),e[r]=t.floor(i),e[a]=t.ceil(o),e}function Mo(e){return e?{floor:function(t){return Math.floor(t/e)*e},ceil:function(t){return Math.ceil(t/e)*e}}:Po}i.layout.histogram=function(){var e=!0,t=Number,n=no,r=eo;function a(a,o){for(var u,l,s=[],c=a.map(t,this),f=n.call(this,c,o),p=r.call(this,f,c,o),d=(o=-1,c.length),h=p.length-1,m=e?1:1/d;++o<h;)(u=s[o]=[]).dx=p[o+1]-(u.x=p[o]),u.y=0;if(h>0)for(o=-1;++o<d;)(l=c[o])>=f[0]&&l<=f[1]&&((u=s[i.bisect(p,l,1,h)-1]).y+=m,u.push(a[o]));return s}return a.value=function(e){return arguments.length?(t=e,a):t},a.range=function(e){return arguments.length?(n=yt(e),a):n},a.bins=function(e){return arguments.length?(r="number"==typeof e?function(t){return to(t,e)}:yt(e),a):r},a.frequency=function(t){return arguments.length?(e=!!t,a):e},a},i.layout.pack=function(){var e,t=i.layout.hierarchy().sort(ro),n=0,r=[1,1];function a(a,i){var o=t.call(this,a,i),u=o[0],l=r[0],s=r[1],c=null==e?Math.sqrt:"function"==typeof e?e:function(){return e};if(u.x=u.y=0,Ri(u,(function(e){e.r=+c(e.value)})),Ri(u,uo),n){var f=n*(e?1:Math.max(2*u.r/l,2*u.r/s))/2;Ri(u,(function(e){e.r+=f})),Ri(u,uo),Ri(u,(function(e){e.r-=f}))}return function e(t,n,r,a){var i=t.children;if(t.x=n+=a*t.x,t.y=r+=a*t.y,t.r*=a,i)for(var o=-1,u=i.length;++o<u;)e(i[o],n,r,a)}(u,l/2,s/2,e?1:1/Math.max(2*u.r/l,2*u.r/s)),o}return a.size=function(e){return arguments.length?(r=e,a):r},a.radius=function(t){return arguments.length?(e=null==t||"function"==typeof t?t:+t,a):e},a.padding=function(e){return arguments.length?(n=+e,a):n},zi(a,t)},i.layout.tree=function(){var e=i.layout.hierarchy().sort(null).value(null),t=fo,n=[1,1],r=null;function a(a,i){var s=e.call(this,a,i),c=s[0],f=function(e){var t,n={A:null,children:[e]},r=[n];for(;null!=(t=r.pop());)for(var a,i=t.children,o=0,u=i.length;o<u;++o)r.push((i[o]=a={_:i[o],parent:t,children:(a=i[o].children)&&a.slice()||[],A:null,a:null,z:0,m:0,c:0,s:0,t:null,i:o}).a=a);return n.children[0]}(c);if(Ri(f,o),f.parent.m=-f.z,Li(f,u),r)Li(c,l);else{var p=c,d=c,h=c;Li(c,(function(e){e.x<p.x&&(p=e),e.x>d.x&&(d=e),e.depth>h.depth&&(h=e)}));var m=t(p,d)/2-p.x,g=n[0]/(d.x+t(d,p)/2+m),v=n[1]/(h.depth||1);Li(c,(function(e){e.x=(e.x+m)*g,e.y=e.depth*v}))}return s}function o(e){var n=e.children,r=e.parent.children,a=e.i?r[e.i-1]:null;if(n.length){!function(e){var t,n=0,r=0,a=e.children,i=a.length;for(;--i>=0;)(t=a[i]).z+=n,t.m+=n,n+=t.s+(r+=t.c)}(e);var i=(n[0].z+n[n.length-1].z)/2;a?(e.z=a.z+t(e._,a._),e.m=e.z-i):e.z=i}else a&&(e.z=a.z+t(e._,a._));e.parent.A=function(e,n,r){if(n){for(var a,i=e,o=e,u=n,l=i.parent.children[0],s=i.m,c=o.m,f=u.m,p=l.m;u=ho(u),i=po(i),u&&i;)l=po(l),(o=ho(o)).a=e,(a=u.z+f-i.z-s+t(u._,i._))>0&&(mo(go(u,e,r),e,a),s+=a,c+=a),f+=u.m,s+=i.m,p+=l.m,c+=o.m;u&&!ho(o)&&(o.t=u,o.m+=f-c),i&&!po(l)&&(l.t=i,l.m+=s-p,r=e)}return r}(e,a,e.parent.A||r[0])}function u(e){e._.x=e.z+e.parent.m,e.m+=e.parent.m}function l(e){e.x*=n[0],e.y=e.depth*n[1]}return a.separation=function(e){return arguments.length?(t=e,a):t},a.size=function(e){return arguments.length?(r=null==(n=e)?l:null,a):r?null:n},a.nodeSize=function(e){return arguments.length?(r=null==(n=e)?null:l,a):r?n:null},zi(a,e)},i.layout.cluster=function(){var e=i.layout.hierarchy().sort(null).value(null),t=fo,n=[1,1],r=!1;function a(a,o){var u,l=e.call(this,a,o),s=l[0],c=0;Ri(s,(function(e){var n=e.children;n&&n.length?(e.x=function(e){return e.reduce((function(e,t){return e+t.x}),0)/e.length}(n),e.y=function(e){return 1+i.max(e,(function(e){return e.y}))}(n)):(e.x=u?c+=t(e,u):0,e.y=0,u=e)}));var f=function e(t){var n=t.children;return n&&n.length?e(n[0]):t}(s),p=function e(t){var n,r=t.children;return r&&(n=r.length)?e(r[n-1]):t}(s),d=f.x-t(f,p)/2,h=p.x+t(p,f)/2;return Ri(s,r?function(e){e.x=(e.x-s.x)*n[0],e.y=(s.y-e.y)*n[1]}:function(e){e.x=(e.x-d)/(h-d)*n[0],e.y=(1-(s.y?e.y/s.y:1))*n[1]}),l}return a.separation=function(e){return arguments.length?(t=e,a):t},a.size=function(e){return arguments.length?(r=null==(n=e),a):r?null:n},a.nodeSize=function(e){return arguments.length?(r=null!=(n=e),a):r?n:null},zi(a,e)},i.layout.treemap=function(){var e,t=i.layout.hierarchy(),n=Math.round,r=[1,1],a=null,o=vo,u=!1,l="squarify",s=.5*(1+Math.sqrt(5));function c(e,t){for(var n,r,a=-1,i=e.length;++a<i;)r=(n=e[a]).value*(t<0?0:t),n.area=isNaN(r)||r<=0?0:r}function f(e){var t=e.children;if(t&&t.length){var n,r,a,i=o(e),u=[],s=t.slice(),p=1/0,m="slice"===l?i.dx:"dice"===l?i.dy:"slice-dice"===l?1&e.depth?i.dy:i.dx:Math.min(i.dx,i.dy);for(c(s,i.dx*i.dy/e.value),u.area=0;(a=s.length)>0;)u.push(n=s[a-1]),u.area+=n.area,"squarify"!==l||(r=d(u,m))<=p?(s.pop(),p=r):(u.area-=u.pop().area,h(u,m,i,!1),m=Math.min(i.dx,i.dy),u.length=u.area=0,p=1/0);u.length&&(h(u,m,i,!0),u.length=u.area=0),t.forEach(f)}}function p(e){var t=e.children;if(t&&t.length){var n,r=o(e),a=t.slice(),i=[];for(c(a,r.dx*r.dy/e.value),i.area=0;n=a.pop();)i.push(n),i.area+=n.area,null!=n.z&&(h(i,n.z?r.dx:r.dy,r,!a.length),i.length=i.area=0);t.forEach(p)}}function d(e,t){for(var n,r=e.area,a=0,i=1/0,o=-1,u=e.length;++o<u;)(n=e[o].area)&&(n<i&&(i=n),n>a&&(a=n));return t*=t,(r*=r)?Math.max(t*a*s/r,r/(t*i*s)):1/0}function h(e,t,r,a){var i,o=-1,u=e.length,l=r.x,s=r.y,c=t?n(e.area/t):0;if(t==r.dx){for((a||c>r.dy)&&(c=r.dy);++o<u;)(i=e[o]).x=l,i.y=s,i.dy=c,l+=i.dx=Math.min(r.x+r.dx-l,c?n(i.area/c):0);i.z=!0,i.dx+=r.x+r.dx-l,r.y+=c,r.dy-=c}else{for((a||c>r.dx)&&(c=r.dx);++o<u;)(i=e[o]).x=l,i.y=s,i.dx=c,s+=i.dy=Math.min(r.y+r.dy-s,c?n(i.area/c):0);i.z=!1,i.dy+=r.y+r.dy-s,r.x+=c,r.dx-=c}}function m(n){var a=e||t(n),i=a[0];return i.x=i.y=0,i.value?(i.dx=r[0],i.dy=r[1]):i.dx=i.dy=0,e&&t.revalue(i),c([i],i.dx*i.dy/i.value),(e?p:f)(i),u&&(e=a),a}return m.size=function(e){return arguments.length?(r=e,m):r},m.padding=function(e){if(!arguments.length)return a;function t(t){var n=e.call(m,t,t.depth);return null==n?vo(t):yo(t,"number"==typeof n?[n,n,n,n]:n)}function n(t){return yo(t,e)}var r;return o=null==(a=e)?vo:"function"==(r=typeof e)?t:"number"===r?(e=[e,e,e,e],n):n,m},m.round=function(e){return arguments.length?(n=e?Math.round:Number,m):n!=Number},m.sticky=function(t){return arguments.length?(u=t,e=null,m):u},m.ratio=function(e){return arguments.length?(s=e,m):s},m.mode=function(e){return arguments.length?(l=e+"",m):l},zi(m,t)},i.random={normal:function(e,t){var n=arguments.length;return n<2&&(t=1),n<1&&(e=0),function(){var n,r,a;do{a=(n=2*Math.random()-1)*n+(r=2*Math.random()-1)*r}while(!a||a>1);return e+t*n*Math.sqrt(-2*Math.log(a)/a)}},logNormal:function(){var e=i.random.normal.apply(i,arguments);return function(){return Math.exp(e())}},bates:function(e){var t=i.random.irwinHall(e);return function(){return t()/e}},irwinHall:function(e){return function(){for(var t=0,n=0;n<e;n++)t+=Math.random();return t}}},i.scale={};var Po={floor:B,ceil:B};function ko(e,t,n,r){var a=[],o=[],u=0,l=Math.min(e.length,t.length)-1;for(e[l]<e[0]&&(e=e.slice().reverse(),t=t.slice().reverse());++u<=l;)a.push(n(e[u-1],e[u])),o.push(r(t[u-1],t[u]));return function(t){var n=i.bisect(e,t,1,l)-1;return o[n](a[n](t))}}function So(e,t){return i.rebind(e,t,"range","rangeRound","interpolate","clamp")}function _o(e,t){return Eo(e,Mo(To(e,t)[2])),Eo(e,Mo(To(e,t)[2])),e}function To(e,t){null==t&&(t=10);var n=bo(e),r=n[1]-n[0],a=Math.pow(10,Math.floor(Math.log(r/t)/Math.LN10)),i=t/r*a;return i<=.15?a*=10:i<=.35?a*=5:i<=.75&&(a*=2),n[0]=Math.ceil(n[0]/a)*a,n[1]=Math.floor(n[1]/a)*a+.5*a,n[2]=a,n}function No(e,t){return i.range.apply(i,To(e,t))}function Co(e,t,n){var r=To(e,t);if(n){var a=Dt.exec(n);if(a.shift(),"s"===a[8]){var o=i.formatPrefix(Math.max(E(r[0]),E(r[1])));return a[7]||(a[7]="."+Oo(o.scale(r[2]))),a[8]="f",n=i.format(a.join("")),function(e){return n(o.scale(e))+o.symbol}}a[7]||(a[7]="."+function(e,t){var n=Oo(t[2]);return e in Ao?Math.abs(n-Oo(Math.max(E(t[0]),E(t[1]))))+ +("e"!==e):n-2*("%"===e)}(a[8],r)),n=a.join("")}else n=",."+Oo(r[2])+"f";return i.format(n)}i.scale.linear=function(){return function e(t,n,r,a){var i,o;function u(){var e=Math.min(t.length,n.length)>2?ko:wo,u=a?Si:ki;return i=e(t,n,u,r),o=e(n,t,u,ri),l}function l(e){return i(e)}return l.invert=function(e){return o(e)},l.domain=function(e){return arguments.length?(t=e.map(Number),u()):t},l.range=function(e){return arguments.length?(n=e,u()):n},l.rangeRound=function(e){return l.range(e).interpolate(yi)},l.clamp=function(e){return arguments.length?(a=e,u()):a},l.interpolate=function(e){return arguments.length?(r=e,u()):r},l.ticks=function(e){return No(t,e)},l.tickFormat=function(e,n){return Co(t,e,n)},l.nice=function(e){return _o(t,e),u()},l.copy=function(){return e(t,n,r,a)},u()}([0,1],[0,1],ri,!1)};var Ao={s:1,g:1,p:1,r:1,e:1};function Oo(e){return-Math.floor(Math.log(e)/Math.LN10+.01)}i.scale.log=function(){return function e(t,n,r,a){function o(e){return(r?Math.log(e<0?0:e):-Math.log(e>0?0:-e))/Math.log(n)}function u(e){return r?Math.pow(n,e):-Math.pow(n,-e)}function l(e){return t(o(e))}return l.invert=function(e){return u(t.invert(e))},l.domain=function(e){return arguments.length?(r=e[0]>=0,t.domain((a=e.map(Number)).map(o)),l):a},l.base=function(e){return arguments.length?(n=+e,t.domain(a.map(o)),l):n},l.nice=function(){var e=Eo(a.map(o),r?Math:Bo);return t.domain(e),a=e.map(u),l},l.ticks=function(){var e=bo(a),t=[],i=e[0],l=e[1],s=Math.floor(o(i)),c=Math.ceil(o(l)),f=n%1?2:n;if(isFinite(c-s)){if(r){for(;s<c;s++)for(var p=1;p<f;p++)t.push(u(s)*p);t.push(u(s))}else for(t.push(u(s));s++<c;)for(p=f-1;p>0;p--)t.push(u(s)*p);for(s=0;t[s]<i;s++);for(c=t.length;t[c-1]>l;c--);t=t.slice(s,c)}return t},l.tickFormat=function(e,t){if(!arguments.length)return Do;arguments.length<2?t=Do:"function"!=typeof t&&(t=i.format(t));var r=Math.max(1,n*e/l.ticks().length);return function(e){var a=e/u(Math.round(o(e)));return a*n<n-.5&&(a*=n),a<=r?t(e):""}},l.copy=function(){return e(t.copy(),n,r,a)},So(l,t)}(i.scale.linear().domain([0,1]),10,!0,[1,10])};var Do=i.format(".0e"),Bo={floor:function(e){return-Math.ceil(-e)},ceil:function(e){return-Math.floor(-e)}};function Io(e){return function(t){return t<0?-Math.pow(-t,e):Math.pow(t,e)}}i.scale.pow=function(){return function e(t,n,r){var a=Io(n),i=Io(1/n);function o(e){return t(a(e))}return o.invert=function(e){return i(t.invert(e))},o.domain=function(e){return arguments.length?(t.domain((r=e.map(Number)).map(a)),o):r},o.ticks=function(e){return No(r,e)},o.tickFormat=function(e,t){return Co(r,e,t)},o.nice=function(e){return o.domain(_o(r,e))},o.exponent=function(e){return arguments.length?(a=Io(n=e),i=Io(1/n),t.domain(r.map(a)),o):n},o.copy=function(){return e(t.copy(),n,r)},So(o,t)}(i.scale.linear(),1,[0,1])},i.scale.sqrt=function(){return i.scale.pow().exponent(.5)},i.scale.ordinal=function(){return function e(t,n){var r,a,o;function u(e){return a[((r.get(e)||("range"===n.t?r.set(e,t.push(e)):NaN))-1)%a.length]}function l(e,n){return i.range(t.length).map((function(t){return e+n*t}))}return u.domain=function(e){if(!arguments.length)return t;t=[],r=new k;for(var a,i=-1,o=e.length;++i<o;)r.has(a=e[i])||r.set(a,t.push(a));return u[n.t].apply(u,n.a)},u.range=function(e){return arguments.length?(a=e,o=0,n={t:"range",a:arguments},u):a},u.rangePoints=function(e,r){arguments.length<2&&(r=0);var i=e[0],s=e[1],c=t.length<2?(i=(i+s)/2,0):(s-i)/(t.length-1+r);return a=l(i+c*r/2,c),o=0,n={t:"rangePoints",a:arguments},u},u.rangeRoundPoints=function(e,r){arguments.length<2&&(r=0);var i=e[0],s=e[1],c=t.length<2?(i=s=Math.round((i+s)/2),0):(s-i)/(t.length-1+r)|0;return a=l(i+Math.round(c*r/2+(s-i-(t.length-1+r)*c)/2),c),o=0,n={t:"rangeRoundPoints",a:arguments},u},u.rangeBands=function(e,r,i){arguments.length<2&&(r=0),arguments.length<3&&(i=r);var s=e[1]<e[0],c=e[s-0],f=e[1-s],p=(f-c)/(t.length-r+2*i);return a=l(c+p*i,p),s&&a.reverse(),o=p*(1-r),n={t:"rangeBands",a:arguments},u},u.rangeRoundBands=function(e,r,i){arguments.length<2&&(r=0),arguments.length<3&&(i=r);var s=e[1]<e[0],c=e[s-0],f=e[1-s],p=Math.floor((f-c)/(t.length-r+2*i));return a=l(c+Math.round((f-c-(t.length-r)*p)/2),p),s&&a.reverse(),o=Math.round(p*(1-r)),n={t:"rangeRoundBands",a:arguments},u},u.rangeBand=function(){return o},u.rangeExtent=function(){return bo(n.a[0])},u.copy=function(){return e(t,n)},u.domain(t)}([],{t:"range",a:[[]]})},i.scale.category10=function(){return i.scale.ordinal().range(zo)},i.scale.category20=function(){return i.scale.ordinal().range(Lo)},i.scale.category20b=function(){return i.scale.ordinal().range(Ro)},i.scale.category20c=function(){return i.scale.ordinal().range(Fo)};var zo=[2062260,16744206,2924588,14034728,9725885,9197131,14907330,8355711,12369186,1556175].map(st),Lo=[2062260,11454440,16744206,16759672,2924588,10018698,14034728,16750742,9725885,12955861,9197131,12885140,14907330,16234194,8355711,13092807,12369186,14408589,1556175,10410725].map(st),Ro=[3750777,5395619,7040719,10264286,6519097,9216594,11915115,13556636,9202993,12426809,15186514,15190932,8666169,11356490,14049643,15177372,8077683,10834324,13528509,14589654].map(st),Fo=[3244733,7057110,10406625,13032431,15095053,16616764,16625259,16634018,3253076,7652470,10607003,13101504,7695281,10394312,12369372,14342891,6513507,9868950,12434877,14277081].map(st);function jo(){return 0}i.scale.quantile=function(){return function e(t,n){var r;function a(){var e=0,a=n.length;for(r=[];++e<a;)r[e-1]=i.quantile(t,e/a);return o}function o(e){if(!isNaN(e=+e))return n[i.bisect(r,e)]}return o.domain=function(e){return arguments.length?(t=e.map(v).filter(y).sort(g),a()):t},o.range=function(e){return arguments.length?(n=e,a()):n},o.quantiles=function(){return r},o.invertExtent=function(e){return(e=n.indexOf(e))<0?[NaN,NaN]:[e>0?r[e-1]:t[0],e<r.length?r[e]:t[t.length-1]]},o.copy=function(){return e(t,n)},a()}([],[])},i.scale.quantize=function(){return function e(t,n,r){var a,i;function o(e){return r[Math.max(0,Math.min(i,Math.floor(a*(e-t))))]}function u(){return a=r.length/(n-t),i=r.length-1,o}return o.domain=function(e){return arguments.length?(t=+e[0],n=+e[e.length-1],u()):[t,n]},o.range=function(e){return arguments.length?(r=e,u()):r},o.invertExtent=function(e){return[e=(e=r.indexOf(e))<0?NaN:e/a+t,e+1/a]},o.copy=function(){return e(t,n,r)},u()}(0,1,[0,1])},i.scale.threshold=function(){return function e(t,n){function r(e){if(e<=e)return n[i.bisect(t,e)]}return r.domain=function(e){return arguments.length?(t=e,r):t},r.range=function(e){return arguments.length?(n=e,r):n},r.invertExtent=function(e){return e=n.indexOf(e),[t[e-1],t[e]]},r.copy=function(){return e(t,n)},r}([.5],[0,1])},i.scale.identity=function(){return function e(t){function n(e){return+e}return n.invert=n,n.domain=n.range=function(e){return arguments.length?(t=e.map(n),n):t},n.ticks=function(e){return No(t,e)},n.tickFormat=function(e,n){return Co(t,e,n)},n.copy=function(){return e(t)},n}([0,1])},i.svg={},i.svg.arc=function(){var e=Vo,t=qo,n=jo,r=Uo,a=$o,i=Yo,o=Ho;function u(){var u=Math.max(0,+e.apply(this,arguments)),s=Math.max(0,+t.apply(this,arguments)),c=a.apply(this,arguments)-De,f=i.apply(this,arguments)-De,p=Math.abs(f-c),d=c>f?0:1;if(s<u&&(h=s,s=u,u=h),p>=Oe)return l(s,d)+(u?l(u,1-d):"")+"Z";var h,m,g,v,y,b,x,w,E,M,P,k,S=0,_=0,T=[];if((v=(+o.apply(this,arguments)||0)/2)&&(g=r===Uo?Math.sqrt(u*u+s*s):+r.apply(this,arguments),d||(_*=-1),s&&(_=Fe(g/s*Math.sin(v))),u&&(S=Fe(g/u*Math.sin(v)))),s){y=s*Math.cos(c+_),b=s*Math.sin(c+_),x=s*Math.cos(f-_),w=s*Math.sin(f-_);var N=Math.abs(f-c-2*_)<=Ce?0:1;if(_&&Wo(y,b,x,w)===d^N){var C=(c+f)/2;y=s*Math.cos(C),b=s*Math.sin(C),x=w=null}}else y=b=0;if(u){E=u*Math.cos(f-S),M=u*Math.sin(f-S),P=u*Math.cos(c+S),k=u*Math.sin(c+S);var A=Math.abs(c-f+2*S)<=Ce?0:1;if(S&&Wo(E,M,P,k)===1-d^A){var O=(c+f)/2;E=u*Math.cos(O),M=u*Math.sin(O),P=k=null}}else E=M=0;if(p>Te&&(h=Math.min(Math.abs(s-u)/2,+n.apply(this,arguments)))>.001){m=u<s^d?0:1;var D=h,B=h;if(p<Ce){var I=null==P?[E,M]:null==x?[y,b]:pa([y,b],[P,k],[x,w],[E,M]),z=y-I[0],L=b-I[1],R=x-I[0],F=w-I[1],j=1/Math.sin(Math.acos((z*R+L*F)/(Math.sqrt(z*z+L*L)*Math.sqrt(R*R+F*F)))/2),U=Math.sqrt(I[0]*I[0]+I[1]*I[1]);B=Math.min(h,(u-U)/(j-1)),D=Math.min(h,(s-U)/(j+1))}if(null!=x){var V=Qo(null==P?[E,M]:[P,k],[y,b],s,D,d),q=Qo([x,w],[E,M],s,D,d);h===D?T.push("M",V[0],"A",D,",",D," 0 0,",m," ",V[1],"A",s,",",s," 0 ",1-d^Wo(V[1][0],V[1][1],q[1][0],q[1][1]),",",d," ",q[1],"A",D,",",D," 0 0,",m," ",q[0]):T.push("M",V[0],"A",D,",",D," 0 1,",m," ",q[0])}else T.push("M",y,",",b);if(null!=P){var $=Qo([y,b],[P,k],u,-B,d),Y=Qo([E,M],null==x?[y,b]:[x,w],u,-B,d);h===B?T.push("L",Y[0],"A",B,",",B," 0 0,",m," ",Y[1],"A",u,",",u," 0 ",d^Wo(Y[1][0],Y[1][1],$[1][0],$[1][1]),",",1-d," ",$[1],"A",B,",",B," 0 0,",m," ",$[0]):T.push("L",Y[0],"A",B,",",B," 0 0,",m," ",$[0])}else T.push("L",E,",",M)}else T.push("M",y,",",b),null!=x&&T.push("A",s,",",s," 0 ",N,",",d," ",x,",",w),T.push("L",E,",",M),null!=P&&T.push("A",u,",",u," 0 ",A,",",1-d," ",P,",",k);return T.push("Z"),T.join("")}function l(e,t){return"M0,"+e+"A"+e+","+e+" 0 1,"+t+" 0,"+-e+"A"+e+","+e+" 0 1,"+t+" 0,"+e}return u.innerRadius=function(t){return arguments.length?(e=yt(t),u):e},u.outerRadius=function(e){return arguments.length?(t=yt(e),u):t},u.cornerRadius=function(e){return arguments.length?(n=yt(e),u):n},u.padRadius=function(e){return arguments.length?(r=e==Uo?Uo:yt(e),u):r},u.startAngle=function(e){return arguments.length?(a=yt(e),u):a},u.endAngle=function(e){return arguments.length?(i=yt(e),u):i},u.padAngle=function(e){return arguments.length?(o=yt(e),u):o},u.centroid=function(){var n=(+e.apply(this,arguments)+ +t.apply(this,arguments))/2,r=(+a.apply(this,arguments)+ +i.apply(this,arguments))/2-De;return[Math.cos(r)*n,Math.sin(r)*n]},u};var Uo="auto";function Vo(e){return e.innerRadius}function qo(e){return e.outerRadius}function $o(e){return e.startAngle}function Yo(e){return e.endAngle}function Ho(e){return e&&e.padAngle}function Wo(e,t,n,r){return(e-n)*t-(t-r)*e>0?0:1}function Qo(e,t,n,r,a){var i=e[0]-t[0],o=e[1]-t[1],u=(a?r:-r)/Math.sqrt(i*i+o*o),l=u*o,s=-u*i,c=e[0]+l,f=e[1]+s,p=t[0]+l,d=t[1]+s,h=(c+p)/2,m=(f+d)/2,g=p-c,v=d-f,y=g*g+v*v,b=n-r,x=c*d-p*f,w=(v<0?-1:1)*Math.sqrt(Math.max(0,b*b*y-x*x)),E=(x*v-g*w)/y,M=(-x*g-v*w)/y,P=(x*v+g*w)/y,k=(-x*g+v*w)/y,S=E-h,_=M-m,T=P-h,N=k-m;return S*S+_*_>T*T+N*N&&(E=P,M=k),[[E-l,M-s],[E*n/b,M*n/b]]}function Ko(e){var t=oa,n=ua,r=Xn,a=Xo,i=a.key,o=.7;function u(i){var u,l=[],s=[],c=-1,f=i.length,p=yt(t),d=yt(n);function h(){l.push("M",a(e(s),o))}for(;++c<f;)r.call(this,u=i[c],c)?s.push([+p.call(this,u,c),+d.call(this,u,c)]):s.length&&(h(),s=[]);return s.length&&h(),l.length?l.join(""):null}return u.x=function(e){return arguments.length?(t=e,u):t},u.y=function(e){return arguments.length?(n=e,u):n},u.defined=function(e){return arguments.length?(r=e,u):r},u.interpolate=function(e){return arguments.length?(i="function"==typeof e?a=e:(a=Go.get(e)||Xo).key,u):i},u.tension=function(e){return arguments.length?(o=e,u):o},u}i.svg.line=function(){return Ko(B)};var Go=i.map({linear:Xo,"linear-closed":Zo,step:function(e){var t=0,n=e.length,r=e[0],a=[r[0],",",r[1]];for(;++t<n;)a.push("H",(r[0]+(r=e[t])[0])/2,"V",r[1]);n>1&&a.push("H",r[0]);return a.join("")},"step-before":Jo,"step-after":eu,basis:ru,"basis-open":function(e){if(e.length<4)return Xo(e);var t,n=[],r=-1,a=e.length,i=[0],o=[0];for(;++r<3;)t=e[r],i.push(t[0]),o.push(t[1]);n.push(au(uu,i)+","+au(uu,o)),--r;for(;++r<a;)t=e[r],i.shift(),i.push(t[0]),o.shift(),o.push(t[1]),lu(n,i,o);return n.join("")},"basis-closed":function(e){var t,n,r=-1,a=e.length,i=a+4,o=[],u=[];for(;++r<4;)n=e[r%a],o.push(n[0]),u.push(n[1]);t=[au(uu,o),",",au(uu,u)],--r;for(;++r<i;)n=e[r%a],o.shift(),o.push(n[0]),u.shift(),u.push(n[1]),lu(t,o,u);return t.join("")},bundle:function(e,t){var n=e.length-1;if(n)for(var r,a,i=e[0][0],o=e[0][1],u=e[n][0]-i,l=e[n][1]-o,s=-1;++s<=n;)r=e[s],a=s/n,r[0]=t*r[0]+(1-t)*(i+a*u),r[1]=t*r[1]+(1-t)*(o+a*l);return ru(e)},cardinal:function(e,t){return e.length<3?Xo(e):e[0]+tu(e,nu(e,t))},"cardinal-open":function(e,t){return e.length<4?Xo(e):e[1]+tu(e.slice(1,-1),nu(e,t))},"cardinal-closed":function(e,t){return e.length<3?Zo(e):e[0]+tu((e.push(e[0]),e),nu([e[e.length-2]].concat(e,[e[1]]),t))},monotone:function(e){return e.length<3?Xo(e):e[0]+tu(e,function(e){var t,n,r,a,i=[],o=function(e){var t=0,n=e.length-1,r=[],a=e[0],i=e[1],o=r[0]=su(a,i);for(;++t<n;)r[t]=(o+(o=su(a=i,i=e[t+1])))/2;return r[t]=o,r}(e),u=-1,l=e.length-1;for(;++u<l;)t=su(e[u],e[u+1]),E(t)<Te?o[u]=o[u+1]=0:(n=o[u]/t,r=o[u+1]/t,(a=n*n+r*r)>9&&(a=3*t/Math.sqrt(a),o[u]=a*n,o[u+1]=a*r));u=-1;for(;++u<=l;)a=(e[Math.min(l,u+1)][0]-e[Math.max(0,u-1)][0])/(6*(1+o[u]*o[u])),i.push([a||0,o[u]*a||0]);return i}(e))}});function Xo(e){return e.length>1?e.join("L"):e+"Z"}function Zo(e){return e.join("L")+"Z"}function Jo(e){for(var t=0,n=e.length,r=e[0],a=[r[0],",",r[1]];++t<n;)a.push("V",(r=e[t])[1],"H",r[0]);return a.join("")}function eu(e){for(var t=0,n=e.length,r=e[0],a=[r[0],",",r[1]];++t<n;)a.push("H",(r=e[t])[0],"V",r[1]);return a.join("")}function tu(e,t){if(t.length<1||e.length!=t.length&&e.length!=t.length+2)return Xo(e);var n=e.length!=t.length,r="",a=e[0],i=e[1],o=t[0],u=o,l=1;if(n&&(r+="Q"+(i[0]-2*o[0]/3)+","+(i[1]-2*o[1]/3)+","+i[0]+","+i[1],a=e[1],l=2),t.length>1){u=t[1],i=e[l],l++,r+="C"+(a[0]+o[0])+","+(a[1]+o[1])+","+(i[0]-u[0])+","+(i[1]-u[1])+","+i[0]+","+i[1];for(var s=2;s<t.length;s++,l++)i=e[l],u=t[s],r+="S"+(i[0]-u[0])+","+(i[1]-u[1])+","+i[0]+","+i[1]}if(n){var c=e[l];r+="Q"+(i[0]+2*u[0]/3)+","+(i[1]+2*u[1]/3)+","+c[0]+","+c[1]}return r}function nu(e,t){for(var n,r=[],a=(1-t)/2,i=e[0],o=e[1],u=1,l=e.length;++u<l;)n=i,i=o,o=e[u],r.push([a*(o[0]-n[0]),a*(o[1]-n[1])]);return r}function ru(e){if(e.length<3)return Xo(e);var t=1,n=e.length,r=e[0],a=r[0],i=r[1],o=[a,a,a,(r=e[1])[0]],u=[i,i,i,r[1]],l=[a,",",i,"L",au(uu,o),",",au(uu,u)];for(e.push(e[n-1]);++t<=n;)r=e[t],o.shift(),o.push(r[0]),u.shift(),u.push(r[1]),lu(l,o,u);return e.pop(),l.push("L",r),l.join("")}function au(e,t){return e[0]*t[0]+e[1]*t[1]+e[2]*t[2]+e[3]*t[3]}Go.forEach((function(e,t){t.key=e,t.closed=/-closed$/.test(e)}));var iu=[0,2/3,1/3,0],ou=[0,1/3,2/3,0],uu=[0,1/6,2/3,1/6];function lu(e,t,n){e.push("C",au(iu,t),",",au(iu,n),",",au(ou,t),",",au(ou,n),",",au(uu,t),",",au(uu,n))}function su(e,t){return(t[1]-e[1])/(t[0]-e[0])}function cu(e){for(var t,n,r,a=-1,i=e.length;++a<i;)n=(t=e[a])[0],r=t[1]-De,t[0]=n*Math.cos(r),t[1]=n*Math.sin(r);return e}function fu(e){var t=oa,n=oa,r=0,a=ua,i=Xn,o=Xo,u=o.key,l=o,s="L",c=.7;function f(u){var f,p,d,h=[],m=[],g=[],v=-1,y=u.length,b=yt(t),x=yt(r),w=t===n?function(){return p}:yt(n),E=r===a?function(){return d}:yt(a);function M(){h.push("M",o(e(g),c),s,l(e(m.reverse()),c),"Z")}for(;++v<y;)i.call(this,f=u[v],v)?(m.push([p=+b.call(this,f,v),d=+x.call(this,f,v)]),g.push([+w.call(this,f,v),+E.call(this,f,v)])):m.length&&(M(),m=[],g=[]);return m.length&&M(),h.length?h.join(""):null}return f.x=function(e){return arguments.length?(t=n=e,f):n},f.x0=function(e){return arguments.length?(t=e,f):t},f.x1=function(e){return arguments.length?(n=e,f):n},f.y=function(e){return arguments.length?(r=a=e,f):a},f.y0=function(e){return arguments.length?(r=e,f):r},f.y1=function(e){return arguments.length?(a=e,f):a},f.defined=function(e){return arguments.length?(i=e,f):i},f.interpolate=function(e){return arguments.length?(u="function"==typeof e?o=e:(o=Go.get(e)||Xo).key,l=o.reverse||o,s=o.closed?"M":"L",f):u},f.tension=function(e){return arguments.length?(c=e,f):c},f}function pu(e){return e.radius}function du(e){return[e.x,e.y]}function hu(e){return function(){var t=e.apply(this,arguments),n=t[0],r=t[1]-De;return[n*Math.cos(r),n*Math.sin(r)]}}function mu(){return 64}function gu(){return"circle"}function vu(e){var t=Math.sqrt(e/Ce);return"M0,"+t+"A"+t+","+t+" 0 1,1 0,"+-t+"A"+t+","+t+" 0 1,1 0,"+t+"Z"}i.svg.line.radial=function(){var e=Ko(cu);return e.radius=e.x,delete e.x,e.angle=e.y,delete e.y,e},Jo.reverse=eu,eu.reverse=Jo,i.svg.area=function(){return fu(B)},i.svg.area.radial=function(){var e=fu(cu);return e.radius=e.x,delete e.x,e.innerRadius=e.x0,delete e.x0,e.outerRadius=e.x1,delete e.x1,e.angle=e.y,delete e.y,e.startAngle=e.y0,delete e.y0,e.endAngle=e.y1,delete e.y1,e},i.svg.chord=function(){var e=Hr,t=Wr,n=pu,r=$o,a=Yo;function i(n,r){var a,i,s=o(this,e,n,r),c=o(this,t,n,r);return"M"+s.p0+u(s.r,s.p1,s.a1-s.a0)+(i=c,((a=s).a0==i.a0&&a.a1==i.a1?l(s.r,s.p1,s.r,s.p0):l(s.r,s.p1,c.r,c.p0)+u(c.r,c.p1,c.a1-c.a0)+l(c.r,c.p1,s.r,s.p0))+"Z")}function o(e,t,i,o){var u=t.call(e,i,o),l=n.call(e,u,o),s=r.call(e,u,o)-De,c=a.call(e,u,o)-De;return{r:l,a0:s,a1:c,p0:[l*Math.cos(s),l*Math.sin(s)],p1:[l*Math.cos(c),l*Math.sin(c)]}}function u(e,t,n){return"A"+e+","+e+" 0 "+ +(n>Ce)+",1 "+t}function l(e,t,n,r){return"Q 0,0 "+r}return i.radius=function(e){return arguments.length?(n=yt(e),i):n},i.source=function(t){return arguments.length?(e=yt(t),i):e},i.target=function(e){return arguments.length?(t=yt(e),i):t},i.startAngle=function(e){return arguments.length?(r=yt(e),i):r},i.endAngle=function(e){return arguments.length?(a=yt(e),i):a},i},i.svg.diagonal=function(){var e=Hr,t=Wr,n=du;function r(r,a){var i=e.call(this,r,a),o=t.call(this,r,a),u=(i.y+o.y)/2,l=[i,{x:i.x,y:u},{x:o.x,y:u},o];return"M"+(l=l.map(n))[0]+"C"+l[1]+" "+l[2]+" "+l[3]}return r.source=function(t){return arguments.length?(e=yt(t),r):e},r.target=function(e){return arguments.length?(t=yt(e),r):t},r.projection=function(e){return arguments.length?(n=e,r):n},r},i.svg.diagonal.radial=function(){var e=i.svg.diagonal(),t=du,n=e.projection;return e.projection=function(e){return arguments.length?n(hu(t=e)):t},e},i.svg.symbol=function(){var e=gu,t=mu;function n(n,r){return(yu.get(e.call(this,n,r))||vu)(t.call(this,n,r))}return n.type=function(t){return arguments.length?(e=yt(t),n):e},n.size=function(e){return arguments.length?(t=yt(e),n):t},n};var yu=i.map({circle:vu,cross:function(e){var t=Math.sqrt(e/5)/2;return"M"+-3*t+","+-t+"H"+-t+"V"+-3*t+"H"+t+"V"+-t+"H"+3*t+"V"+t+"H"+t+"V"+3*t+"H"+-t+"V"+t+"H"+-3*t+"Z"},diamond:function(e){var t=Math.sqrt(e/(2*xu)),n=t*xu;return"M0,"+-t+"L"+n+",0 0,"+t+" "+-n+",0Z"},square:function(e){var t=Math.sqrt(e)/2;return"M"+-t+","+-t+"L"+t+","+-t+" "+t+","+t+" "+-t+","+t+"Z"},"triangle-down":function(e){var t=Math.sqrt(e/bu),n=t*bu/2;return"M0,"+n+"L"+t+","+-n+" "+-t+","+-n+"Z"},"triangle-up":function(e){var t=Math.sqrt(e/bu),n=t*bu/2;return"M0,"+-n+"L"+t+","+n+" "+-t+","+n+"Z"}});i.svg.symbolTypes=yu.keys();var bu=Math.sqrt(3),xu=Math.tan(30*Be);G.transition=function(e){for(var t,n,r=Pu||++_u,a=Cu(e),i=[],o=ku||{time:Date.now(),ease:di,delay:0,duration:250},u=-1,l=this.length;++u<l;){i.push(t=[]);for(var s=this[u],c=-1,f=s.length;++c<f;)(n=s[c])&&Au(n,c,a,r,o),t.push(n)}return Mu(i,a,r)},G.interrupt=function(e){return this.each(null==e?wu:Eu(Cu(e)))};var wu=Eu(Cu());function Eu(e){return function(){var t,n,r;(t=this[e])&&(r=t[n=t.active])&&(r.timer.c=null,r.timer.t=NaN,--t.count?delete t[n]:delete this[e],t.active+=.5,r.event&&r.event.interrupt.call(this,this.__data__,r.index))}}function Mu(e,t,n){return Y(e,Su),e.namespace=t,e.id=n,e}var Pu,ku,Su=[],_u=0;function Tu(e,t,n,r){var a=e.id,i=e.namespace;return he(e,"function"==typeof n?function(e,o,u){e[i][a].tween.set(t,r(n.call(e,e.__data__,o,u)))}:(n=r(n),function(e){e[i][a].tween.set(t,n)}))}function Nu(e){return null==e&&(e=""),function(){this.textContent=e}}function Cu(e){return null==e?"__transition__":"__transition_"+e+"__"}function Au(e,t,n,r,a){var i,o,u,l,s,c=e[n]||(e[n]={active:0,count:0}),f=c[r];function p(n){var a=c.active,p=c[a];for(var h in p&&(p.timer.c=null,p.timer.t=NaN,--c.count,delete c[a],p.event&&p.event.interrupt.call(e,e.__data__,p.index)),c)if(+h<r){var m=c[h];m.timer.c=null,m.timer.t=NaN,--c.count,delete c[h]}o.c=d,St((function(){return o.c&&d(n||1)&&(o.c=null,o.t=NaN),1}),0,i),c.active=r,f.event&&f.event.start.call(e,e.__data__,t),s=[],f.tween.forEach((function(n,r){(r=r.call(e,e.__data__,t))&&s.push(r)})),l=f.ease,u=f.duration}function d(a){for(var i=a/u,o=l(i),p=s.length;p>0;)s[--p].call(e,o);if(i>=1)return f.event&&f.event.end.call(e,e.__data__,t),--c.count?delete c[r]:delete e[n],1}f||(i=a.time,o=St((function(e){var t=f.delay;if(o.t=t+i,t<=e)return p(e-t);o.c=p}),0,i),f=c[r]={tween:new k,time:i,timer:o,delay:a.delay,duration:a.duration,ease:a.ease,index:t},a=null,++c.count)}Su.call=G.call,Su.empty=G.empty,Su.node=G.node,Su.size=G.size,i.transition=function(e,t){return e&&e.transition?Pu?e.transition(t):e:i.selection().transition(e)},i.transition.prototype=Su,Su.select=function(e){var t,n,r,a=this.id,i=this.namespace,o=[];e=X(e);for(var u=-1,l=this.length;++u<l;){o.push(t=[]);for(var s=this[u],c=-1,f=s.length;++c<f;)(r=s[c])&&(n=e.call(r,r.__data__,c,u))?("__data__"in r&&(n.__data__=r.__data__),Au(n,c,i,a,r[i][a]),t.push(n)):t.push(null)}return Mu(o,i,a)},Su.selectAll=function(e){var t,n,r,a,i,o=this.id,u=this.namespace,l=[];e=Z(e);for(var s=-1,c=this.length;++s<c;)for(var f=this[s],p=-1,d=f.length;++p<d;)if(r=f[p]){i=r[u][o],n=e.call(r,r.__data__,p,s),l.push(t=[]);for(var h=-1,m=n.length;++h<m;)(a=n[h])&&Au(a,h,u,o,i),t.push(a)}return Mu(l,u,o)},Su.filter=function(e){var t,n,r=[];"function"!=typeof e&&(e=pe(e));for(var a=0,i=this.length;a<i;a++){r.push(t=[]);for(var o,u=0,l=(o=this[a]).length;u<l;u++)(n=o[u])&&e.call(n,n.__data__,u,a)&&t.push(n)}return Mu(r,this.namespace,this.id)},Su.tween=function(e,t){var n=this.id,r=this.namespace;return arguments.length<2?this.node()[r][n].tween.get(e):he(this,null==t?function(t){t[r][n].tween.remove(e)}:function(a){a[r][n].tween.set(e,t)})},Su.attr=function(e,t){if(arguments.length<2){for(t in e)this.attr(t,e[t]);return this}var n="transform"==e?Pi:ri,r=i.ns.qualify(e);function a(){this.removeAttribute(r)}function o(){this.removeAttributeNS(r.space,r.local)}function u(e){return null==e?a:(e+="",function(){var t,a=this.getAttribute(r);return a!==e&&(t=n(a,e),function(e){this.setAttribute(r,t(e))})})}function l(e){return null==e?o:(e+="",function(){var t,a=this.getAttributeNS(r.space,r.local);return a!==e&&(t=n(a,e),function(e){this.setAttributeNS(r.space,r.local,t(e))})})}return Tu(this,"attr."+e,t,r.local?l:u)},Su.attrTween=function(e,t){var n=i.ns.qualify(e);return this.tween("attr."+e,n.local?function(e,r){var a=t.call(this,e,r,this.getAttributeNS(n.space,n.local));return a&&function(e){this.setAttributeNS(n.space,n.local,a(e))}}:function(e,r){var a=t.call(this,e,r,this.getAttribute(n));return a&&function(e){this.setAttribute(n,a(e))}})},Su.style=function(e,t,n){var r=arguments.length;if(r<3){if("string"!=typeof e){for(n in r<2&&(t=""),e)this.style(n,e[n],t);return this}n=""}function a(){this.style.removeProperty(e)}function i(t){return null==t?a:(t+="",function(){var r,a=c(this).getComputedStyle(this,null).getPropertyValue(e);return a!==t&&(r=ri(a,t),function(t){this.style.setProperty(e,r(t),n)})})}return Tu(this,"style."+e,t,i)},Su.styleTween=function(e,t,n){function r(r,a){var i=t.call(this,r,a,c(this).getComputedStyle(this,null).getPropertyValue(e));return i&&function(t){this.style.setProperty(e,i(t),n)}}return arguments.length<3&&(n=""),this.tween("style."+e,r)},Su.text=function(e){return Tu(this,"text",e,Nu)},Su.remove=function(){var e=this.namespace;return this.each("end.transition",(function(){var t;this[e].count<2&&(t=this.parentNode)&&t.removeChild(this)}))},Su.ease=function(e){var t=this.id,n=this.namespace;return arguments.length<1?this.node()[n][t].ease:("function"!=typeof e&&(e=i.ease.apply(i,arguments)),he(this,(function(r){r[n][t].ease=e})))},Su.delay=function(e){var t=this.id,n=this.namespace;return arguments.length<1?this.node()[n][t].delay:he(this,"function"==typeof e?function(r,a,i){r[n][t].delay=+e.call(r,r.__data__,a,i)}:(e=+e,function(r){r[n][t].delay=e}))},Su.duration=function(e){var t=this.id,n=this.namespace;return arguments.length<1?this.node()[n][t].duration:he(this,"function"==typeof e?function(r,a,i){r[n][t].duration=Math.max(1,e.call(r,r.__data__,a,i))}:(e=Math.max(1,e),function(r){r[n][t].duration=e}))},Su.each=function(e,t){var n=this.id,r=this.namespace;if(arguments.length<2){var a=ku,o=Pu;try{Pu=n,he(this,(function(t,a,i){ku=t[r][n],e.call(t,t.__data__,a,i)}))}finally{ku=a,Pu=o}}else he(this,(function(a){var o=a[r][n];(o.event||(o.event=i.dispatch("start","end","interrupt"))).on(e,t)}));return this},Su.transition=function(){for(var e,t,n,r=this.id,a=++_u,i=this.namespace,o=[],u=0,l=this.length;u<l;u++){o.push(e=[]);for(var s,c=0,f=(s=this[u]).length;c<f;c++)(t=s[c])&&Au(t,c,i,a,{time:(n=t[i][r]).time,ease:n.ease,delay:n.delay+n.duration,duration:n.duration}),e.push(t)}return Mu(o,i,a)},i.svg.axis=function(){var e,t=i.scale.linear(),n=Ou,r=6,a=6,o=3,l=[10],s=null;function c(u){u.each((function(){var u,c=i.select(this),f=this.__chart__||t,p=this.__chart__=t.copy(),d=null==s?p.ticks?p.ticks.apply(p,l):p.domain():s,h=null==e?p.tickFormat?p.tickFormat.apply(p,l):B:e,m=c.selectAll(".tick").data(d,p),g=m.enter().insert("g",".domain").attr("class","tick").style("opacity",Te),v=i.transition(m.exit()).style("opacity",Te).remove(),y=i.transition(m.order()).style("opacity",1),b=Math.max(r,0)+o,x=xo(p),w=c.selectAll(".domain").data([0]),E=(w.enter().append("path").attr("class","domain"),i.transition(w));g.append("line"),g.append("text");var M,P,k,S,_=g.select("line"),T=y.select("line"),N=m.select("text").text(h),C=g.select("text"),A=y.select("text"),O="top"===n||"left"===n?-1:1;if("bottom"===n||"top"===n?(u=Bu,M="x",k="y",P="x2",S="y2",N.attr("dy",O<0?"0em":".71em").style("text-anchor","middle"),E.attr("d","M"+x[0]+","+O*a+"V0H"+x[1]+"V"+O*a)):(u=Iu,M="y",k="x",P="y2",S="x2",N.attr("dy",".32em").style("text-anchor",O<0?"end":"start"),E.attr("d","M"+O*a+","+x[0]+"H0V"+x[1]+"H"+O*a)),_.attr(S,O*r),C.attr(k,O*b),T.attr(P,0).attr(S,O*r),A.attr(M,0).attr(k,O*b),p.rangeBand){var D=p,I=D.rangeBand()/2;f=p=function(e){return D(e)+I}}else f.rangeBand?f=p:v.call(u,p,f);g.call(u,f,p),y.call(u,p,p)}))}return c.scale=function(e){return arguments.length?(t=e,c):t},c.orient=function(e){return arguments.length?(n=e in Du?e+"":Ou,c):n},c.ticks=function(){return arguments.length?(l=u(arguments),c):l},c.tickValues=function(e){return arguments.length?(s=e,c):s},c.tickFormat=function(t){return arguments.length?(e=t,c):e},c.tickSize=function(e){var t=arguments.length;return t?(r=+e,a=+arguments[t-1],c):r},c.innerTickSize=function(e){return arguments.length?(r=+e,c):r},c.outerTickSize=function(e){return arguments.length?(a=+e,c):a},c.tickPadding=function(e){return arguments.length?(o=+e,c):o},c.tickSubdivide=function(){return arguments.length&&c},c};var Ou="bottom",Du={top:1,right:1,bottom:1,left:1};function Bu(e,t,n){e.attr("transform",(function(e){var r=t(e);return"translate("+(isFinite(r)?r:n(e))+",0)"}))}function Iu(e,t,n){e.attr("transform",(function(e){var r=t(e);return"translate(0,"+(isFinite(r)?r:n(e))+")"}))}i.svg.brush=function(){var e,t,n=q(p,"brushstart","brush","brushend"),r=null,a=null,o=[0,0],u=[0,0],l=!0,s=!0,f=Lu[0];function p(e){e.each((function(){var e=i.select(this).style("pointer-events","all").style("-webkit-tap-highlight-color","rgba(0,0,0,0)").on("mousedown.brush",g).on("touchstart.brush",g),t=e.selectAll(".background").data([0]);t.enter().append("rect").attr("class","background").style("visibility","hidden").style("cursor","crosshair"),e.selectAll(".extent").data([0]).enter().append("rect").attr("class","extent").style("cursor","move");var n=e.selectAll(".resize").data(f,B);n.exit().remove(),n.enter().append("g").attr("class",(function(e){return"resize "+e})).style("cursor",(function(e){return zu[e]})).append("rect").attr("x",(function(e){return/[ew]$/.test(e)?-3:null})).attr("y",(function(e){return/^[ns]/.test(e)?-3:null})).attr("width",6).attr("height",6).style("visibility","hidden"),n.style("display",p.empty()?"none":null);var o,u=i.transition(e),l=i.transition(t);r&&(o=xo(r),l.attr("x",o[0]).attr("width",o[1]-o[0]),h(u)),a&&(o=xo(a),l.attr("y",o[0]).attr("height",o[1]-o[0]),m(u)),d(u)}))}function d(e){e.selectAll(".resize").attr("transform",(function(e){return"translate("+o[+/e$/.test(e)]+","+u[+/^s/.test(e)]+")"}))}function h(e){e.select(".extent").attr("x",o[0]),e.selectAll(".extent,.n>rect,.s>rect").attr("width",o[1]-o[0])}function m(e){e.select(".extent").attr("y",u[0]),e.selectAll(".extent,.e>rect,.w>rect").attr("height",u[1]-u[0])}function g(){var f,g,v=this,y=i.select(i.event.target),b=n.of(v,arguments),x=i.select(v),w=y.datum(),E=!/^(n|s)$/.test(w)&&r,M=!/^(e|w)$/.test(w)&&a,P=y.classed("extent"),k=Pe(v),S=i.mouse(v),_=i.select(c(v)).on("keydown.brush",C).on("keyup.brush",A);if(i.event.changedTouches?_.on("touchmove.brush",O).on("touchend.brush",B):_.on("mousemove.brush",O).on("mouseup.brush",B),x.interrupt().selectAll("*").interrupt(),P)S[0]=o[0]-S[0],S[1]=u[0]-S[1];else if(w){var T=+/w$/.test(w),N=+/^n/.test(w);g=[o[1-T]-S[0],u[1-N]-S[1]],S[0]=o[T],S[1]=u[N]}else i.event.altKey&&(f=S.slice());function C(){32==i.event.keyCode&&(P||(f=null,S[0]-=o[1],S[1]-=u[1],P=2),U())}function A(){32==i.event.keyCode&&2==P&&(S[0]+=o[1],S[1]+=u[1],P=0,U())}function O(){var e=i.mouse(v),t=!1;g&&(e[0]+=g[0],e[1]+=g[1]),P||(i.event.altKey?(f||(f=[(o[0]+o[1])/2,(u[0]+u[1])/2]),S[0]=o[+(e[0]<f[0])],S[1]=u[+(e[1]<f[1])]):f=null),E&&D(e,r,0)&&(h(x),t=!0),M&&D(e,a,1)&&(m(x),t=!0),t&&(d(x),b({type:"brush",mode:P?"move":"resize"}))}function D(n,r,a){var i,c,p=xo(r),d=p[0],h=p[1],m=S[a],g=a?u:o,v=g[1]-g[0];if(P&&(d-=m,h-=v+m),i=(a?s:l)?Math.max(d,Math.min(h,n[a])):n[a],P?c=(i+=m)+v:(f&&(m=Math.max(d,Math.min(h,2*f[a]-i))),m<i?(c=i,i=m):c=m),g[0]!=i||g[1]!=c)return a?t=null:e=null,g[0]=i,g[1]=c,!0}function B(){O(),x.style("pointer-events","all").selectAll(".resize").style("display",p.empty()?"none":null),i.select("body").style("cursor",null),_.on("mousemove.brush",null).on("mouseup.brush",null).on("touchmove.brush",null).on("touchend.brush",null).on("keydown.brush",null).on("keyup.brush",null),k(),b({type:"brushend"})}x.style("pointer-events","none").selectAll(".resize").style("display",null),i.select("body").style("cursor",y.style("cursor")),b({type:"brushstart"}),O()}return p.event=function(r){r.each((function(){var r=n.of(this,arguments),a={x:o,y:u,i:e,j:t},l=this.__chart__||a;this.__chart__=a,Pu?i.select(this).transition().each("start.brush",(function(){e=l.i,t=l.j,o=l.x,u=l.y,r({type:"brushstart"})})).tween("brush:brush",(function(){var n=ai(o,a.x),i=ai(u,a.y);return e=t=null,function(e){o=a.x=n(e),u=a.y=i(e),r({type:"brush",mode:"resize"})}})).each("end.brush",(function(){e=a.i,t=a.j,r({type:"brush",mode:"resize"}),r({type:"brushend"})})):(r({type:"brushstart"}),r({type:"brush",mode:"resize"}),r({type:"brushend"}))}))},p.x=function(e){return arguments.length?(f=Lu[!(r=e)<<1|!a],p):r},p.y=function(e){return arguments.length?(f=Lu[!r<<1|!(a=e)],p):a},p.clamp=function(e){return arguments.length?(r&&a?(l=!!e[0],s=!!e[1]):r?l=!!e:a&&(s=!!e),p):r&&a?[l,s]:r?l:a?s:null},p.extent=function(n){var i,l,s,c,f;return arguments.length?(r&&(i=n[0],l=n[1],a&&(i=i[0],l=l[0]),e=[i,l],r.invert&&(i=r(i),l=r(l)),l<i&&(f=i,i=l,l=f),i==o[0]&&l==o[1]||(o=[i,l])),a&&(s=n[0],c=n[1],r&&(s=s[1],c=c[1]),t=[s,c],a.invert&&(s=a(s),c=a(c)),c<s&&(f=s,s=c,c=f),s==u[0]&&c==u[1]||(u=[s,c])),p):(r&&(e?(i=e[0],l=e[1]):(i=o[0],l=o[1],r.invert&&(i=r.invert(i),l=r.invert(l)),l<i&&(f=i,i=l,l=f))),a&&(t?(s=t[0],c=t[1]):(s=u[0],c=u[1],a.invert&&(s=a.invert(s),c=a.invert(c)),c<s&&(f=s,s=c,c=f))),r&&a?[[i,s],[l,c]]:r?[i,l]:a&&[s,c])},p.clear=function(){return p.empty()||(o=[0,0],u=[0,0],e=t=null),p},p.empty=function(){return!!r&&o[0]==o[1]||!!a&&u[0]==u[1]},i.rebind(p,n,"on")};var zu={n:"ns-resize",e:"ew-resize",s:"ns-resize",w:"ew-resize",nw:"nwse-resize",ne:"nesw-resize",se:"nwse-resize",sw:"nesw-resize"},Lu=[["n","e","s","w","nw","ne","se","sw"],["e","w"],["n","s"],[]],Ru=zt.format=pn.timeFormat,Fu=Ru.utc,ju=Fu("%Y-%m-%dT%H:%M:%S.%LZ");function Uu(e){return e.toISOString()}function Vu(e,t,n){function r(t){return e(t)}function a(e,n){var r=(e[1]-e[0])/n,a=i.bisect($u,r);return a==$u.length?[t.year,To(e.map((function(e){return e/31536e6})),n)[2]]:a?t[r/$u[a-1]<$u[a]/r?a-1:a]:[Wu,To(e,n)[2]]}return r.invert=function(t){return qu(e.invert(t))},r.domain=function(t){return arguments.length?(e.domain(t),r):e.domain().map(qu)},r.nice=function(e,t){var n=r.domain(),i=bo(n),o=null==e?a(i,10):"number"==typeof e&&a(i,e);function u(n){return!isNaN(n)&&!e.range(n,qu(+n+1),t).length}return o&&(e=o[0],t=o[1]),r.domain(Eo(n,t>1?{floor:function(t){for(;u(t=e.floor(t));)t=qu(t-1);return t},ceil:function(t){for(;u(t=e.ceil(t));)t=qu(+t+1);return t}}:e))},r.ticks=function(e,t){var n=bo(r.domain()),i=null==e?a(n,10):"number"==typeof e?a(n,e):!e.range&&[{range:e},t];return i&&(e=i[0],t=i[1]),e.range(n[0],qu(+n[1]+1),t<1?1:t)},r.tickFormat=function(){return n},r.copy=function(){return Vu(e.copy(),t,n)},So(r,e)}function qu(e){return new Date(e)}Ru.iso=Date.prototype.toISOString&&+new Date("2000-01-01T00:00:00.000Z")?Uu:ju,Uu.parse=function(e){var t=new Date(e);return isNaN(t)?null:t},Uu.toString=ju.toString,zt.second=jt((function(e){return new Lt(1e3*Math.floor(e/1e3))}),(function(e,t){e.setTime(e.getTime()+1e3*Math.floor(t))}),(function(e){return e.getSeconds()})),zt.seconds=zt.second.range,zt.seconds.utc=zt.second.utc.range,zt.minute=jt((function(e){return new Lt(6e4*Math.floor(e/6e4))}),(function(e,t){e.setTime(e.getTime()+6e4*Math.floor(t))}),(function(e){return e.getMinutes()})),zt.minutes=zt.minute.range,zt.minutes.utc=zt.minute.utc.range,zt.hour=jt((function(e){var t=e.getTimezoneOffset()/60;return new Lt(36e5*(Math.floor(e/36e5-t)+t))}),(function(e,t){e.setTime(e.getTime()+36e5*Math.floor(t))}),(function(e){return e.getHours()})),zt.hours=zt.hour.range,zt.hours.utc=zt.hour.utc.range,zt.month=jt((function(e){return(e=zt.day(e)).setDate(1),e}),(function(e,t){e.setMonth(e.getMonth()+t)}),(function(e){return e.getMonth()})),zt.months=zt.month.range,zt.months.utc=zt.month.utc.range;var $u=[1e3,5e3,15e3,3e4,6e4,3e5,9e5,18e5,36e5,108e5,216e5,432e5,864e5,1728e5,6048e5,2592e6,7776e6,31536e6],Yu=[[zt.second,1],[zt.second,5],[zt.second,15],[zt.second,30],[zt.minute,1],[zt.minute,5],[zt.minute,15],[zt.minute,30],[zt.hour,1],[zt.hour,3],[zt.hour,6],[zt.hour,12],[zt.day,1],[zt.day,2],[zt.week,1],[zt.month,1],[zt.month,3],[zt.year,1]],Hu=Ru.multi([[".%L",function(e){return e.getMilliseconds()}],[":%S",function(e){return e.getSeconds()}],["%I:%M",function(e){return e.getMinutes()}],["%I %p",function(e){return e.getHours()}],["%a %d",function(e){return e.getDay()&&1!=e.getDate()}],["%b %d",function(e){return 1!=e.getDate()}],["%B",function(e){return e.getMonth()}],["%Y",Xn]]),Wu={range:function(e,t,n){return i.range(Math.ceil(e/n)*n,+t,n).map(qu)},floor:B,ceil:B};Yu.year=zt.year,zt.scale=function(){return Vu(i.scale.linear(),Yu,Hu)};var Qu=Yu.map((function(e){return[e[0].utc,e[1]]})),Ku=Fu.multi([[".%L",function(e){return e.getUTCMilliseconds()}],[":%S",function(e){return e.getUTCSeconds()}],["%I:%M",function(e){return e.getUTCMinutes()}],["%I %p",function(e){return e.getUTCHours()}],["%a %d",function(e){return e.getUTCDay()&&1!=e.getUTCDate()}],["%b %d",function(e){return 1!=e.getUTCDate()}],["%B",function(e){return e.getUTCMonth()}],["%Y",Xn]]);function Gu(e){return JSON.parse(e.responseText)}function Xu(e){var t=l.createRange();return t.selectNode(l.body),t.createContextualFragment(e.responseText)}Qu.year=zt.year.utc,zt.scale.utc=function(){return Vu(i.scale.linear(),Qu,Ku)},i.text=bt((function(e){return e.responseText})),i.json=function(e,t){return xt(e,"application/json",Gu,t)},i.html=function(e,t){return xt(e,"text/html",Xu,t)},i.xml=bt((function(e){return e.responseXML})),this.d3=i,void 0===(a="function"==typeof(r=i)?r.call(t,n,t,e):r)||(e.exports=a)}()},function(e){e.exports=JSON.parse('[{"name":"Tom Brady","nickname":"brady","age":{"first":23,"last":43},"awards":{"2000":[],"2001":["PB","SB"],"2002":[],"2003":["SB"],"2004":["PB","SB"],"2005":["PB","AP2"],"2006":[],"2007":["PB","OP","AP1","MVP","SB"],"2008":[],"2009":["PB"],"2010":["PB","OP","AP1","MVP"],"2011":["PB","SB"],"2012":["PB"],"2013":["PB"],"2014":["PB","SB"],"2015":["PB"],"2016":["PB","AP2","SB"],"2017":["PB","AP1","MVP","SB"],"2018":["PB","SB"],"2019":[],"2020":[]},"pics":["brady1.png","brady2.png","brady5.png","brady6.png","brady7.png","brady8.png"],"teams":[{"team":"patriots","start":2000,"end":2019,"careerStart":1,"careerEnd":20},{"team":"bucaneers","start":2020,"end":2020,"careerStart":21,"careerEnd":21}],"totals":{"MVP":"3","AP":"5","OP":"2","PB":"14"},"championships":[2001,2003,2004,2014,2016,2018],"finals":[2001,2003,2004,2007,2011,2014,2016,2017,2018]},{"name":"Peyton Manning","nickname":"peyton","age":{"first":22,"last":39},"awards":{"1998":[],"1999":["PB","AP2"],"2000":["PB","AP2"],"2001":[],"2002":["PB"],"2003":["PB","AP1","MVP"],"2004":["PB","OP","AP1","MVP"],"2005":["PB","AP1"],"2006":["PB","AP2","SB"],"2007":["PB"],"2008":["PB","AP1","MVP"],"2009":["PB","AP1","MVP","SB"],"2010":["PB"],"2011":[],"2012":["PB","AP1"],"2013":["PB","OP","AP1","MVP","SB"],"2014":["PB"],"2015":["SB"]},"pics":["peyton3.png","peyton4.png","peyton5.png"],"teams":[{"team":"colts","start":1998,"end":2011,"careerStart":1,"careerEnd":14},{"team":"broncos","start":2012,"end":2015,"careerStart":15,"careerEnd":18}],"totals":{"MVP":"5","AP":"10","OP":"2","PB":"14"},"championships":[2006,2015],"finals":[2006,2009,2013,2015]},{"name":"Aaron Rodgers","nickname":"rodgers","age":{"first":22,"last":37},"awards":{"2005":[],"2006":[],"2007":[],"2008":[],"2009":["PB"],"2010":["SB"],"2011":["PB","AP1","MVP"],"2012":["PB","AP2"],"2013":[],"2014":["PB","AP1","MVP"],"2015":["PB"],"2016":["PB"],"2017":[],"2018":["PB"],"2019":["PB"],"2020":[]},"pics":["rodgers1.png","rodgers2.png","rodgers3.png"],"teams":[{"team":"packers","start":2005,"end":2020,"careerStart":1,"careerEnd":16}],"totals":{"MVP":"2","AP":"3","OP":"0","PB":"8"},"championships":[2010],"finals":[2010]},{"name":"Drew Brees","nickname":"brees","age":{"first":22,"last":41},"awards":{"2001":[],"2002":[],"2003":[],"2004":["PB"],"2005":[],"2006":["PB","AP1"],"2007":[],"2008":["PB","OP","AP2"],"2009":["PB","AP2","SB"],"2010":["PB"],"2011":["PB","OP","AP2"],"2012":["PB"],"2013":["PB"],"2014":["PB"],"2015":[],"2016":["PB"],"2017":["PB"],"2018":["PB","AP2"],"2019":["PB"],"2020":[]},"pics":["brees1.png","brees2.png","brees3.png"],"teams":[{"team":"chargers","start":2001,"end":2005,"careerStart":1,"careerEnd":5},{"team":"saints","start":2006,"end":2020,"careerStart":6,"careerEnd":20}],"totals":{"MVP":"0","AP":"5","OP":"2","PB":"13"},"championships":[2009],"finals":[2009]},{"name":"Joe Montana","nickname":"montana","age":{"first":23,"last":38},"awards":{"1979":[],"1980":[],"1981":["PB","AP2","SB"],"1982":[],"1983":["PB","AP2"],"1984":["PB","AP2","SB"],"1985":["PB"],"1986":[],"1987":["PB","AP1"],"1988":["SB"],"1989":["PB","OP","AP1","MVP","SB"],"1990":["PB","AP1","MVP"],"1991":[],"1992":[],"1993":["PB"],"1994":[]},"pics":["montana1.png","montana2.png"],"teams":[{"team":"niners","start":1979,"end":1992,"careerStart":1,"careerEnd":14},{"team":"chiefs","start":1993,"end":1994,"careerStart":15,"careerEnd":16}],"totals":{"MVP":"2","AP":"6","OP":"1","PB":"8"},"championships":[1981,1984,1988,1989],"finals":[1981,1984,1988,1989]},{"name":"John Elway","nickname":"elway","age":{"first":23,"last":38},"awards":{"1983":[],"1984":[],"1985":[],"1986":["PB","SB"],"1987":["PB","AP1","MVP","SB"],"1988":[],"1989":["PB","SB"],"1990":[],"1991":["PB"],"1992":[],"1993":["PB","AP2"],"1994":["PB"],"1995":[],"1996":["PB","AP2"],"1997":["PB","SB"],"1998":["PB","SB"]},"pics":["elway1.png","elway2.png","elway3.png"],"teams":[{"team":"broncos","start":1983,"end":1998,"careerStart":1,"careerEnd":16}],"totals":{"MVP":"1","AP":"3","OP":"0","PB":"9"},"championships":[1997,1998],"finals":[1986,1987,1989,1997,1998]},{"name":"Brett Favre","nickname":"favre","age":{"first":22,"last":41},"awards":{"1991":[],"1992":["PB"],"1993":["PB"],"1994":[],"1995":["PB","OP","AP1","MVP"],"1996":["PB","AP1","MVP","SB"],"1997":["PB","AP1","MVP","SB"],"1998":[],"1999":[],"2000":[],"2001":["PB","AP2"],"2002":["PB","AP2"],"2003":["PB"],"2004":[],"2005":[],"2006":[],"2007":["PB","AP2"],"2008":["PB"],"2009":["PB"],"2010":[]},"pics":["favre1.png","favre2.png","favre3.png"],"teams":[{"team":"falcons","start":1991,"end":1991,"careerStart":1,"careerEnd":1},{"team":"packers","start":1992,"end":2007,"careerStart":2,"careerEnd":16},{"team":"jets","start":2008,"end":2008,"careerStart":17,"careerEnd":17},{"team":"vikings","start":2009,"end":2010,"careerStart":18,"careerEnd":19}],"totals":{"MVP":"3","AP":"6","OP":"1","PB":"11"},"championships":[1996],"finals":[1996,1997]},{"name":"Dan Marino","nickname":"marino","age":{"first":22,"last":38},"awards":{"1983":["PB","AP2"],"1984":["PB","OP","AP1","MVP","SB"],"1985":["PB","AP1"],"1986":["PB","AP1"],"1987":["PB"],"1988":["AP2"],"1989":[],"1990":[],"1991":["PB"],"1992":["PB","AP2"],"1993":[],"1994":["PB","AP2"],"1995":["PB","AP2"],"1996":[],"1997":[],"1998":[],"1999":[]},"pics":["marino1.png"],"teams":[{"team":"dolphins","start":1983,"end":1999,"careerStart":1,"careerEnd":17}],"totals":{"MVP":"1","AP":"8","OP":"1","PB":"9"},"championships":[],"finals":[1984]},{"name":"Roger Staubach","nickname":"staubach","age":{"first":27,"last":37},"awards":{"1969":[],"1970":[],"1971":["PB","AP2","SB"],"1972":[],"1973":[],"1974":[],"1975":["PB","SB"],"1976":["PB"],"1977":["PB","SB"],"1978":["PB","SB"],"1979":["PB"]},"pics":["staubach1.png","staubach2.png"],"teams":[{"team":"cowboys","start":1969,"end":1979,"careerStart":1,"careerEnd":11}],"totals":{"MVP":"0","AP":"1","OP":"0","PB":"6"},"championships":[1971,1977],"finals":[1971,1975,1977,1978]},{"name":"Johnny Unitas","nickname":"unitas","age":{"first":23,"last":40},"awards":{"1956":[],"1957":["PB","AP2"],"1958":["PB","AP1"],"1959":["PB","AP1","MVP"],"1960":["PB","AP2"],"1961":["PB"],"1962":["PB"],"1963":["PB","AP2"],"1964":["PB","AP1","MVP"],"1965":["AP1"],"1966":["PB"],"1967":["PB","AP1","MVP"],"1968":["SB"],"1969":[],"1970":["SB"],"1971":[],"1972":[],"1973":[]},"pics":["unitas1.png"],"teams":[{"team":"colts","start":1956,"end":1972,"careerStart":1,"careerEnd":17},{"team":"chargers","start":1973,"end":1973,"careerStart":18,"careerEnd":18}],"totals":{"MVP":"3","AP":"8","OP":"0","PB":"10"},"championships":[1970],"finals":[1968,1970]},{"name":"Russell Wilson","nickname":"russell","age":{"first":24,"last":32},"awards":{"2012":["PB"],"2013":["PB","SB"],"2014":["PB","SB"],"2015":["PB"],"2016":[],"2017":["PB"],"2018":["PB"],"2019":["PB","AP2"],"2020":[]},"pics":["russell1.png","russell2.png","russell3.png"],"teams":[{"team":"seahawks","start":2012,"end":2020,"careerStart":1,"careerEnd":9}],"totals":{"MVP":"0","AP":"1","OP":"0","PB":"7"},"championships":[2013],"finals":[2013,2014]},{"name":"Steve Young","nickname":"young","age":{"first":24,"last":38},"awards":{"1985":[],"1986":[],"1987":[],"1988":[],"1989":[],"1990":[],"1991":[],"1992":["PB","OP","AP1","MVP"],"1993":["PB","AP1"],"1994":["PB","AP1","MVP","SB"],"1995":["PB","AP2"],"1996":["PB"],"1997":["PB","AP2"],"1998":["PB","AP2"],"1999":[]},"pics":["young1.png","young2.png","young3.png"],"teams":[{"team":"bucaneers","start":1985,"end":1986,"careerStart":1,"careerEnd":2},{"team":"niners","start":1987,"end":1999,"careerStart":3,"careerEnd":15}],"totals":{"MVP":"2","AP":"6","OP":"1","PB":"7"},"championships":[1994],"finals":[1994]},{"name":"Otto Graham","nickname":"otto","age":{"first":25,"last":34},"awards":{"1946":[],"1947":[],"1948":[],"1949":[],"1950":["PB"],"1951":["PB","AP1","MVP"],"1952":["PB","AP2"],"1953":["PB","AP1","MVP"],"1954":["PB","AP1"],"1955":["AP1","MVP"]},"pics":["otto1.png"],"teams":[{"team":"browns","start":1946,"end":1955,"careerStart":1,"careerEnd":10}],"totals":{"MVP":"3","AP":"5","OP":"0","PB":"5"},"championships":[],"finals":[]},{"name":"Bart Starr","nickname":"starr","age":{"first":25,"last":37},"awards":{"1956":[],"1957":[],"1958":[],"1959":[],"1960":["PB"],"1961":["PB","AP2"],"1962":["PB","AP2"],"1963":[],"1964":["AP2"],"1965":[],"1966":["PB","AP1","MVP","SB"],"1967":["SB"],"1968":[],"1969":[],"1970":[],"1971":[]},"pics":["starr1.png","starr2.png"],"teams":[{"team":"packers","start":1956,"end":1971,"careerStart":1,"careerEnd":16}],"totals":{"MVP":"1","AP":"4","OP":"0","PB":"4"},"championships":[1966,1967],"finals":[1966,1967]},{"name":"Fran Tarkenton","nickname":"tarkenton","age":{"first":21,"last":38},"awards":{"1961":[],"1962":[],"1963":[],"1964":["PB"],"1965":["PB"],"1966":[],"1967":["PB"],"1968":["PB"],"1969":["PB"],"1970":["PB"],"1971":[],"1972":[],"1973":["AP2","SB"],"1974":["PB","SB"],"1975":["PB","AP1","MVP"],"1976":["PB","SB"],"1977":[],"1978":[]},"pics":["tarkenton1.png","tarkenton2.png"],"teams":[{"team":"vikings","start":1961,"end":1966,"careerStart":1,"careerEnd":6},{"team":"giants","start":1967,"end":1971,"careerStart":7,"careerEnd":11},{"team":"vikings","start":1972,"end":1978,"careerStart":12,"careerEnd":18}],"totals":{"MVP":"1","AP":"2","OP":"1","PB":"9"},"championships":[],"finals":[1973,1974,1976]},{"name":"Troy Aikman","nickname":"aikman","age":{"first":23,"last":34},"awards":{"1989":[],"1990":[],"1991":["PB"],"1992":["PB","SB"],"1993":["PB","SB"],"1994":["PB"],"1995":["PB","SB"],"1996":["PB"],"1997":[],"1998":[],"1999":[],"2000":[]},"pics":["aikman1.png"],"teams":[{"team":"cowboys","start":1989,"end":2000,"careerStart":1,"careerEnd":12}],"totals":{"MVP":"0","AP":"0","OP":"0","PB":"6"},"championships":[1992,1993,1995],"finals":[1992,1993,1995]},{"name":"Terry Bradshaw","nickname":"bradshaw","age":{"first":22,"last":35},"awards":{"1970":[],"1971":[],"1972":[],"1973":[],"1974":["SB"],"1975":["PB","SB"],"1976":[],"1977":[],"1978":["PB","AP1","MVP","SB"],"1979":["PB","AP2","SB"],"1980":[],"1981":[],"1982":[],"1983":[]},"pics":["bradshaw1.png"],"teams":[{"team":"steelers","start":1970,"end":1983,"careerStart":1,"careerEnd":14}],"totals":{"MVP":"1","AP":"2","OP":"0","PB":"3"},"championships":[1974,1975,1978,1979],"finals":[1974,1975,1978,1979]},{"name":"Jim Kelly","nickname":"kelly","age":{"first":26,"last":36},"awards":{"1986":[],"1987":["PB"],"1988":["PB"],"1989":[],"1990":["PB","AP2","SB"],"1991":["PB","AP1","SB"],"1992":["PB","AP2","SB"],"1993":["SB"],"1994":[],"1995":[],"1996":[]},"pics":["kelly1.png"],"teams":[{"team":"bills","start":1986,"end":1996,"careerStart":1,"careerEnd":11}],"totals":{"MVP":"0","AP":"3","OP":"0","PB":"5"},"championships":[],"finals":[1990,1991,1992,1993]},{"name":"Ken Stabler","nickname":"stabler","age":{"first":25,"last":39},"awards":{"1970":[],"1971":[],"1972":[],"1973":["PB"],"1974":["PB","OP","AP1","MVP"],"1975":[],"1976":["PB","AP1","SB"],"1977":["PB"],"1978":[],"1979":[],"1980":[],"1981":[],"1982":[],"1983":[],"1984":[]},"pics":["stabler1.png"],"teams":[{"team":"raiders","start":1970,"end":1979,"careerStart":1,"careerEnd":10},{"team":"oilers","start":1980,"end":1981,"careerStart":11,"careerEnd":12},{"team":"saints","start":1982,"end":1984,"careerStart":13,"careerEnd":15}],"totals":{"MVP":"1","AP":"2","OP":"1","PB":"4"},"championships":[1976],"finals":[1976]},{"name":"Kurt Warner","nickname":"warner","age":{"first":27,"last":38},"awards":{"1998":[],"1999":["PB","AP1","MVP","SB"],"2000":["PB"],"2001":["PB","AP1","MVP","SB"],"2002":[],"2003":[],"2004":[],"2005":[],"2006":[],"2007":[],"2008":["PB","SB"],"2009":[]},"pics":["warner1.png"],"teams":[{"team":"rams","start":1998,"end":2003,"careerStart":1,"careerEnd":6},{"team":"giants","start":2004,"end":2004,"careerStart":7,"careerEnd":7},{"team":"cardinals","start":2005,"end":2009,"careerStart":8,"careerEnd":12}],"totals":{"MVP":"2","AP":"2","OP":"0","PB":"4"},"championships":[1999],"finals":[1999,2001,2008]}]')},function(e,t,n){},function(e,t,n){"use strict";n.r(t);var r=n(0),a=n.n(r),i=n(2),o=n.n(i),u=n(5),l=n.n(u);class s extends a.a.Component{constructor(e){super(e),["onSelectMode"].map(e=>this[e]=this[e].bind(this)),this.state={career:"menuLeft selected",calendar:"",age:"menuRight "}}onSelectMode(e){e.preventDefault();({career:"menuLeft ",calendar:" ",age:"menuRight "})[e.target.value]+="selected",this.props.changeViewMode(e.target.attributes.value.value)}render(){const e=Object.entries({career:"NFL Seasons",calendar:"Calendar Year",age:"Player's Age"}).map(([e,t])=>{const n=l()({menuLeft:"career"===e,menuRight:"age"===e,selected:e===this.props.selected});return a.a.createElement("div",{className:n,onClick:this.onSelectMode,value:e}," ",t," ")});return a.a.createElement("div",{id:"menu"},e)}}class c extends a.a.Component{constructor(e){super(e),["selectPlayer","getPlayerInitials"].map(e=>this[e]=this[e].bind(this)),this.state={}}componentDidMount(){this.setState({selected:this.props.isSelected})}selectPlayer(e){this.props.onPlayerSelect(this.props.player)}getPlayerInitials(e){const t=e.split(" ");return t[0].substr(0,1)+t[1].substr(0,1)}render(){const e="img/"+this.props.player.nickname+"jersey.png";return a.a.createElement("div",{className:"playerNames",id:this.props.player.nickname,onClick:this.selectPlayer},a.a.createElement("img",{src:e,className:this.props.isSelected}))}}var f=n(6),p=n.n(f);class d extends a.a.Component{render(){const e=Math.floor(Math.random()*this.props.pics.length);let t=this.props.images[this.props.nickname][e];return console.log(this.props.images),console.log(t),a.a.createElement("div",{className:"profilePic"},a.a.createElement("img",{src:t}))}}class h extends a.a.Component{render(){return a.a.createElement("div",{className:"playerAwards"},a.a.createElement("div",{className:"titles"},a.a.createElement("img",{src:"img/nfltrophy.png"}),a.a.createElement("h2",null,this.props.championships),a.a.createElement("span",null,"Super Bowl Titles")),a.a.createElement("div",{className:"selections"},a.a.createElement("div",{className:"mvp"},a.a.createElement("h2",null,this.props.totals.MVP),a.a.createElement("span",null,"MVP")),a.a.createElement("div",{className:"opy"},a.a.createElement("h2",null,this.props.totals.OP),a.a.createElement("span",null,"Offensive Player of the Year")),a.a.createElement("div",{className:"allpro"},a.a.createElement("h2",null,this.props.totals.AP),a.a.createElement("span",null,"All Pro")),a.a.createElement("div",{className:"probowl"},a.a.createElement("h2",null,this.props.totals.PB),a.a.createElement("span",null,"Pro Bowl"))))}}class m extends a.a.Component{constructor(e){super(e),["getPlayerCalendarYears","getPlayerAgeYears","getPlayerCareerYears"].map(e=>this[e]=this[e].bind(this)),this.state={playerCalendarYears:[],playerAgeYears:[],playerCareerYears:[]}}componentWillMount(){this.setState({playerCalendarYears:this.getPlayerCalendarYears(Object.keys(this.props.playerData.awards)),playerAgeYears:this.getPlayerAgeYears(this.props.rookieYear,this.props.debutAge,Object.keys(this.props.playerData.awards)),playerCareerYears:this.getPlayerCareerYears(Object.keys(this.props.playerData.awards))})}getPlayerCalendarYears(e){let t=[],n=e[e.length-1];for(let r=e[0];r<=n;r++)t.push(parseInt(r));return t}getPlayerAgeYears(e,t,n){let r=[],a=0,i=n[n.length-1];for(var o=e;o<=i;o++)a=t+(o-e),r.push(a);return r}getPlayerCareerYears(e){for(var t=[],n=1;n<=e.length;n++)t.push(n);return t}render(){var e=this,t=d3.scale.ordinal().domain(this.props.yearsPlayed).rangeBands([10,455],.1),n=this.props.championships.map((function(n,r){var i,o=t.rangeBand();if("career"===e.props.mode){var u=Object.keys(e.props.playerData.awards);i=t(u.indexOf(n.toString())+1)}else if("age"===e.props.mode){var l=e.props.debutAge+e.state.playerCalendarYears.indexOf(n);i=t(l)}else i=t(n);var s=o>17?15:o;return r>0&&(i-=r*s),a.a.createElement("div",{className:"nflTrophy",style:{left:i+"px"},width:o},a.a.createElement("img",{src:"img/nfltrophy.png",width:s}))}));return a.a.createElement("div",{className:"playerTrophies"},n)}}class g extends a.a.Component{render(){var e=this;let t,n=this.props.yearsPlayed;"career"===this.props.mode?t=this.props.dataByCareerYear:"age"===this.props.mode&&(t=this.props.dataByAge);var r=d3.scale.ordinal().domain(n).rangeBands([10,455],.1),i=this.props.teams.map((function(t,n){var i,o="img/"+t.team+".png",u=r.rangeBand();if("career"===e.props.mode)i=r(t.careerStart);else if("age"===e.props.mode){var l=e.props.debutAge+(t.start-e.props.rookieYear);i=r(l)}else i=r(t.start);var s=u>17?15:u;return n>0&&(i-=n*s),a.a.createElement("div",{className:"teamLogo",style:{left:i+"px"},width:u},a.a.createElement("img",{src:o,width:s}))}));return a.a.createElement("div",{className:"playerTimeline"},i)}}var v=n(32);class y extends a.a.Component{constructor(e){super(e),["getAwardFill","getTeamsPlayed","createPlayerVisualization","getPlayerInitials"].map(e=>this[e]=this[e].bind(this)),this.state={playerAwards:[],yearsPlayed:[],dataByCareerYear:[],dataByCalendarYear:[],dataByAge:[],teamsPlayed:[],rookieYear:0,debutAge:0}}componentDidMount(){this.setState({playerAwards:this.props.playerAwards,yearsPlayed:this.props.yearsPlayed,playerData:this.props.playerData,teamsPlayed:this.getTeamsPlayed(this.props.playerData.teams),rookieYear:Object.keys(this.props.playerAwards)[0],debutAge:this.props.playerData.age.first})}getAwardFill(e){let t=e.substr(0,2),n=e.substr(2,1),r="award ";return r+="PB"===t?"probowl":"OP"===t?"opy":"AP"===t?"allpro":"SB"===t?"superbowl":"mvp",r+="2"===n?" secondteam":"3"===n?" thirdteam":" firstteam",r}getTeamsPlayed(e){return e.map((function(e){return e}))}createPlayerVisualization(e){let t=this,n=(t.props.mode,500-10-10),r=180-10-10,a=p.a.createElement("svg"),i=this.props.playerStats,o=this.props.yearsPlayed,u=["Pro Bowl","Offensive Player","All Pro","MVP","Super Bowl"],l=["PB","OP","AP","MVP","SB"];var s=v.scale.ordinal().domain(o).rangeBands([10,n-25],.1),c=v.scale.ordinal().domain(l).rangeBands([r-40,0],.05),f=v.svg.axis().scale(s).tickSize(1).orient("bottom");v.svg.axis().scale(c).tickSize(0).tickValues(l).tickFormat((function(e,t){return u[t]})).orient("right");return v.select(a).append("g").attr("class","x axis").attr("transform","translate(0,"+(r-39)+")").call(f),"calendar"===this.props.mode&&v.select(a).selectAll("g.x.axis .tick text").style("text-anchor","end").attr("transform","translate(-6,5) rotate(-90)"),v.select(a).attr({height:r,width:n}).selectAll(".awardGroup").data(i).enter().append("g").attr({class:"awardGroup",transform:function(e){return"translate("+s(e.year)+","+("MVP"===e.award?c(e.award):c(e.award.substr(0,2)))+")"}}).on("mouseover",(function(){v.select(this).select("text").style("display",null)})).on("mouseout",(function(){v.select(this).select("text").style("display","none")})),v.select(a).selectAll("g.awardGroup").append("rect").attr({height:c.rangeBand(),width:s.rangeBand(),class:function(e){return t.getAwardFill(e.award)}}),v.select(a).selectAll("g.awardGroup").append("text").attr({dx:s.rangeBand()/4,dy:"17px"}).text((function(e){if("MVP"!==e.award&&"AS"!==e.award)return e.award.substr(2,1)})).style("display","none"),v.select(a).selectAll(".playerTeam").data(this.state.teamsPlayed).enter().append("rect").attr({class:function(e){return"playerTeam "+e.team},x:function(e){if("calendar"===t.props.mode)return s(e.start);if("age"===t.props.mode){var n=t.state.debutAge+(e.start-t.state.rookieYear);return s(n)}return s(e.careerStart)},y:r-15,width:function(e){if("calendar"===t.props.mode)return s(e.end)-s(e.start)+s.rangeBand();if("age"===t.props.mode){var n=t.props.timespan.age[0]+(e.careerStart-1),r=e.careerEnd-e.careerStart+n;return s(r)-s(n)+s.rangeBand()}return s(e.careerEnd+1-e.careerStart)+(s.rangeBand()/2-2)},height:4,fill:"black"}),a.toReact()}getPlayerInitials(e){let t=e.split(" ");return t[0].substr(0,1)+t[1].substr(0,1)}render(){return a.a.createElement("div",{className:"individualPlayerViz"},a.a.createElement(d,{player:this.props.playerData.name,nickname:this.props.playerData.nickname,pics:this.props.playerData.pics,images:this.props.images}),a.a.createElement("div",{className:"individualPlayerVizInfo"},a.a.createElement(m,{championships:this.props.playerData.championships,dataByCalendarYear:this.state.dataByCalendarYear,dataByCareerYear:this.state.dataByCareerYear,dataByAge:this.state.dataByAge,mode:this.props.mode,timespan:this.props.timespan,rookieYear:this.state.rookieYear,debutAge:this.state.debutAge,playerData:this.props.playerData,yearsPlayed:this.props.yearsPlayed}),this.createPlayerVisualization(this.props.playerData),a.a.createElement(h,{totals:this.props.playerData.totals,championships:this.props.playerData.championships.length}),a.a.createElement(g,{teams:this.props.playerData.teams,mode:this.props.mode,timespan:this.props.timespan,dataByCareerYear:this.state.dataByCareerYear,rookieYear:this.state.rookieYear,debutAge:this.state.debutAge,yearsPlayed:this.props.yearsPlayed})),a.a.createElement("h3",null,this.props.playerData.name))}}class b extends a.a.Component{constructor(e){super(e),["getYearsRange","getPlayerData","getPlayerDataByCalendarYear","getPlayerDataByCareerYear","getPlayerDataByAge"].map(e=>this[e]=this[e].bind(this)),this.state={}}getYearsRange(){for(var e=[],t=[],n=[],r=this.props.timespan.start;r<=this.props.timespan.end;r++)e.push(r);for(var a=1;a<=this.props.timespan.years;a++)t.push(a);if(void 0!==this.props.timespan.age)for(var i=this.props.timespan.age.first;i<=this.props.timespan.age.last;i++)n.push(i);return{calendar:e,year:t,age:n}}getPlayerData(e){for(var t=0;t<this.props.data.length;t++)if(this.props.data[t].nickname===e)return this.props.data[t];return{}}getPlayerDataByCalendarYear(e){let t=[];return Object.keys(e).forEach(n=>{e[n].forEach(e=>{t.push({year:parseInt(n),award:e})})}),t}getPlayerDataByCareerYear(e){var t=[];return Object.keys(e).forEach((n,r)=>{e[n].forEach(e=>{t.push({year:r+1,award:e})})}),t}getPlayerDataByAge(e,t){const n=Object.keys(e);let r=[],a=parseInt(n[0]);return n.forEach(n=>{const i=t+parseInt(n)-a;e[n].forEach(e=>{r.push({year:i,award:e})})}),r}render(){const e=this.getYearsRange();let t=this.props.players.map(t=>{let n,r=this.getPlayerData(t);"career"===this.props.mode?n=this.getPlayerDataByCareerYear(r.awards):"calendar"===this.props.mode?n=this.getPlayerDataByCalendarYear(r.awards):"age"===this.props.mode&&(n=this.getPlayerDataByAge(r.awards,r.age.first));const i="career"===this.props.mode?"year":this.props.mode;return a.a.createElement(y,{playerAwards:r.awards,mode:this.props.mode,key:t,timespan:e,yearsPlayed:e[i],images:this.props.images,playerStats:n,playerData:r})});return a.a.createElement("div",{id:"visualization"},t)}}class x extends a.a.Component{constructor(e){super(e),["changeViewMode","getTimeSpan","handlePlayerSelect","closeImage","getPlayerList"].map(e=>this[e]=this[e].bind(this));const t=["brady","montana","peyton"];this.state={selected:t,vizMode:"career",timespan:this.getTimeSpan(t),popup:"hide",img:""}}changeViewMode(e){this.setState({vizMode:e})}getTimeSpan(e){let t,n,r=2017,a=1,i=[],o=60,u=1,l=0,s=[];return s=this.props.data.filter(t=>-1!==e.indexOf(t.nickname)),s.forEach((e,s)=>{i=Object.keys(e.awards),t=Math.min.apply(Math,i),n=Math.max.apply(Math,i),t<r&&(r=t),n>a&&(a=n),i.length>l&&(l=i.length),o>e.age.first&&(o=e.age.first),u<e.age.last&&(u=e.age.last)}),{start:r,end:a,years:l,age:{first:o,last:u}}}handlePlayerSelect(e){const t=this.state.selected.indexOf(e.nickname);t<0?this.state.selected.unshift(e.nickname):this.state.selected.splice(t,1);const n=this.getTimeSpan(this.state.selected);this.setState({selected:this.state.selected,timespan:n})}closeImage(){this.setState({popup:"hide"})}getPlayerList(){const e=this.props.data.map(e=>{const t=-1!==this.state.selected.indexOf(e.nickname)?"selected":"";return a.a.createElement(c,{key:e.nickname+"-key",player:e,onPlayerSelect:this.handlePlayerSelect,isSelected:t})});return a.a.createElement("div",{id:"jerseys"},e)}render(){const e=0!==this.state.selected.length?"hide":"";return a.a.createElement("div",{id:"app"},a.a.createElement("div",{id:"header"},a.a.createElement("div",{id:"updated"},"v1.0 (04/25/2020)"),a.a.createElement("img",{src:"img/nfllogo.png"}),a.a.createElement("h1",null," Comparing Greatness")," ",a.a.createElement("a",{href:"http://www.parvizu.com",target:"_blank",id:"madeby"},"by Pablo Arvizu")," ",a.a.createElement("a",{href:"https://twitter.com/arvizualization",target:"_blank",id:"twitterLink"},a.a.createElement("img",{src:"img/twitter-256.png"})),a.a.createElement("div",{className:"addthis_sharing_toolbox"})),a.a.createElement("div",{id:"blurb"},a.a.createElement("p",null,"Quarterback is the hardest position to play in all of sports. There's only 32 QB spots available in the entire world. The good ones make their teams better and can deliver wins for them. QBs can carry teams beyond their talent level or be the one weak link in legendary teams. "),a.a.createElement("p",null,"The truly great ones are the ones who answer the call when the pressure is at its highest, when the championship is on the line and the game, season, and even, careers depend on what they will do with the ball in their hands. And they deliver."),a.a.createElement("p",null,"Here are the Top 20 Quarterbacks of all time.")),this.getPlayerList(),a.a.createElement(s,{changeViewMode:this.changeViewMode,selected:this.state.vizMode}),a.a.createElement("div",{id:"vizLegend"},a.a.createElement("div",{id:"legendSection"},a.a.createElement("div",{className:"legendScale label"},a.a.createElement("h5",{className:"selectionType"},"NFL Championship")),a.a.createElement("div",{className:"legendScale"},a.a.createElement("h5",null," "),a.a.createElement("div",{className:"superbowl firstteam"},a.a.createElement("img",{src:"img/nfltrophy.png"}))),a.a.createElement("div",{className:"legendScale label"},a.a.createElement("h5",{className:"selectionType"},"Super Bowls")),a.a.createElement("div",{className:"legendScale"},a.a.createElement("h5",null," "),a.a.createElement("div",{className:"superbowl firstteam"})),a.a.createElement("div",{className:"legendScale"},a.a.createElement("h5",{className:"selectionType"},"Most Valuable Player")),a.a.createElement("div",{className:"legendScale"},a.a.createElement("h5",null," "),a.a.createElement("div",{className:"mvp firstteam"})),a.a.createElement("div",{className:"legendScale label"},a.a.createElement("h5",{className:"selectionType"},"All Pro Team")),a.a.createElement("div",{className:"legendScale"},a.a.createElement("h5",null,"1st"),a.a.createElement("div",{className:"allpro firstteam"})),a.a.createElement("div",{className:"legendScale"},a.a.createElement("h5",null,"2nd"),a.a.createElement("div",{className:"allpro secondteam"})),a.a.createElement("div",{className:"legendScale "},a.a.createElement("h5",{className:"selectionType"},"Offensive Player of the Year")),a.a.createElement("div",{className:"legendScale"},a.a.createElement("h5",null," "),a.a.createElement("div",{className:"opy firstteam"})),a.a.createElement("div",{className:"legendScale label"},a.a.createElement("h5",{className:"selectionType"},"Pro ",a.a.createElement("br",null),"Bowls")),a.a.createElement("div",{className:"legendScale"},a.a.createElement("h5",null," "),a.a.createElement("div",{className:"probowl firstteam"})))),a.a.createElement(b,{players:this.state.selected,data:this.props.data,mode:this.state.vizMode,timespan:this.state.timespan,images:this.props.images}),a.a.createElement("div",{className:e,id:"instructions"},a.a.createElement("h1",null,"To compare, select one or more players by clicking on their jerseys above")),a.a.createElement("div",{className:"footer"},a.a.createElement("a",{href:"https://twitter.com/arvizualization",className:"twitter-follow-button","data-show-count":"false"},"Follow @arvizualization"),"  ",a.a.createElement("span",{className:"vertBar"},"|"),"  ",a.a.createElement("a",{className:"footer-link",href:"http://www.parvizu.com",target:"_blank"},"www.parvizu.com"),"  ",a.a.createElement("span",{className:"vertBar"},"|"),"  ",a.a.createElement("a",{className:"footer-link",href:"http://www.morethanjustsports.com",target:"_blank"},"www.morethanjustsports.com"),"   ",a.a.createElement("span",{className:"vertBar"},"|"),"  ",a.a.createElement("a",null,"Image Credits: Logos and Jerseys are property of the ©NFL ")))}}var w,E,M,P,k,S;n(34);w=window,E=document,M="script",P="ga",w.GoogleAnalyticsObject=P,w.ga=w.ga||function(){(w.ga.q=w.ga.q||[]).push(arguments)},w.ga.l=1*new Date,k=E.createElement(M),S=E.getElementsByTagName(M)[0],k.async=1,k.src="https://www.google-analytics.com/analytics.js",S.parentNode.insertBefore(k,S),ga("create","UA-77692823-1","auto"),ga("send","pageview");const _=n(33);let T={};_.sort((function(e,t){var n=e.name.split(" ")[1],r=t.name.split(" ")[1];return n<r?-1:n>r?1:0})),_.forEach((function(e){var t=[];e.pics.forEach((function(e){var n="img/"+e;t.push(n)})),T[e.nickname]=t})),o.a.render(a.a.createElement(x,{data:_,images:T}),document.getElementById("app"))}]);
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vd2VicGFjay9ib290c3RyYXAiLCJ3ZWJwYWNrOi8vLy4vbm9kZV9tb2R1bGVzL3JlYWN0L2luZGV4LmpzIiwid2VicGFjazovLy8uL25vZGVfbW9kdWxlcy9vYmplY3QtYXNzaWduL2luZGV4LmpzIiwid2VicGFjazovLy8uL25vZGVfbW9kdWxlcy9yZWFjdC1kb20vaW5kZXguanMiLCJ3ZWJwYWNrOi8vLy4vbm9kZV9tb2R1bGVzL3JlYWN0LWZhdXgtZG9tL2xpYi91dGlscy9jYW1lbENhc2UuanMiLCJ3ZWJwYWNrOi8vLy4vbm9kZV9tb2R1bGVzL3JlYWN0LWZhdXgtZG9tL2xpYi91dGlscy9tYXBWYWx1ZXMuanMiLCJ3ZWJwYWNrOi8vLy4vbm9kZV9tb2R1bGVzL2NsYXNzbmFtZXMvaW5kZXguanMiLCJ3ZWJwYWNrOi8vLy4vbm9kZV9tb2R1bGVzL3JlYWN0LWZhdXgtZG9tL2xpYi9SZWFjdEZhdXhET00uanMiLCJ3ZWJwYWNrOi8vLy4vbm9kZV9tb2R1bGVzL3JlYWN0L2Nqcy9yZWFjdC5wcm9kdWN0aW9uLm1pbi5qcyIsIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvcmVhY3QtZG9tL2Nqcy9yZWFjdC1kb20ucHJvZHVjdGlvbi5taW4uanMiLCJ3ZWJwYWNrOi8vLy4vbm9kZV9tb2R1bGVzL3NjaGVkdWxlci9pbmRleC5qcyIsIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvc2NoZWR1bGVyL2Nqcy9zY2hlZHVsZXIucHJvZHVjdGlvbi5taW4uanMiLCJ3ZWJwYWNrOi8vLy4vbm9kZV9tb2R1bGVzL3JlYWN0LWZhdXgtZG9tL2xpYi9mYWN0b3J5LmpzIiwid2VicGFjazovLy8uL25vZGVfbW9kdWxlcy9yZWFjdC1mYXV4LWRvbS9saWIvX2VsZW1lbnQuanMiLCJ3ZWJwYWNrOi8vLy4vbm9kZV9tb2R1bGVzL3N0eWxlLWF0dHIvbGliL2luZGV4LmpzIiwid2VicGFjazovLy8uL25vZGVfbW9kdWxlcy9xdWVyeS1zZWxlY3Rvci9pbmRleC5qcyIsIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvcXVlcnktc2VsZWN0b3IvbGliL3F1ZXJ5LXNlbGVjdG9yLmpzIiwid2VicGFjazovLy8uL25vZGVfbW9kdWxlcy9xdWVyeS1zZWxlY3Rvci9saWIvcXVlcnktc2VsZWN0b3IvdXRpbC5qcyIsIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvcXVlcnktc2VsZWN0b3IvbGliL3F1ZXJ5LXNlbGVjdG9yL3BhcnNlci5qcyIsIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvcmVhY3QtZmF1eC1kb20vbGliL3V0aWxzL2lzU3RyaW5nLmpzIiwid2VicGFjazovLy8uL25vZGVfbW9kdWxlcy9yZWFjdC1mYXV4LWRvbS9saWIvdXRpbHMvaXNVbmRlZmluZWQuanMiLCJ3ZWJwYWNrOi8vLy4vbm9kZV9tb2R1bGVzL3JlYWN0LWZhdXgtZG9tL2xpYi91dGlscy9hc3NpZ24uanMiLCJ3ZWJwYWNrOi8vLy4vbm9kZV9tb2R1bGVzL3JlYWN0LWZhdXgtZG9tL2xpYi91dGlscy9zdHlsZUNhbWVsQ2FzZS5qcyIsIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvcmVhY3QtZmF1eC1kb20vbGliL193aW5kb3cuanMiLCJ3ZWJwYWNrOi8vLy4vbm9kZV9tb2R1bGVzL3JlYWN0LWZhdXgtZG9tL2xpYi9fd2l0aEZhdXhET00uanMiLCJ3ZWJwYWNrOi8vLy4vbm9kZV9tb2R1bGVzL2NyZWF0ZS1yZWFjdC1jbGFzcy9pbmRleC5qcyIsIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvY3JlYXRlLXJlYWN0LWNsYXNzL2ZhY3RvcnkuanMiLCJ3ZWJwYWNrOi8vLy4vbm9kZV9tb2R1bGVzL2ZianMvbGliL2VtcHR5T2JqZWN0LmpzIiwid2VicGFjazovLy8uL25vZGVfbW9kdWxlcy9mYmpzL2xpYi9pbnZhcmlhbnQuanMiLCJ3ZWJwYWNrOi8vLy4vbm9kZV9tb2R1bGVzL2hvaXN0LW5vbi1yZWFjdC1zdGF0aWNzL2Rpc3QvaG9pc3Qtbm9uLXJlYWN0LXN0YXRpY3MuY2pzLmpzIiwid2VicGFjazovLy8uL25vZGVfbW9kdWxlcy9yZWFjdC1pcy9pbmRleC5qcyIsIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvcmVhY3QtaXMvY2pzL3JlYWN0LWlzLnByb2R1Y3Rpb24ubWluLmpzIiwid2VicGFjazovLy8uL25vZGVfbW9kdWxlcy9kMy9kMy5qcyIsIndlYnBhY2s6Ly8vLi9hcHAvTWVudS5qcyIsIndlYnBhY2s6Ly8vLi9hcHAvUGxheWVyLmpzIiwid2VicGFjazovLy8uL2FwcC9QbGF5ZXJQcm9maWxlLmpzIiwid2VicGFjazovLy8uL2FwcC9QbGF5ZXJBd2FyZHMuanMiLCJ3ZWJwYWNrOi8vLy4vYXBwL1BsYXllclRyb3BoaWVzLmpzIiwid2VicGFjazovLy8uL2FwcC9QbGF5ZXJUaW1lbGluZS5qcyIsIndlYnBhY2s6Ly8vLi9hcHAvUGxheWVyVmlzdWFsaXphdGlvbi5qcyIsIndlYnBhY2s6Ly8vLi9hcHAvVmlzdWFsaXphdGlvbi5qcyIsIndlYnBhY2s6Ly8vLi9hcHAvTkZMR3JlYXRuZXNzLmpzIiwid2VicGFjazovLy8uL2FwcC9pbmRleC5qcyJdLCJuYW1lcyI6WyJpbnN0YWxsZWRNb2R1bGVzIiwiX193ZWJwYWNrX3JlcXVpcmVfXyIsIm1vZHVsZUlkIiwiZXhwb3J0cyIsIm1vZHVsZSIsImkiLCJsIiwibW9kdWxlcyIsImNhbGwiLCJtIiwiYyIsImQiLCJuYW1lIiwiZ2V0dGVyIiwibyIsIk9iamVjdCIsImRlZmluZVByb3BlcnR5IiwiZW51bWVyYWJsZSIsImdldCIsInIiLCJTeW1ib2wiLCJ0b1N0cmluZ1RhZyIsInZhbHVlIiwidCIsIm1vZGUiLCJfX2VzTW9kdWxlIiwibnMiLCJjcmVhdGUiLCJrZXkiLCJiaW5kIiwibiIsIm9iamVjdCIsInByb3BlcnR5IiwicHJvdG90eXBlIiwiaGFzT3duUHJvcGVydHkiLCJwIiwicyIsImdldE93blByb3BlcnR5U3ltYm9scyIsInByb3BJc0VudW1lcmFibGUiLCJwcm9wZXJ0eUlzRW51bWVyYWJsZSIsInRvT2JqZWN0IiwidmFsIiwiVHlwZUVycm9yIiwiYXNzaWduIiwidGVzdDEiLCJTdHJpbmciLCJnZXRPd25Qcm9wZXJ0eU5hbWVzIiwidGVzdDIiLCJmcm9tQ2hhckNvZGUiLCJtYXAiLCJqb2luIiwidGVzdDMiLCJzcGxpdCIsImZvckVhY2giLCJsZXR0ZXIiLCJrZXlzIiwiZXJyIiwic2hvdWxkVXNlTmF0aXZlIiwidGFyZ2V0Iiwic291cmNlIiwiZnJvbSIsInN5bWJvbHMiLCJ0byIsImFyZ3VtZW50cyIsImxlbmd0aCIsImNoZWNrRENFIiwiX19SRUFDVF9ERVZUT09MU19HTE9CQUxfSE9PS19fIiwiY29uc29sZSIsImVycm9yIiwiaHlwaGVuRXhwcmVzc2lvbiIsInVwcGVyQ2FzZUZpcnN0TWF0Y2giLCJtYXRjaCIsIm9mZnNldCIsInRvVXBwZXJDYXNlIiwic3RyIiwiY2FtZWxDYXNlZCIsInJlcGxhY2UiLCJsYXN0SW5kZXgiLCJmbiIsImRlc3RpbmF0aW9uIiwiaGFzT3duIiwiY2xhc3NOYW1lcyIsImNsYXNzZXMiLCJhcmciLCJhcmdUeXBlIiwicHVzaCIsIkFycmF5IiwiaXNBcnJheSIsImlubmVyIiwiYXBwbHkiLCJkZWZhdWx0IiwiZmFjdG9yeSIsImZvciIsInEiLCJ1IiwidiIsInciLCJ4IiwieSIsInoiLCJBIiwiQiIsIml0ZXJhdG9yIiwiQyIsImEiLCJiIiwiZW5jb2RlVVJJQ29tcG9uZW50IiwiRCIsImlzTW91bnRlZCIsImVucXVldWVGb3JjZVVwZGF0ZSIsImVucXVldWVSZXBsYWNlU3RhdGUiLCJlbnF1ZXVlU2V0U3RhdGUiLCJFIiwiRiIsInRoaXMiLCJwcm9wcyIsImNvbnRleHQiLCJyZWZzIiwidXBkYXRlciIsIkciLCJIIiwiaXNSZWFjdENvbXBvbmVudCIsInNldFN0YXRlIiwiRXJyb3IiLCJmb3JjZVVwZGF0ZSIsIkkiLCJjb25zdHJ1Y3RvciIsImlzUHVyZVJlYWN0Q29tcG9uZW50IiwiSiIsImN1cnJlbnQiLCJLIiwiTCIsInJlZiIsIl9fc2VsZiIsIl9fc291cmNlIiwiTSIsImUiLCJnIiwiayIsImYiLCJjaGlsZHJlbiIsImgiLCJkZWZhdWx0UHJvcHMiLCIkJHR5cGVvZiIsInR5cGUiLCJfb3duZXIiLCJPIiwiUCIsIlEiLCJSIiwicG9wIiwicmVzdWx0Iiwia2V5UHJlZml4IiwiZnVuYyIsImNvdW50IiwiUyIsIlYiLCJUIiwiVSIsIm5leHQiLCJkb25lIiwiZXNjYXBlIiwidG9TdHJpbmciLCJXIiwiYWEiLCJYIiwiTiIsIlkiLCJaIiwiYmEiLCJSZWFjdEN1cnJlbnREaXNwYXRjaGVyIiwiUmVhY3RDdXJyZW50QmF0Y2hDb25maWciLCJzdXNwZW5zZSIsIlJlYWN0Q3VycmVudE93bmVyIiwiSXNTb21lUmVuZGVyZXJBY3RpbmciLCJDaGlsZHJlbiIsInRvQXJyYXkiLCJvbmx5IiwiQ29tcG9uZW50IiwiRnJhZ21lbnQiLCJQcm9maWxlciIsIlB1cmVDb21wb25lbnQiLCJTdHJpY3RNb2RlIiwiU3VzcGVuc2UiLCJfX1NFQ1JFVF9JTlRFUk5BTFNfRE9fTk9UX1VTRV9PUl9ZT1VfV0lMTF9CRV9GSVJFRCIsImNsb25lRWxlbWVudCIsImNyZWF0ZUNvbnRleHQiLCJfY2FsY3VsYXRlQ2hhbmdlZEJpdHMiLCJfY3VycmVudFZhbHVlIiwiX2N1cnJlbnRWYWx1ZTIiLCJfdGhyZWFkQ291bnQiLCJQcm92aWRlciIsIkNvbnN1bWVyIiwiX2NvbnRleHQiLCJjcmVhdGVFbGVtZW50IiwiY3JlYXRlRmFjdG9yeSIsImNyZWF0ZVJlZiIsImZvcndhcmRSZWYiLCJyZW5kZXIiLCJpc1ZhbGlkRWxlbWVudCIsImxhenkiLCJfY3RvciIsIl9zdGF0dXMiLCJfcmVzdWx0IiwibWVtbyIsImNvbXBhcmUiLCJ1c2VDYWxsYmFjayIsInVzZUNvbnRleHQiLCJ1c2VEZWJ1Z1ZhbHVlIiwidXNlRWZmZWN0IiwidXNlSW1wZXJhdGl2ZUhhbmRsZSIsInVzZUxheW91dEVmZmVjdCIsInVzZU1lbW8iLCJ1c2VSZWR1Y2VyIiwidXNlUmVmIiwidXNlU3RhdGUiLCJ2ZXJzaW9uIiwic2xpY2UiLCJvbkVycm9yIiwiZGEiLCJlYSIsImZhIiwiaGEiLCJpYSIsImphIiwibGEiLCJtYSIsIm5hIiwib2EiLCJjdXJyZW50VGFyZ2V0Iiwia2EiLCJwYSIsInFhIiwicmEiLCJpbmRleE9mIiwic2EiLCJleHRyYWN0RXZlbnRzIiwiZXZlbnRUeXBlcyIsInRhIiwicGhhc2VkUmVnaXN0cmF0aW9uTmFtZXMiLCJ1YSIsInJlZ2lzdHJhdGlvbk5hbWUiLCJ2YSIsIndhIiwiZGVwZW5kZW5jaWVzIiwieGEiLCJ5YSIsIndpbmRvdyIsImRvY3VtZW50IiwiemEiLCJBYSIsIkJhIiwiQ2EiLCJzdGF0ZU5vZGUiLCJEYSIsIkVhIiwiRmEiLCJHYSIsIkhhIiwiSWEiLCJKYSIsIkthIiwiTGEiLCJNYSIsIk5hIiwiT2EiLCJQYSIsIlFhIiwiYWNjZXB0c0Jvb2xlYW5zIiwiYXR0cmlidXRlTmFtZSIsImF0dHJpYnV0ZU5hbWVzcGFjZSIsIm11c3RVc2VQcm9wZXJ0eSIsInByb3BlcnR5TmFtZSIsInNhbml0aXplVVJMIiwidG9Mb3dlckNhc2UiLCJVYSIsIlZhIiwieGxpbmtIcmVmIiwiV2EiLCJYYSIsIlNhIiwiaXNOYU4iLCJUYSIsInRlc3QiLCJSYSIsInJlbW92ZUF0dHJpYnV0ZSIsInNldEF0dHJpYnV0ZSIsInNldEF0dHJpYnV0ZU5TIiwiWWEiLCJaYSIsIiRhIiwiYWIiLCJiYiIsImNiIiwiZGIiLCJlYiIsImZiIiwiZ2IiLCJoYiIsImliIiwiamIiLCJrYiIsImxiIiwibWIiLCJuYiIsInBiIiwiZGlzcGxheU5hbWUiLCJxYiIsInRhZyIsIl9kZWJ1Z093bmVyIiwiX2RlYnVnU291cmNlIiwiZmlsZU5hbWUiLCJsaW5lTnVtYmVyIiwicmV0dXJuIiwicmIiLCJzYiIsIm5vZGVOYW1lIiwieGIiLCJfdmFsdWVUcmFja2VyIiwiZ2V0T3duUHJvcGVydHlEZXNjcmlwdG9yIiwic2V0IiwiY29uZmlndXJhYmxlIiwiZ2V0VmFsdWUiLCJzZXRWYWx1ZSIsInN0b3BUcmFja2luZyIsInRiIiwieWIiLCJjaGVja2VkIiwiemIiLCJkZWZhdWx0Q2hlY2tlZCIsImRlZmF1bHRWYWx1ZSIsIl93cmFwcGVyU3RhdGUiLCJpbml0aWFsQ2hlY2tlZCIsIkFiIiwiaW5pdGlhbFZhbHVlIiwiY29udHJvbGxlZCIsIkJiIiwiQ2IiLCJEYiIsIkViIiwib3duZXJEb2N1bWVudCIsImFjdGl2ZUVsZW1lbnQiLCJHYiIsIkZiIiwiSGIiLCJvcHRpb25zIiwic2VsZWN0ZWQiLCJkZWZhdWx0U2VsZWN0ZWQiLCJkaXNhYmxlZCIsIkliIiwiZGFuZ2Vyb3VzbHlTZXRJbm5lckhUTUwiLCJKYiIsIktiIiwiTGIiLCJ0ZXh0Q29udGVudCIsIk1iIiwiTmIiLCJPYiIsIlBiIiwiUWIiLCJNU0FwcCIsImV4ZWNVbnNhZmVMb2NhbEZ1bmN0aW9uIiwibmFtZXNwYWNlVVJJIiwiaW5uZXJIVE1MIiwidmFsdWVPZiIsImZpcnN0Q2hpbGQiLCJyZW1vdmVDaGlsZCIsImFwcGVuZENoaWxkIiwiUmIiLCJsYXN0Q2hpbGQiLCJub2RlVHlwZSIsIm5vZGVWYWx1ZSIsIlNiIiwiVGIiLCJhbmltYXRpb25lbmQiLCJhbmltYXRpb25pdGVyYXRpb24iLCJhbmltYXRpb25zdGFydCIsInRyYW5zaXRpb25lbmQiLCJVYiIsIlZiIiwiV2IiLCJzdHlsZSIsImFuaW1hdGlvbiIsInRyYW5zaXRpb24iLCJYYiIsIlliIiwiWmIiLCIkYiIsImFjIiwiYmMiLCJXZWFrTWFwIiwiTWFwIiwiY2MiLCJkYyIsImFsdGVybmF0ZSIsImVmZmVjdFRhZyIsImVjIiwibWVtb2l6ZWRTdGF0ZSIsImRlaHlkcmF0ZWQiLCJmYyIsImhjIiwiY2hpbGQiLCJzaWJsaW5nIiwiZ2MiLCJpYyIsImNvbmNhdCIsImpjIiwia2MiLCJsYyIsIl9kaXNwYXRjaExpc3RlbmVycyIsIl9kaXNwYXRjaEluc3RhbmNlcyIsImlzUHJvcGFnYXRpb25TdG9wcGVkIiwiaXNQZXJzaXN0ZW50IiwicmVsZWFzZSIsIm1jIiwibmMiLCJzcmNFbGVtZW50IiwiY29ycmVzcG9uZGluZ1VzZUVsZW1lbnQiLCJwYXJlbnROb2RlIiwib2MiLCJwYyIsInFjIiwidG9wTGV2ZWxUeXBlIiwibmF0aXZlRXZlbnQiLCJ0YXJnZXRJbnN0IiwiYW5jZXN0b3JzIiwicmMiLCJldmVudFN5c3RlbUZsYWdzIiwic2MiLCJjb250YWluZXJJbmZvIiwidGMiLCJ1YyIsImhhcyIsInZjIiwid2MiLCJ4YyIsInljIiwiemMiLCJBYyIsIkJjIiwiQ2MiLCJEYyIsIkVjIiwiRmMiLCJHYyIsIkhjIiwiSWMiLCJLYyIsImJsb2NrZWRPbiIsImNvbnRhaW5lciIsIkxjIiwiZGVsZXRlIiwicG9pbnRlcklkIiwiTWMiLCJOYyIsIlBjIiwidW5zdGFibGVfcnVuV2l0aFByaW9yaXR5IiwicHJpb3JpdHkiLCJoeWRyYXRlIiwiUWMiLCJSYyIsIlNjIiwiVGMiLCJzaGlmdCIsIlVjIiwidW5zdGFibGVfc2NoZWR1bGVDYWxsYmFjayIsInVuc3RhYmxlX05vcm1hbFByaW9yaXR5IiwiVmMiLCJXYyIsIlljIiwiWmMiLCIkYyIsImFkIiwiYnViYmxlZCIsImNhcHR1cmVkIiwiZXZlbnRQcmlvcml0eSIsImJkIiwiY2QiLCJkZCIsInVuc3RhYmxlX1VzZXJCbG9ja2luZ1ByaW9yaXR5IiwiZWQiLCJmZCIsImdkIiwiaGQiLCJpZCIsImFkZEV2ZW50TGlzdGVuZXIiLCJPYyIsImpkIiwiYW5pbWF0aW9uSXRlcmF0aW9uQ291bnQiLCJib3JkZXJJbWFnZU91dHNldCIsImJvcmRlckltYWdlU2xpY2UiLCJib3JkZXJJbWFnZVdpZHRoIiwiYm94RmxleCIsImJveEZsZXhHcm91cCIsImJveE9yZGluYWxHcm91cCIsImNvbHVtbkNvdW50IiwiY29sdW1ucyIsImZsZXgiLCJmbGV4R3JvdyIsImZsZXhQb3NpdGl2ZSIsImZsZXhTaHJpbmsiLCJmbGV4TmVnYXRpdmUiLCJmbGV4T3JkZXIiLCJncmlkQXJlYSIsImdyaWRSb3ciLCJncmlkUm93RW5kIiwiZ3JpZFJvd1NwYW4iLCJncmlkUm93U3RhcnQiLCJncmlkQ29sdW1uIiwiZ3JpZENvbHVtbkVuZCIsImdyaWRDb2x1bW5TcGFuIiwiZ3JpZENvbHVtblN0YXJ0IiwiZm9udFdlaWdodCIsImxpbmVDbGFtcCIsImxpbmVIZWlnaHQiLCJvcGFjaXR5Iiwib3JkZXIiLCJvcnBoYW5zIiwidGFiU2l6ZSIsIndpZG93cyIsInpJbmRleCIsInpvb20iLCJmaWxsT3BhY2l0eSIsImZsb29kT3BhY2l0eSIsInN0b3BPcGFjaXR5Iiwic3Ryb2tlRGFzaGFycmF5Iiwic3Ryb2tlRGFzaG9mZnNldCIsInN0cm9rZU1pdGVybGltaXQiLCJzdHJva2VPcGFjaXR5Iiwic3Ryb2tlV2lkdGgiLCJrZCIsImxkIiwidHJpbSIsIm1kIiwic2V0UHJvcGVydHkiLCJjaGFyQXQiLCJzdWJzdHJpbmciLCJuZCIsIm1lbnVpdGVtIiwiYXJlYSIsImJhc2UiLCJiciIsImNvbCIsImVtYmVkIiwiaHIiLCJpbWciLCJpbnB1dCIsImtleWdlbiIsImxpbmsiLCJtZXRhIiwicGFyYW0iLCJ0cmFjayIsIndiciIsIm9kIiwicGQiLCJpcyIsInFkIiwicmQiLCJzZCIsInRkIiwiYm9keSIsInVkIiwidmQiLCJub2RlIiwibmV4dFNpYmxpbmciLCJ4ZCIsIkhUTUxJRnJhbWVFbGVtZW50IiwiY29udGVudFdpbmRvdyIsImxvY2F0aW9uIiwiaHJlZiIsInlkIiwiY29udGVudEVkaXRhYmxlIiwiRGQiLCJFZCIsIkZkIiwiYXV0b0ZvY3VzIiwiR2QiLCJfX2h0bWwiLCJIZCIsInNldFRpbWVvdXQiLCJJZCIsImNsZWFyVGltZW91dCIsIkpkIiwiS2QiLCJwcmV2aW91c1NpYmxpbmciLCJkYXRhIiwiTGQiLCJNYXRoIiwicmFuZG9tIiwiTWQiLCJOZCIsIk9kIiwiUGQiLCJRZCIsIlJkIiwiU2QiLCJUZCIsImRpc3BhdGNoQ29uZmlnIiwiVWQiLCJfdGFyZ2V0SW5zdCIsIlZkIiwiV2QiLCJYZCIsIllkIiwiWmQiLCIkZCIsImFlIiwiYmUiLCJjZSIsIkludGVyZmFjZSIsImlzRGVmYXVsdFByZXZlbnRlZCIsImRlZmF1bHRQcmV2ZW50ZWQiLCJyZXR1cm5WYWx1ZSIsImVlIiwiZXZlbnRQb29sIiwiZmUiLCJkZXN0cnVjdG9yIiwiZGUiLCJnZXRQb29sZWQiLCJwcmV2ZW50RGVmYXVsdCIsInN0b3BQcm9wYWdhdGlvbiIsImNhbmNlbEJ1YmJsZSIsInBlcnNpc3QiLCJldmVudFBoYXNlIiwiYnViYmxlcyIsImNhbmNlbGFibGUiLCJ0aW1lU3RhbXAiLCJEYXRlIiwibm93IiwiaXNUcnVzdGVkIiwiZXh0ZW5kIiwiZ2UiLCJoZSIsImllIiwiamUiLCJrZSIsImRvY3VtZW50TW9kZSIsImxlIiwibWUiLCJuZSIsIm9lIiwiYmVmb3JlSW5wdXQiLCJjb21wb3NpdGlvbkVuZCIsImNvbXBvc2l0aW9uU3RhcnQiLCJjb21wb3NpdGlvblVwZGF0ZSIsInBlIiwicWUiLCJrZXlDb2RlIiwicmUiLCJkZXRhaWwiLCJzZSIsInZlIiwibG9jYWxlIiwid2hpY2giLCJ0ZSIsImN0cmxLZXkiLCJhbHRLZXkiLCJtZXRhS2V5IiwiY2hhciIsInVlIiwid2UiLCJjb2xvciIsImRhdGUiLCJkYXRldGltZSIsImVtYWlsIiwibW9udGgiLCJudW1iZXIiLCJwYXNzd29yZCIsInJhbmdlIiwic2VhcmNoIiwidGVsIiwidGV4dCIsInRpbWUiLCJ1cmwiLCJ3ZWVrIiwieGUiLCJ5ZSIsImNoYW5nZSIsInplIiwiQWUiLCJCZSIsIkNlIiwiRGUiLCJFZSIsIkZlIiwiR2UiLCJkZXRhY2hFdmVudCIsIkhlIiwiSWUiLCJhdHRhY2hFdmVudCIsIkplIiwiS2UiLCJMZSIsIk1lIiwiX2lzSW5wdXRFdmVudFN1cHBvcnRlZCIsIk5lIiwidmlldyIsIk9lIiwiQWx0IiwiQ29udHJvbCIsIk1ldGEiLCJTaGlmdCIsIlBlIiwiZ2V0TW9kaWZpZXJTdGF0ZSIsIlFlIiwiUmUiLCJTZSIsIlRlIiwiVWUiLCJWZSIsInNjcmVlblgiLCJzY3JlZW5ZIiwiY2xpZW50WCIsImNsaWVudFkiLCJwYWdlWCIsInBhZ2VZIiwic2hpZnRLZXkiLCJidXR0b24iLCJidXR0b25zIiwicmVsYXRlZFRhcmdldCIsImZyb21FbGVtZW50IiwidG9FbGVtZW50IiwibW92ZW1lbnRYIiwibW92ZW1lbnRZIiwiV2UiLCJ3aWR0aCIsImhlaWdodCIsInByZXNzdXJlIiwidGFuZ2VudGlhbFByZXNzdXJlIiwidGlsdFgiLCJ0aWx0WSIsInR3aXN0IiwicG9pbnRlclR5cGUiLCJpc1ByaW1hcnkiLCJYZSIsIm1vdXNlRW50ZXIiLCJtb3VzZUxlYXZlIiwicG9pbnRlckVudGVyIiwicG9pbnRlckxlYXZlIiwiWWUiLCJkZWZhdWx0VmlldyIsInBhcmVudFdpbmRvdyIsIiRlIiwiYWYiLCJiZiIsImNmIiwiZGYiLCJzZWxlY3QiLCJlZiIsImZmIiwiZ2YiLCJoZiIsImpmIiwic3RhcnQiLCJzZWxlY3Rpb25TdGFydCIsImVuZCIsInNlbGVjdGlvbkVuZCIsImFuY2hvck5vZGUiLCJnZXRTZWxlY3Rpb24iLCJhbmNob3JPZmZzZXQiLCJmb2N1c05vZGUiLCJmb2N1c09mZnNldCIsImtmIiwib25TZWxlY3QiLCJsZiIsImFuaW1hdGlvbk5hbWUiLCJlbGFwc2VkVGltZSIsInBzZXVkb0VsZW1lbnQiLCJtZiIsImNsaXBib2FyZERhdGEiLCJuZiIsIm9mIiwiY2hhckNvZGUiLCJwZiIsIkVzYyIsIlNwYWNlYmFyIiwiTGVmdCIsIlVwIiwiUmlnaHQiLCJEb3duIiwiRGVsIiwiV2luIiwiTWVudSIsIkFwcHMiLCJTY3JvbGwiLCJNb3pQcmludGFibGVLZXkiLCJxZiIsIjgiLCI5IiwiMTIiLCIxMyIsIjE2IiwiMTciLCIxOCIsIjE5IiwiMjAiLCIyNyIsIjMyIiwiMzMiLCIzNCIsIjM1IiwiMzYiLCIzNyIsIjM4IiwiMzkiLCI0MCIsIjQ1IiwiNDYiLCIxMTIiLCIxMTMiLCIxMTQiLCIxMTUiLCIxMTYiLCIxMTciLCIxMTgiLCIxMTkiLCIxMjAiLCIxMjEiLCIxMjIiLCIxMjMiLCIxNDQiLCIxNDUiLCIyMjQiLCJyZiIsInJlcGVhdCIsInNmIiwiZGF0YVRyYW5zZmVyIiwidGYiLCJ0b3VjaGVzIiwidGFyZ2V0VG91Y2hlcyIsImNoYW5nZWRUb3VjaGVzIiwidWYiLCJ2ZiIsImRlbHRhWCIsIndoZWVsRGVsdGFYIiwiZGVsdGFZIiwid2hlZWxEZWx0YVkiLCJ3aGVlbERlbHRhIiwiZGVsdGFaIiwiZGVsdGFNb2RlIiwid2YiLCJTaW1wbGVFdmVudFBsdWdpbiIsIkVudGVyTGVhdmVFdmVudFBsdWdpbiIsIkNoYW5nZUV2ZW50UGx1Z2luIiwiU2VsZWN0RXZlbnRQbHVnaW4iLCJCZWZvcmVJbnB1dEV2ZW50UGx1Z2luIiwieWYiLCJ6ZiIsIkFmIiwiQmYiLCJDZiIsImNvbnRleHRUeXBlcyIsIl9fcmVhY3RJbnRlcm5hbE1lbW9pemVkVW5tYXNrZWRDaGlsZENvbnRleHQiLCJfX3JlYWN0SW50ZXJuYWxNZW1vaXplZE1hc2tlZENoaWxkQ29udGV4dCIsImNoaWxkQ29udGV4dFR5cGVzIiwiRGYiLCJFZiIsIkZmIiwiZ2V0Q2hpbGRDb250ZXh0IiwiR2YiLCJfX3JlYWN0SW50ZXJuYWxNZW1vaXplZE1lcmdlZENoaWxkQ29udGV4dCIsIkhmIiwiSWYiLCJKZiIsIktmIiwidW5zdGFibGVfY2FuY2VsQ2FsbGJhY2siLCJMZiIsInVuc3RhYmxlX3JlcXVlc3RQYWludCIsIk1mIiwidW5zdGFibGVfbm93IiwiTmYiLCJ1bnN0YWJsZV9nZXRDdXJyZW50UHJpb3JpdHlMZXZlbCIsIk9mIiwidW5zdGFibGVfSW1tZWRpYXRlUHJpb3JpdHkiLCJQZiIsIlFmIiwiUmYiLCJ1bnN0YWJsZV9Mb3dQcmlvcml0eSIsIlNmIiwidW5zdGFibGVfSWRsZVByaW9yaXR5IiwiVGYiLCJVZiIsInVuc3RhYmxlX3Nob3VsZFlpZWxkIiwiVmYiLCJXZiIsIlhmIiwiWWYiLCJaZiIsIiRmIiwiYWciLCJiZyIsImNnIiwiZGciLCJlZyIsImZnIiwiZ2ciLCJoZyIsImlnIiwiamciLCJrZyIsImxnIiwibWciLCJuZyIsIm9nIiwicGciLCJjaGlsZEV4cGlyYXRpb25UaW1lIiwicWciLCJmaXJzdENvbnRleHQiLCJleHBpcmF0aW9uVGltZSIsInJnIiwic2ciLCJvYnNlcnZlZEJpdHMiLCJyZXNwb25kZXJzIiwidGciLCJ1ZyIsInVwZGF0ZVF1ZXVlIiwiYmFzZVN0YXRlIiwiYmFzZVF1ZXVlIiwic2hhcmVkIiwicGVuZGluZyIsImVmZmVjdHMiLCJ2ZyIsIndnIiwic3VzcGVuc2VDb25maWciLCJwYXlsb2FkIiwiY2FsbGJhY2siLCJ4ZyIsInlnIiwiemciLCJjYSIsIkFnIiwiQmciLCJDZyIsIkRnIiwiRWciLCJGZyIsIkpnIiwiX3JlYWN0SW50ZXJuYWxGaWJlciIsIkdnIiwiSGciLCJJZyIsIktnIiwic2hvdWxkQ29tcG9uZW50VXBkYXRlIiwiTGciLCJjb250ZXh0VHlwZSIsInN0YXRlIiwiTWciLCJjb21wb25lbnRXaWxsUmVjZWl2ZVByb3BzIiwiVU5TQUZFX2NvbXBvbmVudFdpbGxSZWNlaXZlUHJvcHMiLCJOZyIsImdldERlcml2ZWRTdGF0ZUZyb21Qcm9wcyIsImdldFNuYXBzaG90QmVmb3JlVXBkYXRlIiwiVU5TQUZFX2NvbXBvbmVudFdpbGxNb3VudCIsImNvbXBvbmVudFdpbGxNb3VudCIsImNvbXBvbmVudERpZE1vdW50IiwiT2ciLCJQZyIsIl9zdHJpbmdSZWYiLCJRZyIsIlJnIiwibGFzdEVmZmVjdCIsIm5leHRFZmZlY3QiLCJmaXJzdEVmZmVjdCIsImluZGV4IiwiU2ciLCJUZyIsImVsZW1lbnRUeXBlIiwiVWciLCJpbXBsZW1lbnRhdGlvbiIsIlZnIiwiV2ciLCJYZyIsIllnIiwiWmciLCIkZyIsImFoIiwiYmgiLCJjaCIsImRoIiwiZG9jdW1lbnRFbGVtZW50IiwidGFnTmFtZSIsImVoIiwiZmgiLCJnaCIsImhoIiwibWVtb2l6ZWRQcm9wcyIsInJldmVhbE9yZGVyIiwiaWgiLCJyZXNwb25kZXIiLCJqaCIsImtoIiwibGgiLCJtaCIsIm5oIiwib2giLCJwaCIsInFoIiwicmgiLCJzaCIsInRoIiwicXVldWUiLCJ1aCIsInZoIiwid2giLCJsYXN0UmVuZGVyZWRSZWR1Y2VyIiwiYWN0aW9uIiwiZWFnZXJSZWR1Y2VyIiwiZWFnZXJTdGF0ZSIsImxhc3RSZW5kZXJlZFN0YXRlIiwiZGlzcGF0Y2giLCJ4aCIsInloIiwiemgiLCJBaCIsImRlc3Ryb3kiLCJkZXBzIiwiQmgiLCJDaCIsIkRoIiwiRWgiLCJGaCIsIkdoIiwiSGgiLCJJaCIsIkpoIiwiS2giLCJMaCIsIk1oIiwiTmgiLCJyZWFkQ29udGV4dCIsInVzZVJlc3BvbmRlciIsInVzZURlZmVycmVkVmFsdWUiLCJ1c2VUcmFuc2l0aW9uIiwiT2giLCJQaCIsIlFoIiwiUmgiLCJTaCIsIlRoIiwicGVuZGluZ1Byb3BzIiwiVWgiLCJWaCIsIldoIiwiWGgiLCJZaCIsIlpoIiwiJGgiLCJhaSIsImJpIiwiY2kiLCJkaSIsImVpIiwiZmkiLCJVTlNBRkVfY29tcG9uZW50V2lsbFVwZGF0ZSIsImNvbXBvbmVudFdpbGxVcGRhdGUiLCJjb21wb25lbnREaWRVcGRhdGUiLCJnaSIsImdldERlcml2ZWRTdGF0ZUZyb21FcnJvciIsImhpIiwicGVuZGluZ0NvbnRleHQiLCJuaSIsInBpIiwicWkiLCJpaSIsInJldHJ5VGltZSIsImppIiwiZmFsbGJhY2siLCJ1bnN0YWJsZV9hdm9pZFRoaXNGYWxsYmFjayIsImtpIiwibGkiLCJpc0JhY2t3YXJkcyIsInJlbmRlcmluZyIsInJlbmRlcmluZ1N0YXJ0VGltZSIsImxhc3QiLCJ0YWlsIiwidGFpbEV4cGlyYXRpb24iLCJ0YWlsTW9kZSIsIm1pIiwicmkiLCJzaSIsIndhc011bHRpcGxlIiwibXVsdGlwbGUiLCJvbkNsaWNrIiwib25jbGljayIsInNpemUiLCJjcmVhdGVFbGVtZW50TlMiLCJjcmVhdGVUZXh0Tm9kZSIsInRpIiwidWkiLCJ2aSIsIndpIiwieGkiLCJ5aSIsInppIiwiQWkiLCJzdGFjayIsIkJpIiwiV2Vha1NldCIsIlNldCIsIkNpIiwiRmkiLCJFaSIsIkdpIiwiX19yZWFjdEludGVybmFsU25hcHNob3RCZWZvcmVVcGRhdGUiLCJIaSIsIklpIiwiSmkiLCJmb2N1cyIsIktpIiwiTGkiLCJjb21wb25lbnRXaWxsVW5tb3VudCIsIkRpIiwiTWkiLCJOaSIsIk9pIiwiUGkiLCJRaSIsImluc3RhbmNlIiwiaW5zZXJ0QmVmb3JlIiwiX3JlYWN0Um9vdENvbnRhaW5lciIsIlJpIiwiU2kiLCJUaSIsImRpc3BsYXkiLCJVaSIsIlZpIiwiYWRkIiwidGhlbiIsIldpIiwiWGkiLCJlbGVtZW50IiwiWWkiLCJaaSIsIiRpIiwiY29tcG9uZW50RGlkQ2F0Y2giLCJhaiIsImNvbXBvbmVudFN0YWNrIiwiUmoiLCJiaiIsImNlaWwiLCJjaiIsImRqIiwia2oiLCJsaiIsIm1qIiwibmoiLCJvaiIsInFqIiwicmoiLCJzaiIsInRqIiwidWoiLCJ2aiIsIndqIiwidGltZW91dE1zIiwieGoiLCJ5aiIsInpqIiwibGFzdEV4cGlyZWRUaW1lIiwiQWoiLCJmaXJzdFBlbmRpbmdUaW1lIiwibGFzdFBpbmdlZFRpbWUiLCJuZXh0S25vd25QZW5kaW5nTGV2ZWwiLCJjYWxsYmFja0V4cGlyYXRpb25UaW1lIiwiY2FsbGJhY2tQcmlvcml0eSIsImNhbGxiYWNrTm9kZSIsIkJqIiwidGltZW91dCIsIkNqIiwiRGoiLCJFaiIsIkZqIiwiR2oiLCJIaiIsImZpbmlzaGVkV29yayIsImZpbmlzaGVkRXhwaXJhdGlvblRpbWUiLCJsYXN0U3VzcGVuZGVkVGltZSIsIklqIiwidGltZW91dEhhbmRsZSIsIkpqIiwiYnVzeU1pbkR1cmF0aW9uTXMiLCJidXN5RGVsYXlNcyIsIktqIiwiTWoiLCJOaiIsInBpbmdDYWNoZSIsIk9qIiwidWIiLCJQaiIsIlhjIiwiUWoiLCJTaiIsImZpcnN0U3VzcGVuZGVkVGltZSIsInJhbmdlQ291bnQiLCJ3YiIsImFjdGl2ZUVsZW1lbnREZXRhY2hlZCIsImZvY3VzZWRFbGVtIiwic2VsZWN0aW9uUmFuZ2UiLCJUaiIsIndkIiwiY29udGFpbnMiLCJjb21wYXJlRG9jdW1lbnRQb3NpdGlvbiIsIm1pbiIsImNyZWF0ZVJhbmdlIiwic2V0U3RhcnQiLCJyZW1vdmVBbGxSYW5nZXMiLCJhZGRSYW5nZSIsInNldEVuZCIsImxlZnQiLCJzY3JvbGxMZWZ0IiwidG9wIiwic2Nyb2xsVG9wIiwidmIiLCJVaiIsIlZqIiwiV2oiLCJoaWRkZW4iLCJvYiIsIlhqIiwidW5zdGFibGVfb2JzZXJ2ZWRCaXRzIiwiWmoiLCJwZW5kaW5nQ2hpbGRyZW4iLCJhayIsImJrIiwiY2siLCJkayIsImVrIiwiZmsiLCJKYyIsIl9pbnRlcm5hbFJvb3QiLCJnayIsImlrIiwiaGFzQXR0cmlidXRlIiwiaGsiLCJqayIsImtrIiwidW5tb3VudCIsInF1ZXJ5U2VsZWN0b3JBbGwiLCJKU09OIiwic3RyaW5naWZ5IiwiZm9ybSIsIkxqIiwibGsiLCJFdmVudHMiLCJmaW5kRmliZXJCeUhvc3RJbnN0YW5jZSIsImJ1bmRsZVR5cGUiLCJyZW5kZXJlclBhY2thZ2VOYW1lIiwiaXNEaXNhYmxlZCIsInN1cHBvcnRzRmliZXIiLCJpbmplY3QiLCJvbkNvbW1pdEZpYmVyUm9vdCIsIm9uQ29tbWl0RmliZXJVbm1vdW50IiwiWWoiLCJvdmVycmlkZUhvb2tTdGF0ZSIsIm92ZXJyaWRlUHJvcHMiLCJzZXRTdXNwZW5zZUhhbmRsZXIiLCJzY2hlZHVsZVVwZGF0ZSIsImN1cnJlbnREaXNwYXRjaGVyUmVmIiwiZmluZEhvc3RJbnN0YW5jZUJ5RmliZXIiLCJmaW5kSG9zdEluc3RhbmNlc0ZvclJlZnJlc2giLCJzY2hlZHVsZVJlZnJlc2giLCJzY2hlZHVsZVJvb3QiLCJzZXRSZWZyZXNoSGFuZGxlciIsImdldEN1cnJlbnRGaWJlciIsImNyZWF0ZVBvcnRhbCIsImZpbmRET01Ob2RlIiwiZmx1c2hTeW5jIiwidW5tb3VudENvbXBvbmVudEF0Tm9kZSIsInVuc3RhYmxlX2JhdGNoZWRVcGRhdGVzIiwidW5zdGFibGVfY3JlYXRlUG9ydGFsIiwidW5zdGFibGVfcmVuZGVyU3VidHJlZUludG9Db250YWluZXIiLCJNZXNzYWdlQ2hhbm5lbCIsInVuc3RhYmxlX2ZvcmNlRnJhbWVSYXRlIiwicGVyZm9ybWFuY2UiLCJjYW5jZWxBbmltYXRpb25GcmFtZSIsInJlcXVlc3RBbmltYXRpb25GcmFtZSIsImZsb29yIiwicG9ydDIiLCJwb3J0MSIsIm9ubWVzc2FnZSIsInBvc3RNZXNzYWdlIiwic29ydEluZGV4Iiwic3RhcnRUaW1lIiwicHJpb3JpdHlMZXZlbCIsInVuc3RhYmxlX1Byb2ZpbGluZyIsInVuc3RhYmxlX2NvbnRpbnVlRXhlY3V0aW9uIiwidW5zdGFibGVfZ2V0Rmlyc3RDYWxsYmFja05vZGUiLCJ1bnN0YWJsZV9uZXh0IiwidW5zdGFibGVfcGF1c2VFeGVjdXRpb24iLCJkZWxheSIsInVuc3RhYmxlX3dyYXBDYWxsYmFjayIsIndpdGhGYXV4RE9NIiwiRWxlbWVudCIsIldpbmRvdyIsIlJlYWN0RmF1eERPTSIsIm5hbWVzcGFjZSIsIlJlYWN0Iiwic3R5bGVBdHRyIiwiY2FtZWxDYXNlIiwiaXNTdHJpbmciLCJpc1VuZGVmaW5lZCIsIm1hcFZhbHVlcyIsInN0eWxlQ2FtZWxDYXNlIiwiY2hpbGROb2RlcyIsImV2ZW50TGlzdGVuZXJzIiwic2VsZiIsImNvbXBvbmVudCIsImdldFByb3BlcnR5IiwiZ2V0UHJvcGVydHlWYWx1ZSIsInJlbW92ZVByb3BlcnR5IiwiRUxFTUVOVF9OT0RFIiwiRE9DVU1FTlRfUE9TSVRJT05fRElTQ09OTkVDVEVEIiwiRE9DVU1FTlRfUE9TSVRJT05fUFJFQ0VESU5HIiwiRE9DVU1FTlRfUE9TSVRJT05fRk9MTE9XSU5HIiwiRE9DVU1FTlRfUE9TSVRJT05fQ09OVEFJTlMiLCJET0NVTUVOVF9QT1NJVElPTl9DT05UQUlORURfQlkiLCJldmVudE5hbWVNYXBwaW5ncyIsInNraXBOYW1lVHJhbnNmb3JtYXRpb25FeHByZXNzaW9ucyIsImF0dHJpYnV0ZU5hbWVNYXBwaW5ncyIsImF0dHJpYnV0ZVRvUHJvcE5hbWUiLCJleHByIiwic29tZSIsIkJvb2xlYW4iLCJzdHlsZXMiLCJwYXJzZSIsImdldEF0dHJpYnV0ZSIsImdldEF0dHJpYnV0ZU5vZGUiLCJzcGVjaWZpZWQiLCJldmVudFRvUHJvcE5hbWUiLCJwcm9wIiwicmVtb3ZlRXZlbnRMaXN0ZW5lciIsImxpc3RlbmVycyIsInNwbGljZSIsImVsIiwiYmVmb3JlIiwicXVlcnlTZWxlY3RvciIsInNlbGVjdG9yIiwiZ2V0RWxlbWVudHNCeVRhZ05hbWUiLCJtYXRjaGVzIiwiZmlsdGVyIiwiY2hpbGRNYXRjaGVzIiwiZ2V0RWxlbWVudEJ5SWQiLCJnZXRCb3VuZGluZ0NsaWVudFJlY3QiLCJjbG9uZU5vZGUiLCJkZWVwIiwidW5kZWZpbmVkIiwiY2hpbGRFbCIsInRvUmVhY3QiLCJvcmlnaW5hbEVsZW1lbnQiLCJzeW50aGV0aWNFdmVudCIsImV2ZW50IiwibGlzdGVuZXIiLCJvdGhlciIsImlzQW5jZXN0b3IiLCJnZXRSb290Tm9kZSIsInJlZmVyZW5jZVJvb3QiLCJyaWdodCIsImZpcnN0IiwiZ2V0Rmlyc3ROb2RlQnlPcmRlciIsIm5vZGVzIiwibm9kZU9uZSIsIm5vZGVUd28iLCJyZWR1Y2UiLCJkZWZpbmVQcm9wZXJ0aWVzIiwic2libGluZ3MiLCJyYXciLCJvcHRzIiwicHJlc2VydmVOdW1iZXJzIiwib2JqIiwibmV4dFNwbGl0IiwiY2h1bmtzIiwiaGFzVW5jbG9zZWRVcmwiLCJjaHVuayIsImdldEtleVZhbHVlQ2h1bmtzIiwiaXRlbSIsInBvcyIsInN1YnN0ciIsInBhcnNlRmxvYXQiLCJpc0Zpbml0ZSIsIk51bWJlciIsIm5vcm1hbGl6ZSIsImlzQ29udGV4dFhNTCIsIm1hdGNoRXhwciIsInV0aWwiLCJwYXJzZXIiLCJjYWNoZXMiLCJ1dWlkIiwic3ViTWF0Y2hlc0NhY2hlIiwiZ2V0QXR0ciIsImdldFNpbXBsZUF0dHIiLCJhdHRyIiwiaGFzU2luZ2xlQ2xhc3MiLCJpc1RhZyIsImFOUGx1c0IiLCJ1bmVzY2FwZSIsInVuZXNjYXBlRm4iLCJfIiwiZXNjYXBlZCIsImhpZ2giLCJwc2V1ZG9GbkV4cHIiLCJnZXRBYiIsInBhcmVudCIsInJldCIsImxlbiIsIm1hdGNoSW5kZXhCeUFiIiwiZWxUeXBlIiwibGFuZyIsImVsTGFuZyIsInVuRXNjYXBlIiwibm90IiwibmVnYXRpb25BcmciLCJwc2V1ZG9JZGVudEV4cHIiLCJlbXB0eSIsInJvb3QiLCJkb2MiLCJoYXNGb2N1cyIsInRhYkluZGV4IiwiaGFzaCIsImVuYWJsZWQiLCJhdHRyaWJ1dGVFeHByIiwiZWxWYWx1ZSIsInN0YXJ0c1dpdGgiLCJlbmRzV2l0aCIsInJlbGF0aXZlRXhwciIsImRpciIsImltbWVkaWF0ZSIsImRpcmVjdGlvbiIsInBhcnNlSW50IiwiZXEiLCJzaW5nbGVNYXRjaCIsIm1hdGNoU3VmZml4TGVuIiwibWF0Y2hTdWZmaXhJbmRleCIsIm1hdGNoZWQiLCJtYXRjaFN1ZmZpeCIsInN1ZmZpeCIsInNpbmdsZU1hdGNoU3VmZml4Iiwic2luZ2xlTWF0Y2hTdWZmaXhUeXBlIiwiZmluZEZpeGVkTWF0Y2hGcm9tSGVhZCIsImhlYWQiLCJyZWxhdGl2ZU9wIiwiY3VyIiwicHJldiIsIm5leHRDb21iaW5hdG9yIiwibWF0Y2hTdWIiLCJtYXRjaEtleSIsInNlbGVjdG9ySWQiLCJnZW5JZCIsIm1hdGNoSW1tZWRpYXRlUmV0Iiwic3RhcnRFbCIsInN0YXJ0TWF0Y2giLCJtYXRjaEltbWVkaWF0ZSIsIm1hdGNoU3ViSW50ZXJuYWwiLCJzZWVkcyIsImNvbnRleHREb2N1bWVudCIsImdyb3VwIiwiZWxlbSIsImdyb3VwSW5kZXgiLCJncm91cExlbiIsInN1ZmZpeEluZGV4Iiwic3VmZml4TGVuIiwic2VlZHNJbmRleCIsInNlZWRzTGVuIiwibXlTZWVkcyIsInNpbmdsZVN1ZmZpeCIsImRvZXNOb3RIYXNCeUlkIiwiY29udGV4dEluRG9tIiwidG1wIiwidG1wcyIsInRtcExlbiIsInRtcEkiLCJzZWVkIiwibWF0Y2hIZWFkIiwidW5pcXVlIiwiY2xzIiwiYXR0cmliIiwiaWRlbnQiLCJtYXRjaEZuIiwicHNldWRvIiwiZm5TdHIiLCJTeW50YXhFcnJvciIsImxleGVyIiwieXkiLCJ1bkVzY2FwZVN0ciIsInByb3BGaXgiLCJSX0JPT0xFQU4iLCJSX0ZPQ1VTQUJMRSIsIlJfQ0xJQ0tBQkxFIiwiUl9JTlZBTElEX0NIQVIiLCJhdHRyRml4IiwiYXR0ckhvb2tzIiwidGFiaW5kZXgiLCJhdHRyaWJ1dGVOb2RlIiwiYm9vbEhvb2siLCJhdHRyTm9kZUhvb2siLCJjc3NUZXh0IiwiaGlkZWZvY3VzIiwicmVhZG9ubHkiLCJtYXhsZW5ndGgiLCJjZWxsc3BhY2luZyIsImNlbGxwYWRkaW5nIiwicm93c3BhbiIsImNvbHNwYW4iLCJ1c2VtYXAiLCJmcmFtZWJvcmRlciIsImNvbnRlbnRlZGl0YWJsZSIsIm5hdmlnYXRvciIsInVzZXJBZ2VudCIsIm1peCIsImllVmVyc2lvbiIsImFyciIsImVhY2giLCJwbGFjZWhvbGRlciIsImFsbFRleHQiLCJSRV9UUklNIiwiZGl2IiwiY3JlYXRlQ29tbWVudCIsIm5lZWRzRmlsdGVyIiwiY29tcGFyZU5vZGVPcmRlciIsInNvdXJjZUluZGV4IiwiaGFzRHVwbGljYXRlIiwiYmFzZUhhc0R1cGxpY2F0ZSIsInNvcnRPcmRlciIsInNvcnQiLCJlbGVtZW50cyIsImNsYXNzTmFtZSIsInByZWZpeCIsImxhc3RJbmRleE9mIiwiaW5kIiwiYXR0ck5vcm1hbGl6ZXIiLCJhdHRyTm9kZSIsIkdyYW1tYXJDb25zdCIsIkxleGVyIiwiY2ZnIiwicnVsZXMiLCJyZXNldElucHV0Iiwic3RhdGVTdGFjayIsIlNUQVRJQyIsIklOSVRJQUwiLCJmaXJzdExpbmUiLCJsYXN0TGluZSIsImZpcnN0Q29sdW1uIiwibGFzdENvbHVtbiIsImN1cnJlbnRTdGF0ZSIsIm1hcFN0YXRlIiwiaW5BcnJheSIsIm51bSIsIkRFQlVHX0NPTlRFWFRfTElNSVQiLCJwYXN0Iiwic3ltYm9sTWFwIiwicnMiLCJyZXZlcnNlU3ltYm9sTWFwIiwicnVsZSIsImxpbmVzIiwiZ2V0Q3VycmVudFJ1bGVzIiwibWFwU3ltYm9sIiwiRU5EX1RBRyIsInJlZ2V4cCIsInRva2VuIiwibGV4IiwicHVzaFN0YXRlIiwicG9wU3RhdGUiLCJwcm9kdWN0aW9ucyIsIiQxIiwiJDMiLCJwcmV2Q29tYmluYXRvciIsIiQyIiwiJDQiLCJ0YWJsZSIsImZpbGVuYW1lIiwic3ltYm9sIiwiZ290b3MiLCJ0YWJsZUFjdGlvbiIsInZhbHVlU3RhY2siLCJleHBlY3RlZCIsInN5bWJvbEZvclN0YXRlIiwibWFwUmV2ZXJzZVN5bWJvbCIsInNob3dEZWJ1Z0luZm8iLCJwcm9kdWN0aW9uIiwicmVkdWNlZFN5bWJvbCIsInJlZHVjZWRBY3Rpb24iLCJyaHMiLCIkJCIsIm5ld1N0YXRlIiwiZGVzdCIsImFyZ3MiLCJjYW1lbCIsImdldENvbXB1dGVkU3R5bGUiLCJjcmVhdGVSZWFjdENsYXNzIiwiaG9pc3ROb25SZWFjdFN0YXRpY3MiLCJXcmFwcGVkQ29tcG9uZW50IiwiV2l0aEZhdXhET00iLCJjb25uZWN0ZWRGYXV4RE9NIiwiYW5pbWF0ZUZhdXhET01VbnRpbCIsInN0b3BBbmltYXRpbmdGYXV4RE9NIiwic3RvcERyYXdGYXV4RE9NIiwiY29ubmVjdEZhdXhET00iLCJkaXNjYXJkTm9kZSIsImRyYXdGYXV4RE9NVGltZW91dCIsImRyYXdGYXV4RE9NIiwidmlydHVhbERPTSIsImFuaW1hdGVGYXV4RE9NIiwiZHVyYXRpb24iLCJtYXgiLCJmYXV4RE9NQW5pbWF0aW9uSW50ZXJ2YWwiLCJzZXRJbnRlcnZhbCIsImNsZWFySW50ZXJ2YWwiLCJpc0FuaW1hdGluZ0ZhdXhET00iLCJnZXREaXNwbGF5TmFtZSIsIlJlYWN0Tm9vcFVwZGF0ZVF1ZXVlIiwiX2Fzc2lnbiIsImVtcHR5T2JqZWN0IiwiX2ludmFyaWFudCIsIlJlYWN0Q29tcG9uZW50IiwiaW5qZWN0ZWRNaXhpbnMiLCJSZWFjdENsYXNzSW50ZXJmYWNlIiwibWl4aW5zIiwic3RhdGljcyIsInByb3BUeXBlcyIsImdldERlZmF1bHRQcm9wcyIsImdldEluaXRpYWxTdGF0ZSIsInVwZGF0ZUNvbXBvbmVudCIsIlJlYWN0Q2xhc3NTdGF0aWNJbnRlcmZhY2UiLCJSRVNFUlZFRF9TUEVDX0tFWVMiLCJDb25zdHJ1Y3RvciIsIm1peFNwZWNJbnRvQ29tcG9uZW50IiwiY3JlYXRlTWVyZ2VkUmVzdWx0RnVuY3Rpb24iLCJzcGVjUG9saWN5IiwibWl4U3RhdGljU3BlY0ludG9Db21wb25lbnQiLCJhdXRvYmluZCIsInZhbGlkYXRlTWV0aG9kT3ZlcnJpZGUiLCJpc0FscmVhZHlEZWZpbmVkIiwiUmVhY3RDbGFzc01peGluIiwic3BlYyIsInByb3RvIiwiYXV0b0JpbmRQYWlycyIsIl9fcmVhY3RBdXRvQmluZFBhaXJzIiwiaXNSZWFjdENsYXNzTWV0aG9kIiwiY3JlYXRlQ2hhaW5lZEZ1bmN0aW9uIiwibWVyZ2VJbnRvV2l0aE5vRHVwbGljYXRlS2V5cyIsIm9uZSIsInR3byIsImJpbmRBdXRvQmluZE1ldGhvZCIsIm1ldGhvZCIsIklzTW91bnRlZFByZU1peGluIiwiX19pc01vdW50ZWQiLCJJc01vdW50ZWRQb3N0TWl4aW4iLCJyZXBsYWNlU3RhdGUiLCJSZWFjdENsYXNzQ29tcG9uZW50IiwicGFpcnMiLCJhdXRvQmluZEtleSIsImJpbmRBdXRvQmluZE1ldGhvZHMiLCJpbml0aWFsU3RhdGUiLCJtZXRob2ROYW1lIiwiY29uZGl0aW9uIiwiZm9ybWF0IiwiYXJnSW5kZXgiLCJmcmFtZXNUb1BvcCIsInJlYWN0SXMiLCJSRUFDVF9TVEFUSUNTIiwiS05PV05fU1RBVElDUyIsImNhbGxlciIsImNhbGxlZSIsImFyaXR5IiwiTUVNT19TVEFUSUNTIiwiVFlQRV9TVEFUSUNTIiwiZ2V0U3RhdGljcyIsImlzTWVtbyIsIkZvcndhcmRSZWYiLCJNZW1vIiwiZ2V0UHJvdG90eXBlT2YiLCJvYmplY3RQcm90b3R5cGUiLCJ0YXJnZXRDb21wb25lbnQiLCJzb3VyY2VDb21wb25lbnQiLCJibGFja2xpc3QiLCJpbmhlcml0ZWRDb21wb25lbnQiLCJ0YXJnZXRTdGF0aWNzIiwic291cmNlU3RhdGljcyIsImRlc2NyaXB0b3IiLCJBc3luY01vZGUiLCJDb25jdXJyZW50TW9kZSIsIkNvbnRleHRDb25zdW1lciIsIkNvbnRleHRQcm92aWRlciIsIkxhenkiLCJQb3J0YWwiLCJpc0FzeW5jTW9kZSIsImlzQ29uY3VycmVudE1vZGUiLCJpc0NvbnRleHRDb25zdW1lciIsImlzQ29udGV4dFByb3ZpZGVyIiwiaXNFbGVtZW50IiwiaXNGb3J3YXJkUmVmIiwiaXNGcmFnbWVudCIsImlzTGF6eSIsImlzUG9ydGFsIiwiaXNQcm9maWxlciIsImlzU3RyaWN0TW9kZSIsImlzU3VzcGVuc2UiLCJpc1ZhbGlkRWxlbWVudFR5cGUiLCJ0eXBlT2YiLCJkMyIsImQzX2FycmF5U2xpY2UiLCJkM19hcnJheSIsImxpc3QiLCJkM19kb2N1bWVudCIsImQzX2RvY3VtZW50RWxlbWVudCIsImQzX3dpbmRvdyIsImFycmF5IiwiZDNfZWxlbWVudF9wcm90b3R5cGUiLCJkM19lbGVtZW50X3NldEF0dHJpYnV0ZSIsImQzX2VsZW1lbnRfc2V0QXR0cmlidXRlTlMiLCJkM19zdHlsZV9wcm90b3R5cGUiLCJDU1NTdHlsZURlY2xhcmF0aW9uIiwiZDNfc3R5bGVfc2V0UHJvcGVydHkiLCJzcGFjZSIsImxvY2FsIiwiZDNfYXNjZW5kaW5nIiwiTmFOIiwiZDNfbnVtYmVyIiwiZDNfbnVtZXJpYyIsImQzX2Jpc2VjdG9yIiwibG8iLCJtaWQiLCJhc2NlbmRpbmciLCJkZXNjZW5kaW5nIiwiZXh0ZW50Iiwic3VtIiwibWVhbiIsImoiLCJxdWFudGlsZSIsInZhbHVlcyIsIm1lZGlhbiIsIm51bWJlcnMiLCJ2YXJpYW5jZSIsImRldmlhdGlvbiIsInNxcnQiLCJkM19iaXNlY3QiLCJkM190cmFuc3Bvc2VMZW5ndGgiLCJiaXNlY3RMZWZ0IiwiYmlzZWN0IiwiYmlzZWN0UmlnaHQiLCJiaXNlY3RvciIsInNodWZmbGUiLCJpMCIsImkxIiwicGVybXV0ZSIsImluZGV4ZXMiLCJwZXJtdXRlcyIsInAxIiwidHJhbnNwb3NlIiwibWF0cml4Iiwicm93IiwiemlwIiwiZW50cmllcyIsIm1lcmdlIiwiYXJyYXlzIiwibWVyZ2VkIiwiYWJzIiwiZDNfcmFuZ2VfaW50ZWdlclNjYWxlIiwiZDNfY2xhc3MiLCJjdG9yIiwicHJvcGVydGllcyIsImQzX01hcCIsInN0b3AiLCJzdGVwIiwiSW5maW5pdHkiLCJkM19tYXBfZXNjYXBlIiwiZDNfbWFwX3VuZXNjYXBlIiwiZDNfbWFwX2hhcyIsImQzX21hcF9yZW1vdmUiLCJkM19tYXBfa2V5cyIsImQzX21hcF9zaXplIiwiZDNfbWFwX2VtcHR5IiwiZDNfU2V0IiwiZDNfaWRlbnRpdHkiLCJkM19yZWJpbmQiLCJkM192ZW5kb3JTeW1ib2wiLCJkM192ZW5kb3JQcmVmaXhlcyIsInByZWZpeE5hbWUiLCJyZW1vdmUiLCJuZXN0Iiwic29ydFZhbHVlcyIsInJvbGx1cCIsInNvcnRLZXlzIiwibWFwVHlwZSIsImRlcHRoIiwia2V5VmFsdWUiLCJzZXR0ZXIiLCJ2YWx1ZXNCeUtleSIsInNvcnRLZXkiLCJrZXlNYXAiLCJiZWhhdmlvciIsInJlYmluZCIsImQzX25vb3AiLCJkM19kaXNwYXRjaCIsImQzX2Rpc3BhdGNoX2V2ZW50IiwibGlzdGVuZXJCeU5hbWUiLCJvbiIsImQzX2V2ZW50UHJldmVudERlZmF1bHQiLCJkM19ldmVudFNvdXJjZSIsInNvdXJjZUV2ZW50IiwiZDNfZXZlbnREaXNwYXRjaCIsInRoaXoiLCJhcmd1bWVudHoiLCJlMSIsImUwIiwicmVxdW90ZSIsImQzX3JlcXVvdGVfcmUiLCJkM19zdWJjbGFzcyIsIl9fcHJvdG9fXyIsImQzX3NlbGVjdGlvbiIsImdyb3VwcyIsImQzX3NlbGVjdGlvblByb3RvdHlwZSIsImQzX3NlbGVjdCIsImQzX3NlbGVjdEFsbCIsImQzX3NlbGVjdE1hdGNoZXMiLCJkM19zZWxlY3RNYXRjaGVyIiwiU2l6emxlIiwibWF0Y2hlc1NlbGVjdG9yIiwic2VsZWN0aW9uIiwiZDNfc2VsZWN0aW9uX3NlbGVjdG9yIiwiZDNfc2VsZWN0aW9uX3NlbGVjdG9yQWxsIiwic3ViZ3JvdXAiLCJzdWJub2RlIiwic3ViZ3JvdXBzIiwiX19kYXRhX18iLCJzZWxlY3RBbGwiLCJkM19uc1hodG1sIiwiZDNfbnNQcmVmaXgiLCJzdmciLCJ4aHRtbCIsInhsaW5rIiwieG1sIiwieG1sbnMiLCJkM19zZWxlY3Rpb25fYXR0ciIsInF1YWxpZnkiLCJyZW1vdmVBdHRyaWJ1dGVOUyIsImQzX2NvbGxhcHNlIiwiZDNfc2VsZWN0aW9uX2NsYXNzZWRSZSIsIlJlZ0V4cCIsImQzX3NlbGVjdGlvbl9jbGFzc2VzIiwiZDNfc2VsZWN0aW9uX2NsYXNzZWQiLCJkM19zZWxlY3Rpb25fY2xhc3NlZE5hbWUiLCJjbGFzc0xpc3QiLCJkM19zZWxlY3Rpb25fc3R5bGUiLCJkM19zZWxlY3Rpb25fcHJvcGVydHkiLCJkM19zZWxlY3Rpb25fY3JlYXRvciIsImQzX3NlbGVjdGlvblJlbW92ZSIsImQzX3NlbGVjdGlvbl9kYXRhTm9kZSIsImQzX3NlbGVjdGlvbl9maWx0ZXIiLCJkM19zZWxlY3Rpb25fc29ydENvbXBhcmF0b3IiLCJjb21wYXJhdG9yIiwiZDNfc2VsZWN0aW9uX2VhY2giLCJkM19zZWxlY3Rpb25fZW50ZXIiLCJkM19zZWxlY3Rpb25fZW50ZXJQcm90b3R5cGUiLCJnZXRBdHRyaWJ1dGVOUyIsImNsYXNzZWQiLCJodG1sIiwiYXBwZW5kIiwiaW5zZXJ0IiwiZ3JvdXBEYXRhIiwibm9kZURhdGEiLCJuMCIsInVwZGF0ZU5vZGVzIiwiZW50ZXJOb2RlcyIsImV4aXROb2RlcyIsIm5vZGVCeUtleVZhbHVlIiwia2V5VmFsdWVzIiwidXBkYXRlIiwiZW50ZXIiLCJleGl0IiwiZGF0dW0iLCJkM19zZWxlY3Rpb25fZW50ZXJJbnNlcnRCZWZvcmUiLCJqMCIsImQzX3NlbGVjdGlvbl9vbiIsImNhcHR1cmUiLCJ3cmFwIiwiZDNfc2VsZWN0aW9uX29uTGlzdGVuZXIiLCJkM19zZWxlY3Rpb25fb25GaWx0ZXJzIiwib25SZW1vdmUiLCIkIiwiZDNfc2VsZWN0aW9uX29uRmlsdGVyIiwidXBncm91cCIsIm1vdXNlZW50ZXIiLCJtb3VzZWxlYXZlIiwicmVsYXRlZCIsImQzX2V2ZW50X2RyYWdTZWxlY3QiLCJkM19ldmVudF9kcmFnSWQiLCJkM19ldmVudF9kcmFnU3VwcHJlc3MiLCJjbGljayIsInN1cHByZXNzQ2xpY2siLCJvZmYiLCJtb3VzZSIsImQzX21vdXNlUG9pbnQiLCJkM19tb3VzZV9idWc0NDA4MyIsIm93bmVyU1ZHRWxlbWVudCIsImNyZWF0ZVNWR1BvaW50IiwicG9pbnQiLCJzY3JvbGxYIiwic2Nyb2xsWSIsImN0bSIsInBvc2l0aW9uIiwibWFyZ2luIiwicGFkZGluZyIsImJvcmRlciIsImdldFNjcmVlbkNUTSIsIm1hdHJpeFRyYW5zZm9ybSIsImludmVyc2UiLCJyZWN0IiwiY2xpZW50TGVmdCIsImNsaWVudFRvcCIsImQzX2JlaGF2aW9yX2RyYWdUb3VjaElkIiwiaWRlbnRpZmllciIsInRvdWNoIiwiZHJhZyIsIm9yaWdpbiIsIm1vdXNlZG93biIsImRyYWdzdGFydCIsInRvdWNoc3RhcnQiLCJzdWJqZWN0IiwibW92ZSIsImRyYWdPZmZzZXQiLCJ0aGF0IiwiY29ycmVzcG9uZGluZ0VsZW1lbnQiLCJkcmFnZ2VkIiwiZHJhZ0lkIiwiZHJhZ05hbWUiLCJkcmFnU3ViamVjdCIsIm1vdmVkIiwiZW5kZWQiLCJkcmFnUmVzdG9yZSIsInBvc2l0aW9uMCIsImR4IiwiZHkiLCJwb3NpdGlvbjEiLCLOtSIsIs61MiIsIs+AIiwiUEkiLCLPhCIsIs+EzrUiLCJoYWxmz4AiLCJkM19yYWRpYW5zIiwiZDNfZGVncmVlcyIsImQzX3NnbiIsImQzX2Nyb3NzMmQiLCJkM19hY29zIiwiYWNvcyIsImQzX2FzaW4iLCJhc2luIiwiZDNfY29zaCIsImV4cCIsImQzX2hhdmVyc2luIiwic2luIiwiz4EiLCJTUVJUMiIsImludGVycG9sYXRlWm9vbSIsInAwIiwidXgwIiwidXkwIiwidzAiLCJ1eDEiLCJ1eTEiLCJ3MSIsImQyIiwibG9nIiwiZDEiLCJiMCIsImIxIiwicjAiLCJyMSIsImNvc2hyMCIsImQzX3NpbmgiLCJ0cmFuc2xhdGUwIiwiY2VudGVyMCIsImNlbnRlciIsIm1vdXNld2hlZWxUaW1lciIsInRvdWNodGltZSIsIngwIiwieDEiLCJ5MCIsInkxIiwic2NhbGVFeHRlbnQiLCJkM19iZWhhdmlvcl96b29tSW5maW5pdHkiLCJ6b29taW5nIiwibW91c2Vtb3ZlIiwibW91c2V1cCIsIm1vdXNlZG93bmVkIiwiZDNfYmVoYXZpb3Jfem9vbVdoZWVsIiwibW91c2V3aGVlbGVkIiwiZGJsY2xpY2tlZCIsInRvdWNoc3RhcnRlZCIsInNjYWxlVG8iLCJ0cmFuc2xhdGVUbyIsInpvb21UbyIsIl9fY2hhcnRfXyIsInBvdyIsInJlc2NhbGUiLCJkb21haW4iLCJpbnZlcnQiLCJ6b29tc3RhcnRlZCIsInpvb21lZCIsInNjYWxlIiwidHJhbnNsYXRlIiwiem9vbWVuZGVkIiwibG9jYXRpb24wIiwiZDNfc2VsZWN0aW9uX2ludGVycnVwdCIsInNjYWxlMCIsImxvY2F0aW9uczAiLCJkaXN0YW5jZTAiLCJ6b29tTmFtZSIsInRvdWNobW92ZSIsInRvdWNoZW5kIiwidGFyZ2V0cyIsInJlbG9jYXRlIiwic3RhcnRlZCIsImNoYW5nZWQiLCJMTjIiLCJsMCIsImwxIiwiZGlzdGFuY2UxIiwic2NhbGUxIiwiZDNfYmVoYXZpb3Jfem9vbURlbHRhIiwidmlldzEiLCJkM190cmFuc2l0aW9uSW5oZXJpdElkIiwidHdlZW4iLCJjeCIsImN5IiwiY29weSIsImQzX2NvbG9yIiwiZDNfaHNsIiwiZDNfcmdiX3BhcnNlIiwiZDNfcmdiX2hzbCIsInJnYiIsImhzbCIsImQzX2hzbFByb3RvdHlwZSIsImQzX2hzbF9yZ2IiLCJtMSIsIm0yIiwidnYiLCJyb3VuZCIsImQzX3JnYiIsImQzX2hjbCIsImQzX2xhYl9oY2wiLCJkM19sYWIiLCJkM19yZ2JfbGFiIiwiYnJpZ2h0ZXIiLCJkYXJrZXIiLCJoY2wiLCJkM19oY2xQcm90b3R5cGUiLCJkM19oY2xfbGFiIiwiY29zIiwiZDNfbGFiX0siLCJsYWIiLCJkM19sYWJQcm90b3R5cGUiLCJkM19sYWJfcmdiIiwiZDNfeHl6X3JnYiIsImQzX2xhYl94eXoiLCJhdGFuMiIsImQzX3h5el9sYWIiLCJkM19yZ2JOdW1iZXIiLCJkM19yZ2JTdHJpbmciLCJkM19yZ2JQcm90b3R5cGUiLCJkM19yZ2JfaGV4IiwiZXhlYyIsImQzX3JnYl9wYXJzZU51bWJlciIsImQzX3JnYl9uYW1lcyIsImQzX3JnYl94eXoiLCJhbGljZWJsdWUiLCJhbnRpcXVld2hpdGUiLCJhcXVhIiwiYXF1YW1hcmluZSIsImF6dXJlIiwiYmVpZ2UiLCJiaXNxdWUiLCJibGFjayIsImJsYW5jaGVkYWxtb25kIiwiYmx1ZSIsImJsdWV2aW9sZXQiLCJicm93biIsImJ1cmx5d29vZCIsImNhZGV0Ymx1ZSIsImNoYXJ0cmV1c2UiLCJjaG9jb2xhdGUiLCJjb3JhbCIsImNvcm5mbG93ZXJibHVlIiwiY29ybnNpbGsiLCJjcmltc29uIiwiY3lhbiIsImRhcmtibHVlIiwiZGFya2N5YW4iLCJkYXJrZ29sZGVucm9kIiwiZGFya2dyYXkiLCJkYXJrZ3JlZW4iLCJkYXJrZ3JleSIsImRhcmtraGFraSIsImRhcmttYWdlbnRhIiwiZGFya29saXZlZ3JlZW4iLCJkYXJrb3JhbmdlIiwiZGFya29yY2hpZCIsImRhcmtyZWQiLCJkYXJrc2FsbW9uIiwiZGFya3NlYWdyZWVuIiwiZGFya3NsYXRlYmx1ZSIsImRhcmtzbGF0ZWdyYXkiLCJkYXJrc2xhdGVncmV5IiwiZGFya3R1cnF1b2lzZSIsImRhcmt2aW9sZXQiLCJkZWVwcGluayIsImRlZXBza3libHVlIiwiZGltZ3JheSIsImRpbWdyZXkiLCJkb2RnZXJibHVlIiwiZmlyZWJyaWNrIiwiZmxvcmFsd2hpdGUiLCJmb3Jlc3RncmVlbiIsImZ1Y2hzaWEiLCJnYWluc2Jvcm8iLCJnaG9zdHdoaXRlIiwiZ29sZCIsImdvbGRlbnJvZCIsImdyYXkiLCJncmVlbiIsImdyZWVueWVsbG93IiwiZ3JleSIsImhvbmV5ZGV3IiwiaG90cGluayIsImluZGlhbnJlZCIsImluZGlnbyIsIml2b3J5Iiwia2hha2kiLCJsYXZlbmRlciIsImxhdmVuZGVyYmx1c2giLCJsYXduZ3JlZW4iLCJsZW1vbmNoaWZmb24iLCJsaWdodGJsdWUiLCJsaWdodGNvcmFsIiwibGlnaHRjeWFuIiwibGlnaHRnb2xkZW5yb2R5ZWxsb3ciLCJsaWdodGdyYXkiLCJsaWdodGdyZWVuIiwibGlnaHRncmV5IiwibGlnaHRwaW5rIiwibGlnaHRzYWxtb24iLCJsaWdodHNlYWdyZWVuIiwibGlnaHRza3libHVlIiwibGlnaHRzbGF0ZWdyYXkiLCJsaWdodHNsYXRlZ3JleSIsImxpZ2h0c3RlZWxibHVlIiwibGlnaHR5ZWxsb3ciLCJsaW1lIiwibGltZWdyZWVuIiwibGluZW4iLCJtYWdlbnRhIiwibWFyb29uIiwibWVkaXVtYXF1YW1hcmluZSIsIm1lZGl1bWJsdWUiLCJtZWRpdW1vcmNoaWQiLCJtZWRpdW1wdXJwbGUiLCJtZWRpdW1zZWFncmVlbiIsIm1lZGl1bXNsYXRlYmx1ZSIsIm1lZGl1bXNwcmluZ2dyZWVuIiwibWVkaXVtdHVycXVvaXNlIiwibWVkaXVtdmlvbGV0cmVkIiwibWlkbmlnaHRibHVlIiwibWludGNyZWFtIiwibWlzdHlyb3NlIiwibW9jY2FzaW4iLCJuYXZham93aGl0ZSIsIm5hdnkiLCJvbGRsYWNlIiwib2xpdmUiLCJvbGl2ZWRyYWIiLCJvcmFuZ2UiLCJvcmFuZ2VyZWQiLCJvcmNoaWQiLCJwYWxlZ29sZGVucm9kIiwicGFsZWdyZWVuIiwicGFsZXR1cnF1b2lzZSIsInBhbGV2aW9sZXRyZWQiLCJwYXBheWF3aGlwIiwicGVhY2hwdWZmIiwicGVydSIsInBpbmsiLCJwbHVtIiwicG93ZGVyYmx1ZSIsInB1cnBsZSIsInJlYmVjY2FwdXJwbGUiLCJyZWQiLCJyb3N5YnJvd24iLCJyb3lhbGJsdWUiLCJzYWRkbGVicm93biIsInNhbG1vbiIsInNhbmR5YnJvd24iLCJzZWFncmVlbiIsInNlYXNoZWxsIiwic2llbm5hIiwic2lsdmVyIiwic2t5Ymx1ZSIsInNsYXRlYmx1ZSIsInNsYXRlZ3JheSIsInNsYXRlZ3JleSIsInNub3ciLCJzcHJpbmdncmVlbiIsInN0ZWVsYmx1ZSIsInRhbiIsInRlYWwiLCJ0aGlzdGxlIiwidG9tYXRvIiwidHVycXVvaXNlIiwidmlvbGV0Iiwid2hlYXQiLCJ3aGl0ZSIsIndoaXRlc21va2UiLCJ5ZWxsb3ciLCJ5ZWxsb3dncmVlbiIsImQzX2Z1bmN0b3IiLCJkM194aHJUeXBlIiwicmVzcG9uc2UiLCJtaW1lVHlwZSIsImQzX3hociIsInhociIsImhlYWRlcnMiLCJyZXF1ZXN0IiwiWE1MSHR0cFJlcXVlc3QiLCJyZXNwb25zZVR5cGUiLCJyZXNwb25kIiwic3RhdHVzIiwicmVzcG9uc2VUZXh0IiwiZDNfeGhySGFzUmVzcG9uc2UiLCJsb2FkIiwiWERvbWFpblJlcXVlc3QiLCJvbmxvYWQiLCJvbmVycm9yIiwib25yZWFkeXN0YXRlY2hhbmdlIiwicmVhZHlTdGF0ZSIsIm9ucHJvZ3Jlc3MiLCJwcm9ncmVzcyIsImhlYWRlciIsInNlbmQiLCJvcGVuIiwic2V0UmVxdWVzdEhlYWRlciIsIm92ZXJyaWRlTWltZVR5cGUiLCJiZWZvcmVzZW5kIiwiYWJvcnQiLCJkM194aHJfZml4Q2FsbGJhY2siLCJmdW5jdG9yIiwiZHN2IiwiZGVsaW1pdGVyIiwicmVGb3JtYXQiLCJkZWxpbWl0ZXJDb2RlIiwiY2hhckNvZGVBdCIsInR5cGVkUmVzcG9uc2UiLCJmb3JtYXRSb3ciLCJmb3JtYXRWYWx1ZSIsInBhcnNlUm93cyIsIkZ1bmN0aW9uIiwiZW9sIiwiRU9MIiwiRU9GIiwicm93cyIsImZvcm1hdFJvd3MiLCJmaWVsZFNldCIsImZpZWxkcyIsImZpZWxkIiwiY3N2IiwidHN2IiwiZDNfdGltZXJfcXVldWVIZWFkIiwiZDNfdGltZXJfcXVldWVUYWlsIiwiZDNfdGltZXJfaW50ZXJ2YWwiLCJkM190aW1lcl90aW1lb3V0IiwiZDNfdGltZXJfZnJhbWUiLCJkM190aW1lciIsInRpbWVyIiwiZDNfdGltZXJfc3RlcCIsImQzX3RpbWVyX21hcmsiLCJkM190aW1lcl9zd2VlcCIsInQwIiwidDEiLCJkM19mb3JtYXRfcHJlY2lzaW9uIiwiTE4xMCIsImZsdXNoIiwiZDNfZm9ybWF0UHJlZml4ZXMiLCJkM19sb2NhbGVfbnVtYmVyRm9ybWF0IiwibG9jYWxlX2RlY2ltYWwiLCJkZWNpbWFsIiwibG9jYWxlX3Rob3VzYW5kcyIsInRob3VzYW5kcyIsImxvY2FsZV9ncm91cGluZyIsImdyb3VwaW5nIiwibG9jYWxlX2N1cnJlbmN5IiwiY3VycmVuY3kiLCJmb3JtYXRHcm91cCIsInJldmVyc2UiLCJzcGVjaWZpZXIiLCJkM19mb3JtYXRfcmUiLCJmaWxsIiwiYWxpZ24iLCJzaWduIiwiemZpbGwiLCJjb21tYSIsInByZWNpc2lvbiIsImludGVnZXIiLCJleHBvbmVudCIsImQzX2Zvcm1hdF90eXBlcyIsImQzX2Zvcm1hdF90eXBlRGVmYXVsdCIsInpjb21tYSIsImZ1bGxTdWZmaXgiLCJuZWdhdGl2ZSIsInVuaXQiLCJmb3JtYXRQcmVmaXgiLCJhZnRlciIsInRvUHJlY2lzaW9uIiwidG9FeHBvbmVudGlhbCIsInRvRml4ZWQiLCJkM190aW1lIiwiZDNfZGF0ZSIsImQzX2RhdGVfdXRjIiwiVVRDIiwiZ2V0RGF0ZSIsImdldFVUQ0RhdGUiLCJnZXREYXkiLCJnZXRVVENEYXkiLCJnZXRGdWxsWWVhciIsImdldFVUQ0Z1bGxZZWFyIiwiZ2V0SG91cnMiLCJnZXRVVENIb3VycyIsImdldE1pbGxpc2Vjb25kcyIsImdldFVUQ01pbGxpc2Vjb25kcyIsImdldE1pbnV0ZXMiLCJnZXRVVENNaW51dGVzIiwiZ2V0TW9udGgiLCJnZXRVVENNb250aCIsImdldFNlY29uZHMiLCJnZXRVVENTZWNvbmRzIiwiZ2V0VGltZSIsImdldFRpbWV6b25lT2Zmc2V0Iiwic2V0RGF0ZSIsImQzX3RpbWVfcHJvdG90eXBlIiwic2V0VVRDRGF0ZSIsInNldERheSIsInNldFVUQ0RheSIsInNldEZ1bGxZZWFyIiwic2V0VVRDRnVsbFllYXIiLCJzZXRIb3VycyIsInNldFVUQ0hvdXJzIiwic2V0TWlsbGlzZWNvbmRzIiwic2V0VVRDTWlsbGlzZWNvbmRzIiwic2V0TWludXRlcyIsInNldFVUQ01pbnV0ZXMiLCJzZXRNb250aCIsInNldFVUQ01vbnRoIiwic2V0U2Vjb25kcyIsInNldFVUQ1NlY29uZHMiLCJzZXRUaW1lIiwiZDNfdGltZV9pbnRlcnZhbCIsImQwIiwiZHQiLCJ0aW1lcyIsInV0YyIsImQzX3RpbWVfaW50ZXJ2YWxfdXRjIiwiZDNfbG9jYWxlX3RpbWVGb3JtYXQiLCJsb2NhbGVfZGF0ZVRpbWUiLCJkYXRlVGltZSIsImxvY2FsZV9kYXRlIiwibG9jYWxlX3RpbWUiLCJsb2NhbGVfcGVyaW9kcyIsInBlcmlvZHMiLCJsb2NhbGVfZGF5cyIsImRheXMiLCJsb2NhbGVfc2hvcnREYXlzIiwic2hvcnREYXlzIiwibG9jYWxlX21vbnRocyIsIm1vbnRocyIsImxvY2FsZV9zaG9ydE1vbnRocyIsInNob3J0TW9udGhzIiwiZDNfdGltZV9mb3JtYXQiLCJ0ZW1wbGF0ZSIsInN0cmluZyIsImQzX3RpbWVfZm9ybWF0UGFkcyIsImQzX3RpbWVfZm9ybWF0cyIsImQzX3RpbWVfcGFyc2UiLCJsb2NhbFoiLCJkM190aW1lX3BhcnNlcnMiLCJtdWx0aSIsImQzX3RpbWVfZm9ybWF0TXVsdGkiLCJkM190aW1lX3BlcmlvZExvb2t1cCIsImQzX3RpbWVfZGF5UmUiLCJkM190aW1lX2Zvcm1hdFJlIiwiZDNfdGltZV9kYXlMb29rdXAiLCJkM190aW1lX2Zvcm1hdExvb2t1cCIsImQzX3RpbWVfZGF5QWJicmV2UmUiLCJkM190aW1lX2RheUFiYnJldkxvb2t1cCIsImQzX3RpbWVfbW9udGhSZSIsImQzX3RpbWVfbW9udGhMb29rdXAiLCJkM190aW1lX21vbnRoQWJicmV2UmUiLCJkM190aW1lX21vbnRoQWJicmV2TG9va3VwIiwiZDNfdGltZV9mb3JtYXRQYWQiLCJkYXlPZlllYXIiLCJzdW5kYXlPZlllYXIiLCJtb25kYXlPZlllYXIiLCJkM190aW1lX3pvbmUiLCJkM190aW1lX3BhcnNlRGF5IiwiZDNfdGltZV9wYXJzZUhvdXIyNCIsImQzX3RpbWVfcGFyc2VEYXlPZlllYXIiLCJkM190aW1lX3BhcnNlTWlsbGlzZWNvbmRzIiwiZDNfdGltZV9wYXJzZU1vbnRoTnVtYmVyIiwiZDNfdGltZV9wYXJzZU1pbnV0ZXMiLCJkM190aW1lX3BhcnNlU2Vjb25kcyIsImQzX3RpbWVfcGFyc2VXZWVrTnVtYmVyU3VuZGF5IiwiZDNfdGltZV9wYXJzZVdlZWtkYXlOdW1iZXIiLCJkM190aW1lX3BhcnNlV2Vla051bWJlck1vbmRheSIsImQzX3RpbWVfcGFyc2VZZWFyIiwiZDNfdGltZV9wYXJzZUZ1bGxZZWFyIiwiZDNfdGltZV9wYXJzZVpvbmUiLCJkM190aW1lX3BhcnNlTGl0ZXJhbFBlcmNlbnQiLCJ5ZWFyIiwiZGF5IiwieWVhcnMiLCJpbnRlcnZhbCIsInN1bmRheSIsIndlZWtzIiwid2Vla09mWWVhciIsImQzX3RpbWVfbnVtYmVyUmUiLCJkM190aW1lX3BlcmNlbnRSZSIsIm5hbWVzIiwienMiLCJ6bSIsImZvcm1hdHMiLCJudW1iZXJGb3JtYXQiLCJ0aW1lRm9ybWF0IiwiZDNfbG9jYWxlX2VuVVMiLCJkM19hZGRlciIsImdlbyIsImQzX2FkZGVyU3VtIiwiZDNfYWRkZXJUZW1wIiwicmVzZXQiLCJidiIsImF2IiwiZDNfZ2VvX3N0cmVhbUdlb21ldHJ5IiwiZ2VvbWV0cnkiLCJkM19nZW9fc3RyZWFtR2VvbWV0cnlUeXBlIiwic3RyZWFtIiwiZDNfZ2VvX3N0cmVhbU9iamVjdFR5cGUiLCJGZWF0dXJlIiwiZmVhdHVyZSIsIkZlYXR1cmVDb2xsZWN0aW9uIiwiZmVhdHVyZXMiLCJTcGhlcmUiLCJzcGhlcmUiLCJQb2ludCIsImNvb3JkaW5hdGVzIiwiTXVsdGlQb2ludCIsIkxpbmVTdHJpbmciLCJkM19nZW9fc3RyZWFtTGluZSIsIk11bHRpTGluZVN0cmluZyIsIlBvbHlnb24iLCJkM19nZW9fc3RyZWFtUG9seWdvbiIsIk11bHRpUG9seWdvbiIsIkdlb21ldHJ5Q29sbGVjdGlvbiIsImdlb21ldHJpZXMiLCJjbG9zZWQiLCJjb29yZGluYXRlIiwibGluZVN0YXJ0IiwibGluZUVuZCIsInBvbHlnb25TdGFydCIsInBvbHlnb25FbmQiLCJkM19nZW9fYXJlYVN1bSIsImQzX2dlb19hcmVhIiwiZDNfZ2VvX2NlbnRyb2lkVzAiLCJkM19nZW9fY2VudHJvaWRXMSIsImQzX2dlb19jZW50cm9pZFgwIiwiZDNfZ2VvX2NlbnRyb2lkWTAiLCJkM19nZW9fY2VudHJvaWRaMCIsImQzX2dlb19jZW50cm9pZFgxIiwiZDNfZ2VvX2NlbnRyb2lkWTEiLCJkM19nZW9fY2VudHJvaWRaMSIsImQzX2dlb19jZW50cm9pZFgyIiwiZDNfZ2VvX2NlbnRyb2lkWTIiLCJkM19nZW9fY2VudHJvaWRaMiIsImQzX2dlb19hcmVhUmluZ1N1bSIsImQzX2dlb19hcmVhUmluZ1N0YXJ0IiwizrswMCIsIs+GMDAiLCLOuzAiLCJjb3PPhjAiLCJzaW7PhjAiLCJuZXh0UG9pbnQiLCLOuyIsIs+GIiwiZM67Iiwic2TOuyIsImFkzrsiLCJjb3PPhiIsInNpbs+GIiwiZDNfZ2VvX2NhcnRlc2lhbiIsInNwaGVyaWNhbCIsImQzX2dlb19jYXJ0ZXNpYW5Eb3QiLCJkM19nZW9fY2FydGVzaWFuQ3Jvc3MiLCJkM19nZW9fY2FydGVzaWFuQWRkIiwiZDNfZ2VvX2NhcnRlc2lhblNjYWxlIiwidmVjdG9yIiwiZDNfZ2VvX2NhcnRlc2lhbk5vcm1hbGl6ZSIsImQzX2dlb19zcGhlcmljYWwiLCJjYXJ0ZXNpYW4iLCJkM19nZW9fc3BoZXJpY2FsRXF1YWwiLCJib3VuZHMiLCLPhjAiLCLOuzEiLCLPhjEiLCLOu18iLCLOu19fIiwiz4ZfXyIsImTOu1N1bSIsInJhbmdlcyIsImJvdW5kIiwicmluZ1BvaW50IiwicmluZ1N0YXJ0IiwicmluZ0VuZCIsImxpbmVQb2ludCIsIm5vcm1hbCIsImluZmxlY3Rpb24iLCLOu2kiLCJhbnRpbWVyaWRpYW4iLCLPhmkiLCJhbmdsZSIsImNvbXBhcmVSYW5nZXMiLCJ3aXRoaW5SYW5nZSIsImJlc3QiLCJjZW50cm9pZCIsImQzX2dlb19jZW50cm9pZCIsImQzX2dlb19jZW50cm9pZFBvaW50IiwiZDNfZ2VvX2NlbnRyb2lkTGluZVN0YXJ0IiwiZDNfZ2VvX2NlbnRyb2lkTGluZUVuZCIsImQzX2dlb19jZW50cm9pZFJpbmdTdGFydCIsImQzX2dlb19jZW50cm9pZFBvaW50WFlaIiwiejAiLCJjeiIsImQzX2dlb19jb21wb3NlIiwiY29tcG9zZSIsImQzX3RydWUiLCJkM19nZW9fY2xpcFBvbHlnb24iLCJzZWdtZW50cyIsImNsaXBTdGFydEluc2lkZSIsImludGVycG9sYXRlIiwiY2xpcCIsInNlZ21lbnQiLCJkM19nZW9fY2xpcFBvbHlnb25JbnRlcnNlY3Rpb24iLCJkM19nZW9fY2xpcFBvbHlnb25MaW5rQ2lyY3VsYXIiLCJlbnRyeSIsInBvaW50cyIsImlzU3ViamVjdCIsImQzX2dlb19jbGlwIiwicG9pbnRWaXNpYmxlIiwiY2xpcExpbmUiLCJjbGlwU3RhcnQiLCJyb3RhdGUiLCJsaW5lIiwicm90YXRlZENsaXBTdGFydCIsInBvaW50UmluZyIsInBvbHlnb24iLCJtZXJpZGlhbiIsInBhcmFsbGVsIiwibWVyaWRpYW5Ob3JtYWwiLCJwb2xhckFuZ2xlIiwid2luZGluZyIsInJpbmciLCJwb2ludDAiLCJhcmMiLCJpbnRlcnNlY3Rpb24iLCLPhmFyYyIsImQzX2dlb19wb2ludEluUG9seWdvbiIsInBvbHlnb25TdGFydGVkIiwiZDNfZ2VvX2NsaXBTb3J0IiwicG9pbnRMaW5lIiwiYnVmZmVyIiwiZDNfZ2VvX2NsaXBCdWZmZXJMaXN0ZW5lciIsInJpbmdMaXN0ZW5lciIsImNsZWFuIiwicmluZ1NlZ21lbnRzIiwiZDNfZ2VvX2NsaXBTZWdtZW50TGVuZ3RoMSIsInJlam9pbiIsImQzX2dlb19jbGlwQW50aW1lcmlkaWFuIiwic867MCIsInPOuzEiLCJjb3PPhjEiLCJzaW7OuzBfzrsxIiwiYXRhbiIsImQzX2dlb19jbGlwQW50aW1lcmlkaWFuSW50ZXJzZWN0IiwiZDNfZ2VvX2NsaXBDaXJjbGUiLCJyYWRpdXMiLCJjciIsInNtYWxsUmFkaXVzIiwibm90SGVtaXNwaGVyZSIsInZpc2libGUiLCJjMCIsInYwIiwidjAwIiwicG9pbnQyIiwicG9pbnQxIiwiY29kZSIsImludGVyc2VjdCIsImQzX2dlb19jaXJjbGVJbnRlcnBvbGF0ZSIsIm4xIiwibjIiLCJuMm4yIiwibjFuMiIsImRldGVybWluYW50IiwiYzEiLCJjMiIsIm4xeG4yIiwidXUiLCJ0MiIsIs60zrsiLCJwb2xhciIsInExIiwiZDNfZ2VvbV9jbGlwTGluZSIsImF4IiwiYXkiLCJkM19nZW9fY2xpcEV4dGVudCIsInhfXyIsInlfXyIsInZfXyIsInhfIiwieV8iLCJ2XyIsImxpc3RlbmVyXyIsImJ1ZmZlckxpc3RlbmVyIiwid24iLCJpbnNpZGVQb2x5Z29uIiwiaW5zaWRlIiwiYTEiLCJjb3JuZXIiLCJjb21wYXJlUG9pbnRzIiwiZDNfZ2VvX2NvbmljIiwicHJvamVjdEF0IiwiZDNfZ2VvX3Byb2plY3Rpb25NdXRhdG9yIiwicGFyYWxsZWxzIiwiZDNfZ2VvX2NvbmljRXF1YWxBcmVhIiwiz4EwIiwiZm9yd2FyZCIsIs+BMF95IiwiY2xpcEV4dGVudCIsIm91dHB1dCIsInZhbGlkIiwiY29uaWNFcXVhbEFyZWEiLCJhbGJlcnMiLCJhbGJlcnNVc2EiLCJsb3dlcjQ4UG9pbnQiLCJhbGFza2FQb2ludCIsImhhd2FpaVBvaW50IiwibG93ZXI0OCIsImFsYXNrYSIsImhhd2FpaSIsInBvaW50U3RyZWFtIiwibG93ZXI0OFN0cmVhbSIsImFsYXNrYVN0cmVhbSIsImhhd2FpaVN0cmVhbSIsImQzX2dlb19wYXRoQXJlYVN1bSIsImQzX2dlb19wYXRoQXJlYVBvbHlnb24iLCJkM19nZW9fcGF0aEJvdW5kc1gwIiwiZDNfZ2VvX3BhdGhCb3VuZHNZMCIsImQzX2dlb19wYXRoQm91bmRzWDEiLCJkM19nZW9fcGF0aEJvdW5kc1kxIiwiZDNfZ2VvX3BhdGhBcmVhIiwiZDNfZ2VvX3BhdGhBcmVhUmluZ1N0YXJ0IiwieDAwIiwieTAwIiwiZDNfZ2VvX3BhdGhCb3VuZHMiLCJkM19nZW9fcGF0aEJ1ZmZlciIsInBvaW50Q2lyY2xlIiwiZDNfZ2VvX3BhdGhCdWZmZXJDaXJjbGUiLCJwb2ludExpbmVTdGFydCIsImxpbmVFbmRQb2x5Z29uIiwicG9pbnRSYWRpdXMiLCJkM19nZW9fbGVuZ3RoU3VtIiwiZDNfZ2VvX3BhdGhDZW50cm9pZCIsImQzX2dlb19wYXRoQ2VudHJvaWRQb2ludCIsImQzX2dlb19wYXRoQ2VudHJvaWRMaW5lU3RhcnQiLCJkM19nZW9fcGF0aENlbnRyb2lkTGluZUVuZCIsImQzX2dlb19wYXRoQ2VudHJvaWRSaW5nU3RhcnQiLCJkM19nZW9fcGF0aENvbnRleHQiLCJtb3ZlVG8iLCJsaW5lVG8iLCJjbG9zZVBhdGgiLCJkM19nZW9fcmVzYW1wbGUiLCJwcm9qZWN0IiwizrQyIiwiY29zTWluRGlzdGFuY2UiLCJtYXhEZXB0aCIsInJlc2FtcGxlIiwicmVzYW1wbGVSZWN1cnNpdmUiLCJyZXNhbXBsZU5vbmUiLCJkM19nZW9fdHJhbnNmb3JtUG9pbnQiLCJhMDAiLCJiMDAiLCJjMDAiLCJhMCIsInJlc2FtcGxlTGluZVRvIiwiz4YyIiwizrsyIiwieDIiLCJ5MiIsImR4MiIsImR5MiIsImR6IiwiZDNfZ2VvX3BhdGhQcm9qZWN0U3RyZWFtIiwiZDNfZ2VvX3Byb2plY3Rpb25SYWRpYW5zIiwiZDNfZ2VvX3RyYW5zZm9ybSIsImQzX2dlb19wcm9qZWN0aW9uIiwicHJvamVjdFJvdGF0ZSIsIs60eCIsIs60eSIsInByb2plY3RSZXNhbXBsZSIsIs60z4YiLCLOtM6zIiwicHJlY2xpcCIsInBvc3RjbGlwIiwiY2xpcEFuZ2xlIiwicHJvamVjdGlvbiIsImQzX2dlb19yb3RhdGlvbiIsImludmFsaWRhdGUiLCJkM19nZW9fZXF1aXJlY3Rhbmd1bGFyIiwiZDNfZ2VvX2lkZW50aXR5Um90YXRpb24iLCJkM19nZW9fcm90YXRpb27OuyIsImQzX2dlb19yb3RhdGlvbs+GzrMiLCJkM19nZW9fZm9yd2FyZFJvdGF0aW9uzrsiLCJyb3RhdGlvbiIsImNvc860z4YiLCJzaW7OtM+GIiwiY29zzrTOsyIsInNpbs60zrMiLCJzciIsImQzX2dlb19jaXJjbGVBbmdsZSIsImQzX2dlb19ncmF0aWN1bGVYIiwiZDNfZ2VvX2dyYXRpY3VsZVkiLCJkM19zb3VyY2UiLCJkM190YXJnZXQiLCJwYXRoIiwicHJvamVjdFN0cmVhbSIsImNvbnRleHRTdHJlYW0iLCJjYWNoZVN0cmVhbSIsInRyYW5zZm9ybSIsIm1ldGhvZHMiLCJwcm9qZWN0aW9uTXV0YXRvciIsImVxdWlyZWN0YW5ndWxhciIsImNpcmNsZSIsImRpc3RhbmNlIiwizpTOuyIsInNpbs6UzrsiLCJjb3POlM67Iiwic2luz4YxIiwiZ3JhdGljdWxlIiwiWDEiLCJYMCIsIlkxIiwiWTAiLCJEWCIsIkRZIiwib3V0bGluZSIsIm1ham9yRXh0ZW50IiwibWlub3JFeHRlbnQiLCJtYWpvclN0ZXAiLCJtaW5vclN0ZXAiLCJncmVhdEFyYyIsInNvdXJjZV8iLCJ0YXJnZXRfIiwiY3kwIiwic3kwIiwiY3kxIiwic3kxIiwia3gwIiwia3kwIiwia3gxIiwia3kxIiwiZDNfZ2VvX2xlbmd0aCIsImQzX2dlb19hemltdXRoYWwiLCJhemltdXRoYWwiLCJjb3POuyIsInNpbmMiLCJjb3NjIiwiZDNfZ2VvX2F6aW11dGhhbEVxdWFsQXJlYSIsImNvc867Y29zz4YiLCJhemltdXRoYWxFcXVhbEFyZWEiLCJkM19nZW9fYXppbXV0aGFsRXF1aWRpc3RhbnQiLCJkM19nZW9fY29uaWNDb25mb3JtYWwiLCJkM19nZW9fbWVyY2F0b3IiLCJkM19nZW9fY29uaWNFcXVpZGlzdGFudCIsImF6aW11dGhhbEVxdWlkaXN0YW50IiwiY29uaWNDb25mb3JtYWwiLCJjb25pY0VxdWlkaXN0YW50IiwiZDNfZ2VvX2dub21vbmljIiwiZDNfZ2VvX21lcmNhdG9yUHJvamVjdGlvbiIsImNsaXBBdXRvIiwiZ25vbW9uaWMiLCJtZXJjYXRvciIsImQzX2dlb19vcnRob2dyYXBoaWMiLCJvcnRob2dyYXBoaWMiLCJkM19nZW9fc3RlcmVvZ3JhcGhpYyIsImQzX2dlb190cmFuc3ZlcnNlTWVyY2F0b3IiLCJkM19nZW9tX3BvaW50WCIsImQzX2dlb21fcG9pbnRZIiwiZDNfZ2VvbV9odWxsVXBwZXIiLCJodWxsIiwiaHMiLCJkM19nZW9tX2h1bGxPcmRlciIsInN0ZXJlb2dyYXBoaWMiLCJ0cmFuc3ZlcnNlTWVyY2F0b3IiLCJnZW9tIiwidmVydGljZXMiLCJmeCIsImZ5IiwiZmxpcHBlZFBvaW50cyIsInVwcGVyIiwibG93ZXIiLCJza2lwTGVmdCIsInNraXBSaWdodCIsImQzX2dlb21fcG9seWdvblByb3RvdHlwZSIsImQzX2dlb21fcG9seWdvbkluc2lkZSIsImQzX2dlb21fcG9seWdvbkludGVyc2VjdCIsIngzIiwieDIxIiwieDQzIiwieTMiLCJ5MjEiLCJ5NDMiLCJkM19nZW9tX3BvbHlnb25DbG9zZWQiLCJkM19nZW9tX3Zvcm9ub2lFZGdlcyIsImQzX2dlb21fdm9yb25vaUNlbGxzIiwiZDNfZ2VvbV92b3Jvbm9pQmVhY2hlcyIsImQzX2dlb21fdm9yb25vaUZpcnN0Q2lyY2xlIiwiZDNfZ2VvbV92b3Jvbm9pQ2lyY2xlcyIsImQzX2dlb21fdm9yb25vaUJlYWNoUG9vbCIsImQzX2dlb21fdm9yb25vaUNpcmNsZVBvb2wiLCJkM19nZW9tX3Zvcm9ub2lCZWFjaCIsImQzX2dlb21fdm9yb25vaVJlZEJsYWNrTm9kZSIsImVkZ2UiLCJzaXRlIiwiZDNfZ2VvbV92b3Jvbm9pQ3JlYXRlQmVhY2giLCJiZWFjaCIsImQzX2dlb21fdm9yb25vaURldGFjaEJlYWNoIiwiZDNfZ2VvbV92b3Jvbm9pRGV0YWNoQ2lyY2xlIiwiZDNfZ2VvbV92b3Jvbm9pUmVtb3ZlQmVhY2giLCJ2ZXJ0ZXgiLCJwcmV2aW91cyIsImRpc2FwcGVhcmluZyIsImxBcmMiLCJ1bnNoaWZ0IiwickFyYyIsImlBcmMiLCJuQXJjcyIsImQzX2dlb21fdm9yb25vaVNldEVkZ2VFbmQiLCJkM19nZW9tX3Zvcm9ub2lDcmVhdGVFZGdlIiwiZDNfZ2VvbV92b3Jvbm9pQXR0YWNoQ2lyY2xlIiwiZDNfZ2VvbV92b3Jvbm9pQWRkQmVhY2giLCJkeGwiLCJkeHIiLCJkaXJlY3RyaXgiLCJkM19nZW9tX3Zvcm9ub2lMZWZ0QnJlYWtQb2ludCIsImQzX2dlb21fdm9yb25vaVJpZ2h0QnJlYWtQb2ludCIsIm5ld0FyYyIsImxTaXRlIiwiYngiLCJieSIsInJTaXRlIiwicmZvY3giLCJyZm9jeSIsInBieTIiLCJsZm9jeCIsImxmb2N5IiwicGxieTIiLCJobCIsImFieTIiLCJkM19nZW9tX3Zvcm9ub2lDZWxsIiwiZWRnZXMiLCJkM19nZW9tX3Zvcm9ub2lIYWxmRWRnZU9yZGVyIiwiZDNfZ2VvbV92b3Jvbm9pQ2lyY2xlIiwiY1NpdGUiLCJkM19nZW9tX3Zvcm9ub2lDb25uZWN0RWRnZSIsImZtIiwibHgiLCJseSIsInJ4IiwicnkiLCJkM19nZW9tX3Zvcm9ub2lFZGdlIiwiZDNfZ2VvbV92b3Jvbm9pSGFsZkVkZ2UiLCJkM19nZW9tX3Zvcm9ub2lDcmVhdGVCb3JkZXJFZGdlIiwiZDNfZ2VvbV92b3Jvbm9pUmVkQmxhY2tUcmVlIiwiZDNfZ2VvbV92b3Jvbm9pUmVkQmxhY2tSb3RhdGVMZWZ0IiwidHJlZSIsImQzX2dlb21fdm9yb25vaVJlZEJsYWNrUm90YXRlUmlnaHQiLCJkM19nZW9tX3Zvcm9ub2lSZWRCbGFja0ZpcnN0IiwiZDNfZ2VvbV92b3Jvbm9pIiwic2l0ZXMiLCJiYm94IiwiZDNfZ2VvbV92b3Jvbm9pVmVydGV4T3JkZXIiLCJkM19nZW9tX3Zvcm9ub2lDbGlwRWRnZXMiLCJjZWxsIiwiaUhhbGZFZGdlIiwiaGFsZkVkZ2VzIiwibkhhbGZFZGdlcyIsImNlbGxzIiwiaUNlbGwiLCJwcmVwYXJlIiwiZDNfZ2VvbV92b3Jvbm9pQ2xvc2VDZWxscyIsImRpYWdyYW0iLCJncmFuZHBhIiwidW5jbGUiLCJ2b3Jvbm9pIiwiZDNfZ2VvbV92b3Jvbm9pQ2xpcEV4dGVudCIsInBvbHlnb25zIiwibGlua3MiLCJ0cmlhbmdsZXMiLCJzMCIsInMxIiwiZDNfZ2VvbV9xdWFkdHJlZUNvbXBhdFgiLCJkM19nZW9tX3F1YWR0cmVlQ29tcGF0WSIsImQzX2dlb21fcXVhZHRyZWVWaXNpdCIsInN4Iiwic3kiLCJkM19nZW9tX3F1YWR0cmVlRmluZCIsImNsb3Nlc3RQb2ludCIsIm1pbkRpc3RhbmNlMiIsImZpbmQiLCJkaXN0YW5jZTIiLCJ4bSIsInltIiwiZDNfaW50ZXJwb2xhdGVSZ2IiLCJhciIsImQzX2ludGVycG9sYXRlT2JqZWN0IiwiZDNfaW50ZXJwb2xhdGUiLCJkM19pbnRlcnBvbGF0ZU51bWJlciIsImQzX2ludGVycG9sYXRlU3RyaW5nIiwiYW0iLCJibSIsImJzIiwiZDNfaW50ZXJwb2xhdGVfbnVtYmVyQSIsImQzX2ludGVycG9sYXRlX251bWJlckIiLCJkZWxhdW5heSIsInF1YWR0cmVlIiwiY29tcGF0IiwieHMiLCJ5cyIsIngxXyIsInkxXyIsIngyXyIsInkyXyIsImxlYWYiLCJueCIsIm55IiwiaW5zZXJ0Q2hpbGQiLCJuUG9pbnQiLCJiZWxvdyIsImludGVycG9sYXRlUmdiIiwiaW50ZXJwb2xhdGVPYmplY3QiLCJpbnRlcnBvbGF0ZU51bWJlciIsImludGVycG9sYXRlU3RyaW5nIiwiaW50ZXJwb2xhdG9ycyIsImQzX2ludGVycG9sYXRlQXJyYXkiLCJpbnRlcnBvbGF0ZUFycmF5IiwiZDNfZWFzZV9kZWZhdWx0IiwiZDNfZWFzZSIsImxpbmVhciIsInBvbHkiLCJxdWFkIiwiZDNfZWFzZV9xdWFkIiwiY3ViaWMiLCJkM19lYXNlX2N1YmljIiwiZDNfZWFzZV9zaW4iLCJkM19lYXNlX2V4cCIsImQzX2Vhc2VfY2lyY2xlIiwiZWxhc3RpYyIsImJhY2siLCJib3VuY2UiLCJkM19lYXNlX2JvdW5jZSIsImQzX2Vhc2VfbW9kZSIsIm91dCIsImQzX2Vhc2VfcmV2ZXJzZSIsImQzX2Vhc2VfcmVmbGVjdCIsImQzX2Vhc2VfY2xhbXAiLCJkM19lYXNlX2N1YmljSW5PdXQiLCJ0MyIsImQzX2ludGVycG9sYXRlUm91bmQiLCJkM190cmFuc2Zvcm0iLCJreCIsImQzX3RyYW5zZm9ybU5vcm1hbGl6ZSIsImt6IiwiZDNfdHJhbnNmb3JtRG90Iiwia3kiLCJza2V3IiwiZWFzZSIsImludGVycG9sYXRlSGNsIiwiYWwiLCJibCIsImludGVycG9sYXRlSHNsIiwiYXMiLCJpbnRlcnBvbGF0ZUxhYiIsImludGVycG9sYXRlUm91bmQiLCJiYXNlVmFsIiwiY29uc29saWRhdGUiLCJkM190cmFuc2Zvcm1JZGVudGl0eSIsImQzX2ludGVycG9sYXRlVHJhbnNmb3JtUG9wIiwiZDNfaW50ZXJwb2xhdGVUcmFuc2Zvcm0iLCJkM19pbnRlcnBvbGF0ZVRyYW5zbGF0ZSIsImQzX2ludGVycG9sYXRlUm90YXRlIiwiZDNfaW50ZXJwb2xhdGVTa2V3IiwiZDNfaW50ZXJwb2xhdGVTY2FsZSIsImQzX3VuaW50ZXJwb2xhdGVOdW1iZXIiLCJkM191bmludGVycG9sYXRlQ2xhbXAiLCJkM19sYXlvdXRfYnVuZGxlUGF0aCIsImxjYSIsImFOb2RlcyIsImQzX2xheW91dF9idW5kbGVBbmNlc3RvcnMiLCJiTm9kZXMiLCJhTm9kZSIsImJOb2RlIiwic2hhcmVkTm9kZSIsImQzX2xheW91dF9idW5kbGVMZWFzdENvbW1vbkFuY2VzdG9yIiwiZDNfbGF5b3V0X2ZvcmNlRHJhZ3N0YXJ0IiwiZml4ZWQiLCJkM19sYXlvdXRfZm9yY2VEcmFnZW5kIiwiZDNfbGF5b3V0X2ZvcmNlTW91c2VvdmVyIiwicHgiLCJweSIsImQzX2xheW91dF9mb3JjZU1vdXNlb3V0IiwiaW50ZXJwb2xhdGVUcmFuc2Zvcm0iLCJsYXlvdXQiLCJidW5kbGUiLCJwYXRocyIsImNob3JkIiwiY2hvcmRzIiwic29ydEdyb3VwcyIsInNvcnRTdWJncm91cHMiLCJzb3J0Q2hvcmRzIiwicmVsYXlvdXQiLCJncm91cFN1bXMiLCJzdWJncm91cEluZGV4Iiwic3ViaW5kZXgiLCJzdGFydEFuZ2xlIiwiZW5kQW5nbGUiLCJyZXNvcnQiLCJmb3JjZSIsImFscGhhIiwiZGlzdGFuY2VzIiwic3RyZW5ndGhzIiwiY2hhcmdlcyIsImZyaWN0aW9uIiwibGlua0Rpc3RhbmNlIiwiZDNfbGF5b3V0X2ZvcmNlTGlua0Rpc3RhbmNlIiwibGlua1N0cmVuZ3RoIiwiZDNfbGF5b3V0X2ZvcmNlTGlua1N0cmVuZ3RoIiwiY2hhcmdlIiwiY2hhcmdlRGlzdGFuY2UyIiwiZDNfbGF5b3V0X2ZvcmNlQ2hhcmdlRGlzdGFuY2UyIiwiZ3Jhdml0eSIsInRoZXRhMiIsInJlcHVsc2UiLCJkdyIsImRuIiwicG9pbnRDaGFyZ2UiLCJkcmFnbW92ZSIsInJlc3VtZSIsInRpY2siLCJ3ZWlnaHQiLCJkM19sYXlvdXRfZm9yY2VBY2N1bXVsYXRlIiwidmlzaXQiLCJjaGFyZ2VEaXN0YW5jZSIsInRoZXRhIiwibmVpZ2hib3JzIiwiZGltZW5zaW9uIiwiY2FuZGlkYXRlcyIsImQzX2xheW91dF9oaWVyYXJjaHlSZWJpbmQiLCJoaWVyYXJjaHkiLCJkM19sYXlvdXRfaGllcmFyY2h5TGlua3MiLCJkM19sYXlvdXRfaGllcmFyY2h5VmlzaXRCZWZvcmUiLCJkM19sYXlvdXRfaGllcmFyY2h5VmlzaXRBZnRlciIsIm5vZGVzMiIsImQzX2xheW91dF9oaWVyYXJjaHlDaGlsZHJlbiIsImQzX2xheW91dF9oaWVyYXJjaHlWYWx1ZSIsImQzX2xheW91dF9oaWVyYXJjaHlTb3J0IiwiY2hpbGRzIiwicmV2YWx1ZSIsInBhcnRpdGlvbiIsInBpZSIsImQzX2xheW91dF9waWVTb3J0QnlWYWx1ZSIsInBhZEFuZ2xlIiwiYXJjcyIsImQzX2xheW91dF9zdGFja1giLCJkM19sYXlvdXRfc3RhY2tZIiwiZDNfbGF5b3V0X3N0YWNrT3V0IiwiZDNfbGF5b3V0X3N0YWNrT3JkZXJEZWZhdWx0IiwiZDNfbGF5b3V0X3N0YWNrT2Zmc2V0WmVybyIsInNlcmllcyIsIm9yZGVycyIsIm9mZnNldHMiLCJkM19sYXlvdXRfc3RhY2tPcmRlcnMiLCJkM19sYXlvdXRfc3RhY2tPZmZzZXRzIiwiZDNfbGF5b3V0X3N0YWNrTWF4SW5kZXgiLCJzdW1zIiwiZDNfbGF5b3V0X3N0YWNrUmVkdWNlU3VtIiwiYm90dG9tIiwidG9wcyIsImJvdHRvbXMiLCJzaWxob3VldHRlIiwid2lnZ2xlIiwiczIiLCJzMyIsIm8wIiwiZXhwYW5kIiwiemVybyIsImQzX2xheW91dF9zdGFja1N1bSIsImQzX2xheW91dF9oaXN0b2dyYW1CaW5TdHVyZ2VzIiwiZDNfbGF5b3V0X2hpc3RvZ3JhbUJpbkZpeGVkIiwiZDNfbGF5b3V0X2hpc3RvZ3JhbVJhbmdlIiwiZDNfbGF5b3V0X3BhY2tTb3J0IiwiZDNfbGF5b3V0X3BhY2tJbnNlcnQiLCJfcGFja19uZXh0IiwiX3BhY2tfcHJldiIsImQzX2xheW91dF9wYWNrU3BsaWNlIiwiZDNfbGF5b3V0X3BhY2tJbnRlcnNlY3RzIiwiZHIiLCJkM19sYXlvdXRfcGFja1NpYmxpbmdzIiwieE1pbiIsInhNYXgiLCJ5TWluIiwieU1heCIsImQzX2xheW91dF9wYWNrTGluayIsImQzX2xheW91dF9wYWNrUGxhY2UiLCJpc2VjdCIsImQzX2xheW91dF9wYWNrVW5saW5rIiwiZDNfbGF5b3V0X3RyZWVTZXBhcmF0aW9uIiwiZDNfbGF5b3V0X3RyZWVMZWZ0IiwiZDNfbGF5b3V0X3RyZWVSaWdodCIsImQzX2xheW91dF90cmVlTW92ZSIsIndtIiwid3AiLCJkM19sYXlvdXRfdHJlZUFuY2VzdG9yIiwidmltIiwiYW5jZXN0b3IiLCJkM19sYXlvdXRfdHJlZW1hcFBhZE51bGwiLCJkM19sYXlvdXRfdHJlZW1hcFBhZCIsImQzX3NjYWxlRXh0ZW50IiwiZDNfc2NhbGVSYW5nZSIsInJhbmdlRXh0ZW50IiwiZDNfc2NhbGVfYmlsaW5lYXIiLCJ1bmludGVycG9sYXRlIiwiZDNfc2NhbGVfbmljZSIsIm5pY2UiLCJkM19zY2FsZV9uaWNlU3RlcCIsImQzX3NjYWxlX25pY2VJZGVudGl0eSIsImhpc3RvZ3JhbSIsImZyZXF1ZW5jeSIsInZhbHVlciIsInJhbmdlciIsImJpbm5lciIsImJpbiIsImJpbnMiLCJ0aHJlc2hvbGRzIiwicGFjayIsImQzX2xheW91dF9wYWNrVHJhbnNmb3JtIiwic2VwYXJhdGlvbiIsIm5vZGVTaXplIiwicm9vdDAiLCJyb290MSIsIm5vZGUxIiwid3JhcFRyZWUiLCJmaXJzdFdhbGsiLCJzZWNvbmRXYWxrIiwic2l6ZU5vZGUiLCJ0eCIsImQzX2xheW91dF90cmVlU2hpZnQiLCJtaWRwb2ludCIsInZpcCIsInZvcCIsInZvbSIsInNpcCIsInNvcCIsInNpbSIsInNvbSIsImFwcG9ydGlvbiIsImNsdXN0ZXIiLCJwcmV2aW91c05vZGUiLCJkM19sYXlvdXRfY2x1c3RlclgiLCJkM19sYXlvdXRfY2x1c3RlclkiLCJkM19sYXlvdXRfY2x1c3RlckxlZnQiLCJkM19sYXlvdXRfY2x1c3RlclJpZ2h0IiwidHJlZW1hcCIsInN0aWNraWVzIiwicGFkIiwic3RpY2t5IiwicmF0aW8iLCJzcXVhcmlmeSIsInNjb3JlIiwicmVtYWluaW5nIiwid29yc3QiLCJzdGlja2lmeSIsInJtYXgiLCJybWluIiwicGFkRnVuY3Rpb24iLCJwYWRDb25zdGFudCIsIsK1Iiwiz4MiLCJsb2dOb3JtYWwiLCJiYXRlcyIsImlyd2luSGFsbCIsImQzX3NjYWxlX3BvbHlsaW5lYXIiLCJkM19zY2FsZV9saW5lYXJSZWJpbmQiLCJkM19zY2FsZV9saW5lYXJOaWNlIiwiZDNfc2NhbGVfbGluZWFyVGlja1JhbmdlIiwic3BhbiIsImQzX3NjYWxlX2xpbmVhclRpY2tzIiwiZDNfc2NhbGVfbGluZWFyVGlja0Zvcm1hdCIsImQzX3NjYWxlX2xpbmVhclByZWNpc2lvbiIsImQzX3NjYWxlX2xpbmVhckZvcm1hdFNpZ25pZmljYW50IiwiZDNfc2NhbGVfbGluZWFyRm9ybWF0UHJlY2lzaW9uIiwiZDNfc2NhbGVfbGluZWFyIiwiY2xhbXAiLCJyYW5nZVJvdW5kIiwidGlja3MiLCJ0aWNrRm9ybWF0IiwiZDNfc2NhbGVfbG9nIiwicG9zaXRpdmUiLCJuaWNlZCIsImQzX3NjYWxlX2xvZ05pY2VOZWdhdGl2ZSIsImQzX3NjYWxlX2xvZ0Zvcm1hdCIsImQzX3NjYWxlX3Bvd1BvdyIsImQzX3NjYWxlX3BvdyIsInBvd3AiLCJwb3diIiwib3JkaW5hbCIsImQzX3NjYWxlX29yZGluYWwiLCJyYW5nZUJhbmQiLCJzdGVwcyIsInJhbmdlUG9pbnRzIiwicmFuZ2VSb3VuZFBvaW50cyIsInJhbmdlQmFuZHMiLCJvdXRlclBhZGRpbmciLCJyYW5nZVJvdW5kQmFuZHMiLCJjYXRlZ29yeTEwIiwiZDNfY2F0ZWdvcnkxMCIsImNhdGVnb3J5MjAiLCJkM19jYXRlZ29yeTIwIiwiY2F0ZWdvcnkyMGIiLCJkM19jYXRlZ29yeTIwYiIsImNhdGVnb3J5MjBjIiwiZDNfY2F0ZWdvcnkyMGMiLCJkM196ZXJvIiwiZDNfc2NhbGVfcXVhbnRpbGUiLCJxdWFudGlsZXMiLCJpbnZlcnRFeHRlbnQiLCJxdWFudGl6ZSIsImQzX3NjYWxlX3F1YW50aXplIiwidGhyZXNob2xkIiwiZDNfc2NhbGVfdGhyZXNob2xkIiwiaWRlbnRpdHkiLCJkM19zY2FsZV9pZGVudGl0eSIsImlubmVyUmFkaXVzIiwiZDNfc3ZnX2FyY0lubmVyUmFkaXVzIiwib3V0ZXJSYWRpdXMiLCJkM19zdmdfYXJjT3V0ZXJSYWRpdXMiLCJjb3JuZXJSYWRpdXMiLCJwYWRSYWRpdXMiLCJkM19zdmdfYXJjQXV0byIsImQzX3N2Z19hcmNTdGFydEFuZ2xlIiwiZDNfc3ZnX2FyY0VuZEFuZ2xlIiwiZDNfc3ZnX2FyY1BhZEFuZ2xlIiwiY3ciLCJjaXJjbGVTZWdtZW50IiwicnAiLCJhcCIsImQzX3N2Z19hcmNTd2VlcCIsImgxIiwiaDAiLCJyYzEiLCJyYzAiLCJ0MzAiLCJkM19zdmdfYXJjQ29ybmVyVGFuZ2VudHMiLCJ0MTIiLCJ0MDMiLCJ0MjEiLCJ4MDEiLCJ5MDEiLCJveCIsIm95IiwiY3gwIiwiY3gxIiwiZHgwIiwiZHkwIiwiZHgxIiwiZHkxIiwiZDNfc3ZnX2xpbmUiLCJkZWZpbmVkIiwiZDNfc3ZnX2xpbmVMaW5lYXIiLCJpbnRlcnBvbGF0ZUtleSIsInRlbnNpb24iLCJkM19zdmdfbGluZUludGVycG9sYXRvcnMiLCJkM19zdmdfbGluZUxpbmVhckNsb3NlZCIsImQzX3N2Z19saW5lU3RlcEJlZm9yZSIsImQzX3N2Z19saW5lU3RlcEFmdGVyIiwiYmFzaXMiLCJkM19zdmdfbGluZUJhc2lzIiwiZDNfc3ZnX2xpbmVEb3Q0IiwiZDNfc3ZnX2xpbmVCYXNpc0JlemllcjMiLCJkM19zdmdfbGluZUJhc2lzQmV6aWVyIiwiY2FyZGluYWwiLCJkM19zdmdfbGluZUhlcm1pdGUiLCJkM19zdmdfbGluZUNhcmRpbmFsVGFuZ2VudHMiLCJtb25vdG9uZSIsInRhbmdlbnRzIiwiZDNfc3ZnX2xpbmVTbG9wZSIsImQzX3N2Z19saW5lRmluaXRlRGlmZmVyZW5jZXMiLCJkM19zdmdfbGluZU1vbm90b25lVGFuZ2VudHMiLCJscCIsInAyIiwiZDNfc3ZnX2xpbmVCYXNpc0JlemllcjEiLCJkM19zdmdfbGluZUJhc2lzQmV6aWVyMiIsImQzX3N2Z19saW5lUmFkaWFsIiwiZDNfc3ZnX2FyZWEiLCJpbnRlcnBvbGF0ZVJldmVyc2UiLCJwb2ludHMwIiwicG9pbnRzMSIsImZ4MCIsImZ5MCIsImZ4MSIsImZ5MSIsImQzX3N2Z19jaG9yZFJhZGl1cyIsImQzX3N2Z19kaWFnb25hbFByb2plY3Rpb24iLCJkM19zdmdfZGlhZ29uYWxSYWRpYWxQcm9qZWN0aW9uIiwiZDNfc3ZnX3N5bWJvbFNpemUiLCJkM19zdmdfc3ltYm9sVHlwZSIsImQzX3N2Z19zeW1ib2xDaXJjbGUiLCJyYWRpYWwiLCJjdXJ2ZSIsImRpYWdvbmFsIiwicDMiLCJwcm9qZWN0aW9uXyIsImQzX3N2Z19zeW1ib2xzIiwiY3Jvc3MiLCJkaWFtb25kIiwiZDNfc3ZnX3N5bWJvbFRhbjMwIiwic3F1YXJlIiwiZDNfc3ZnX3N5bWJvbFNxcnQzIiwic3ltYm9sVHlwZXMiLCJkM190cmFuc2l0aW9uSWQiLCJkM190cmFuc2l0aW9uTmFtZXNwYWNlIiwiZDNfdHJhbnNpdGlvbkluaGVyaXQiLCJkM190cmFuc2l0aW9uTm9kZSIsImQzX3RyYW5zaXRpb24iLCJpbnRlcnJ1cHQiLCJkM19zZWxlY3Rpb25faW50ZXJydXB0TlMiLCJsb2NrIiwiYWN0aXZlSWQiLCJhY3RpdmUiLCJkM190cmFuc2l0aW9uUHJvdG90eXBlIiwiZDNfdHJhbnNpdGlvbl90d2VlbiIsImQzX3RyYW5zaXRpb25fdGV4dCIsImluaGVyaXQiLCJ0d2VlbnMiLCJlbGFwc2VkIiwiY2FuY2VsSWQiLCJjYW5jZWwiLCJzdWJub2RlcyIsIm5hbWVOUyIsImF0dHJOdWxsIiwiYXR0ck51bGxOUyIsImF0dHJUd2VlbiIsImF0dHJUd2Vlbk5TIiwic3R5bGVOdWxsIiwic3R5bGVTdHJpbmciLCJzdHlsZVR3ZWVuIiwiaW5oZXJpdElkIiwiaWQwIiwiaWQxIiwiYXhpcyIsInRpY2tGb3JtYXRfIiwib3JpZW50IiwiZDNfc3ZnX2F4aXNEZWZhdWx0T3JpZW50IiwiaW5uZXJUaWNrU2l6ZSIsIm91dGVyVGlja1NpemUiLCJ0aWNrUGFkZGluZyIsInRpY2tBcmd1bWVudHNfIiwidGlja1ZhbHVlcyIsInRpY2tUcmFuc2Zvcm0iLCJ0aWNrRW50ZXIiLCJ0aWNrRXhpdCIsInRpY2tVcGRhdGUiLCJ0aWNrU3BhY2luZyIsInBhdGhVcGRhdGUiLCJsaW5lRW50ZXIiLCJsaW5lVXBkYXRlIiwidGV4dEVudGVyIiwidGV4dFVwZGF0ZSIsImQzX3N2Z19heGlzWCIsImQzX3N2Z19heGlzWSIsImQzX3N2Z19heGlzT3JpZW50cyIsInRpY2tTaXplIiwidGlja1N1YmRpdmlkZSIsImJydXNoIiwieEV4dGVudERvbWFpbiIsInlFeHRlbnREb21haW4iLCJ4RXh0ZW50IiwieUV4dGVudCIsInhDbGFtcCIsInlDbGFtcCIsInJlc2l6ZXMiLCJkM19zdmdfYnJ1c2hSZXNpemVzIiwiYnJ1c2hzdGFydCIsImJhY2tncm91bmQiLCJyZXNpemUiLCJkM19zdmdfYnJ1c2hDdXJzb3IiLCJnVXBkYXRlIiwiYmFja2dyb3VuZFVwZGF0ZSIsInJlZHJhd1giLCJyZWRyYXdZIiwicmVkcmF3IiwiZXZlbnRUYXJnZXQiLCJldmVudF8iLCJyZXNpemluZyIsInJlc2l6aW5nWCIsInJlc2l6aW5nWSIsImRyYWdnaW5nIiwia2V5ZG93biIsImtleXVwIiwiYnJ1c2htb3ZlIiwiYnJ1c2hlbmQiLCJleCIsImV5IiwibW92ZTEiLCJleHRlbnQxIiwiZXh0ZW50MCIsImNsZWFyIiwibnciLCJzdyIsImQzX3RpbWVfZm9ybWF0VXRjIiwiZDNfdGltZV9mb3JtYXRJc28iLCJkM190aW1lX2Zvcm1hdElzb05hdGl2ZSIsInRvSVNPU3RyaW5nIiwiZDNfdGltZV9zY2FsZSIsInRpY2tNZXRob2QiLCJkM190aW1lX3NjYWxlU3RlcHMiLCJkM190aW1lX3NjYWxlTWlsbGlzZWNvbmRzIiwiZDNfdGltZV9zY2FsZURhdGUiLCJza2lwIiwic2tpcHBlZCIsImlzbyIsInNlY29uZCIsInNlY29uZHMiLCJtaW51dGUiLCJtaW51dGVzIiwiaG91ciIsInRpbWV6b25lIiwiaG91cnMiLCJkM190aW1lX3NjYWxlTG9jYWxNZXRob2RzIiwiZDNfdGltZV9zY2FsZUxvY2FsRm9ybWF0IiwiZDNfdGltZV9zY2FsZVV0Y01ldGhvZHMiLCJkM190aW1lX3NjYWxlVXRjRm9ybWF0IiwiZDNfanNvbiIsImQzX2h0bWwiLCJzZWxlY3ROb2RlIiwiY3JlYXRlQ29udGV4dHVhbEZyYWdtZW50IiwianNvbiIsInJlc3BvbnNlWE1MIiwic3VwZXIiLCJvblNlbGVjdE1vZGUiLCJjaGFuZ2VWaWV3TW9kZSIsImF0dHJpYnV0ZXMiLCJtZW51T3B0aW9ucyIsImNhcmVlciIsImNhbGVuZGFyIiwiYWdlIiwibGFiZWwiLCJtZW51TGVmdCIsIm1lbnVSaWdodCIsIlBsYXllciIsImlzU2VsZWN0ZWQiLCJzZWxlY3RQbGF5ZXIiLCJvblBsYXllclNlbGVjdCIsInBsYXllciIsImdldFBsYXllckluaXRpYWxzIiwibmlja25hbWUiLCJzcmMiLCJQbGF5ZXJQcm9maWxlIiwicGljcyIsImltYWdlIiwiaW1hZ2VzIiwiUGxheWVyQXdhcmRzIiwiY2hhbXBpb25zaGlwcyIsInRvdGFscyIsIk1WUCIsIk9QIiwiQVAiLCJQQiIsIlBsYXllclRyb3BoaWVzIiwiZ2V0UGxheWVyQ2FsZW5kYXJZZWFycyIsInBsYXllckRhdGEiLCJhd2FyZHMiLCJnZXRQbGF5ZXJBZ2VZZWFycyIsInJvb2tpZVllYXIiLCJkZWJ1dEFnZSIsImdldFBsYXllckNhcmVlclllYXJzIiwibGFzdFllYXIiLCJ5ZWFyc1BsYXllZCIsInRyb3BoaWVzIiwiY2hhbXBpb25zaGlwIiwieFBvcyIsInBsYXllckFnZSIsInBsYXllckNhbGVuZGFyWWVhcnMiLCJpbWdXaWR0aCIsIlBsYXllclRpbWVsaW5lIiwiZGF0YUJ5Q2FyZWVyWWVhciIsImRhdGFCeUFnZSIsImxvZ29zIiwidGVhbXMiLCJ0ZWFtIiwiY2FyZWVyU3RhcnQiLCJyZXF1aXJlIiwiUGxheWVyVmlzdWFsaXphdGlvbiIsInBsYXllckF3YXJkcyIsImdldFRlYW1zUGxheWVkIiwiZ2V0QXdhcmRGaWxsIiwiYXdhcmQiLCJhd2FyZE5hbWUiLCJhd2FyZFRlYW0iLCJmaWxsQ2xhc3MiLCJjcmVhdGVQbGF5ZXJWaXN1YWxpemF0aW9uIiwicGxheWVyU3RhdHMiLCJhd2FyZHNMYWJlbHMiLCJhd2FyZEFjcm9ueW1zIiwieEF4aXMiLCJ0ZWFtc1BsYXllZCIsImFnZVN0YXJ0IiwidGltZXNwYW4iLCJhZ2VFbmQiLCJjYXJlZXJFbmQiLCJkYXRhQnlDYWxlbmRhclllYXIiLCJWaXN1YWxpemF0aW9uIiwiZ2V0WWVhcnNSYW5nZSIsImFnZXMiLCJnZXRQbGF5ZXJEYXRhIiwiZ2V0UGxheWVyRGF0YUJ5Q2FsZW5kYXJZZWFyIiwiZ2V0UGxheWVyRGF0YUJ5Q2FyZWVyWWVhciIsImdldFBsYXllckRhdGFCeUFnZSIsInJvb2tpZUFnZSIsImZpcnN0WWVhciIsInBsYXllcnNDaGFydHMiLCJwbGF5ZXJzIiwiTkZMR3JlYXRuZXNzIiwiZGVmYXVsdFBsYXllcnMiLCJnZXRUaW1lU3BhbiIsInNlbGVjdGVkUGxheWVycyIsInN0YXJ0QWdlIiwiZW5kQWdlIiwiY2FyZWVyWWVhcnMiLCJoYW5kbGVQbGF5ZXJTZWxlY3QiLCJuZXdUaW1lU3BhbiIsImNsb3NlSW1hZ2UiLCJnZXRQbGF5ZXJMaXN0IiwiaW5zdHJ1Y3Rpb25zIiwidml6TW9kZSIsImRhdGEtc2hvdy1jb3VudCIsImFzeW5jIiwiZ2EiLCJwbGF5ZXJzSW1h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QUFHLEdBQ1QsRUFBSyxDQUFDLEVBQUcsR0FDVCxFQUFLLENBQUMsRUFBRyxHQUNULEVBQUssQ0FBQyxFQUFHLEdBQ1QsRUFBSyxDQUFDLEVBQUcsR0FDVCxFQUFLLENBQUMsRUFBRyxHQUNULEVBQUssQ0FBQyxFQUFHLEdBQ1QsRUFBSyxDQUFDLEVBQUcsR0FDVCxFQUFLLENBQUMsRUFBRyxHQUNULEVBQUssQ0FBQyxFQUFHLElBRWIsRUFBSyxDQUNELEVBQUssQ0FBQyxFQUFHLElBQ1QsRUFBSyxDQUFDLEVBQUcsSUFDVCxFQUFLLENBQUMsRUFBRyxJQUNULEVBQUssQ0FBQyxFQUFHLElBQ1QsRUFBSyxDQUFDLEVBQUcsSUFDVCxFQUFLLENBQUMsRUFBRyxJQUNULEVBQUssQ0FBQyxFQUFHLElBQ1QsRUFBSyxDQUFDLEVBQUcsSUFDVCxFQUFLLENBQUMsRUFBRyxJQUNULEVBQUssQ0FBQyxFQUFHLElBQ1QsRUFBSyxDQUFDLEVBQUcsSUFDVCxFQUFLLENBQUMsRUFBRyxLQUViLEVBQUssQ0FDRCxFQUFLLENBQUMsRUFBRyxJQUNULEVBQUssQ0FBQyxFQUFHLElBQ1QsRUFBSyxDQUFDLEVBQUcsSUFDVCxFQUFLLENBQUMsRUFBRyxJQUNULEVBQUssQ0FBQyxFQUFHLElBQ1QsRUFBSyxDQUFDLEVBQUcsSUFDVCxFQUFLLENBQUMsRUFBRyxJQUNULEVBQUssQ0FBQyxFQUFHLElBQ1QsRUFBSyxDQUFDLEVBQUcsSUFDVCxFQUFLLENBQUMsRUFBRyxJQUNULEVBQUssQ0FBQyxFQUFHLElBQ1QsRUFBSyxDQUFDLEVBQUcsS0FFYixFQUFLLENBQ0QsRUFBSyxDQUFDLE9BeHNCVCxFQXdzQnVCLElBQ3BCLEVBQUssQ0FBQyxPQXpzQlQsRUF5c0J1QixLQUV4QixFQUFLLENBQ0QsRUFBSyxDQUFDLEVBQUcsSUFDVCxFQUFLLENBQUMsRUFBRyxJQUNULEVBQUssQ0FBQyxFQUFHLElBQ1QsRUFBSyxDQUFDLEVBQUcsSUFDVCxFQUFLLENBQUMsRUFBRyxJQUNULEVBQUssQ0FBQyxFQUFHLElBQ1QsRUFBSyxDQUFDLEVBQUcsSUFDVCxFQUFLLENBQUMsRUFBRyxJQUNULEVBQUssQ0FBQyxFQUFHLElBQ1QsRUFBSyxDQUFDLEVBQUcsSUFDVCxFQUFLLENBQUMsRUFBRyxJQUNULEVBQUssQ0FBQyxFQUFHLEtBRWIsRUFBSyxDQUNELEVBQUssQ0FBQyxHQUNOLEVBQUssQ0FBQyxPQTN0QlQsRUEydEJ1QixLQUV4QixFQUFLLENBQ0QsRUFBSyxDQUFDLEVBQUcsR0FDVCxFQUFLLENBQUMsRUFBRyxHQUNULEVBQUssQ0FBQyxPQWh1QlQsRUFndUJ1QixJQUNwQixFQUFLLENBQUMsT0FqdUJULEVBaXVCdUIsSUFDcEIsRUFBSyxDQUFDLE9BbHVCVCxFQWt1QnVCLElBQ3BCLEVBQUssQ0FBQyxPQW51QlQsRUFtdUJ1QixLQUV4QixHQUFNLENBQ0YsRUFBSyxDQUFDLEVBQUcsSUFDVCxFQUFLLENBQUMsRUFBRyxJQUNULEVBQUssQ0FBQyxFQUFHLElBQ1QsRUFBSyxDQUFDLEVBQUcsSUFDVCxFQUFLLENBQUMsRUFBRyxJQUNULEVBQUssQ0FBQyxFQUFHLElBQ1QsRUFBSyxDQUFDLE9BNXVCVCxFQTR1QnVCLEdBQ3BCLEVBQUssQ0FBQyxPQTd1QlQsRUE2dUJ1QixHQUNwQixFQUFLLENBQUMsT0E5dUJULEVBOHVCdUIsR0FDcEIsRUFBSyxDQUFDLE9BL3VCVCxFQSt1QnVCLEdBQ3BCLEVBQUssQ0FBQyxPQWh2QlQsRUFndkJ1QixJQUV4QixHQUFNLENBQ0YsRUFBSyxDQUFDLEVBQUcsSUFDVCxFQUFLLENBQUMsRUFBRyxJQUNULEVBQUssQ0FBQyxFQUFHLElBQ1QsRUFBSyxDQUFDLEVBQUcsSUFDVCxFQUFLLENBQUMsRUFBRyxJQUNULEVBQUssQ0FBQyxFQUFHLElBQ1QsRUFBSyxDQUFDLEVBQUcsSUFDVCxFQUFLLENBQUMsRUFBRyxJQUNULEVBQUssQ0FBQyxFQUFHLElBQ1QsRUFBSyxDQUFDLEVBQUcsSUFDVCxFQUFLLENBQUMsRUFBRyxLQUViLEdBQU0sQ0FDRixFQUFLLENBQUMsRUFBRyxJQUNULEVBQUssQ0FBQyxFQUFHLElBQ1QsRUFBSyxDQUFDLEVBQUcsSUFDVCxFQUFLLENBQUMsRUFBRyxJQUNULEVBQUssQ0FBQyxFQUFHLElBQ1QsRUFBSyxDQUFDLEVBQUcsSUFDVCxFQUFLLENBQUMsRUFBRyxJQUNULEVBQUssQ0FBQyxFQUFHLElBQ1QsRUFBSyxDQUFDLEVBQUcsSUFDVCxFQUFLLENBQUMsRUFBRyxJQUNULEVBQUssQ0FBQyxFQUFHLEtBRWIsR0FBTSxDQUNGLEVBQUssQ0FBQyxFQUFHLElBQ1QsRUFBSyxDQUFDLEVBQUcsSUFDVCxFQUFLLENBQUMsRUFBRyxJQUNULEVBQUssQ0FBQyxFQUFHLElBQ1QsRUFBSyxDQUFDLEVBQUcsSUFDVCxFQUFLLENBQUMsRUFBRyxJQUNULEVBQUssQ0FBQyxFQUFHLElBQ1QsRUFBSyxDQUFDLEVBQUcsSUFDVCxFQUFLLENBQUMsRUFBRyxJQUNULEVBQUssQ0FBQyxFQUFHLElBQ1QsRUFBSyxDQUFDLEVBQUcsS0FFYixHQUFNLENBQ0YsRUFBSyxDQUFDLEVBQUcsSUFDVCxFQUFLLENBQUMsRUFBRyxJQUNULEVBQUssQ0FBQyxFQUFHLElBQ1QsRUFBSyxDQUFDLEVBQUcsSUFDVCxFQUFLLENBQUMsRUFBRyxJQUNULEVBQUssQ0FBQyxFQUFHLElBQ1QsRUFBSyxDQUFDLEVBQUcsSUFDVCxFQUFLLENBQUMsRUFBRyxJQUNULEVBQUssQ0FBQyxFQUFHLElBQ1QsRUFBSyxDQUFDLEVBQUcsSUFDVCxFQUFLLENBQUMsRUFBRyxLQUViLEdBQU0sQ0FDRixFQUFLLENBQUMsRUFBRyxJQUNULEVBQUssQ0FBQyxFQUFHLElBQ1QsRUFBSyxDQUFDLEVBQUcsSUFDVCxFQUFLLENBQUMsRUFBRyxJQUNULEVBQUssQ0FBQyxFQUFHLElBQ1QsRUFBSyxDQUFDLEVBQUcsSUFDVCxFQUFLLENBQUMsRUFBRyxJQUNULEVBQUssQ0FBQyxFQUFHLElBQ1QsRUFBSyxDQUFDLEVBQUcsSUFDVCxFQUFLLENBQUMsRUFBRyxJQUNULEVBQUssQ0FBQyxFQUFHLEtBRWIsR0FBTSxDQUNGLEVBQUssQ0FBQyxFQUFH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QyxFQUFHQyxHQUNsQixJQUFJeW1ELEVBQUsxbUQsRUFBRTVGLEtBQUt3QyxNQUFNLEtBQUssR0FDMUIyckcsRUFBS3RvRyxFQUFFN0YsS0FBS3dDLE1BQU0sS0FBSyxHQU94QixPQUFHOHBELEVBQUs2aEQsR0FBWSxFQUNqQjdoRCxFQUFLNmhELEVBQVcsRUFDWixLQUlYdHFGLEVBQUtwaEIsU0FBUSxTQUFTKzJHLEdBQ3JCLElBQUlxRSxFQUFhLEdBQ2pCckUsRUFBV1osS0FBS24yRyxTQUFRLFNBQVNxN0csR0FDOUIsSUFBSUMsRUFBUSxPQUFPRCxFQUNuQkQsRUFBV3A1RyxLQUFLczVHLE1BR25CSCxFQUFjcEUsRUFBV2YsVUFBWW9GLEtBS3RDRyxJQUFTdHlHLE9BQU8sa0JBQUMsRUFBRCxDQUFjbVksS0FBTUEsRUFBTWkxRixPQUFROEUsSUFBa0JodkcsU0FBU3FrQyxlQUFlIiwiZmlsZSI6ImluZGV4X2J1bmRsZS5qcyIsInNvdXJjZXNDb250ZW50IjpbIiBcdC8vIFRoZSBtb2R1bGUgY2FjaGVcbiBcdHZhciBpbnN0YWxsZWRNb2R1bGVzID0ge307XG5cbiBcdC8vIFRoZSByZXF1aXJlIGZ1bmN0aW9uXG4gXHRmdW5jdGlvbiBfX3dlYnBhY2tfcmVxdWlyZV9fKG1vZHVsZUlkKSB7XG5cbiBcdFx0Ly8gQ2hlY2sgaWYgbW9kdWxlIGlzIGluIGNhY2hlXG4gXHRcdGlmKGluc3RhbGxlZE1vZHVsZXNbbW9kdWxlSWRdKSB7XG4gXHRcdFx0cmV0dXJuIGluc3RhbGxlZE1vZHVsZXNbbW9kdWxlSWRdLmV4cG9ydHM7XG4gXHRcdH1cbiBcdFx0Ly8gQ3JlYXRlIGEgbmV3IG1vZHVsZSAoYW5kIHB1dCBpdCBpbnRvIHRoZSBjYWNoZSlcbiBcdFx0dmFyIG1vZHVsZSA9IGluc3RhbGxlZE1vZHVsZXNbbW9kdWxlSWRdID0ge1xuIFx0XHRcdGk6IG1vZHVsZUlkLFxuIFx0XHRcdGw6IGZhbHNlLFxuIFx0XHRcdGV4cG9ydHM6IHt9XG4gXHRcdH07XG5cbiBcdFx0Ly8gRXhlY3V0ZSB0aGUgbW9kdWxlIGZ1bmN0aW9uXG4gXHRcdG1vZHVsZXNbbW9kdWxlSWRdLmNhbGwobW9kdWxlLmV4cG9ydHMsIG1vZHVsZSwgbW9kdWxlLmV4cG9ydHMsIF9fd2VicGFja19yZXF1aXJlX18pO1xuXG4gXHRcdC8vIEZsYWcgdGhlIG1vZHVsZSBhcyBsb2FkZWRcbiBcdFx0bW9kdWxlLmwgPSB0cnVlO1xuXG4gXHRcdC8vIFJldHVybiB0aGUgZXhwb3J0cyBvZiB0aGUgbW9kdWxlXG4gXHRcdHJldHVybiBtb2R1bGUuZXhwb3J0cztcbiBcdH1cblxuXG4gXHQvLyBleHBvc2UgdGhlIG1vZHVsZXMgb2JqZWN0IChfX3dlYnBhY2tfbW9kdWxlc19fKVxuIFx0X193ZWJwYWNrX3JlcXVpcmVfXy5tID0gbW9kdWxlcztcblxuIFx0Ly8gZXhwb3NlIHRoZSBtb2R1bGUgY2FjaGVcbiBcdF9fd2VicGFja19yZXF1aXJlX18uYyA9IGluc3RhbGxlZE1vZHVsZXM7XG5cbiBcdC8vIGRlZmluZSBnZXR0ZXIgZnVuY3Rpb24gZm9yIGhhcm1vbnkgZXhwb3J0c1xuIFx0X193ZWJwYWNrX3JlcXVpcmVfXy5kID0gZnVuY3Rpb24oZXhwb3J0cywgbmFtZSwgZ2V0dGVyKSB7XG4gXHRcdGlmKCFfX3dlYnBhY2tfcmVxdWlyZV9fLm8oZXhwb3J0cywgbmFtZSkpIHtcbiBcdFx0XHRPYmplY3QuZGVmaW5lUHJvcGVydHkoZXhwb3J0cywgbmFtZSwgeyBlbnVtZXJhYmxlOiB0cnVlLCBnZXQ6IGdldHRlciB9KTtcbiBcdFx0fVxuIFx0fTtcblxuIFx0Ly8gZGVmaW5lIF9fZXNNb2R1bGUgb24gZXhwb3J0c1xuIFx0X193ZWJwYWNrX3JlcXVpcmVfXy5yID0gZnVuY3Rpb24oZXhwb3J0cykge1xuIFx0XHRpZih0eXBlb2YgU3ltYm9sICE9PSAndW5kZWZpbmVkJyAmJiBTeW1ib2wudG9TdHJpbmdUYWcpIHtcbiBcdFx0XHRPYmplY3QuZGVmaW5lUHJvcGVydHkoZXhwb3J0cywgU3ltYm9sLnRvU3RyaW5nVGFnLCB7IHZhbHVlOiAnTW9kdWxlJyB9KTtcbiBcdFx0fVxuIFx0XHRPYmplY3QuZGVmaW5lUHJvcGVydHkoZXhwb3J0cywgJ19fZXNNb2R1bGUnLCB7IHZhbHVlOiB0cnVlIH0pO1xuIFx0fTtcblxuIFx0Ly8gY3JlYXRlIGEgZmFrZSBuYW1lc3BhY2Ugb2JqZWN0XG4gXHQvLyBtb2RlICYgMTogdmFsdWUgaXMgYSBtb2R1bGUgaWQsIHJlcXVpcmUgaXRcbiBcdC8vIG1vZGUgJiAyOiBtZXJnZSBhbGwgcHJvcGVydGllcyBvZiB2YWx1ZSBpbnRvIHRoZSBuc1xuIFx0Ly8gbW9kZSAmIDQ6IHJldHVybiB2YWx1ZSB3aGVuIGFscmVhZHkgbnMgb2JqZWN0XG4gXHQvLyBtb2RlICYgOHwxOiBiZWhhdmUgbGlrZSByZXF1aXJlXG4gXHRfX3dlYnBhY2tfcmVxdWlyZV9fLnQgPSBmdW5jdGlvbih2YWx1ZSwgbW9kZSkge1xuIFx0XHRpZihtb2RlICYgMSkgdmFsdWUgPSBfX3dlYnBhY2tfcmVxdWlyZV9fKHZhbHVlKTtcbiBcdFx0aWYobW9kZSAmIDgpIHJldHVybiB2YWx1ZTtcbiBcdFx0aWYoKG1vZGUgJiA0KSAmJiB0eXBlb2YgdmFsdWUgPT09ICdvYmplY3QnICYmIHZhbHVlICYmIHZhbHVlLl9fZXNNb2R1bGUpIHJldHVybiB2YWx1ZTtcbiBcdFx0dmFyIG5zID0gT2JqZWN0LmNyZWF0ZShudWxsKTtcbiBcdFx0X193ZWJwYWNrX3JlcXVpcmVfXy5yKG5zKTtcbiBcdFx0T2JqZWN0LmRlZmluZVByb3BlcnR5KG5zLCAnZGVmYXVsdCcsIHsgZW51bWVyYWJsZTogdHJ1ZSwgdmFsdWU6IHZhbHVlIH0pO1xuIFx0XHRpZihtb2RlICYgMiAmJiB0eXBlb2YgdmFsdWUgIT0gJ3N0cmluZycpIGZvcih2YXIga2V5IGluIHZhbHVlKSBfX3dlYnBhY2tfcmVxdWlyZV9fLmQobnMsIGtleSwgZnVuY3Rpb24oa2V5KSB7IHJldHVybiB2YWx1ZVtrZXldOyB9LmJpbmQobnVsbCwga2V5KSk7XG4gXHRcdHJldHVybiBucztcbiBcdH07XG5cbiBcdC8vIGdldERlZmF1bHRFeHBvcnQgZnVuY3Rpb24gZm9yIGNvbXBhdGliaWxpdHkgd2l0aCBub24taGFybW9ueSBtb2R1bGVzXG4gXHRfX3dlYnBhY2tfcmVxdWlyZV9fLm4gPSBmdW5jdGlvbihtb2R1bGUpIHtcbiBcdFx0dmFyIGdldHRlciA9IG1vZHVsZSAmJiBtb2R1bGUuX19lc01vZHVsZSA/XG4gXHRcdFx0ZnVuY3Rpb24gZ2V0RGVmYXVsdCgpIHsgcmV0dXJuIG1vZHVsZVsnZGVmYXVsdCddOyB9IDpcbiBcdFx0XHRmdW5jdGlvbiBnZXRNb2R1bGVFeHBvcnRzKCkgeyByZXR1cm4gbW9kdWxlOyB9O1xuIFx0XHRfX3dlYnBhY2tfcmVxdWlyZV9fLmQoZ2V0dGVyLCAnYScsIGdldHRlcik7XG4gXHRcdHJldHVybiBnZXR0ZXI7XG4gXHR9O1xuXG4gXHQvLyBPYmplY3QucHJvdG90eXBlLmhhc093blByb3BlcnR5LmNhbGxcbiBcdF9fd2VicGFja19yZXF1aXJlX18ubyA9IGZ1bmN0aW9uKG9iamVjdCwgcHJvcGVydHkpIHsgcmV0dXJuIE9iamVjdC5wcm90b3R5cGUuaGFzT3duUHJvcGVydHkuY2FsbChvYmplY3QsIHByb3BlcnR5KTsgfTtcblxuIFx0Ly8gX193ZWJwYWNrX3B1YmxpY19wYXRoX19cbiBcdF9fd2VicGFja19yZXF1aXJlX18ucCA9IFwiXCI7XG5cblxuIFx0Ly8gTG9hZCBlbnRyeSBtb2R1bGUgYW5kIHJldHVybiBleHBvcnRzXG4gXHRyZXR1cm4gX193ZWJwYWNrX3JlcXVpcmVfXyhfX3dlYnBhY2tfcmVxdWlyZV9fLnMgPSA3KTtcbiIsIid1c2Ugc3RyaWN0JztcblxuaWYgKHByb2Nlc3MuZW52Lk5PREVfRU5WID09PSAncHJvZHVjdGlvbicpIHtcbiAgbW9kdWxlLmV4cG9ydHMgPSByZXF1aXJlKCcuL2Nqcy9yZWFjdC5wcm9kdWN0aW9uLm1pbi5qcycpO1xufSBlbHNlIHtcbiAgbW9kdWxlLmV4cG9ydHMgPSByZXF1aXJlKCcuL2Nqcy9yZWFjdC5kZXZlbG9wbWVudC5qcycpO1xufVxuIiwiLypcbm9iamVjdC1hc3NpZ25cbihjKSBTaW5kcmUgU29yaHVzXG5AbGljZW5zZSBNSVRcbiovXG5cbid1c2Ugc3RyaWN0Jztcbi8qIGVzbGludC1kaXNhYmxlIG5vLXVudXNlZC12YXJzICovXG52YXIgZ2V0T3duUHJvcGVydHlTeW1ib2xzID0gT2JqZWN0LmdldE93blByb3BlcnR5U3ltYm9scztcbnZhciBoYXNPd25Qcm9wZXJ0eSA9IE9iamVjdC5wcm90b3R5cGUuaGFzT3duUHJvcGVydHk7XG52YXIgcHJvcElzRW51bWVyYWJsZSA9IE9iamVjdC5wcm90b3R5cGUucHJvcGVydHlJc0VudW1lcmFibGU7XG5cbmZ1bmN0aW9uIHRvT2JqZWN0KHZhbCkge1xuXHRpZiAodmFsID09PSBudWxsIHx8IHZhbCA9PT0gdW5kZWZpbmVkKSB7XG5cdFx0dGhyb3cgbmV3IFR5cGVFcnJvcignT2JqZWN0LmFzc2lnbiBjYW5ub3QgYmUgY2FsbGVkIHdpdGggbnVsbCBvciB1bmRlZmluZWQnKTtcblx0fVxuXG5cdHJldHVybiBPYmplY3QodmFsKTtcbn1cblxuZnVuY3Rpb24gc2hvdWxkVXNlTmF0aXZlKCkge1xuXHR0cnkge1xuXHRcdGlmICghT2JqZWN0LmFzc2lnbikge1xuXHRcdFx0cmV0dXJuIGZhbHNlO1xuXHRcdH1cblxuXHRcdC8vIERldGVjdCBidWdneSBwcm9wZXJ0eSBlbnVtZXJhdGlvbiBvcmRlciBpbiBvbGRlciBWOCB2ZXJzaW9ucy5cblxuXHRcdC8vIGh0dHBzOi8vYnVncy5jaHJvbWl1bS5vcmcvcC92OC9pc3N1ZXMvZGV0YWlsP2lkPTQxMThcblx0XHR2YXIgdGVzdDEgPSBuZXcgU3RyaW5nKCdhYmMnKTsgIC8vIGVzbGludC1kaXNhYmxlLWxpbmUgbm8tbmV3LXdyYXBwZXJzXG5cdFx0dGVzdDFbNV0gPSAnZGUnO1xuXHRcdGlmIChPYmplY3QuZ2V0T3duUHJvcGVydHlOYW1lcyh0ZXN0MSlbMF0gPT09ICc1Jykge1xuXHRcdFx0cmV0dXJuIGZhbHNlO1xuXHRcdH1cblxuXHRcdC8vIGh0dHBzOi8vYnVncy5jaHJvbWl1bS5vcmcvcC92OC9pc3N1ZXMvZGV0YWlsP2lkPTMwNTZcblx0XHR2YXIgdGVzdDIgPSB7fTtcblx0XHRmb3IgKHZhciBpID0gMDsgaSA8IDEwOyBpKyspIHtcblx0XHRcdHRlc3QyWydfJyArIFN0cmluZy5mcm9tQ2hhckNvZGUoaSldID0gaTtcblx0XHR9XG5cdFx0dmFyIG9yZGVyMiA9IE9iamVjdC5nZXRPd25Qcm9wZXJ0eU5hbWVzKHRlc3QyKS5tYXAoZnVuY3Rpb24gKG4pIHtcblx0XHRcdHJldHVybiB0ZXN0MltuXTtcblx0XHR9KTtcblx0XHRpZiAob3JkZXIyLmpvaW4oJycpICE9PSAnMDEyMzQ1Njc4OScpIHtcblx0XHRcdHJldHVybiBmYWxzZTtcblx0XHR9XG5cblx0XHQvLyBodHRwczovL2J1Z3MuY2hyb21pdW0ub3JnL3AvdjgvaXNzdWVzL2RldGFpbD9pZD0zMDU2XG5cdFx0dmFyIHRlc3QzID0ge307XG5cdFx0J2FiY2RlZmdoaWprbG1ub3BxcnN0Jy5zcGxpdCgnJykuZm9yRWFjaChmdW5jdGlvbiAobGV0dGVyKSB7XG5cdFx0XHR0ZXN0M1tsZXR0ZXJdID0gbGV0dGVyO1xuXHRcdH0pO1xuXHRcdGlmIChPYmplY3Qua2V5cyhPYmplY3QuYXNzaWduKHt9LCB0ZXN0MykpLmpvaW4oJycpICE9PVxuXHRcdFx0XHQnYWJjZGVmZ2hpamtsbW5vcHFyc3QnKSB7XG5cdFx0XHRyZXR1cm4gZmFsc2U7XG5cdFx0fVxuXG5cdFx0cmV0dXJuIHRydWU7XG5cdH0gY2F0Y2ggKGVycikge1xuXHRcdC8vIFdlIGRvbid0IGV4cGVjdCBhbnkgb2YgdGhlIGFib3ZlIHRvIHRocm93LCBidXQgYmV0dGVyIHRvIGJlIHNhZmUuXG5cdFx0cmV0dXJuIGZhbHNlO1xuXHR9XG59XG5cbm1vZHVsZS5leHBvcnRzID0gc2hvdWxkVXNlTmF0aXZlKCkgPyBPYmplY3QuYXNzaWduIDogZnVuY3Rpb24gKHRhcmdldCwgc291cmNlKSB7XG5cdHZhciBmcm9tO1xuXHR2YXIgdG8gPSB0b09iamVjdCh0YXJnZXQpO1xuXHR2YXIgc3ltYm9scztcblxuXHRmb3IgKHZhciBzID0gMTsgcyA8IGFyZ3VtZW50cy5sZW5ndGg7IHMrKykge1xuXHRcdGZyb20gPSBPYmplY3QoYXJndW1lbnRzW3NdKTtcblxuXHRcdGZvciAodmFyIGtleSBpbiBmcm9tKSB7XG5cdFx0XHRpZiAoaGFzT3duUHJvcGVydHkuY2FsbChmcm9tLCBrZXkpKSB7XG5cdFx0XHRcdHRvW2tleV0gPSBmcm9tW2tleV07XG5cdFx0XHR9XG5cdFx0fVxuXG5cdFx0aWYgKGdldE93blByb3BlcnR5U3ltYm9scykge1xuXHRcdFx0c3ltYm9scyA9IGdldE93blByb3BlcnR5U3ltYm9scyhmcm9tKTtcblx0XHRcdGZvciAodmFyIGkgPSAwOyBpIDwgc3ltYm9scy5sZW5ndGg7IGkrKykge1xuXHRcdFx0XHRpZiAocHJvcElzRW51bWVyYWJsZS5jYWxsKGZyb20sIHN5bWJvbHNbaV0pKSB7XG5cdFx0XHRcdFx0dG9bc3ltYm9sc1tpXV0gPSBmcm9tW3N5bWJvbHNbaV1dO1xuXHRcdFx0XHR9XG5cdFx0XHR9XG5cdFx0fVxuXHR9XG5cblx0cmV0dXJuIHRvO1xufTtcbiIsIid1c2Ugc3RyaWN0JztcblxuZnVuY3Rpb24gY2hlY2tEQ0UoKSB7XG4gIC8qIGdsb2JhbCBfX1JFQUNUX0RFVlRPT0xTX0dMT0JBTF9IT09LX18gKi9cbiAgaWYgKFxuICAgIHR5cGVvZiBfX1JFQUNUX0RFVlRPT0xTX0dMT0JBTF9IT09LX18gPT09ICd1bmRlZmluZWQnIHx8XG4gICAgdHlwZW9mIF9fUkVBQ1RfREVWVE9PTFNfR0xPQkFMX0hPT0tfXy5jaGVja0RDRSAhPT0gJ2Z1bmN0aW9uJ1xuICApIHtcbiAgICByZXR1cm47XG4gIH1cbiAgaWYgKHByb2Nlc3MuZW52Lk5PREVfRU5WICE9PSAncHJvZHVjdGlvbicpIHtcbiAgICAvLyBUaGlzIGJyYW5jaCBpcyB1bnJlYWNoYWJsZSBiZWNhdXNlIHRoaXMgZnVuY3Rpb24gaXMgb25seSBjYWxsZWRcbiAgICAvLyBpbiBwcm9kdWN0aW9uLCBidXQgdGhlIGNvbmRpdGlvbiBpcyB0cnVlIG9ubHkgaW4gZGV2ZWxvcG1lbnQuXG4gICAgLy8gVGhlcmVmb3JlIGlmIHRoZSBicmFuY2ggaXMgc3RpbGwgaGVyZSwgZGVhZCBjb2RlIGVsaW1pbmF0aW9uIHdhc24ndFxuICAgIC8vIHByb3Blcmx5IGFwcGxpZWQuXG4gICAgLy8gRG9uJ3QgY2hhbmdlIHRoZSBtZXNzYWdlLiBSZWFjdCBEZXZUb29scyByZWxpZXMgb24gaXQuIEFsc28gbWFrZSBzdXJlXG4gICAgLy8gdGhpcyBtZXNzYWdlIGRvZXNuJ3Qgb2NjdXIgZWxzZXdoZXJlIGluIHRoaXMgZnVuY3Rpb24sIG9yIGl0IHdpbGwgY2F1c2VcbiAgICAvLyBhIGZhbHNlIHBvc2l0aXZlLlxuICAgIHRocm93IG5ldyBFcnJvcignXl9eJyk7XG4gIH1cbiAgdHJ5IHtcbiAgICAvLyBWZXJpZnkgdGhhdCB0aGUgY29kZSBhYm92ZSBoYXMgYmVlbiBkZWFkIGNvZGUgZWxpbWluYXRlZCAoRENFJ2QpLlxuICAgIF9fUkVBQ1RfREVWVE9PTFNfR0xPQkFMX0hPT0tfXy5jaGVja0RDRShjaGVja0RDRSk7XG4gIH0gY2F0Y2ggKGVycikge1xuICAgIC8vIERldlRvb2xzIHNob3VsZG4ndCBjcmFzaCBSZWFjdCwgbm8gbWF0dGVyIHdoYXQuXG4gICAgLy8gV2Ugc2hvdWxkIHN0aWxsIHJlcG9ydCBpbiBjYXNlIHdlIGJyZWFrIHRoaXMgY29kZS5cbiAgICBjb25zb2xlLmVycm9yKGVycik7XG4gIH1cbn1cblxuaWYgKHByb2Nlc3MuZW52Lk5PREVfRU5WID09PSAncHJvZHVjdGlvbicpIHtcbiAgLy8gRENFIGNoZWNrIHNob3VsZCBoYXBwZW4gYmVmb3JlIFJlYWN0RE9NIGJ1bmRsZSBleGVjdXRlcyBzbyB0aGF0XG4gIC8vIERldlRvb2xzIGNhbiByZXBvcnQgYmFkIG1pbmlmaWNhdGlvbiBkdXJpbmcgaW5qZWN0aW9uLlxuICBjaGVja0RDRSgpO1xuICBtb2R1bGUuZXhwb3J0cyA9IHJlcXVpcmUoJy4vY2pzL3JlYWN0LWRvbS5wcm9kdWN0aW9uLm1pbi5qcycpO1xufSBlbHNlIHtcbiAgbW9kdWxlLmV4cG9ydHMgPSByZXF1aXJlKCcuL2Nqcy9yZWFjdC1kb20uZGV2ZWxvcG1lbnQuanMnKTtcbn1cbiIsInZhciBoeXBoZW5FeHByZXNzaW9uID0gLy0rKFthLXpdKS9naVxuXG5mdW5jdGlvbiB1cHBlckNhc2VGaXJzdE1hdGNoIChtYXRjaCwgYywgb2Zmc2V0KSB7XG4gIGlmIChvZmZzZXQgIT09IDApIHtcbiAgICByZXR1cm4gYy50b1VwcGVyQ2FzZSgpXG4gIH0gZWxzZSB7XG4gICAgcmV0dXJuIGNcbiAgfVxufVxuXG5mdW5jdGlvbiBjYW1lbENhc2UgKHN0cikge1xuICB2YXIgY2FtZWxDYXNlZCA9IHN0ci5yZXBsYWNlKGh5cGhlbkV4cHJlc3Npb24sIHVwcGVyQ2FzZUZpcnN0TWF0Y2gpXG4gIGh5cGhlbkV4cHJlc3Npb24ubGFzdEluZGV4ID0gMFxuICByZXR1cm4gY2FtZWxDYXNlZFxufVxuXG5tb2R1bGUuZXhwb3J0cyA9IGNhbWVsQ2FzZVxuIiwiZnVuY3Rpb24gbWFwVmFsdWVzIChzb3VyY2UsIGZuKSB7XG4gIHZhciBkZXN0aW5hdGlvbiA9IHt9XG5cbiAgZm9yICh2YXIga2V5IGluIHNvdXJjZSkge1xuICAgIGlmIChzb3VyY2UuaGFzT3duUHJvcGVydHkoa2V5KSkge1xuICAgICAgZGVzdGluYXRpb25ba2V5XSA9IGZuKHNvdXJjZVtrZXldKVxuICAgIH1cbiAgfVxuXG4gIHJldHVybiBkZXN0aW5hdGlvblxufVxuXG5tb2R1bGUuZXhwb3J0cyA9IG1hcFZhbHVlc1xuIiwiLyohXG4gIENvcHlyaWdodCAoYykgMjAxNyBKZWQgV2F0c29uLlxuICBMaWNlbnNlZCB1bmRlciB0aGUgTUlUIExpY2Vuc2UgKE1JVCksIHNlZVxuICBodHRwOi8vamVkd2F0c29uLmdpdGh1Yi5pby9jbGFzc25hbWVzXG4qL1xuLyogZ2xvYmFsIGRlZmluZSAqL1xuXG4oZnVuY3Rpb24gKCkge1xuXHQndXNlIHN0cmljdCc7XG5cblx0dmFyIGhhc093biA9IHt9Lmhhc093blByb3BlcnR5O1xuXG5cdGZ1bmN0aW9uIGNsYXNzTmFtZXMgKCkge1xuXHRcdHZhciBjbGFzc2VzID0gW107XG5cblx0XHRmb3IgKHZhciBpID0gMDsgaSA8IGFyZ3VtZW50cy5sZW5ndGg7IGkrKykge1xuXHRcdFx0dmFyIGFyZyA9IGFyZ3VtZW50c1tpXTtcblx0XHRcdGlmICghYXJnKSBjb250aW51ZTtcblxuXHRcdFx0dmFyIGFyZ1R5cGUgPSB0eXBlb2YgYXJnO1xuXG5cdFx0XHRpZiAoYXJnVHlwZSA9PT0gJ3N0cmluZycgfHwgYXJnVHlwZSA9PT0gJ251bWJlcicpIHtcblx0XHRcdFx0Y2xhc3Nlcy5wdXNoKGFyZyk7XG5cdFx0XHR9IGVsc2UgaWYgKEFycmF5LmlzQXJyYXkoYXJnKSAmJiBhcmcubGVuZ3RoKSB7XG5cdFx0XHRcdHZhciBpbm5lciA9IGNsYXNzTmFtZXMuYXBwbHkobnVsbCwgYXJnKTtcblx0XHRcdFx0aWYgKGlubmVyKSB7XG5cdFx0XHRcdFx0Y2xhc3Nlcy5wdXNoKGlubmVyKTtcblx0XHRcdFx0fVxuXHRcdFx0fSBlbHNlIGlmIChhcmdUeXBlID09PSAnb2JqZWN0Jykge1xuXHRcdFx0XHRmb3IgKHZhciBrZXkgaW4gYXJnKSB7XG5cdFx0XHRcdFx0aWYgKGhhc093bi5jYWxsKGFyZywga2V5KSAmJiBhcmdba2V5XSkge1xuXHRcdFx0XHRcdFx0Y2xhc3Nlcy5wdXNoKGtleSk7XG5cdFx0XHRcdFx0fVxuXHRcdFx0XHR9XG5cdFx0XHR9XG5cdFx0fVxuXG5cdFx0cmV0dXJuIGNsYXNzZXMuam9pbignICcpO1xuXHR9XG5cblx0aWYgKHR5cGVvZiBtb2R1bGUgIT09ICd1bmRlZmluZWQnICYmIG1vZHVsZS5leHBvcnRzKSB7XG5cdFx0Y2xhc3NOYW1lcy5kZWZhdWx0ID0gY2xhc3NOYW1lcztcblx0XHRtb2R1bGUuZXhwb3J0cyA9IGNsYXNzTmFtZXM7XG5cdH0gZWxzZSBpZiAodHlwZW9mIGRlZmluZSA9PT0gJ2Z1bmN0aW9uJyAmJiB0eXBlb2YgZGVmaW5lLmFtZCA9PT0gJ29iamVjdCcgJiYgZGVmaW5lLmFtZCkge1xuXHRcdC8vIHJlZ2lzdGVyIGFzICdjbGFzc25hbWVzJywgY29uc2lzdGVudCB3aXRoIG5wbSBwYWNrYWdlIG5hbWVcblx0XHRkZWZpbmUoJ2NsYXNzbmFtZXMnLCBbXSwgZnVuY3Rpb24gKCkge1xuXHRcdFx0cmV0dXJuIGNsYXNzTmFtZXM7XG5cdFx0fSk7XG5cdH0gZWxzZSB7XG5cdFx0d2luZG93LmNsYXNzTmFtZXMgPSBjbGFzc05hbWVzO1xuXHR9XG59KCkpO1xuIiwidmFyIGZhY3RvcnkgPSByZXF1aXJlKCcuL2ZhY3RvcnknKVxubW9kdWxlLmV4cG9ydHMgPSBmYWN0b3J5KClcbiIsIi8qKiBAbGljZW5zZSBSZWFjdCB2MTYuMTMuMVxuICogcmVhY3QucHJvZHVjdGlvbi5taW4uanNcbiAqXG4gKiBDb3B5cmlnaHQgKGMpIEZhY2Vib29rLCBJbmMuIGFuZCBpdHMgYWZmaWxpYXRlcy5cbiAqXG4gKiBUaGlzIHNvdXJjZSBjb2RlIGlzIGxpY2Vuc2VkIHVuZGVyIHRoZSBNSVQgbGljZW5zZSBmb3VuZCBpbiB0aGVcbiAqIExJQ0VOU0UgZmlsZSBpbiB0aGUgcm9vdCBkaXJlY3Rvcnkgb2YgdGhpcyBzb3VyY2UgdHJlZS5cbiAqL1xuXG4ndXNlIHN0cmljdCc7dmFyIGw9cmVxdWlyZShcIm9iamVjdC1hc3NpZ25cIiksbj1cImZ1bmN0aW9uXCI9PT10eXBlb2YgU3ltYm9sJiZTeW1ib2wuZm9yLHA9bj9TeW1ib2wuZm9yKFwicmVhY3QuZWxlbWVudFwiKTo2MDEwMyxxPW4/U3ltYm9sLmZvcihcInJlYWN0LnBvcnRhbFwiKTo2MDEwNixyPW4/U3ltYm9sLmZvcihcInJlYWN0LmZyYWdtZW50XCIpOjYwMTA3LHQ9bj9TeW1ib2wuZm9yKFwicmVhY3Quc3RyaWN0X21vZGVcIik6NjAxMDgsdT1uP1N5bWJvbC5mb3IoXCJyZWFjdC5wcm9maWxlclwiKTo2MDExNCx2PW4/U3ltYm9sLmZvcihcInJlYWN0LnByb3ZpZGVyXCIpOjYwMTA5LHc9bj9TeW1ib2wuZm9yKFwicmVhY3QuY29udGV4dFwiKTo2MDExMCx4PW4/U3ltYm9sLmZvcihcInJlYWN0LmZvcndhcmRfcmVmXCIpOjYwMTEyLHk9bj9TeW1ib2wuZm9yKFwicmVhY3Quc3VzcGVuc2VcIik6NjAxMTMsej1uP1N5bWJvbC5mb3IoXCJyZWFjdC5tZW1vXCIpOjYwMTE1LEE9bj9TeW1ib2wuZm9yKFwicmVhY3QubGF6eVwiKTpcbjYwMTE2LEI9XCJmdW5jdGlvblwiPT09dHlwZW9mIFN5bWJvbCYmU3ltYm9sLml0ZXJhdG9yO2Z1bmN0aW9uIEMoYSl7Zm9yKHZhciBiPVwiaHR0cHM6Ly9yZWFjdGpzLm9yZy9kb2NzL2Vycm9yLWRlY29kZXIuaHRtbD9pbnZhcmlhbnQ9XCIrYSxjPTE7Yzxhcmd1bWVudHMubGVuZ3RoO2MrKyliKz1cIiZhcmdzW109XCIrZW5jb2RlVVJJQ29tcG9uZW50KGFyZ3VtZW50c1tjXSk7cmV0dXJuXCJNaW5pZmllZCBSZWFjdCBlcnJvciAjXCIrYStcIjsgdmlzaXQgXCIrYitcIiBmb3IgdGhlIGZ1bGwgbWVzc2FnZSBvciB1c2UgdGhlIG5vbi1taW5pZmllZCBkZXYgZW52aXJvbm1lbnQgZm9yIGZ1bGwgZXJyb3JzIGFuZCBhZGRpdGlvbmFsIGhlbHBmdWwgd2FybmluZ3MuXCJ9XG52YXIgRD17aXNNb3VudGVkOmZ1bmN0aW9uKCl7cmV0dXJuITF9LGVucXVldWVGb3JjZVVwZGF0ZTpmdW5jdGlvbigpe30sZW5xdWV1ZVJlcGxhY2VTdGF0ZTpmdW5jdGlvbigpe30sZW5xdWV1ZVNldFN0YXRlOmZ1bmN0aW9uKCl7fX0sRT17fTtmdW5jdGlvbiBGKGEsYixjKXt0aGlzLnByb3BzPWE7dGhpcy5jb250ZXh0PWI7dGhpcy5yZWZzPUU7dGhpcy51cGRhdGVyPWN8fER9Ri5wcm90b3R5cGUuaXNSZWFjdENvbXBvbmVudD17fTtGLnByb3RvdHlwZS5zZXRTdGF0ZT1mdW5jdGlvbihhLGIpe2lmKFwib2JqZWN0XCIhPT10eXBlb2YgYSYmXCJmdW5jdGlvblwiIT09dHlwZW9mIGEmJm51bGwhPWEpdGhyb3cgRXJyb3IoQyg4NSkpO3RoaXMudXBkYXRlci5lbnF1ZXVlU2V0U3RhdGUodGhpcyxhLGIsXCJzZXRTdGF0ZVwiKX07Ri5wcm90b3R5cGUuZm9yY2VVcGRhdGU9ZnVuY3Rpb24oYSl7dGhpcy51cGRhdGVyLmVucXVldWVGb3JjZVVwZGF0ZSh0aGlzLGEsXCJmb3JjZVVwZGF0ZVwiKX07XG5mdW5jdGlvbiBHKCl7fUcucHJvdG90eXBlPUYucHJvdG90eXBlO2Z1bmN0aW9uIEgoYSxiLGMpe3RoaXMucHJvcHM9YTt0aGlzLmNvbnRleHQ9Yjt0aGlzLnJlZnM9RTt0aGlzLnVwZGF0ZXI9Y3x8RH12YXIgST1ILnByb3RvdHlwZT1uZXcgRztJLmNvbnN0cnVjdG9yPUg7bChJLEYucHJvdG90eXBlKTtJLmlzUHVyZVJlYWN0Q29tcG9uZW50PSEwO3ZhciBKPXtjdXJyZW50Om51bGx9LEs9T2JqZWN0LnByb3RvdHlwZS5oYXNPd25Qcm9wZXJ0eSxMPXtrZXk6ITAscmVmOiEwLF9fc2VsZjohMCxfX3NvdXJjZTohMH07XG5mdW5jdGlvbiBNKGEsYixjKXt2YXIgZSxkPXt9LGc9bnVsbCxrPW51bGw7aWYobnVsbCE9Yilmb3IoZSBpbiB2b2lkIDAhPT1iLnJlZiYmKGs9Yi5yZWYpLHZvaWQgMCE9PWIua2V5JiYoZz1cIlwiK2Iua2V5KSxiKUsuY2FsbChiLGUpJiYhTC5oYXNPd25Qcm9wZXJ0eShlKSYmKGRbZV09YltlXSk7dmFyIGY9YXJndW1lbnRzLmxlbmd0aC0yO2lmKDE9PT1mKWQuY2hpbGRyZW49YztlbHNlIGlmKDE8Zil7Zm9yKHZhciBoPUFycmF5KGYpLG09MDttPGY7bSsrKWhbbV09YXJndW1lbnRzW20rMl07ZC5jaGlsZHJlbj1ofWlmKGEmJmEuZGVmYXVsdFByb3BzKWZvcihlIGluIGY9YS5kZWZhdWx0UHJvcHMsZil2b2lkIDA9PT1kW2VdJiYoZFtlXT1mW2VdKTtyZXR1cm57JCR0eXBlb2Y6cCx0eXBlOmEsa2V5OmcscmVmOmsscHJvcHM6ZCxfb3duZXI6Si5jdXJyZW50fX1cbmZ1bmN0aW9uIE4oYSxiKXtyZXR1cm57JCR0eXBlb2Y6cCx0eXBlOmEudHlwZSxrZXk6YixyZWY6YS5yZWYscHJvcHM6YS5wcm9wcyxfb3duZXI6YS5fb3duZXJ9fWZ1bmN0aW9uIE8oYSl7cmV0dXJuXCJvYmplY3RcIj09PXR5cGVvZiBhJiZudWxsIT09YSYmYS4kJHR5cGVvZj09PXB9ZnVuY3Rpb24gZXNjYXBlKGEpe3ZhciBiPXtcIj1cIjpcIj0wXCIsXCI6XCI6XCI9MlwifTtyZXR1cm5cIiRcIisoXCJcIithKS5yZXBsYWNlKC9bPTpdL2csZnVuY3Rpb24oYSl7cmV0dXJuIGJbYV19KX12YXIgUD0vXFwvKy9nLFE9W107ZnVuY3Rpb24gUihhLGIsYyxlKXtpZihRLmxlbmd0aCl7dmFyIGQ9US5wb3AoKTtkLnJlc3VsdD1hO2Qua2V5UHJlZml4PWI7ZC5mdW5jPWM7ZC5jb250ZXh0PWU7ZC5jb3VudD0wO3JldHVybiBkfXJldHVybntyZXN1bHQ6YSxrZXlQcmVmaXg6YixmdW5jOmMsY29udGV4dDplLGNvdW50OjB9fVxuZnVuY3Rpb24gUyhhKXthLnJlc3VsdD1udWxsO2Eua2V5UHJlZml4PW51bGw7YS5mdW5jPW51bGw7YS5jb250ZXh0PW51bGw7YS5jb3VudD0wOzEwPlEubGVuZ3RoJiZRLnB1c2goYSl9XG5mdW5jdGlvbiBUKGEsYixjLGUpe3ZhciBkPXR5cGVvZiBhO2lmKFwidW5kZWZpbmVkXCI9PT1kfHxcImJvb2xlYW5cIj09PWQpYT1udWxsO3ZhciBnPSExO2lmKG51bGw9PT1hKWc9ITA7ZWxzZSBzd2l0Y2goZCl7Y2FzZSBcInN0cmluZ1wiOmNhc2UgXCJudW1iZXJcIjpnPSEwO2JyZWFrO2Nhc2UgXCJvYmplY3RcIjpzd2l0Y2goYS4kJHR5cGVvZil7Y2FzZSBwOmNhc2UgcTpnPSEwfX1pZihnKXJldHVybiBjKGUsYSxcIlwiPT09Yj9cIi5cIitVKGEsMCk6YiksMTtnPTA7Yj1cIlwiPT09Yj9cIi5cIjpiK1wiOlwiO2lmKEFycmF5LmlzQXJyYXkoYSkpZm9yKHZhciBrPTA7azxhLmxlbmd0aDtrKyspe2Q9YVtrXTt2YXIgZj1iK1UoZCxrKTtnKz1UKGQsZixjLGUpfWVsc2UgaWYobnVsbD09PWF8fFwib2JqZWN0XCIhPT10eXBlb2YgYT9mPW51bGw6KGY9QiYmYVtCXXx8YVtcIkBAaXRlcmF0b3JcIl0sZj1cImZ1bmN0aW9uXCI9PT10eXBlb2YgZj9mOm51bGwpLFwiZnVuY3Rpb25cIj09PXR5cGVvZiBmKWZvcihhPWYuY2FsbChhKSxrPVxuMDshKGQ9YS5uZXh0KCkpLmRvbmU7KWQ9ZC52YWx1ZSxmPWIrVShkLGsrKyksZys9VChkLGYsYyxlKTtlbHNlIGlmKFwib2JqZWN0XCI9PT1kKXRocm93IGM9XCJcIithLEVycm9yKEMoMzEsXCJbb2JqZWN0IE9iamVjdF1cIj09PWM/XCJvYmplY3Qgd2l0aCBrZXlzIHtcIitPYmplY3Qua2V5cyhhKS5qb2luKFwiLCBcIikrXCJ9XCI6YyxcIlwiKSk7cmV0dXJuIGd9ZnVuY3Rpb24gVihhLGIsYyl7cmV0dXJuIG51bGw9PWE/MDpUKGEsXCJcIixiLGMpfWZ1bmN0aW9uIFUoYSxiKXtyZXR1cm5cIm9iamVjdFwiPT09dHlwZW9mIGEmJm51bGwhPT1hJiZudWxsIT1hLmtleT9lc2NhcGUoYS5rZXkpOmIudG9TdHJpbmcoMzYpfWZ1bmN0aW9uIFcoYSxiKXthLmZ1bmMuY2FsbChhLmNvbnRleHQsYixhLmNvdW50KyspfVxuZnVuY3Rpb24gYWEoYSxiLGMpe3ZhciBlPWEucmVzdWx0LGQ9YS5rZXlQcmVmaXg7YT1hLmZ1bmMuY2FsbChhLmNvbnRleHQsYixhLmNvdW50KyspO0FycmF5LmlzQXJyYXkoYSk/WChhLGUsYyxmdW5jdGlvbihhKXtyZXR1cm4gYX0pOm51bGwhPWEmJihPKGEpJiYoYT1OKGEsZCsoIWEua2V5fHxiJiZiLmtleT09PWEua2V5P1wiXCI6KFwiXCIrYS5rZXkpLnJlcGxhY2UoUCxcIiQmL1wiKStcIi9cIikrYykpLGUucHVzaChhKSl9ZnVuY3Rpb24gWChhLGIsYyxlLGQpe3ZhciBnPVwiXCI7bnVsbCE9YyYmKGc9KFwiXCIrYykucmVwbGFjZShQLFwiJCYvXCIpK1wiL1wiKTtiPVIoYixnLGUsZCk7VihhLGFhLGIpO1MoYil9dmFyIFk9e2N1cnJlbnQ6bnVsbH07ZnVuY3Rpb24gWigpe3ZhciBhPVkuY3VycmVudDtpZihudWxsPT09YSl0aHJvdyBFcnJvcihDKDMyMSkpO3JldHVybiBhfVxudmFyIGJhPXtSZWFjdEN1cnJlbnREaXNwYXRjaGVyOlksUmVhY3RDdXJyZW50QmF0Y2hDb25maWc6e3N1c3BlbnNlOm51bGx9LFJlYWN0Q3VycmVudE93bmVyOkosSXNTb21lUmVuZGVyZXJBY3Rpbmc6e2N1cnJlbnQ6ITF9LGFzc2lnbjpsfTtleHBvcnRzLkNoaWxkcmVuPXttYXA6ZnVuY3Rpb24oYSxiLGMpe2lmKG51bGw9PWEpcmV0dXJuIGE7dmFyIGU9W107WChhLGUsbnVsbCxiLGMpO3JldHVybiBlfSxmb3JFYWNoOmZ1bmN0aW9uKGEsYixjKXtpZihudWxsPT1hKXJldHVybiBhO2I9UihudWxsLG51bGwsYixjKTtWKGEsVyxiKTtTKGIpfSxjb3VudDpmdW5jdGlvbihhKXtyZXR1cm4gVihhLGZ1bmN0aW9uKCl7cmV0dXJuIG51bGx9LG51bGwpfSx0b0FycmF5OmZ1bmN0aW9uKGEpe3ZhciBiPVtdO1goYSxiLG51bGwsZnVuY3Rpb24oYSl7cmV0dXJuIGF9KTtyZXR1cm4gYn0sb25seTpmdW5jdGlvbihhKXtpZighTyhhKSl0aHJvdyBFcnJvcihDKDE0MykpO3JldHVybiBhfX07XG5leHBvcnRzLkNvbXBvbmVudD1GO2V4cG9ydHMuRnJhZ21lbnQ9cjtleHBvcnRzLlByb2ZpbGVyPXU7ZXhwb3J0cy5QdXJlQ29tcG9uZW50PUg7ZXhwb3J0cy5TdHJpY3RNb2RlPXQ7ZXhwb3J0cy5TdXNwZW5zZT15O2V4cG9ydHMuX19TRUNSRVRfSU5URVJOQUxTX0RPX05PVF9VU0VfT1JfWU9VX1dJTExfQkVfRklSRUQ9YmE7XG5leHBvcnRzLmNsb25lRWxlbWVudD1mdW5jdGlvbihhLGIsYyl7aWYobnVsbD09PWF8fHZvaWQgMD09PWEpdGhyb3cgRXJyb3IoQygyNjcsYSkpO3ZhciBlPWwoe30sYS5wcm9wcyksZD1hLmtleSxnPWEucmVmLGs9YS5fb3duZXI7aWYobnVsbCE9Yil7dm9pZCAwIT09Yi5yZWYmJihnPWIucmVmLGs9Si5jdXJyZW50KTt2b2lkIDAhPT1iLmtleSYmKGQ9XCJcIitiLmtleSk7aWYoYS50eXBlJiZhLnR5cGUuZGVmYXVsdFByb3BzKXZhciBmPWEudHlwZS5kZWZhdWx0UHJvcHM7Zm9yKGggaW4gYilLLmNhbGwoYixoKSYmIUwuaGFzT3duUHJvcGVydHkoaCkmJihlW2hdPXZvaWQgMD09PWJbaF0mJnZvaWQgMCE9PWY/ZltoXTpiW2hdKX12YXIgaD1hcmd1bWVudHMubGVuZ3RoLTI7aWYoMT09PWgpZS5jaGlsZHJlbj1jO2Vsc2UgaWYoMTxoKXtmPUFycmF5KGgpO2Zvcih2YXIgbT0wO208aDttKyspZlttXT1hcmd1bWVudHNbbSsyXTtlLmNoaWxkcmVuPWZ9cmV0dXJueyQkdHlwZW9mOnAsdHlwZTphLnR5cGUsXG5rZXk6ZCxyZWY6Zyxwcm9wczplLF9vd25lcjprfX07ZXhwb3J0cy5jcmVhdGVDb250ZXh0PWZ1bmN0aW9uKGEsYil7dm9pZCAwPT09YiYmKGI9bnVsbCk7YT17JCR0eXBlb2Y6dyxfY2FsY3VsYXRlQ2hhbmdlZEJpdHM6YixfY3VycmVudFZhbHVlOmEsX2N1cnJlbnRWYWx1ZTI6YSxfdGhyZWFkQ291bnQ6MCxQcm92aWRlcjpudWxsLENvbnN1bWVyOm51bGx9O2EuUHJvdmlkZXI9eyQkdHlwZW9mOnYsX2NvbnRleHQ6YX07cmV0dXJuIGEuQ29uc3VtZXI9YX07ZXhwb3J0cy5jcmVhdGVFbGVtZW50PU07ZXhwb3J0cy5jcmVhdGVGYWN0b3J5PWZ1bmN0aW9uKGEpe3ZhciBiPU0uYmluZChudWxsLGEpO2IudHlwZT1hO3JldHVybiBifTtleHBvcnRzLmNyZWF0ZVJlZj1mdW5jdGlvbigpe3JldHVybntjdXJyZW50Om51bGx9fTtleHBvcnRzLmZvcndhcmRSZWY9ZnVuY3Rpb24oYSl7cmV0dXJueyQkdHlwZW9mOngscmVuZGVyOmF9fTtleHBvcnRzLmlzVmFsaWRFbGVtZW50PU87XG5leHBvcnRzLmxhenk9ZnVuY3Rpb24oYSl7cmV0dXJueyQkdHlwZW9mOkEsX2N0b3I6YSxfc3RhdHVzOi0xLF9yZXN1bHQ6bnVsbH19O2V4cG9ydHMubWVtbz1mdW5jdGlvbihhLGIpe3JldHVybnskJHR5cGVvZjp6LHR5cGU6YSxjb21wYXJlOnZvaWQgMD09PWI/bnVsbDpifX07ZXhwb3J0cy51c2VDYWxsYmFjaz1mdW5jdGlvbihhLGIpe3JldHVybiBaKCkudXNlQ2FsbGJhY2soYSxiKX07ZXhwb3J0cy51c2VDb250ZXh0PWZ1bmN0aW9uKGEsYil7cmV0dXJuIFooKS51c2VDb250ZXh0KGEsYil9O2V4cG9ydHMudXNlRGVidWdWYWx1ZT1mdW5jdGlvbigpe307ZXhwb3J0cy51c2VFZmZlY3Q9ZnVuY3Rpb24oYSxiKXtyZXR1cm4gWigpLnVzZUVmZmVjdChhLGIpfTtleHBvcnRzLnVzZUltcGVyYXRpdmVIYW5kbGU9ZnVuY3Rpb24oYSxiLGMpe3JldHVybiBaKCkudXNlSW1wZXJhdGl2ZUhhbmRsZShhLGIsYyl9O1xuZXhwb3J0cy51c2VMYXlvdXRFZmZlY3Q9ZnVuY3Rpb24oYSxiKXtyZXR1cm4gWigpLnVzZUxheW91dEVmZmVjdChhLGIpfTtleHBvcnRzLnVzZU1lbW89ZnVuY3Rpb24oYSxiKXtyZXR1cm4gWigpLnVzZU1lbW8oYSxiKX07ZXhwb3J0cy51c2VSZWR1Y2VyPWZ1bmN0aW9uKGEsYixjKXtyZXR1cm4gWigpLnVzZVJlZHVjZXIoYSxiLGMpfTtleHBvcnRzLnVzZVJlZj1mdW5jdGlvbihhKXtyZXR1cm4gWigpLnVzZVJlZihhKX07ZXhwb3J0cy51c2VTdGF0ZT1mdW5jdGlvbihhKXtyZXR1cm4gWigpLnVzZVN0YXRlKGEpfTtleHBvcnRzLnZlcnNpb249XCIxNi4xMy4xXCI7XG4iLCIvKiogQGxpY2Vuc2UgUmVhY3QgdjE2LjEzLjFcbiAqIHJlYWN0LWRvbS5wcm9kdWN0aW9uLm1pbi5qc1xuICpcbiAqIENvcHlyaWdodCAoYykgRmFjZWJvb2ssIEluYy4gYW5kIGl0cyBhZmZpbGlhdGVzLlxuICpcbiAqIFRoaXMgc291cmNlIGNvZGUgaXMgbGljZW5zZWQgdW5kZXIgdGhlIE1JVCBsaWNlbnNlIGZvdW5kIGluIHRoZVxuICogTElDRU5TRSBmaWxlIGluIHRoZSByb290IGRpcmVjdG9yeSBvZiB0aGlzIHNvdXJjZSB0cmVlLlxuICovXG5cbi8qXG4gTW9kZXJuaXpyIDMuMC4wcHJlIChDdXN0b20gQnVpbGQpIHwgTUlUXG4qL1xuJ3VzZSBzdHJpY3QnO3ZhciBhYT1yZXF1aXJlKFwicmVhY3RcIiksbj1yZXF1aXJlKFwib2JqZWN0LWFzc2lnblwiKSxyPXJlcXVpcmUoXCJzY2hlZHVsZXJcIik7ZnVuY3Rpb24gdShhKXtmb3IodmFyIGI9XCJodHRwczovL3JlYWN0anMub3JnL2RvY3MvZXJyb3ItZGVjb2Rlci5odG1sP2ludmFyaWFudD1cIithLGM9MTtjPGFyZ3VtZW50cy5sZW5ndGg7YysrKWIrPVwiJmFyZ3NbXT1cIitlbmNvZGVVUklDb21wb25lbnQoYXJndW1lbnRzW2NdKTtyZXR1cm5cIk1pbmlmaWVkIFJlYWN0IGVycm9yICNcIithK1wiOyB2aXNpdCBcIitiK1wiIGZvciB0aGUgZnVsbCBtZXNzYWdlIG9yIHVzZSB0aGUgbm9uLW1pbmlmaWVkIGRldiBlbnZpcm9ubWVudCBmb3IgZnVsbCBlcnJvcnMgYW5kIGFkZGl0aW9uYWwgaGVscGZ1bCB3YXJuaW5ncy5cIn1pZighYWEpdGhyb3cgRXJyb3IodSgyMjcpKTtcbmZ1bmN0aW9uIGJhKGEsYixjLGQsZSxmLGcsaCxrKXt2YXIgbD1BcnJheS5wcm90b3R5cGUuc2xpY2UuY2FsbChhcmd1bWVudHMsMyk7dHJ5e2IuYXBwbHkoYyxsKX1jYXRjaChtKXt0aGlzLm9uRXJyb3IobSl9fXZhciBkYT0hMSxlYT1udWxsLGZhPSExLGhhPW51bGwsaWE9e29uRXJyb3I6ZnVuY3Rpb24oYSl7ZGE9ITA7ZWE9YX19O2Z1bmN0aW9uIGphKGEsYixjLGQsZSxmLGcsaCxrKXtkYT0hMTtlYT1udWxsO2JhLmFwcGx5KGlhLGFyZ3VtZW50cyl9ZnVuY3Rpb24ga2EoYSxiLGMsZCxlLGYsZyxoLGspe2phLmFwcGx5KHRoaXMsYXJndW1lbnRzKTtpZihkYSl7aWYoZGEpe3ZhciBsPWVhO2RhPSExO2VhPW51bGx9ZWxzZSB0aHJvdyBFcnJvcih1KDE5OCkpO2ZhfHwoZmE9ITAsaGE9bCl9fXZhciBsYT1udWxsLG1hPW51bGwsbmE9bnVsbDtcbmZ1bmN0aW9uIG9hKGEsYixjKXt2YXIgZD1hLnR5cGV8fFwidW5rbm93bi1ldmVudFwiO2EuY3VycmVudFRhcmdldD1uYShjKTtrYShkLGIsdm9pZCAwLGEpO2EuY3VycmVudFRhcmdldD1udWxsfXZhciBwYT1udWxsLHFhPXt9O1xuZnVuY3Rpb24gcmEoKXtpZihwYSlmb3IodmFyIGEgaW4gcWEpe3ZhciBiPXFhW2FdLGM9cGEuaW5kZXhPZihhKTtpZighKC0xPGMpKXRocm93IEVycm9yKHUoOTYsYSkpO2lmKCFzYVtjXSl7aWYoIWIuZXh0cmFjdEV2ZW50cyl0aHJvdyBFcnJvcih1KDk3LGEpKTtzYVtjXT1iO2M9Yi5ldmVudFR5cGVzO2Zvcih2YXIgZCBpbiBjKXt2YXIgZT12b2lkIDA7dmFyIGY9Y1tkXSxnPWIsaD1kO2lmKHRhLmhhc093blByb3BlcnR5KGgpKXRocm93IEVycm9yKHUoOTksaCkpO3RhW2hdPWY7dmFyIGs9Zi5waGFzZWRSZWdpc3RyYXRpb25OYW1lcztpZihrKXtmb3IoZSBpbiBrKWsuaGFzT3duUHJvcGVydHkoZSkmJnVhKGtbZV0sZyxoKTtlPSEwfWVsc2UgZi5yZWdpc3RyYXRpb25OYW1lPyh1YShmLnJlZ2lzdHJhdGlvbk5hbWUsZyxoKSxlPSEwKTplPSExO2lmKCFlKXRocm93IEVycm9yKHUoOTgsZCxhKSk7fX19fVxuZnVuY3Rpb24gdWEoYSxiLGMpe2lmKHZhW2FdKXRocm93IEVycm9yKHUoMTAwLGEpKTt2YVthXT1iO3dhW2FdPWIuZXZlbnRUeXBlc1tjXS5kZXBlbmRlbmNpZXN9dmFyIHNhPVtdLHRhPXt9LHZhPXt9LHdhPXt9O2Z1bmN0aW9uIHhhKGEpe3ZhciBiPSExLGM7Zm9yKGMgaW4gYSlpZihhLmhhc093blByb3BlcnR5KGMpKXt2YXIgZD1hW2NdO2lmKCFxYS5oYXNPd25Qcm9wZXJ0eShjKXx8cWFbY10hPT1kKXtpZihxYVtjXSl0aHJvdyBFcnJvcih1KDEwMixjKSk7cWFbY109ZDtiPSEwfX1iJiZyYSgpfXZhciB5YT0hKFwidW5kZWZpbmVkXCI9PT10eXBlb2Ygd2luZG93fHxcInVuZGVmaW5lZFwiPT09dHlwZW9mIHdpbmRvdy5kb2N1bWVudHx8XCJ1bmRlZmluZWRcIj09PXR5cGVvZiB3aW5kb3cuZG9jdW1lbnQuY3JlYXRlRWxlbWVudCksemE9bnVsbCxBYT1udWxsLEJhPW51bGw7XG5mdW5jdGlvbiBDYShhKXtpZihhPW1hKGEpKXtpZihcImZ1bmN0aW9uXCIhPT10eXBlb2YgemEpdGhyb3cgRXJyb3IodSgyODApKTt2YXIgYj1hLnN0YXRlTm9kZTtiJiYoYj1sYShiKSx6YShhLnN0YXRlTm9kZSxhLnR5cGUsYikpfX1mdW5jdGlvbiBEYShhKXtBYT9CYT9CYS5wdXNoKGEpOkJhPVthXTpBYT1hfWZ1bmN0aW9uIEVhKCl7aWYoQWEpe3ZhciBhPUFhLGI9QmE7QmE9QWE9bnVsbDtDYShhKTtpZihiKWZvcihhPTA7YTxiLmxlbmd0aDthKyspQ2EoYlthXSl9fWZ1bmN0aW9uIEZhKGEsYil7cmV0dXJuIGEoYil9ZnVuY3Rpb24gR2EoYSxiLGMsZCxlKXtyZXR1cm4gYShiLGMsZCxlKX1mdW5jdGlvbiBIYSgpe312YXIgSWE9RmEsSmE9ITEsS2E9ITE7ZnVuY3Rpb24gTGEoKXtpZihudWxsIT09QWF8fG51bGwhPT1CYSlIYSgpLEVhKCl9XG5mdW5jdGlvbiBNYShhLGIsYyl7aWYoS2EpcmV0dXJuIGEoYixjKTtLYT0hMDt0cnl7cmV0dXJuIElhKGEsYixjKX1maW5hbGx5e0thPSExLExhKCl9fXZhciBOYT0vXls6QS1aX2EtelxcdTAwQzAtXFx1MDBENlxcdTAwRDgtXFx1MDBGNlxcdTAwRjgtXFx1MDJGRlxcdTAzNzAtXFx1MDM3RFxcdTAzN0YtXFx1MUZGRlxcdTIwMEMtXFx1MjAwRFxcdTIwNzAtXFx1MjE4RlxcdTJDMDAtXFx1MkZFRlxcdTMwMDEtXFx1RDdGRlxcdUY5MDAtXFx1RkRDRlxcdUZERjAtXFx1RkZGRF1bOkEtWl9hLXpcXHUwMEMwLVxcdTAwRDZcXHUwMEQ4LVxcdTAwRjZcXHUwMEY4LVxcdTAyRkZcXHUwMzcwLVxcdTAzN0RcXHUwMzdGLVxcdTFGRkZcXHUyMDBDLVxcdTIwMERcXHUyMDcwLVxcdTIxOEZcXHUyQzAwLVxcdTJGRUZcXHUzMDAxLVxcdUQ3RkZcXHVGOTAwLVxcdUZEQ0ZcXHVGREYwLVxcdUZGRkRcXC0uMC05XFx1MDBCN1xcdTAzMDAtXFx1MDM2RlxcdTIwM0YtXFx1MjA0MF0qJC8sT2E9T2JqZWN0LnByb3RvdHlwZS5oYXNPd25Qcm9wZXJ0eSxQYT17fSxRYT17fTtcbmZ1bmN0aW9uIFJhKGEpe2lmKE9hLmNhbGwoUWEsYSkpcmV0dXJuITA7aWYoT2EuY2FsbChQYSxhKSlyZXR1cm4hMTtpZihOYS50ZXN0KGEpKXJldHVybiBRYVthXT0hMDtQYVthXT0hMDtyZXR1cm4hMX1mdW5jdGlvbiBTYShhLGIsYyxkKXtpZihudWxsIT09YyYmMD09PWMudHlwZSlyZXR1cm4hMTtzd2l0Y2godHlwZW9mIGIpe2Nhc2UgXCJmdW5jdGlvblwiOmNhc2UgXCJzeW1ib2xcIjpyZXR1cm4hMDtjYXNlIFwiYm9vbGVhblwiOmlmKGQpcmV0dXJuITE7aWYobnVsbCE9PWMpcmV0dXJuIWMuYWNjZXB0c0Jvb2xlYW5zO2E9YS50b0xvd2VyQ2FzZSgpLnNsaWNlKDAsNSk7cmV0dXJuXCJkYXRhLVwiIT09YSYmXCJhcmlhLVwiIT09YTtkZWZhdWx0OnJldHVybiExfX1cbmZ1bmN0aW9uIFRhKGEsYixjLGQpe2lmKG51bGw9PT1ifHxcInVuZGVmaW5lZFwiPT09dHlwZW9mIGJ8fFNhKGEsYixjLGQpKXJldHVybiEwO2lmKGQpcmV0dXJuITE7aWYobnVsbCE9PWMpc3dpdGNoKGMudHlwZSl7Y2FzZSAzOnJldHVybiFiO2Nhc2UgNDpyZXR1cm4hMT09PWI7Y2FzZSA1OnJldHVybiBpc05hTihiKTtjYXNlIDY6cmV0dXJuIGlzTmFOKGIpfHwxPmJ9cmV0dXJuITF9ZnVuY3Rpb24gdihhLGIsYyxkLGUsZil7dGhpcy5hY2NlcHRzQm9vbGVhbnM9Mj09PWJ8fDM9PT1ifHw0PT09Yjt0aGlzLmF0dHJpYnV0ZU5hbWU9ZDt0aGlzLmF0dHJpYnV0ZU5hbWVzcGFjZT1lO3RoaXMubXVzdFVzZVByb3BlcnR5PWM7dGhpcy5wcm9wZXJ0eU5hbWU9YTt0aGlzLnR5cGU9Yjt0aGlzLnNhbml0aXplVVJMPWZ9dmFyIEM9e307XG5cImNoaWxkcmVuIGRhbmdlcm91c2x5U2V0SW5uZXJIVE1MIGRlZmF1bHRWYWx1ZSBkZWZhdWx0Q2hlY2tlZCBpbm5lckhUTUwgc3VwcHJlc3NDb250ZW50RWRpdGFibGVXYXJuaW5nIHN1cHByZXNzSHlkcmF0aW9uV2FybmluZyBzdHlsZVwiLnNwbGl0KFwiIFwiKS5mb3JFYWNoKGZ1bmN0aW9uKGEpe0NbYV09bmV3IHYoYSwwLCExLGEsbnVsbCwhMSl9KTtbW1wiYWNjZXB0Q2hhcnNldFwiLFwiYWNjZXB0LWNoYXJzZXRcIl0sW1wiY2xhc3NOYW1lXCIsXCJjbGFzc1wiXSxbXCJodG1sRm9yXCIsXCJmb3JcIl0sW1wiaHR0cEVxdWl2XCIsXCJodHRwLWVxdWl2XCJdXS5mb3JFYWNoKGZ1bmN0aW9uKGEpe3ZhciBiPWFbMF07Q1tiXT1uZXcgdihiLDEsITEsYVsxXSxudWxsLCExKX0pO1tcImNvbnRlbnRFZGl0YWJsZVwiLFwiZHJhZ2dhYmxlXCIsXCJzcGVsbENoZWNrXCIsXCJ2YWx1ZVwiXS5mb3JFYWNoKGZ1bmN0aW9uKGEpe0NbYV09bmV3IHYoYSwyLCExLGEudG9Mb3dlckNhc2UoKSxudWxsLCExKX0pO1xuW1wiYXV0b1JldmVyc2VcIixcImV4dGVybmFsUmVzb3VyY2VzUmVxdWlyZWRcIixcImZvY3VzYWJsZVwiLFwicHJlc2VydmVBbHBoYVwiXS5mb3JFYWNoKGZ1bmN0aW9uKGEpe0NbYV09bmV3IHYoYSwyLCExLGEsbnVsbCwhMSl9KTtcImFsbG93RnVsbFNjcmVlbiBhc3luYyBhdXRvRm9jdXMgYXV0b1BsYXkgY29udHJvbHMgZGVmYXVsdCBkZWZlciBkaXNhYmxlZCBkaXNhYmxlUGljdHVyZUluUGljdHVyZSBmb3JtTm9WYWxpZGF0ZSBoaWRkZW4gbG9vcCBub01vZHVsZSBub1ZhbGlkYXRlIG9wZW4gcGxheXNJbmxpbmUgcmVhZE9ubHkgcmVxdWlyZWQgcmV2ZXJzZWQgc2NvcGVkIHNlYW1sZXNzIGl0ZW1TY29wZVwiLnNwbGl0KFwiIFwiKS5mb3JFYWNoKGZ1bmN0aW9uKGEpe0NbYV09bmV3IHYoYSwzLCExLGEudG9Mb3dlckNhc2UoKSxudWxsLCExKX0pO1xuW1wiY2hlY2tlZFwiLFwibXVsdGlwbGVcIixcIm11dGVkXCIsXCJzZWxlY3RlZFwiXS5mb3JFYWNoKGZ1bmN0aW9uKGEpe0NbYV09bmV3IHYoYSwzLCEwLGEsbnVsbCwhMSl9KTtbXCJjYXB0dXJlXCIsXCJkb3dubG9hZFwiXS5mb3JFYWNoKGZ1bmN0aW9uKGEpe0NbYV09bmV3IHYoYSw0LCExLGEsbnVsbCwhMSl9KTtbXCJjb2xzXCIsXCJyb3dzXCIsXCJzaXplXCIsXCJzcGFuXCJdLmZvckVhY2goZnVuY3Rpb24oYSl7Q1thXT1uZXcgdihhLDYsITEsYSxudWxsLCExKX0pO1tcInJvd1NwYW5cIixcInN0YXJ0XCJdLmZvckVhY2goZnVuY3Rpb24oYSl7Q1thXT1uZXcgdihhLDUsITEsYS50b0xvd2VyQ2FzZSgpLG51bGwsITEpfSk7dmFyIFVhPS9bXFwtOl0oW2Etel0pL2c7ZnVuY3Rpb24gVmEoYSl7cmV0dXJuIGFbMV0udG9VcHBlckNhc2UoKX1cblwiYWNjZW50LWhlaWdodCBhbGlnbm1lbnQtYmFzZWxpbmUgYXJhYmljLWZvcm0gYmFzZWxpbmUtc2hpZnQgY2FwLWhlaWdodCBjbGlwLXBhdGggY2xpcC1ydWxlIGNvbG9yLWludGVycG9sYXRpb24gY29sb3ItaW50ZXJwb2xhdGlvbi1maWx0ZXJzIGNvbG9yLXByb2ZpbGUgY29sb3ItcmVuZGVyaW5nIGRvbWluYW50LWJhc2VsaW5lIGVuYWJsZS1iYWNrZ3JvdW5kIGZpbGwtb3BhY2l0eSBmaWxsLXJ1bGUgZmxvb2QtY29sb3IgZmxvb2Qtb3BhY2l0eSBmb250LWZhbWlseSBmb250LXNpemUgZm9udC1zaXplLWFkanVzdCBmb250LXN0cmV0Y2ggZm9udC1zdHlsZSBmb250LXZhcmlhbnQgZm9udC13ZWlnaHQgZ2x5cGgtbmFtZSBnbHlwaC1vcmllbnRhdGlvbi1ob3Jpem9udGFsIGdseXBoLW9yaWVudGF0aW9uLXZlcnRpY2FsIGhvcml6LWFkdi14IGhvcml6LW9yaWdpbi14IGltYWdlLXJlbmRlcmluZyBsZXR0ZXItc3BhY2luZyBsaWdodGluZy1jb2xvciBtYXJrZXItZW5kIG1hcmtlci1taWQgbWFya2VyLXN0YXJ0IG92ZXJsaW5lLXBvc2l0aW9uIG92ZXJsaW5lLXRoaWNrbmVzcyBwYWludC1vcmRlciBwYW5vc2UtMSBwb2ludGVyLWV2ZW50cyByZW5kZXJpbmctaW50ZW50IHNoYXBlLXJlbmRlcmluZyBzdG9wLWNvbG9yIHN0b3Atb3BhY2l0eSBzdHJpa2V0aHJvdWdoLXBvc2l0aW9uIHN0cmlrZXRocm91Z2gtdGhpY2tuZXNzIHN0cm9rZS1kYXNoYXJyYXkgc3Ryb2tlLWRhc2hvZmZzZXQgc3Ryb2tlLWxpbmVjYXAgc3Ryb2tlLWxpbmVqb2luIHN0cm9rZS1taXRlcmxpbWl0IHN0cm9rZS1vcGFjaXR5IHN0cm9rZS13aWR0aCB0ZXh0LWFuY2hvciB0ZXh0LWRlY29yYXRpb24gdGV4dC1yZW5kZXJpbmcgdW5kZXJsaW5lLXBvc2l0aW9uIHVuZGVybGluZS10aGlja25lc3MgdW5pY29kZS1iaWRpIHVuaWNvZGUtcmFuZ2UgdW5pdHMtcGVyLWVtIHYtYWxwaGFiZXRpYyB2LWhhbmdpbmcgdi1pZGVvZ3JhcGhpYyB2LW1hdGhlbWF0aWNhbCB2ZWN0b3ItZWZmZWN0IHZlcnQtYWR2LXkgdmVydC1vcmlnaW4teCB2ZXJ0LW9yaWdpbi15IHdvcmQtc3BhY2luZyB3cml0aW5nLW1vZGUgeG1sbnM6eGxpbmsgeC1oZWlnaHRcIi5zcGxpdChcIiBcIikuZm9yRWFjaChmdW5jdGlvbihhKXt2YXIgYj1hLnJlcGxhY2UoVWEsXG5WYSk7Q1tiXT1uZXcgdihiLDEsITEsYSxudWxsLCExKX0pO1wieGxpbms6YWN0dWF0ZSB4bGluazphcmNyb2xlIHhsaW5rOnJvbGUgeGxpbms6c2hvdyB4bGluazp0aXRsZSB4bGluazp0eXBlXCIuc3BsaXQoXCIgXCIpLmZvckVhY2goZnVuY3Rpb24oYSl7dmFyIGI9YS5yZXBsYWNlKFVhLFZhKTtDW2JdPW5ldyB2KGIsMSwhMSxhLFwiaHR0cDovL3d3dy53My5vcmcvMTk5OS94bGlua1wiLCExKX0pO1tcInhtbDpiYXNlXCIsXCJ4bWw6bGFuZ1wiLFwieG1sOnNwYWNlXCJdLmZvckVhY2goZnVuY3Rpb24oYSl7dmFyIGI9YS5yZXBsYWNlKFVhLFZhKTtDW2JdPW5ldyB2KGIsMSwhMSxhLFwiaHR0cDovL3d3dy53My5vcmcvWE1MLzE5OTgvbmFtZXNwYWNlXCIsITEpfSk7W1widGFiSW5kZXhcIixcImNyb3NzT3JpZ2luXCJdLmZvckVhY2goZnVuY3Rpb24oYSl7Q1thXT1uZXcgdihhLDEsITEsYS50b0xvd2VyQ2FzZSgpLG51bGwsITEpfSk7XG5DLnhsaW5rSHJlZj1uZXcgdihcInhsaW5rSHJlZlwiLDEsITEsXCJ4bGluazpocmVmXCIsXCJodHRwOi8vd3d3LnczLm9yZy8xOTk5L3hsaW5rXCIsITApO1tcInNyY1wiLFwiaHJlZlwiLFwiYWN0aW9uXCIsXCJmb3JtQWN0aW9uXCJdLmZvckVhY2goZnVuY3Rpb24oYSl7Q1thXT1uZXcgdihhLDEsITEsYS50b0xvd2VyQ2FzZSgpLG51bGwsITApfSk7dmFyIFdhPWFhLl9fU0VDUkVUX0lOVEVSTkFMU19ET19OT1RfVVNFX09SX1lPVV9XSUxMX0JFX0ZJUkVEO1dhLmhhc093blByb3BlcnR5KFwiUmVhY3RDdXJyZW50RGlzcGF0Y2hlclwiKXx8KFdhLlJlYWN0Q3VycmVudERpc3BhdGNoZXI9e2N1cnJlbnQ6bnVsbH0pO1dhLmhhc093blByb3BlcnR5KFwiUmVhY3RDdXJyZW50QmF0Y2hDb25maWdcIil8fChXYS5SZWFjdEN1cnJlbnRCYXRjaENvbmZpZz17c3VzcGVuc2U6bnVsbH0pO1xuZnVuY3Rpb24gWGEoYSxiLGMsZCl7dmFyIGU9Qy5oYXNPd25Qcm9wZXJ0eShiKT9DW2JdOm51bGw7dmFyIGY9bnVsbCE9PWU/MD09PWUudHlwZTpkPyExOiEoMjxiLmxlbmd0aCl8fFwib1wiIT09YlswXSYmXCJPXCIhPT1iWzBdfHxcIm5cIiE9PWJbMV0mJlwiTlwiIT09YlsxXT8hMTohMDtmfHwoVGEoYixjLGUsZCkmJihjPW51bGwpLGR8fG51bGw9PT1lP1JhKGIpJiYobnVsbD09PWM/YS5yZW1vdmVBdHRyaWJ1dGUoYik6YS5zZXRBdHRyaWJ1dGUoYixcIlwiK2MpKTplLm11c3RVc2VQcm9wZXJ0eT9hW2UucHJvcGVydHlOYW1lXT1udWxsPT09Yz8zPT09ZS50eXBlPyExOlwiXCI6YzooYj1lLmF0dHJpYnV0ZU5hbWUsZD1lLmF0dHJpYnV0ZU5hbWVzcGFjZSxudWxsPT09Yz9hLnJlbW92ZUF0dHJpYnV0ZShiKTooZT1lLnR5cGUsYz0zPT09ZXx8ND09PWUmJiEwPT09Yz9cIlwiOlwiXCIrYyxkP2Euc2V0QXR0cmlidXRlTlMoZCxiLGMpOmEuc2V0QXR0cmlidXRlKGIsYykpKSl9XG52YXIgWWE9L14oLiopW1xcXFxcXC9dLyxFPVwiZnVuY3Rpb25cIj09PXR5cGVvZiBTeW1ib2wmJlN5bWJvbC5mb3IsWmE9RT9TeW1ib2wuZm9yKFwicmVhY3QuZWxlbWVudFwiKTo2MDEwMywkYT1FP1N5bWJvbC5mb3IoXCJyZWFjdC5wb3J0YWxcIik6NjAxMDYsYWI9RT9TeW1ib2wuZm9yKFwicmVhY3QuZnJhZ21lbnRcIik6NjAxMDcsYmI9RT9TeW1ib2wuZm9yKFwicmVhY3Quc3RyaWN0X21vZGVcIik6NjAxMDgsY2I9RT9TeW1ib2wuZm9yKFwicmVhY3QucHJvZmlsZXJcIik6NjAxMTQsZGI9RT9TeW1ib2wuZm9yKFwicmVhY3QucHJvdmlkZXJcIik6NjAxMDksZWI9RT9TeW1ib2wuZm9yKFwicmVhY3QuY29udGV4dFwiKTo2MDExMCxmYj1FP1N5bWJvbC5mb3IoXCJyZWFjdC5jb25jdXJyZW50X21vZGVcIik6NjAxMTEsZ2I9RT9TeW1ib2wuZm9yKFwicmVhY3QuZm9yd2FyZF9yZWZcIik6NjAxMTIsaGI9RT9TeW1ib2wuZm9yKFwicmVhY3Quc3VzcGVuc2VcIik6NjAxMTMsaWI9RT9TeW1ib2wuZm9yKFwicmVhY3Quc3VzcGVuc2VfbGlzdFwiKTpcbjYwMTIwLGpiPUU/U3ltYm9sLmZvcihcInJlYWN0Lm1lbW9cIik6NjAxMTUsa2I9RT9TeW1ib2wuZm9yKFwicmVhY3QubGF6eVwiKTo2MDExNixsYj1FP1N5bWJvbC5mb3IoXCJyZWFjdC5ibG9ja1wiKTo2MDEyMSxtYj1cImZ1bmN0aW9uXCI9PT10eXBlb2YgU3ltYm9sJiZTeW1ib2wuaXRlcmF0b3I7ZnVuY3Rpb24gbmIoYSl7aWYobnVsbD09PWF8fFwib2JqZWN0XCIhPT10eXBlb2YgYSlyZXR1cm4gbnVsbDthPW1iJiZhW21iXXx8YVtcIkBAaXRlcmF0b3JcIl07cmV0dXJuXCJmdW5jdGlvblwiPT09dHlwZW9mIGE/YTpudWxsfWZ1bmN0aW9uIG9iKGEpe2lmKC0xPT09YS5fc3RhdHVzKXthLl9zdGF0dXM9MDt2YXIgYj1hLl9jdG9yO2I9YigpO2EuX3Jlc3VsdD1iO2IudGhlbihmdW5jdGlvbihiKXswPT09YS5fc3RhdHVzJiYoYj1iLmRlZmF1bHQsYS5fc3RhdHVzPTEsYS5fcmVzdWx0PWIpfSxmdW5jdGlvbihiKXswPT09YS5fc3RhdHVzJiYoYS5fc3RhdHVzPTIsYS5fcmVzdWx0PWIpfSl9fVxuZnVuY3Rpb24gcGIoYSl7aWYobnVsbD09YSlyZXR1cm4gbnVsbDtpZihcImZ1bmN0aW9uXCI9PT10eXBlb2YgYSlyZXR1cm4gYS5kaXNwbGF5TmFtZXx8YS5uYW1lfHxudWxsO2lmKFwic3RyaW5nXCI9PT10eXBlb2YgYSlyZXR1cm4gYTtzd2l0Y2goYSl7Y2FzZSBhYjpyZXR1cm5cIkZyYWdtZW50XCI7Y2FzZSAkYTpyZXR1cm5cIlBvcnRhbFwiO2Nhc2UgY2I6cmV0dXJuXCJQcm9maWxlclwiO2Nhc2UgYmI6cmV0dXJuXCJTdHJpY3RNb2RlXCI7Y2FzZSBoYjpyZXR1cm5cIlN1c3BlbnNlXCI7Y2FzZSBpYjpyZXR1cm5cIlN1c3BlbnNlTGlzdFwifWlmKFwib2JqZWN0XCI9PT10eXBlb2YgYSlzd2l0Y2goYS4kJHR5cGVvZil7Y2FzZSBlYjpyZXR1cm5cIkNvbnRleHQuQ29uc3VtZXJcIjtjYXNlIGRiOnJldHVyblwiQ29udGV4dC5Qcm92aWRlclwiO2Nhc2UgZ2I6dmFyIGI9YS5yZW5kZXI7Yj1iLmRpc3BsYXlOYW1lfHxiLm5hbWV8fFwiXCI7cmV0dXJuIGEuZGlzcGxheU5hbWV8fChcIlwiIT09Yj9cIkZvcndhcmRSZWYoXCIrYitcIilcIjpcblwiRm9yd2FyZFJlZlwiKTtjYXNlIGpiOnJldHVybiBwYihhLnR5cGUpO2Nhc2UgbGI6cmV0dXJuIHBiKGEucmVuZGVyKTtjYXNlIGtiOmlmKGE9MT09PWEuX3N0YXR1cz9hLl9yZXN1bHQ6bnVsbClyZXR1cm4gcGIoYSl9cmV0dXJuIG51bGx9ZnVuY3Rpb24gcWIoYSl7dmFyIGI9XCJcIjtkb3thOnN3aXRjaChhLnRhZyl7Y2FzZSAzOmNhc2UgNDpjYXNlIDY6Y2FzZSA3OmNhc2UgMTA6Y2FzZSA5OnZhciBjPVwiXCI7YnJlYWsgYTtkZWZhdWx0OnZhciBkPWEuX2RlYnVnT3duZXIsZT1hLl9kZWJ1Z1NvdXJjZSxmPXBiKGEudHlwZSk7Yz1udWxsO2QmJihjPXBiKGQudHlwZSkpO2Q9ZjtmPVwiXCI7ZT9mPVwiIChhdCBcIitlLmZpbGVOYW1lLnJlcGxhY2UoWWEsXCJcIikrXCI6XCIrZS5saW5lTnVtYmVyK1wiKVwiOmMmJihmPVwiIChjcmVhdGVkIGJ5IFwiK2MrXCIpXCIpO2M9XCJcXG4gICAgaW4gXCIrKGR8fFwiVW5rbm93blwiKStmfWIrPWM7YT1hLnJldHVybn13aGlsZShhKTtyZXR1cm4gYn1cbmZ1bmN0aW9uIHJiKGEpe3N3aXRjaCh0eXBlb2YgYSl7Y2FzZSBcImJvb2xlYW5cIjpjYXNlIFwibnVtYmVyXCI6Y2FzZSBcIm9iamVjdFwiOmNhc2UgXCJzdHJpbmdcIjpjYXNlIFwidW5kZWZpbmVkXCI6cmV0dXJuIGE7ZGVmYXVsdDpyZXR1cm5cIlwifX1mdW5jdGlvbiBzYihhKXt2YXIgYj1hLnR5cGU7cmV0dXJuKGE9YS5ub2RlTmFtZSkmJlwiaW5wdXRcIj09PWEudG9Mb3dlckNhc2UoKSYmKFwiY2hlY2tib3hcIj09PWJ8fFwicmFkaW9cIj09PWIpfVxuZnVuY3Rpb24gdGIoYSl7dmFyIGI9c2IoYSk/XCJjaGVja2VkXCI6XCJ2YWx1ZVwiLGM9T2JqZWN0LmdldE93blByb3BlcnR5RGVzY3JpcHRvcihhLmNvbnN0cnVjdG9yLnByb3RvdHlwZSxiKSxkPVwiXCIrYVtiXTtpZighYS5oYXNPd25Qcm9wZXJ0eShiKSYmXCJ1bmRlZmluZWRcIiE9PXR5cGVvZiBjJiZcImZ1bmN0aW9uXCI9PT10eXBlb2YgYy5nZXQmJlwiZnVuY3Rpb25cIj09PXR5cGVvZiBjLnNldCl7dmFyIGU9Yy5nZXQsZj1jLnNldDtPYmplY3QuZGVmaW5lUHJvcGVydHkoYSxiLHtjb25maWd1cmFibGU6ITAsZ2V0OmZ1bmN0aW9uKCl7cmV0dXJuIGUuY2FsbCh0aGlzKX0sc2V0OmZ1bmN0aW9uKGEpe2Q9XCJcIithO2YuY2FsbCh0aGlzLGEpfX0pO09iamVjdC5kZWZpbmVQcm9wZXJ0eShhLGIse2VudW1lcmFibGU6Yy5lbnVtZXJhYmxlfSk7cmV0dXJue2dldFZhbHVlOmZ1bmN0aW9uKCl7cmV0dXJuIGR9LHNldFZhbHVlOmZ1bmN0aW9uKGEpe2Q9XCJcIithfSxzdG9wVHJhY2tpbmc6ZnVuY3Rpb24oKXthLl92YWx1ZVRyYWNrZXI9XG5udWxsO2RlbGV0ZSBhW2JdfX19fWZ1bmN0aW9uIHhiKGEpe2EuX3ZhbHVlVHJhY2tlcnx8KGEuX3ZhbHVlVHJhY2tlcj10YihhKSl9ZnVuY3Rpb24geWIoYSl7aWYoIWEpcmV0dXJuITE7dmFyIGI9YS5fdmFsdWVUcmFja2VyO2lmKCFiKXJldHVybiEwO3ZhciBjPWIuZ2V0VmFsdWUoKTt2YXIgZD1cIlwiO2EmJihkPXNiKGEpP2EuY2hlY2tlZD9cInRydWVcIjpcImZhbHNlXCI6YS52YWx1ZSk7YT1kO3JldHVybiBhIT09Yz8oYi5zZXRWYWx1ZShhKSwhMCk6ITF9ZnVuY3Rpb24gemIoYSxiKXt2YXIgYz1iLmNoZWNrZWQ7cmV0dXJuIG4oe30sYix7ZGVmYXVsdENoZWNrZWQ6dm9pZCAwLGRlZmF1bHRWYWx1ZTp2b2lkIDAsdmFsdWU6dm9pZCAwLGNoZWNrZWQ6bnVsbCE9Yz9jOmEuX3dyYXBwZXJTdGF0ZS5pbml0aWFsQ2hlY2tlZH0pfVxuZnVuY3Rpb24gQWIoYSxiKXt2YXIgYz1udWxsPT1iLmRlZmF1bHRWYWx1ZT9cIlwiOmIuZGVmYXVsdFZhbHVlLGQ9bnVsbCE9Yi5jaGVja2VkP2IuY2hlY2tlZDpiLmRlZmF1bHRDaGVja2VkO2M9cmIobnVsbCE9Yi52YWx1ZT9iLnZhbHVlOmMpO2EuX3dyYXBwZXJTdGF0ZT17aW5pdGlhbENoZWNrZWQ6ZCxpbml0aWFsVmFsdWU6Yyxjb250cm9sbGVkOlwiY2hlY2tib3hcIj09PWIudHlwZXx8XCJyYWRpb1wiPT09Yi50eXBlP251bGwhPWIuY2hlY2tlZDpudWxsIT1iLnZhbHVlfX1mdW5jdGlvbiBCYihhLGIpe2I9Yi5jaGVja2VkO251bGwhPWImJlhhKGEsXCJjaGVja2VkXCIsYiwhMSl9XG5mdW5jdGlvbiBDYihhLGIpe0JiKGEsYik7dmFyIGM9cmIoYi52YWx1ZSksZD1iLnR5cGU7aWYobnVsbCE9YylpZihcIm51bWJlclwiPT09ZCl7aWYoMD09PWMmJlwiXCI9PT1hLnZhbHVlfHxhLnZhbHVlIT1jKWEudmFsdWU9XCJcIitjfWVsc2UgYS52YWx1ZSE9PVwiXCIrYyYmKGEudmFsdWU9XCJcIitjKTtlbHNlIGlmKFwic3VibWl0XCI9PT1kfHxcInJlc2V0XCI9PT1kKXthLnJlbW92ZUF0dHJpYnV0ZShcInZhbHVlXCIpO3JldHVybn1iLmhhc093blByb3BlcnR5KFwidmFsdWVcIik/RGIoYSxiLnR5cGUsYyk6Yi5oYXNPd25Qcm9wZXJ0eShcImRlZmF1bHRWYWx1ZVwiKSYmRGIoYSxiLnR5cGUscmIoYi5kZWZhdWx0VmFsdWUpKTtudWxsPT1iLmNoZWNrZWQmJm51bGwhPWIuZGVmYXVsdENoZWNrZWQmJihhLmRlZmF1bHRDaGVja2VkPSEhYi5kZWZhdWx0Q2hlY2tlZCl9XG5mdW5jdGlvbiBFYihhLGIsYyl7aWYoYi5oYXNPd25Qcm9wZXJ0eShcInZhbHVlXCIpfHxiLmhhc093blByb3BlcnR5KFwiZGVmYXVsdFZhbHVlXCIpKXt2YXIgZD1iLnR5cGU7aWYoIShcInN1Ym1pdFwiIT09ZCYmXCJyZXNldFwiIT09ZHx8dm9pZCAwIT09Yi52YWx1ZSYmbnVsbCE9PWIudmFsdWUpKXJldHVybjtiPVwiXCIrYS5fd3JhcHBlclN0YXRlLmluaXRpYWxWYWx1ZTtjfHxiPT09YS52YWx1ZXx8KGEudmFsdWU9Yik7YS5kZWZhdWx0VmFsdWU9Yn1jPWEubmFtZTtcIlwiIT09YyYmKGEubmFtZT1cIlwiKTthLmRlZmF1bHRDaGVja2VkPSEhYS5fd3JhcHBlclN0YXRlLmluaXRpYWxDaGVja2VkO1wiXCIhPT1jJiYoYS5uYW1lPWMpfVxuZnVuY3Rpb24gRGIoYSxiLGMpe2lmKFwibnVtYmVyXCIhPT1ifHxhLm93bmVyRG9jdW1lbnQuYWN0aXZlRWxlbWVudCE9PWEpbnVsbD09Yz9hLmRlZmF1bHRWYWx1ZT1cIlwiK2EuX3dyYXBwZXJTdGF0ZS5pbml0aWFsVmFsdWU6YS5kZWZhdWx0VmFsdWUhPT1cIlwiK2MmJihhLmRlZmF1bHRWYWx1ZT1cIlwiK2MpfWZ1bmN0aW9uIEZiKGEpe3ZhciBiPVwiXCI7YWEuQ2hpbGRyZW4uZm9yRWFjaChhLGZ1bmN0aW9uKGEpe251bGwhPWEmJihiKz1hKX0pO3JldHVybiBifWZ1bmN0aW9uIEdiKGEsYil7YT1uKHtjaGlsZHJlbjp2b2lkIDB9LGIpO2lmKGI9RmIoYi5jaGlsZHJlbikpYS5jaGlsZHJlbj1iO3JldHVybiBhfVxuZnVuY3Rpb24gSGIoYSxiLGMsZCl7YT1hLm9wdGlvbnM7aWYoYil7Yj17fTtmb3IodmFyIGU9MDtlPGMubGVuZ3RoO2UrKyliW1wiJFwiK2NbZV1dPSEwO2ZvcihjPTA7YzxhLmxlbmd0aDtjKyspZT1iLmhhc093blByb3BlcnR5KFwiJFwiK2FbY10udmFsdWUpLGFbY10uc2VsZWN0ZWQhPT1lJiYoYVtjXS5zZWxlY3RlZD1lKSxlJiZkJiYoYVtjXS5kZWZhdWx0U2VsZWN0ZWQ9ITApfWVsc2V7Yz1cIlwiK3JiKGMpO2I9bnVsbDtmb3IoZT0wO2U8YS5sZW5ndGg7ZSsrKXtpZihhW2VdLnZhbHVlPT09Yyl7YVtlXS5zZWxlY3RlZD0hMDtkJiYoYVtlXS5kZWZhdWx0U2VsZWN0ZWQ9ITApO3JldHVybn1udWxsIT09Ynx8YVtlXS5kaXNhYmxlZHx8KGI9YVtlXSl9bnVsbCE9PWImJihiLnNlbGVjdGVkPSEwKX19XG5mdW5jdGlvbiBJYihhLGIpe2lmKG51bGwhPWIuZGFuZ2Vyb3VzbHlTZXRJbm5lckhUTUwpdGhyb3cgRXJyb3IodSg5MSkpO3JldHVybiBuKHt9LGIse3ZhbHVlOnZvaWQgMCxkZWZhdWx0VmFsdWU6dm9pZCAwLGNoaWxkcmVuOlwiXCIrYS5fd3JhcHBlclN0YXRlLmluaXRpYWxWYWx1ZX0pfWZ1bmN0aW9uIEpiKGEsYil7dmFyIGM9Yi52YWx1ZTtpZihudWxsPT1jKXtjPWIuY2hpbGRyZW47Yj1iLmRlZmF1bHRWYWx1ZTtpZihudWxsIT1jKXtpZihudWxsIT1iKXRocm93IEVycm9yKHUoOTIpKTtpZihBcnJheS5pc0FycmF5KGMpKXtpZighKDE+PWMubGVuZ3RoKSl0aHJvdyBFcnJvcih1KDkzKSk7Yz1jWzBdfWI9Y31udWxsPT1iJiYoYj1cIlwiKTtjPWJ9YS5fd3JhcHBlclN0YXRlPXtpbml0aWFsVmFsdWU6cmIoYyl9fVxuZnVuY3Rpb24gS2IoYSxiKXt2YXIgYz1yYihiLnZhbHVlKSxkPXJiKGIuZGVmYXVsdFZhbHVlKTtudWxsIT1jJiYoYz1cIlwiK2MsYyE9PWEudmFsdWUmJihhLnZhbHVlPWMpLG51bGw9PWIuZGVmYXVsdFZhbHVlJiZhLmRlZmF1bHRWYWx1ZSE9PWMmJihhLmRlZmF1bHRWYWx1ZT1jKSk7bnVsbCE9ZCYmKGEuZGVmYXVsdFZhbHVlPVwiXCIrZCl9ZnVuY3Rpb24gTGIoYSl7dmFyIGI9YS50ZXh0Q29udGVudDtiPT09YS5fd3JhcHBlclN0YXRlLmluaXRpYWxWYWx1ZSYmXCJcIiE9PWImJm51bGwhPT1iJiYoYS52YWx1ZT1iKX12YXIgTWI9e2h0bWw6XCJodHRwOi8vd3d3LnczLm9yZy8xOTk5L3hodG1sXCIsbWF0aG1sOlwiaHR0cDovL3d3dy53My5vcmcvMTk5OC9NYXRoL01hdGhNTFwiLHN2ZzpcImh0dHA6Ly93d3cudzMub3JnLzIwMDAvc3ZnXCJ9O1xuZnVuY3Rpb24gTmIoYSl7c3dpdGNoKGEpe2Nhc2UgXCJzdmdcIjpyZXR1cm5cImh0dHA6Ly93d3cudzMub3JnLzIwMDAvc3ZnXCI7Y2FzZSBcIm1hdGhcIjpyZXR1cm5cImh0dHA6Ly93d3cudzMub3JnLzE5OTgvTWF0aC9NYXRoTUxcIjtkZWZhdWx0OnJldHVyblwiaHR0cDovL3d3dy53My5vcmcvMTk5OS94aHRtbFwifX1mdW5jdGlvbiBPYihhLGIpe3JldHVybiBudWxsPT1hfHxcImh0dHA6Ly93d3cudzMub3JnLzE5OTkveGh0bWxcIj09PWE/TmIoYik6XCJodHRwOi8vd3d3LnczLm9yZy8yMDAwL3N2Z1wiPT09YSYmXCJmb3JlaWduT2JqZWN0XCI9PT1iP1wiaHR0cDovL3d3dy53My5vcmcvMTk5OS94aHRtbFwiOmF9XG52YXIgUGIsUWI9ZnVuY3Rpb24oYSl7cmV0dXJuXCJ1bmRlZmluZWRcIiE9PXR5cGVvZiBNU0FwcCYmTVNBcHAuZXhlY1Vuc2FmZUxvY2FsRnVuY3Rpb24/ZnVuY3Rpb24oYixjLGQsZSl7TVNBcHAuZXhlY1Vuc2FmZUxvY2FsRnVuY3Rpb24oZnVuY3Rpb24oKXtyZXR1cm4gYShiLGMsZCxlKX0pfTphfShmdW5jdGlvbihhLGIpe2lmKGEubmFtZXNwYWNlVVJJIT09TWIuc3ZnfHxcImlubmVySFRNTFwiaW4gYSlhLmlubmVySFRNTD1iO2Vsc2V7UGI9UGJ8fGRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoXCJkaXZcIik7UGIuaW5uZXJIVE1MPVwiPHN2Zz5cIitiLnZhbHVlT2YoKS50b1N0cmluZygpK1wiPC9zdmc+XCI7Zm9yKGI9UGIuZmlyc3RDaGlsZDthLmZpcnN0Q2hpbGQ7KWEucmVtb3ZlQ2hpbGQoYS5maXJzdENoaWxkKTtmb3IoO2IuZmlyc3RDaGlsZDspYS5hcHBlbmRDaGlsZChiLmZpcnN0Q2hpbGQpfX0pO1xuZnVuY3Rpb24gUmIoYSxiKXtpZihiKXt2YXIgYz1hLmZpcnN0Q2hpbGQ7aWYoYyYmYz09PWEubGFzdENoaWxkJiYzPT09Yy5ub2RlVHlwZSl7Yy5ub2RlVmFsdWU9YjtyZXR1cm59fWEudGV4dENvbnRlbnQ9Yn1mdW5jdGlvbiBTYihhLGIpe3ZhciBjPXt9O2NbYS50b0xvd2VyQ2FzZSgpXT1iLnRvTG93ZXJDYXNlKCk7Y1tcIldlYmtpdFwiK2FdPVwid2Via2l0XCIrYjtjW1wiTW96XCIrYV09XCJtb3pcIitiO3JldHVybiBjfXZhciBUYj17YW5pbWF0aW9uZW5kOlNiKFwiQW5pbWF0aW9uXCIsXCJBbmltYXRpb25FbmRcIiksYW5pbWF0aW9uaXRlcmF0aW9uOlNiKFwiQW5pbWF0aW9uXCIsXCJBbmltYXRpb25JdGVyYXRpb25cIiksYW5pbWF0aW9uc3RhcnQ6U2IoXCJBbmltYXRpb25cIixcIkFuaW1hdGlvblN0YXJ0XCIpLHRyYW5zaXRpb25lbmQ6U2IoXCJUcmFuc2l0aW9uXCIsXCJUcmFuc2l0aW9uRW5kXCIpfSxVYj17fSxWYj17fTtcbnlhJiYoVmI9ZG9jdW1lbnQuY3JlYXRlRWxlbWVudChcImRpdlwiKS5zdHlsZSxcIkFuaW1hdGlvbkV2ZW50XCJpbiB3aW5kb3d8fChkZWxldGUgVGIuYW5pbWF0aW9uZW5kLmFuaW1hdGlvbixkZWxldGUgVGIuYW5pbWF0aW9uaXRlcmF0aW9uLmFuaW1hdGlvbixkZWxldGUgVGIuYW5pbWF0aW9uc3RhcnQuYW5pbWF0aW9uKSxcIlRyYW5zaXRpb25FdmVudFwiaW4gd2luZG93fHxkZWxldGUgVGIudHJhbnNpdGlvbmVuZC50cmFuc2l0aW9uKTtmdW5jdGlvbiBXYihhKXtpZihVYlthXSlyZXR1cm4gVWJbYV07aWYoIVRiW2FdKXJldHVybiBhO3ZhciBiPVRiW2FdLGM7Zm9yKGMgaW4gYilpZihiLmhhc093blByb3BlcnR5KGMpJiZjIGluIFZiKXJldHVybiBVYlthXT1iW2NdO3JldHVybiBhfVxudmFyIFhiPVdiKFwiYW5pbWF0aW9uZW5kXCIpLFliPVdiKFwiYW5pbWF0aW9uaXRlcmF0aW9uXCIpLFpiPVdiKFwiYW5pbWF0aW9uc3RhcnRcIiksJGI9V2IoXCJ0cmFuc2l0aW9uZW5kXCIpLGFjPVwiYWJvcnQgY2FucGxheSBjYW5wbGF5dGhyb3VnaCBkdXJhdGlvbmNoYW5nZSBlbXB0aWVkIGVuY3J5cHRlZCBlbmRlZCBlcnJvciBsb2FkZWRkYXRhIGxvYWRlZG1ldGFkYXRhIGxvYWRzdGFydCBwYXVzZSBwbGF5IHBsYXlpbmcgcHJvZ3Jlc3MgcmF0ZWNoYW5nZSBzZWVrZWQgc2Vla2luZyBzdGFsbGVkIHN1c3BlbmQgdGltZXVwZGF0ZSB2b2x1bWVjaGFuZ2Ugd2FpdGluZ1wiLnNwbGl0KFwiIFwiKSxiYz1uZXcgKFwiZnVuY3Rpb25cIj09PXR5cGVvZiBXZWFrTWFwP1dlYWtNYXA6TWFwKTtmdW5jdGlvbiBjYyhhKXt2YXIgYj1iYy5nZXQoYSk7dm9pZCAwPT09YiYmKGI9bmV3IE1hcCxiYy5zZXQoYSxiKSk7cmV0dXJuIGJ9XG5mdW5jdGlvbiBkYyhhKXt2YXIgYj1hLGM9YTtpZihhLmFsdGVybmF0ZSlmb3IoO2IucmV0dXJuOyliPWIucmV0dXJuO2Vsc2V7YT1iO2RvIGI9YSwwIT09KGIuZWZmZWN0VGFnJjEwMjYpJiYoYz1iLnJldHVybiksYT1iLnJldHVybjt3aGlsZShhKX1yZXR1cm4gMz09PWIudGFnP2M6bnVsbH1mdW5jdGlvbiBlYyhhKXtpZigxMz09PWEudGFnKXt2YXIgYj1hLm1lbW9pemVkU3RhdGU7bnVsbD09PWImJihhPWEuYWx0ZXJuYXRlLG51bGwhPT1hJiYoYj1hLm1lbW9pemVkU3RhdGUpKTtpZihudWxsIT09YilyZXR1cm4gYi5kZWh5ZHJhdGVkfXJldHVybiBudWxsfWZ1bmN0aW9uIGZjKGEpe2lmKGRjKGEpIT09YSl0aHJvdyBFcnJvcih1KDE4OCkpO31cbmZ1bmN0aW9uIGdjKGEpe3ZhciBiPWEuYWx0ZXJuYXRlO2lmKCFiKXtiPWRjKGEpO2lmKG51bGw9PT1iKXRocm93IEVycm9yKHUoMTg4KSk7cmV0dXJuIGIhPT1hP251bGw6YX1mb3IodmFyIGM9YSxkPWI7Oyl7dmFyIGU9Yy5yZXR1cm47aWYobnVsbD09PWUpYnJlYWs7dmFyIGY9ZS5hbHRlcm5hdGU7aWYobnVsbD09PWYpe2Q9ZS5yZXR1cm47aWYobnVsbCE9PWQpe2M9ZDtjb250aW51ZX1icmVha31pZihlLmNoaWxkPT09Zi5jaGlsZCl7Zm9yKGY9ZS5jaGlsZDtmOyl7aWYoZj09PWMpcmV0dXJuIGZjKGUpLGE7aWYoZj09PWQpcmV0dXJuIGZjKGUpLGI7Zj1mLnNpYmxpbmd9dGhyb3cgRXJyb3IodSgxODgpKTt9aWYoYy5yZXR1cm4hPT1kLnJldHVybiljPWUsZD1mO2Vsc2V7Zm9yKHZhciBnPSExLGg9ZS5jaGlsZDtoOyl7aWYoaD09PWMpe2c9ITA7Yz1lO2Q9ZjticmVha31pZihoPT09ZCl7Zz0hMDtkPWU7Yz1mO2JyZWFrfWg9aC5zaWJsaW5nfWlmKCFnKXtmb3IoaD1mLmNoaWxkO2g7KXtpZihoPT09XG5jKXtnPSEwO2M9ZjtkPWU7YnJlYWt9aWYoaD09PWQpe2c9ITA7ZD1mO2M9ZTticmVha31oPWguc2libGluZ31pZighZyl0aHJvdyBFcnJvcih1KDE4OSkpO319aWYoYy5hbHRlcm5hdGUhPT1kKXRocm93IEVycm9yKHUoMTkwKSk7fWlmKDMhPT1jLnRhZyl0aHJvdyBFcnJvcih1KDE4OCkpO3JldHVybiBjLnN0YXRlTm9kZS5jdXJyZW50PT09Yz9hOmJ9ZnVuY3Rpb24gaGMoYSl7YT1nYyhhKTtpZighYSlyZXR1cm4gbnVsbDtmb3IodmFyIGI9YTs7KXtpZig1PT09Yi50YWd8fDY9PT1iLnRhZylyZXR1cm4gYjtpZihiLmNoaWxkKWIuY2hpbGQucmV0dXJuPWIsYj1iLmNoaWxkO2Vsc2V7aWYoYj09PWEpYnJlYWs7Zm9yKDshYi5zaWJsaW5nOyl7aWYoIWIucmV0dXJufHxiLnJldHVybj09PWEpcmV0dXJuIG51bGw7Yj1iLnJldHVybn1iLnNpYmxpbmcucmV0dXJuPWIucmV0dXJuO2I9Yi5zaWJsaW5nfX1yZXR1cm4gbnVsbH1cbmZ1bmN0aW9uIGljKGEsYil7aWYobnVsbD09Yil0aHJvdyBFcnJvcih1KDMwKSk7aWYobnVsbD09YSlyZXR1cm4gYjtpZihBcnJheS5pc0FycmF5KGEpKXtpZihBcnJheS5pc0FycmF5KGIpKXJldHVybiBhLnB1c2guYXBwbHkoYSxiKSxhO2EucHVzaChiKTtyZXR1cm4gYX1yZXR1cm4gQXJyYXkuaXNBcnJheShiKT9bYV0uY29uY2F0KGIpOlthLGJdfWZ1bmN0aW9uIGpjKGEsYixjKXtBcnJheS5pc0FycmF5KGEpP2EuZm9yRWFjaChiLGMpOmEmJmIuY2FsbChjLGEpfXZhciBrYz1udWxsO1xuZnVuY3Rpb24gbGMoYSl7aWYoYSl7dmFyIGI9YS5fZGlzcGF0Y2hMaXN0ZW5lcnMsYz1hLl9kaXNwYXRjaEluc3RhbmNlcztpZihBcnJheS5pc0FycmF5KGIpKWZvcih2YXIgZD0wO2Q8Yi5sZW5ndGgmJiFhLmlzUHJvcGFnYXRpb25TdG9wcGVkKCk7ZCsrKW9hKGEsYltkXSxjW2RdKTtlbHNlIGImJm9hKGEsYixjKTthLl9kaXNwYXRjaExpc3RlbmVycz1udWxsO2EuX2Rpc3BhdGNoSW5zdGFuY2VzPW51bGw7YS5pc1BlcnNpc3RlbnQoKXx8YS5jb25zdHJ1Y3Rvci5yZWxlYXNlKGEpfX1mdW5jdGlvbiBtYyhhKXtudWxsIT09YSYmKGtjPWljKGtjLGEpKTthPWtjO2tjPW51bGw7aWYoYSl7amMoYSxsYyk7aWYoa2MpdGhyb3cgRXJyb3IodSg5NSkpO2lmKGZhKXRocm93IGE9aGEsZmE9ITEsaGE9bnVsbCxhO319XG5mdW5jdGlvbiBuYyhhKXthPWEudGFyZ2V0fHxhLnNyY0VsZW1lbnR8fHdpbmRvdzthLmNvcnJlc3BvbmRpbmdVc2VFbGVtZW50JiYoYT1hLmNvcnJlc3BvbmRpbmdVc2VFbGVtZW50KTtyZXR1cm4gMz09PWEubm9kZVR5cGU/YS5wYXJlbnROb2RlOmF9ZnVuY3Rpb24gb2MoYSl7aWYoIXlhKXJldHVybiExO2E9XCJvblwiK2E7dmFyIGI9YSBpbiBkb2N1bWVudDtifHwoYj1kb2N1bWVudC5jcmVhdGVFbGVtZW50KFwiZGl2XCIpLGIuc2V0QXR0cmlidXRlKGEsXCJyZXR1cm47XCIpLGI9XCJmdW5jdGlvblwiPT09dHlwZW9mIGJbYV0pO3JldHVybiBifXZhciBwYz1bXTtmdW5jdGlvbiBxYyhhKXthLnRvcExldmVsVHlwZT1udWxsO2EubmF0aXZlRXZlbnQ9bnVsbDthLnRhcmdldEluc3Q9bnVsbDthLmFuY2VzdG9ycy5sZW5ndGg9MDsxMD5wYy5sZW5ndGgmJnBjLnB1c2goYSl9XG5mdW5jdGlvbiByYyhhLGIsYyxkKXtpZihwYy5sZW5ndGgpe3ZhciBlPXBjLnBvcCgpO2UudG9wTGV2ZWxUeXBlPWE7ZS5ldmVudFN5c3RlbUZsYWdzPWQ7ZS5uYXRpdmVFdmVudD1iO2UudGFyZ2V0SW5zdD1jO3JldHVybiBlfXJldHVybnt0b3BMZXZlbFR5cGU6YSxldmVudFN5c3RlbUZsYWdzOmQsbmF0aXZlRXZlbnQ6Yix0YXJnZXRJbnN0OmMsYW5jZXN0b3JzOltdfX1cbmZ1bmN0aW9uIHNjKGEpe3ZhciBiPWEudGFyZ2V0SW5zdCxjPWI7ZG97aWYoIWMpe2EuYW5jZXN0b3JzLnB1c2goYyk7YnJlYWt9dmFyIGQ9YztpZigzPT09ZC50YWcpZD1kLnN0YXRlTm9kZS5jb250YWluZXJJbmZvO2Vsc2V7Zm9yKDtkLnJldHVybjspZD1kLnJldHVybjtkPTMhPT1kLnRhZz9udWxsOmQuc3RhdGVOb2RlLmNvbnRhaW5lckluZm99aWYoIWQpYnJlYWs7Yj1jLnRhZzs1IT09YiYmNiE9PWJ8fGEuYW5jZXN0b3JzLnB1c2goYyk7Yz10YyhkKX13aGlsZShjKTtmb3IoYz0wO2M8YS5hbmNlc3RvcnMubGVuZ3RoO2MrKyl7Yj1hLmFuY2VzdG9yc1tjXTt2YXIgZT1uYyhhLm5hdGl2ZUV2ZW50KTtkPWEudG9wTGV2ZWxUeXBlO3ZhciBmPWEubmF0aXZlRXZlbnQsZz1hLmV2ZW50U3lzdGVtRmxhZ3M7MD09PWMmJihnfD02NCk7Zm9yKHZhciBoPW51bGwsaz0wO2s8c2EubGVuZ3RoO2srKyl7dmFyIGw9c2Fba107bCYmKGw9bC5leHRyYWN0RXZlbnRzKGQsYixmLGUsZykpJiYoaD1cbmljKGgsbCkpfW1jKGgpfX1mdW5jdGlvbiB1YyhhLGIsYyl7aWYoIWMuaGFzKGEpKXtzd2l0Y2goYSl7Y2FzZSBcInNjcm9sbFwiOnZjKGIsXCJzY3JvbGxcIiwhMCk7YnJlYWs7Y2FzZSBcImZvY3VzXCI6Y2FzZSBcImJsdXJcIjp2YyhiLFwiZm9jdXNcIiwhMCk7dmMoYixcImJsdXJcIiwhMCk7Yy5zZXQoXCJibHVyXCIsbnVsbCk7Yy5zZXQoXCJmb2N1c1wiLG51bGwpO2JyZWFrO2Nhc2UgXCJjYW5jZWxcIjpjYXNlIFwiY2xvc2VcIjpvYyhhKSYmdmMoYixhLCEwKTticmVhaztjYXNlIFwiaW52YWxpZFwiOmNhc2UgXCJzdWJtaXRcIjpjYXNlIFwicmVzZXRcIjpicmVhaztkZWZhdWx0Oi0xPT09YWMuaW5kZXhPZihhKSYmRihhLGIpfWMuc2V0KGEsbnVsbCl9fVxudmFyIHdjLHhjLHljLHpjPSExLEFjPVtdLEJjPW51bGwsQ2M9bnVsbCxEYz1udWxsLEVjPW5ldyBNYXAsRmM9bmV3IE1hcCxHYz1bXSxIYz1cIm1vdXNlZG93biBtb3VzZXVwIHRvdWNoY2FuY2VsIHRvdWNoZW5kIHRvdWNoc3RhcnQgYXV4Y2xpY2sgZGJsY2xpY2sgcG9pbnRlcmNhbmNlbCBwb2ludGVyZG93biBwb2ludGVydXAgZHJhZ2VuZCBkcmFnc3RhcnQgZHJvcCBjb21wb3NpdGlvbmVuZCBjb21wb3NpdGlvbnN0YXJ0IGtleWRvd24ga2V5cHJlc3Mga2V5dXAgaW5wdXQgdGV4dElucHV0IGNsb3NlIGNhbmNlbCBjb3B5IGN1dCBwYXN0ZSBjbGljayBjaGFuZ2UgY29udGV4dG1lbnUgcmVzZXQgc3VibWl0XCIuc3BsaXQoXCIgXCIpLEljPVwiZm9jdXMgYmx1ciBkcmFnZW50ZXIgZHJhZ2xlYXZlIG1vdXNlb3ZlciBtb3VzZW91dCBwb2ludGVyb3ZlciBwb2ludGVyb3V0IGdvdHBvaW50ZXJjYXB0dXJlIGxvc3Rwb2ludGVyY2FwdHVyZVwiLnNwbGl0KFwiIFwiKTtcbmZ1bmN0aW9uIEpjKGEsYil7dmFyIGM9Y2MoYik7SGMuZm9yRWFjaChmdW5jdGlvbihhKXt1YyhhLGIsYyl9KTtJYy5mb3JFYWNoKGZ1bmN0aW9uKGEpe3VjKGEsYixjKX0pfWZ1bmN0aW9uIEtjKGEsYixjLGQsZSl7cmV0dXJue2Jsb2NrZWRPbjphLHRvcExldmVsVHlwZTpiLGV2ZW50U3lzdGVtRmxhZ3M6Y3wzMixuYXRpdmVFdmVudDplLGNvbnRhaW5lcjpkfX1cbmZ1bmN0aW9uIExjKGEsYil7c3dpdGNoKGEpe2Nhc2UgXCJmb2N1c1wiOmNhc2UgXCJibHVyXCI6QmM9bnVsbDticmVhaztjYXNlIFwiZHJhZ2VudGVyXCI6Y2FzZSBcImRyYWdsZWF2ZVwiOkNjPW51bGw7YnJlYWs7Y2FzZSBcIm1vdXNlb3ZlclwiOmNhc2UgXCJtb3VzZW91dFwiOkRjPW51bGw7YnJlYWs7Y2FzZSBcInBvaW50ZXJvdmVyXCI6Y2FzZSBcInBvaW50ZXJvdXRcIjpFYy5kZWxldGUoYi5wb2ludGVySWQpO2JyZWFrO2Nhc2UgXCJnb3Rwb2ludGVyY2FwdHVyZVwiOmNhc2UgXCJsb3N0cG9pbnRlcmNhcHR1cmVcIjpGYy5kZWxldGUoYi5wb2ludGVySWQpfX1mdW5jdGlvbiBNYyhhLGIsYyxkLGUsZil7aWYobnVsbD09PWF8fGEubmF0aXZlRXZlbnQhPT1mKXJldHVybiBhPUtjKGIsYyxkLGUsZiksbnVsbCE9PWImJihiPU5jKGIpLG51bGwhPT1iJiZ4YyhiKSksYTthLmV2ZW50U3lzdGVtRmxhZ3N8PWQ7cmV0dXJuIGF9XG5mdW5jdGlvbiBPYyhhLGIsYyxkLGUpe3N3aXRjaChiKXtjYXNlIFwiZm9jdXNcIjpyZXR1cm4gQmM9TWMoQmMsYSxiLGMsZCxlKSwhMDtjYXNlIFwiZHJhZ2VudGVyXCI6cmV0dXJuIENjPU1jKENjLGEsYixjLGQsZSksITA7Y2FzZSBcIm1vdXNlb3ZlclwiOnJldHVybiBEYz1NYyhEYyxhLGIsYyxkLGUpLCEwO2Nhc2UgXCJwb2ludGVyb3ZlclwiOnZhciBmPWUucG9pbnRlcklkO0VjLnNldChmLE1jKEVjLmdldChmKXx8bnVsbCxhLGIsYyxkLGUpKTtyZXR1cm4hMDtjYXNlIFwiZ290cG9pbnRlcmNhcHR1cmVcIjpyZXR1cm4gZj1lLnBvaW50ZXJJZCxGYy5zZXQoZixNYyhGYy5nZXQoZil8fG51bGwsYSxiLGMsZCxlKSksITB9cmV0dXJuITF9XG5mdW5jdGlvbiBQYyhhKXt2YXIgYj10YyhhLnRhcmdldCk7aWYobnVsbCE9PWIpe3ZhciBjPWRjKGIpO2lmKG51bGwhPT1jKWlmKGI9Yy50YWcsMTM9PT1iKXtpZihiPWVjKGMpLG51bGwhPT1iKXthLmJsb2NrZWRPbj1iO3IudW5zdGFibGVfcnVuV2l0aFByaW9yaXR5KGEucHJpb3JpdHksZnVuY3Rpb24oKXt5YyhjKX0pO3JldHVybn19ZWxzZSBpZigzPT09YiYmYy5zdGF0ZU5vZGUuaHlkcmF0ZSl7YS5ibG9ja2VkT249Mz09PWMudGFnP2Muc3RhdGVOb2RlLmNvbnRhaW5lckluZm86bnVsbDtyZXR1cm59fWEuYmxvY2tlZE9uPW51bGx9ZnVuY3Rpb24gUWMoYSl7aWYobnVsbCE9PWEuYmxvY2tlZE9uKXJldHVybiExO3ZhciBiPVJjKGEudG9wTGV2ZWxUeXBlLGEuZXZlbnRTeXN0ZW1GbGFncyxhLmNvbnRhaW5lcixhLm5hdGl2ZUV2ZW50KTtpZihudWxsIT09Yil7dmFyIGM9TmMoYik7bnVsbCE9PWMmJnhjKGMpO2EuYmxvY2tlZE9uPWI7cmV0dXJuITF9cmV0dXJuITB9XG5mdW5jdGlvbiBTYyhhLGIsYyl7UWMoYSkmJmMuZGVsZXRlKGIpfWZ1bmN0aW9uIFRjKCl7Zm9yKHpjPSExOzA8QWMubGVuZ3RoOyl7dmFyIGE9QWNbMF07aWYobnVsbCE9PWEuYmxvY2tlZE9uKXthPU5jKGEuYmxvY2tlZE9uKTtudWxsIT09YSYmd2MoYSk7YnJlYWt9dmFyIGI9UmMoYS50b3BMZXZlbFR5cGUsYS5ldmVudFN5c3RlbUZsYWdzLGEuY29udGFpbmVyLGEubmF0aXZlRXZlbnQpO251bGwhPT1iP2EuYmxvY2tlZE9uPWI6QWMuc2hpZnQoKX1udWxsIT09QmMmJlFjKEJjKSYmKEJjPW51bGwpO251bGwhPT1DYyYmUWMoQ2MpJiYoQ2M9bnVsbCk7bnVsbCE9PURjJiZRYyhEYykmJihEYz1udWxsKTtFYy5mb3JFYWNoKFNjKTtGYy5mb3JFYWNoKFNjKX1mdW5jdGlvbiBVYyhhLGIpe2EuYmxvY2tlZE9uPT09YiYmKGEuYmxvY2tlZE9uPW51bGwsemN8fCh6Yz0hMCxyLnVuc3RhYmxlX3NjaGVkdWxlQ2FsbGJhY2soci51bnN0YWJsZV9Ob3JtYWxQcmlvcml0eSxUYykpKX1cbmZ1bmN0aW9uIFZjKGEpe2Z1bmN0aW9uIGIoYil7cmV0dXJuIFVjKGIsYSl9aWYoMDxBYy5sZW5ndGgpe1VjKEFjWzBdLGEpO2Zvcih2YXIgYz0xO2M8QWMubGVuZ3RoO2MrKyl7dmFyIGQ9QWNbY107ZC5ibG9ja2VkT249PT1hJiYoZC5ibG9ja2VkT249bnVsbCl9fW51bGwhPT1CYyYmVWMoQmMsYSk7bnVsbCE9PUNjJiZVYyhDYyxhKTtudWxsIT09RGMmJlVjKERjLGEpO0VjLmZvckVhY2goYik7RmMuZm9yRWFjaChiKTtmb3IoYz0wO2M8R2MubGVuZ3RoO2MrKylkPUdjW2NdLGQuYmxvY2tlZE9uPT09YSYmKGQuYmxvY2tlZE9uPW51bGwpO2Zvcig7MDxHYy5sZW5ndGgmJihjPUdjWzBdLG51bGw9PT1jLmJsb2NrZWRPbik7KVBjKGMpLG51bGw9PT1jLmJsb2NrZWRPbiYmR2Muc2hpZnQoKX1cbnZhciBXYz17fSxZYz1uZXcgTWFwLFpjPW5ldyBNYXAsJGM9W1wiYWJvcnRcIixcImFib3J0XCIsWGIsXCJhbmltYXRpb25FbmRcIixZYixcImFuaW1hdGlvbkl0ZXJhdGlvblwiLFpiLFwiYW5pbWF0aW9uU3RhcnRcIixcImNhbnBsYXlcIixcImNhblBsYXlcIixcImNhbnBsYXl0aHJvdWdoXCIsXCJjYW5QbGF5VGhyb3VnaFwiLFwiZHVyYXRpb25jaGFuZ2VcIixcImR1cmF0aW9uQ2hhbmdlXCIsXCJlbXB0aWVkXCIsXCJlbXB0aWVkXCIsXCJlbmNyeXB0ZWRcIixcImVuY3J5cHRlZFwiLFwiZW5kZWRcIixcImVuZGVkXCIsXCJlcnJvclwiLFwiZXJyb3JcIixcImdvdHBvaW50ZXJjYXB0dXJlXCIsXCJnb3RQb2ludGVyQ2FwdHVyZVwiLFwibG9hZFwiLFwibG9hZFwiLFwibG9hZGVkZGF0YVwiLFwibG9hZGVkRGF0YVwiLFwibG9hZGVkbWV0YWRhdGFcIixcImxvYWRlZE1ldGFkYXRhXCIsXCJsb2Fkc3RhcnRcIixcImxvYWRTdGFydFwiLFwibG9zdHBvaW50ZXJjYXB0dXJlXCIsXCJsb3N0UG9pbnRlckNhcHR1cmVcIixcInBsYXlpbmdcIixcInBsYXlpbmdcIixcInByb2dyZXNzXCIsXCJwcm9ncmVzc1wiLFwic2Vla2luZ1wiLFxuXCJzZWVraW5nXCIsXCJzdGFsbGVkXCIsXCJzdGFsbGVkXCIsXCJzdXNwZW5kXCIsXCJzdXNwZW5kXCIsXCJ0aW1ldXBkYXRlXCIsXCJ0aW1lVXBkYXRlXCIsJGIsXCJ0cmFuc2l0aW9uRW5kXCIsXCJ3YWl0aW5nXCIsXCJ3YWl0aW5nXCJdO2Z1bmN0aW9uIGFkKGEsYil7Zm9yKHZhciBjPTA7YzxhLmxlbmd0aDtjKz0yKXt2YXIgZD1hW2NdLGU9YVtjKzFdLGY9XCJvblwiKyhlWzBdLnRvVXBwZXJDYXNlKCkrZS5zbGljZSgxKSk7Zj17cGhhc2VkUmVnaXN0cmF0aW9uTmFtZXM6e2J1YmJsZWQ6ZixjYXB0dXJlZDpmK1wiQ2FwdHVyZVwifSxkZXBlbmRlbmNpZXM6W2RdLGV2ZW50UHJpb3JpdHk6Yn07WmMuc2V0KGQsYik7WWMuc2V0KGQsZik7V2NbZV09Zn19XG5hZChcImJsdXIgYmx1ciBjYW5jZWwgY2FuY2VsIGNsaWNrIGNsaWNrIGNsb3NlIGNsb3NlIGNvbnRleHRtZW51IGNvbnRleHRNZW51IGNvcHkgY29weSBjdXQgY3V0IGF1eGNsaWNrIGF1eENsaWNrIGRibGNsaWNrIGRvdWJsZUNsaWNrIGRyYWdlbmQgZHJhZ0VuZCBkcmFnc3RhcnQgZHJhZ1N0YXJ0IGRyb3AgZHJvcCBmb2N1cyBmb2N1cyBpbnB1dCBpbnB1dCBpbnZhbGlkIGludmFsaWQga2V5ZG93biBrZXlEb3duIGtleXByZXNzIGtleVByZXNzIGtleXVwIGtleVVwIG1vdXNlZG93biBtb3VzZURvd24gbW91c2V1cCBtb3VzZVVwIHBhc3RlIHBhc3RlIHBhdXNlIHBhdXNlIHBsYXkgcGxheSBwb2ludGVyY2FuY2VsIHBvaW50ZXJDYW5jZWwgcG9pbnRlcmRvd24gcG9pbnRlckRvd24gcG9pbnRlcnVwIHBvaW50ZXJVcCByYXRlY2hhbmdlIHJhdGVDaGFuZ2UgcmVzZXQgcmVzZXQgc2Vla2VkIHNlZWtlZCBzdWJtaXQgc3VibWl0IHRvdWNoY2FuY2VsIHRvdWNoQ2FuY2VsIHRvdWNoZW5kIHRvdWNoRW5kIHRvdWNoc3RhcnQgdG91Y2hTdGFydCB2b2x1bWVjaGFuZ2Ugdm9sdW1lQ2hhbmdlXCIuc3BsaXQoXCIgXCIpLDApO1xuYWQoXCJkcmFnIGRyYWcgZHJhZ2VudGVyIGRyYWdFbnRlciBkcmFnZXhpdCBkcmFnRXhpdCBkcmFnbGVhdmUgZHJhZ0xlYXZlIGRyYWdvdmVyIGRyYWdPdmVyIG1vdXNlbW92ZSBtb3VzZU1vdmUgbW91c2VvdXQgbW91c2VPdXQgbW91c2VvdmVyIG1vdXNlT3ZlciBwb2ludGVybW92ZSBwb2ludGVyTW92ZSBwb2ludGVyb3V0IHBvaW50ZXJPdXQgcG9pbnRlcm92ZXIgcG9pbnRlck92ZXIgc2Nyb2xsIHNjcm9sbCB0b2dnbGUgdG9nZ2xlIHRvdWNobW92ZSB0b3VjaE1vdmUgd2hlZWwgd2hlZWxcIi5zcGxpdChcIiBcIiksMSk7YWQoJGMsMik7Zm9yKHZhciBiZD1cImNoYW5nZSBzZWxlY3Rpb25jaGFuZ2UgdGV4dElucHV0IGNvbXBvc2l0aW9uc3RhcnQgY29tcG9zaXRpb25lbmQgY29tcG9zaXRpb251cGRhdGVcIi5zcGxpdChcIiBcIiksY2Q9MDtjZDxiZC5sZW5ndGg7Y2QrKylaYy5zZXQoYmRbY2RdLDApO1xudmFyIGRkPXIudW5zdGFibGVfVXNlckJsb2NraW5nUHJpb3JpdHksZWQ9ci51bnN0YWJsZV9ydW5XaXRoUHJpb3JpdHksZmQ9ITA7ZnVuY3Rpb24gRihhLGIpe3ZjKGIsYSwhMSl9ZnVuY3Rpb24gdmMoYSxiLGMpe3ZhciBkPVpjLmdldChiKTtzd2l0Y2godm9pZCAwPT09ZD8yOmQpe2Nhc2UgMDpkPWdkLmJpbmQobnVsbCxiLDEsYSk7YnJlYWs7Y2FzZSAxOmQ9aGQuYmluZChudWxsLGIsMSxhKTticmVhaztkZWZhdWx0OmQ9aWQuYmluZChudWxsLGIsMSxhKX1jP2EuYWRkRXZlbnRMaXN0ZW5lcihiLGQsITApOmEuYWRkRXZlbnRMaXN0ZW5lcihiLGQsITEpfWZ1bmN0aW9uIGdkKGEsYixjLGQpe0phfHxIYSgpO3ZhciBlPWlkLGY9SmE7SmE9ITA7dHJ5e0dhKGUsYSxiLGMsZCl9ZmluYWxseXsoSmE9Zil8fExhKCl9fWZ1bmN0aW9uIGhkKGEsYixjLGQpe2VkKGRkLGlkLmJpbmQobnVsbCxhLGIsYyxkKSl9XG5mdW5jdGlvbiBpZChhLGIsYyxkKXtpZihmZClpZigwPEFjLmxlbmd0aCYmLTE8SGMuaW5kZXhPZihhKSlhPUtjKG51bGwsYSxiLGMsZCksQWMucHVzaChhKTtlbHNle3ZhciBlPVJjKGEsYixjLGQpO2lmKG51bGw9PT1lKUxjKGEsZCk7ZWxzZSBpZigtMTxIYy5pbmRleE9mKGEpKWE9S2MoZSxhLGIsYyxkKSxBYy5wdXNoKGEpO2Vsc2UgaWYoIU9jKGUsYSxiLGMsZCkpe0xjKGEsZCk7YT1yYyhhLGQsbnVsbCxiKTt0cnl7TWEoc2MsYSl9ZmluYWxseXtxYyhhKX19fX1cbmZ1bmN0aW9uIFJjKGEsYixjLGQpe2M9bmMoZCk7Yz10YyhjKTtpZihudWxsIT09Yyl7dmFyIGU9ZGMoYyk7aWYobnVsbD09PWUpYz1udWxsO2Vsc2V7dmFyIGY9ZS50YWc7aWYoMTM9PT1mKXtjPWVjKGUpO2lmKG51bGwhPT1jKXJldHVybiBjO2M9bnVsbH1lbHNlIGlmKDM9PT1mKXtpZihlLnN0YXRlTm9kZS5oeWRyYXRlKXJldHVybiAzPT09ZS50YWc/ZS5zdGF0ZU5vZGUuY29udGFpbmVySW5mbzpudWxsO2M9bnVsbH1lbHNlIGUhPT1jJiYoYz1udWxsKX19YT1yYyhhLGQsYyxiKTt0cnl7TWEoc2MsYSl9ZmluYWxseXtxYyhhKX1yZXR1cm4gbnVsbH1cbnZhciBqZD17YW5pbWF0aW9uSXRlcmF0aW9uQ291bnQ6ITAsYm9yZGVySW1hZ2VPdXRzZXQ6ITAsYm9yZGVySW1hZ2VTbGljZTohMCxib3JkZXJJbWFnZVdpZHRoOiEwLGJveEZsZXg6ITAsYm94RmxleEdyb3VwOiEwLGJveE9yZGluYWxHcm91cDohMCxjb2x1bW5Db3VudDohMCxjb2x1bW5zOiEwLGZsZXg6ITAsZmxleEdyb3c6ITAsZmxleFBvc2l0aXZlOiEwLGZsZXhTaHJpbms6ITAsZmxleE5lZ2F0aXZlOiEwLGZsZXhPcmRlcjohMCxncmlkQXJlYTohMCxncmlkUm93OiEwLGdyaWRSb3dFbmQ6ITAsZ3JpZFJvd1NwYW46ITAsZ3JpZFJvd1N0YXJ0OiEwLGdyaWRDb2x1bW46ITAsZ3JpZENvbHVtbkVuZDohMCxncmlkQ29sdW1uU3BhbjohMCxncmlkQ29sdW1uU3RhcnQ6ITAsZm9udFdlaWdodDohMCxsaW5lQ2xhbXA6ITAsbGluZUhlaWdodDohMCxvcGFjaXR5OiEwLG9yZGVyOiEwLG9ycGhhbnM6ITAsdGFiU2l6ZTohMCx3aWRvd3M6ITAsekluZGV4OiEwLHpvb206ITAsZmlsbE9wYWNpdHk6ITAsXG5mbG9vZE9wYWNpdHk6ITAsc3RvcE9wYWNpdHk6ITAsc3Ryb2tlRGFzaGFycmF5OiEwLHN0cm9rZURhc2hvZmZzZXQ6ITAsc3Ryb2tlTWl0ZXJsaW1pdDohMCxzdHJva2VPcGFjaXR5OiEwLHN0cm9rZVdpZHRoOiEwfSxrZD1bXCJXZWJraXRcIixcIm1zXCIsXCJNb3pcIixcIk9cIl07T2JqZWN0LmtleXMoamQpLmZvckVhY2goZnVuY3Rpb24oYSl7a2QuZm9yRWFjaChmdW5jdGlvbihiKXtiPWIrYS5jaGFyQXQoMCkudG9VcHBlckNhc2UoKSthLnN1YnN0cmluZygxKTtqZFtiXT1qZFthXX0pfSk7ZnVuY3Rpb24gbGQoYSxiLGMpe3JldHVybiBudWxsPT1ifHxcImJvb2xlYW5cIj09PXR5cGVvZiBifHxcIlwiPT09Yj9cIlwiOmN8fFwibnVtYmVyXCIhPT10eXBlb2YgYnx8MD09PWJ8fGpkLmhhc093blByb3BlcnR5KGEpJiZqZFthXT8oXCJcIitiKS50cmltKCk6YitcInB4XCJ9XG5mdW5jdGlvbiBtZChhLGIpe2E9YS5zdHlsZTtmb3IodmFyIGMgaW4gYilpZihiLmhhc093blByb3BlcnR5KGMpKXt2YXIgZD0wPT09Yy5pbmRleE9mKFwiLS1cIiksZT1sZChjLGJbY10sZCk7XCJmbG9hdFwiPT09YyYmKGM9XCJjc3NGbG9hdFwiKTtkP2Euc2V0UHJvcGVydHkoYyxlKTphW2NdPWV9fXZhciBuZD1uKHttZW51aXRlbTohMH0se2FyZWE6ITAsYmFzZTohMCxicjohMCxjb2w6ITAsZW1iZWQ6ITAsaHI6ITAsaW1nOiEwLGlucHV0OiEwLGtleWdlbjohMCxsaW5rOiEwLG1ldGE6ITAscGFyYW06ITAsc291cmNlOiEwLHRyYWNrOiEwLHdicjohMH0pO1xuZnVuY3Rpb24gb2QoYSxiKXtpZihiKXtpZihuZFthXSYmKG51bGwhPWIuY2hpbGRyZW58fG51bGwhPWIuZGFuZ2Vyb3VzbHlTZXRJbm5lckhUTUwpKXRocm93IEVycm9yKHUoMTM3LGEsXCJcIikpO2lmKG51bGwhPWIuZGFuZ2Vyb3VzbHlTZXRJbm5lckhUTUwpe2lmKG51bGwhPWIuY2hpbGRyZW4pdGhyb3cgRXJyb3IodSg2MCkpO2lmKCEoXCJvYmplY3RcIj09PXR5cGVvZiBiLmRhbmdlcm91c2x5U2V0SW5uZXJIVE1MJiZcIl9faHRtbFwiaW4gYi5kYW5nZXJvdXNseVNldElubmVySFRNTCkpdGhyb3cgRXJyb3IodSg2MSkpO31pZihudWxsIT1iLnN0eWxlJiZcIm9iamVjdFwiIT09dHlwZW9mIGIuc3R5bGUpdGhyb3cgRXJyb3IodSg2MixcIlwiKSk7fX1cbmZ1bmN0aW9uIHBkKGEsYil7aWYoLTE9PT1hLmluZGV4T2YoXCItXCIpKXJldHVyblwic3RyaW5nXCI9PT10eXBlb2YgYi5pcztzd2l0Y2goYSl7Y2FzZSBcImFubm90YXRpb24teG1sXCI6Y2FzZSBcImNvbG9yLXByb2ZpbGVcIjpjYXNlIFwiZm9udC1mYWNlXCI6Y2FzZSBcImZvbnQtZmFjZS1zcmNcIjpjYXNlIFwiZm9udC1mYWNlLXVyaVwiOmNhc2UgXCJmb250LWZhY2UtZm9ybWF0XCI6Y2FzZSBcImZvbnQtZmFjZS1uYW1lXCI6Y2FzZSBcIm1pc3NpbmctZ2x5cGhcIjpyZXR1cm4hMTtkZWZhdWx0OnJldHVybiEwfX12YXIgcWQ9TWIuaHRtbDtmdW5jdGlvbiByZChhLGIpe2E9OT09PWEubm9kZVR5cGV8fDExPT09YS5ub2RlVHlwZT9hOmEub3duZXJEb2N1bWVudDt2YXIgYz1jYyhhKTtiPXdhW2JdO2Zvcih2YXIgZD0wO2Q8Yi5sZW5ndGg7ZCsrKXVjKGJbZF0sYSxjKX1mdW5jdGlvbiBzZCgpe31cbmZ1bmN0aW9uIHRkKGEpe2E9YXx8KFwidW5kZWZpbmVkXCIhPT10eXBlb2YgZG9jdW1lbnQ/ZG9jdW1lbnQ6dm9pZCAwKTtpZihcInVuZGVmaW5lZFwiPT09dHlwZW9mIGEpcmV0dXJuIG51bGw7dHJ5e3JldHVybiBhLmFjdGl2ZUVsZW1lbnR8fGEuYm9keX1jYXRjaChiKXtyZXR1cm4gYS5ib2R5fX1mdW5jdGlvbiB1ZChhKXtmb3IoO2EmJmEuZmlyc3RDaGlsZDspYT1hLmZpcnN0Q2hpbGQ7cmV0dXJuIGF9ZnVuY3Rpb24gdmQoYSxiKXt2YXIgYz11ZChhKTthPTA7Zm9yKHZhciBkO2M7KXtpZigzPT09Yy5ub2RlVHlwZSl7ZD1hK2MudGV4dENvbnRlbnQubGVuZ3RoO2lmKGE8PWImJmQ+PWIpcmV0dXJue25vZGU6YyxvZmZzZXQ6Yi1hfTthPWR9YTp7Zm9yKDtjOyl7aWYoYy5uZXh0U2libGluZyl7Yz1jLm5leHRTaWJsaW5nO2JyZWFrIGF9Yz1jLnBhcmVudE5vZGV9Yz12b2lkIDB9Yz11ZChjKX19XG5mdW5jdGlvbiB3ZChhLGIpe3JldHVybiBhJiZiP2E9PT1iPyEwOmEmJjM9PT1hLm5vZGVUeXBlPyExOmImJjM9PT1iLm5vZGVUeXBlP3dkKGEsYi5wYXJlbnROb2RlKTpcImNvbnRhaW5zXCJpbiBhP2EuY29udGFpbnMoYik6YS5jb21wYXJlRG9jdW1lbnRQb3NpdGlvbj8hIShhLmNvbXBhcmVEb2N1bWVudFBvc2l0aW9uKGIpJjE2KTohMTohMX1mdW5jdGlvbiB4ZCgpe2Zvcih2YXIgYT13aW5kb3csYj10ZCgpO2IgaW5zdGFuY2VvZiBhLkhUTUxJRnJhbWVFbGVtZW50Oyl7dHJ5e3ZhciBjPVwic3RyaW5nXCI9PT10eXBlb2YgYi5jb250ZW50V2luZG93LmxvY2F0aW9uLmhyZWZ9Y2F0Y2goZCl7Yz0hMX1pZihjKWE9Yi5jb250ZW50V2luZG93O2Vsc2UgYnJlYWs7Yj10ZChhLmRvY3VtZW50KX1yZXR1cm4gYn1cbmZ1bmN0aW9uIHlkKGEpe3ZhciBiPWEmJmEubm9kZU5hbWUmJmEubm9kZU5hbWUudG9Mb3dlckNhc2UoKTtyZXR1cm4gYiYmKFwiaW5wdXRcIj09PWImJihcInRleHRcIj09PWEudHlwZXx8XCJzZWFyY2hcIj09PWEudHlwZXx8XCJ0ZWxcIj09PWEudHlwZXx8XCJ1cmxcIj09PWEudHlwZXx8XCJwYXNzd29yZFwiPT09YS50eXBlKXx8XCJ0ZXh0YXJlYVwiPT09Ynx8XCJ0cnVlXCI9PT1hLmNvbnRlbnRFZGl0YWJsZSl9dmFyIHpkPVwiJFwiLEFkPVwiLyRcIixCZD1cIiQ/XCIsQ2Q9XCIkIVwiLERkPW51bGwsRWQ9bnVsbDtmdW5jdGlvbiBGZChhLGIpe3N3aXRjaChhKXtjYXNlIFwiYnV0dG9uXCI6Y2FzZSBcImlucHV0XCI6Y2FzZSBcInNlbGVjdFwiOmNhc2UgXCJ0ZXh0YXJlYVwiOnJldHVybiEhYi5hdXRvRm9jdXN9cmV0dXJuITF9XG5mdW5jdGlvbiBHZChhLGIpe3JldHVyblwidGV4dGFyZWFcIj09PWF8fFwib3B0aW9uXCI9PT1hfHxcIm5vc2NyaXB0XCI9PT1hfHxcInN0cmluZ1wiPT09dHlwZW9mIGIuY2hpbGRyZW58fFwibnVtYmVyXCI9PT10eXBlb2YgYi5jaGlsZHJlbnx8XCJvYmplY3RcIj09PXR5cGVvZiBiLmRhbmdlcm91c2x5U2V0SW5uZXJIVE1MJiZudWxsIT09Yi5kYW5nZXJvdXNseVNldElubmVySFRNTCYmbnVsbCE9Yi5kYW5nZXJvdXNseVNldElubmVySFRNTC5fX2h0bWx9dmFyIEhkPVwiZnVuY3Rpb25cIj09PXR5cGVvZiBzZXRUaW1lb3V0P3NldFRpbWVvdXQ6dm9pZCAwLElkPVwiZnVuY3Rpb25cIj09PXR5cGVvZiBjbGVhclRpbWVvdXQ/Y2xlYXJUaW1lb3V0OnZvaWQgMDtmdW5jdGlvbiBKZChhKXtmb3IoO251bGwhPWE7YT1hLm5leHRTaWJsaW5nKXt2YXIgYj1hLm5vZGVUeXBlO2lmKDE9PT1ifHwzPT09YilicmVha31yZXR1cm4gYX1cbmZ1bmN0aW9uIEtkKGEpe2E9YS5wcmV2aW91c1NpYmxpbmc7Zm9yKHZhciBiPTA7YTspe2lmKDg9PT1hLm5vZGVUeXBlKXt2YXIgYz1hLmRhdGE7aWYoYz09PXpkfHxjPT09Q2R8fGM9PT1CZCl7aWYoMD09PWIpcmV0dXJuIGE7Yi0tfWVsc2UgYz09PUFkJiZiKyt9YT1hLnByZXZpb3VzU2libGluZ31yZXR1cm4gbnVsbH12YXIgTGQ9TWF0aC5yYW5kb20oKS50b1N0cmluZygzNikuc2xpY2UoMiksTWQ9XCJfX3JlYWN0SW50ZXJuYWxJbnN0YW5jZSRcIitMZCxOZD1cIl9fcmVhY3RFdmVudEhhbmRsZXJzJFwiK0xkLE9kPVwiX19yZWFjdENvbnRhaW5lcmUkXCIrTGQ7XG5mdW5jdGlvbiB0YyhhKXt2YXIgYj1hW01kXTtpZihiKXJldHVybiBiO2Zvcih2YXIgYz1hLnBhcmVudE5vZGU7Yzspe2lmKGI9Y1tPZF18fGNbTWRdKXtjPWIuYWx0ZXJuYXRlO2lmKG51bGwhPT1iLmNoaWxkfHxudWxsIT09YyYmbnVsbCE9PWMuY2hpbGQpZm9yKGE9S2QoYSk7bnVsbCE9PWE7KXtpZihjPWFbTWRdKXJldHVybiBjO2E9S2QoYSl9cmV0dXJuIGJ9YT1jO2M9YS5wYXJlbnROb2RlfXJldHVybiBudWxsfWZ1bmN0aW9uIE5jKGEpe2E9YVtNZF18fGFbT2RdO3JldHVybiFhfHw1IT09YS50YWcmJjYhPT1hLnRhZyYmMTMhPT1hLnRhZyYmMyE9PWEudGFnP251bGw6YX1mdW5jdGlvbiBQZChhKXtpZig1PT09YS50YWd8fDY9PT1hLnRhZylyZXR1cm4gYS5zdGF0ZU5vZGU7dGhyb3cgRXJyb3IodSgzMykpO31mdW5jdGlvbiBRZChhKXtyZXR1cm4gYVtOZF18fG51bGx9XG5mdW5jdGlvbiBSZChhKXtkbyBhPWEucmV0dXJuO3doaWxlKGEmJjUhPT1hLnRhZyk7cmV0dXJuIGE/YTpudWxsfVxuZnVuY3Rpb24gU2QoYSxiKXt2YXIgYz1hLnN0YXRlTm9kZTtpZighYylyZXR1cm4gbnVsbDt2YXIgZD1sYShjKTtpZighZClyZXR1cm4gbnVsbDtjPWRbYl07YTpzd2l0Y2goYil7Y2FzZSBcIm9uQ2xpY2tcIjpjYXNlIFwib25DbGlja0NhcHR1cmVcIjpjYXNlIFwib25Eb3VibGVDbGlja1wiOmNhc2UgXCJvbkRvdWJsZUNsaWNrQ2FwdHVyZVwiOmNhc2UgXCJvbk1vdXNlRG93blwiOmNhc2UgXCJvbk1vdXNlRG93bkNhcHR1cmVcIjpjYXNlIFwib25Nb3VzZU1vdmVcIjpjYXNlIFwib25Nb3VzZU1vdmVDYXB0dXJlXCI6Y2FzZSBcIm9uTW91c2VVcFwiOmNhc2UgXCJvbk1vdXNlVXBDYXB0dXJlXCI6Y2FzZSBcIm9uTW91c2VFbnRlclwiOihkPSFkLmRpc2FibGVkKXx8KGE9YS50eXBlLGQ9IShcImJ1dHRvblwiPT09YXx8XCJpbnB1dFwiPT09YXx8XCJzZWxlY3RcIj09PWF8fFwidGV4dGFyZWFcIj09PWEpKTthPSFkO2JyZWFrIGE7ZGVmYXVsdDphPSExfWlmKGEpcmV0dXJuIG51bGw7aWYoYyYmXCJmdW5jdGlvblwiIT09dHlwZW9mIGMpdGhyb3cgRXJyb3IodSgyMzEsXG5iLHR5cGVvZiBjKSk7cmV0dXJuIGN9ZnVuY3Rpb24gVGQoYSxiLGMpe2lmKGI9U2QoYSxjLmRpc3BhdGNoQ29uZmlnLnBoYXNlZFJlZ2lzdHJhdGlvbk5hbWVzW2JdKSljLl9kaXNwYXRjaExpc3RlbmVycz1pYyhjLl9kaXNwYXRjaExpc3RlbmVycyxiKSxjLl9kaXNwYXRjaEluc3RhbmNlcz1pYyhjLl9kaXNwYXRjaEluc3RhbmNlcyxhKX1mdW5jdGlvbiBVZChhKXtpZihhJiZhLmRpc3BhdGNoQ29uZmlnLnBoYXNlZFJlZ2lzdHJhdGlvbk5hbWVzKXtmb3IodmFyIGI9YS5fdGFyZ2V0SW5zdCxjPVtdO2I7KWMucHVzaChiKSxiPVJkKGIpO2ZvcihiPWMubGVuZ3RoOzA8Yi0tOylUZChjW2JdLFwiY2FwdHVyZWRcIixhKTtmb3IoYj0wO2I8Yy5sZW5ndGg7YisrKVRkKGNbYl0sXCJidWJibGVkXCIsYSl9fVxuZnVuY3Rpb24gVmQoYSxiLGMpe2EmJmMmJmMuZGlzcGF0Y2hDb25maWcucmVnaXN0cmF0aW9uTmFtZSYmKGI9U2QoYSxjLmRpc3BhdGNoQ29uZmlnLnJlZ2lzdHJhdGlvbk5hbWUpKSYmKGMuX2Rpc3BhdGNoTGlzdGVuZXJzPWljKGMuX2Rpc3BhdGNoTGlzdGVuZXJzLGIpLGMuX2Rpc3BhdGNoSW5zdGFuY2VzPWljKGMuX2Rpc3BhdGNoSW5zdGFuY2VzLGEpKX1mdW5jdGlvbiBXZChhKXthJiZhLmRpc3BhdGNoQ29uZmlnLnJlZ2lzdHJhdGlvbk5hbWUmJlZkKGEuX3RhcmdldEluc3QsbnVsbCxhKX1mdW5jdGlvbiBYZChhKXtqYyhhLFVkKX12YXIgWWQ9bnVsbCxaZD1udWxsLCRkPW51bGw7XG5mdW5jdGlvbiBhZSgpe2lmKCRkKXJldHVybiAkZDt2YXIgYSxiPVpkLGM9Yi5sZW5ndGgsZCxlPVwidmFsdWVcImluIFlkP1lkLnZhbHVlOllkLnRleHRDb250ZW50LGY9ZS5sZW5ndGg7Zm9yKGE9MDthPGMmJmJbYV09PT1lW2FdO2ErKyk7dmFyIGc9Yy1hO2ZvcihkPTE7ZDw9ZyYmYltjLWRdPT09ZVtmLWRdO2QrKyk7cmV0dXJuICRkPWUuc2xpY2UoYSwxPGQ/MS1kOnZvaWQgMCl9ZnVuY3Rpb24gYmUoKXtyZXR1cm4hMH1mdW5jdGlvbiBjZSgpe3JldHVybiExfVxuZnVuY3Rpb24gRyhhLGIsYyxkKXt0aGlzLmRpc3BhdGNoQ29uZmlnPWE7dGhpcy5fdGFyZ2V0SW5zdD1iO3RoaXMubmF0aXZlRXZlbnQ9YzthPXRoaXMuY29uc3RydWN0b3IuSW50ZXJmYWNlO2Zvcih2YXIgZSBpbiBhKWEuaGFzT3duUHJvcGVydHkoZSkmJigoYj1hW2VdKT90aGlzW2VdPWIoYyk6XCJ0YXJnZXRcIj09PWU/dGhpcy50YXJnZXQ9ZDp0aGlzW2VdPWNbZV0pO3RoaXMuaXNEZWZhdWx0UHJldmVudGVkPShudWxsIT1jLmRlZmF1bHRQcmV2ZW50ZWQ/Yy5kZWZhdWx0UHJldmVudGVkOiExPT09Yy5yZXR1cm5WYWx1ZSk/YmU6Y2U7dGhpcy5pc1Byb3BhZ2F0aW9uU3RvcHBlZD1jZTtyZXR1cm4gdGhpc31cbm4oRy5wcm90b3R5cGUse3ByZXZlbnREZWZhdWx0OmZ1bmN0aW9uKCl7dGhpcy5kZWZhdWx0UHJldmVudGVkPSEwO3ZhciBhPXRoaXMubmF0aXZlRXZlbnQ7YSYmKGEucHJldmVudERlZmF1bHQ/YS5wcmV2ZW50RGVmYXVsdCgpOlwidW5rbm93blwiIT09dHlwZW9mIGEucmV0dXJuVmFsdWUmJihhLnJldHVyblZhbHVlPSExKSx0aGlzLmlzRGVmYXVsdFByZXZlbnRlZD1iZSl9LHN0b3BQcm9wYWdhdGlvbjpmdW5jdGlvbigpe3ZhciBhPXRoaXMubmF0aXZlRXZlbnQ7YSYmKGEuc3RvcFByb3BhZ2F0aW9uP2Euc3RvcFByb3BhZ2F0aW9uKCk6XCJ1bmtub3duXCIhPT10eXBlb2YgYS5jYW5jZWxCdWJibGUmJihhLmNhbmNlbEJ1YmJsZT0hMCksdGhpcy5pc1Byb3BhZ2F0aW9uU3RvcHBlZD1iZSl9LHBlcnNpc3Q6ZnVuY3Rpb24oKXt0aGlzLmlzUGVyc2lzdGVudD1iZX0saXNQZXJzaXN0ZW50OmNlLGRlc3RydWN0b3I6ZnVuY3Rpb24oKXt2YXIgYT10aGlzLmNvbnN0cnVjdG9yLkludGVyZmFjZSxcbmI7Zm9yKGIgaW4gYSl0aGlzW2JdPW51bGw7dGhpcy5uYXRpdmVFdmVudD10aGlzLl90YXJnZXRJbnN0PXRoaXMuZGlzcGF0Y2hDb25maWc9bnVsbDt0aGlzLmlzUHJvcGFnYXRpb25TdG9wcGVkPXRoaXMuaXNEZWZhdWx0UHJldmVudGVkPWNlO3RoaXMuX2Rpc3BhdGNoSW5zdGFuY2VzPXRoaXMuX2Rpc3BhdGNoTGlzdGVuZXJzPW51bGx9fSk7Ry5JbnRlcmZhY2U9e3R5cGU6bnVsbCx0YXJnZXQ6bnVsbCxjdXJyZW50VGFyZ2V0OmZ1bmN0aW9uKCl7cmV0dXJuIG51bGx9LGV2ZW50UGhhc2U6bnVsbCxidWJibGVzOm51bGwsY2FuY2VsYWJsZTpudWxsLHRpbWVTdGFtcDpmdW5jdGlvbihhKXtyZXR1cm4gYS50aW1lU3RhbXB8fERhdGUubm93KCl9LGRlZmF1bHRQcmV2ZW50ZWQ6bnVsbCxpc1RydXN0ZWQ6bnVsbH07XG5HLmV4dGVuZD1mdW5jdGlvbihhKXtmdW5jdGlvbiBiKCl7fWZ1bmN0aW9uIGMoKXtyZXR1cm4gZC5hcHBseSh0aGlzLGFyZ3VtZW50cyl9dmFyIGQ9dGhpcztiLnByb3RvdHlwZT1kLnByb3RvdHlwZTt2YXIgZT1uZXcgYjtuKGUsYy5wcm90b3R5cGUpO2MucHJvdG90eXBlPWU7Yy5wcm90b3R5cGUuY29uc3RydWN0b3I9YztjLkludGVyZmFjZT1uKHt9LGQuSW50ZXJmYWNlLGEpO2MuZXh0ZW5kPWQuZXh0ZW5kO2RlKGMpO3JldHVybiBjfTtkZShHKTtmdW5jdGlvbiBlZShhLGIsYyxkKXtpZih0aGlzLmV2ZW50UG9vbC5sZW5ndGgpe3ZhciBlPXRoaXMuZXZlbnRQb29sLnBvcCgpO3RoaXMuY2FsbChlLGEsYixjLGQpO3JldHVybiBlfXJldHVybiBuZXcgdGhpcyhhLGIsYyxkKX1cbmZ1bmN0aW9uIGZlKGEpe2lmKCEoYSBpbnN0YW5jZW9mIHRoaXMpKXRocm93IEVycm9yKHUoMjc5KSk7YS5kZXN0cnVjdG9yKCk7MTA+dGhpcy5ldmVudFBvb2wubGVuZ3RoJiZ0aGlzLmV2ZW50UG9vbC5wdXNoKGEpfWZ1bmN0aW9uIGRlKGEpe2EuZXZlbnRQb29sPVtdO2EuZ2V0UG9vbGVkPWVlO2EucmVsZWFzZT1mZX12YXIgZ2U9Ry5leHRlbmQoe2RhdGE6bnVsbH0pLGhlPUcuZXh0ZW5kKHtkYXRhOm51bGx9KSxpZT1bOSwxMywyNywzMl0samU9eWEmJlwiQ29tcG9zaXRpb25FdmVudFwiaW4gd2luZG93LGtlPW51bGw7eWEmJlwiZG9jdW1lbnRNb2RlXCJpbiBkb2N1bWVudCYmKGtlPWRvY3VtZW50LmRvY3VtZW50TW9kZSk7XG52YXIgbGU9eWEmJlwiVGV4dEV2ZW50XCJpbiB3aW5kb3cmJiFrZSxtZT15YSYmKCFqZXx8a2UmJjg8a2UmJjExPj1rZSksbmU9U3RyaW5nLmZyb21DaGFyQ29kZSgzMiksb2U9e2JlZm9yZUlucHV0OntwaGFzZWRSZWdpc3RyYXRpb25OYW1lczp7YnViYmxlZDpcIm9uQmVmb3JlSW5wdXRcIixjYXB0dXJlZDpcIm9uQmVmb3JlSW5wdXRDYXB0dXJlXCJ9LGRlcGVuZGVuY2llczpbXCJjb21wb3NpdGlvbmVuZFwiLFwia2V5cHJlc3NcIixcInRleHRJbnB1dFwiLFwicGFzdGVcIl19LGNvbXBvc2l0aW9uRW5kOntwaGFzZWRSZWdpc3RyYXRpb25OYW1lczp7YnViYmxlZDpcIm9uQ29tcG9zaXRpb25FbmRcIixjYXB0dXJlZDpcIm9uQ29tcG9zaXRpb25FbmRDYXB0dXJlXCJ9LGRlcGVuZGVuY2llczpcImJsdXIgY29tcG9zaXRpb25lbmQga2V5ZG93biBrZXlwcmVzcyBrZXl1cCBtb3VzZWRvd25cIi5zcGxpdChcIiBcIil9LGNvbXBvc2l0aW9uU3RhcnQ6e3BoYXNlZFJlZ2lzdHJhdGlvbk5hbWVzOntidWJibGVkOlwib25Db21wb3NpdGlvblN0YXJ0XCIsXG5jYXB0dXJlZDpcIm9uQ29tcG9zaXRpb25TdGFydENhcHR1cmVcIn0sZGVwZW5kZW5jaWVzOlwiYmx1ciBjb21wb3NpdGlvbnN0YXJ0IGtleWRvd24ga2V5cHJlc3Mga2V5dXAgbW91c2Vkb3duXCIuc3BsaXQoXCIgXCIpfSxjb21wb3NpdGlvblVwZGF0ZTp7cGhhc2VkUmVnaXN0cmF0aW9uTmFtZXM6e2J1YmJsZWQ6XCJvbkNvbXBvc2l0aW9uVXBkYXRlXCIsY2FwdHVyZWQ6XCJvbkNvbXBvc2l0aW9uVXBkYXRlQ2FwdHVyZVwifSxkZXBlbmRlbmNpZXM6XCJibHVyIGNvbXBvc2l0aW9udXBkYXRlIGtleWRvd24ga2V5cHJlc3Mga2V5dXAgbW91c2Vkb3duXCIuc3BsaXQoXCIgXCIpfX0scGU9ITE7XG5mdW5jdGlvbiBxZShhLGIpe3N3aXRjaChhKXtjYXNlIFwia2V5dXBcIjpyZXR1cm4tMSE9PWllLmluZGV4T2YoYi5rZXlDb2RlKTtjYXNlIFwia2V5ZG93blwiOnJldHVybiAyMjkhPT1iLmtleUNvZGU7Y2FzZSBcImtleXByZXNzXCI6Y2FzZSBcIm1vdXNlZG93blwiOmNhc2UgXCJibHVyXCI6cmV0dXJuITA7ZGVmYXVsdDpyZXR1cm4hMX19ZnVuY3Rpb24gcmUoYSl7YT1hLmRldGFpbDtyZXR1cm5cIm9iamVjdFwiPT09dHlwZW9mIGEmJlwiZGF0YVwiaW4gYT9hLmRhdGE6bnVsbH12YXIgc2U9ITE7ZnVuY3Rpb24gdGUoYSxiKXtzd2l0Y2goYSl7Y2FzZSBcImNvbXBvc2l0aW9uZW5kXCI6cmV0dXJuIHJlKGIpO2Nhc2UgXCJrZXlwcmVzc1wiOmlmKDMyIT09Yi53aGljaClyZXR1cm4gbnVsbDtwZT0hMDtyZXR1cm4gbmU7Y2FzZSBcInRleHRJbnB1dFwiOnJldHVybiBhPWIuZGF0YSxhPT09bmUmJnBlP251bGw6YTtkZWZhdWx0OnJldHVybiBudWxsfX1cbmZ1bmN0aW9uIHVlKGEsYil7aWYoc2UpcmV0dXJuXCJjb21wb3NpdGlvbmVuZFwiPT09YXx8IWplJiZxZShhLGIpPyhhPWFlKCksJGQ9WmQ9WWQ9bnVsbCxzZT0hMSxhKTpudWxsO3N3aXRjaChhKXtjYXNlIFwicGFzdGVcIjpyZXR1cm4gbnVsbDtjYXNlIFwia2V5cHJlc3NcIjppZighKGIuY3RybEtleXx8Yi5hbHRLZXl8fGIubWV0YUtleSl8fGIuY3RybEtleSYmYi5hbHRLZXkpe2lmKGIuY2hhciYmMTxiLmNoYXIubGVuZ3RoKXJldHVybiBiLmNoYXI7aWYoYi53aGljaClyZXR1cm4gU3RyaW5nLmZyb21DaGFyQ29kZShiLndoaWNoKX1yZXR1cm4gbnVsbDtjYXNlIFwiY29tcG9zaXRpb25lbmRcIjpyZXR1cm4gbWUmJlwia29cIiE9PWIubG9jYWxlP251bGw6Yi5kYXRhO2RlZmF1bHQ6cmV0dXJuIG51bGx9fVxudmFyIHZlPXtldmVudFR5cGVzOm9lLGV4dHJhY3RFdmVudHM6ZnVuY3Rpb24oYSxiLGMsZCl7dmFyIGU7aWYoamUpYjp7c3dpdGNoKGEpe2Nhc2UgXCJjb21wb3NpdGlvbnN0YXJ0XCI6dmFyIGY9b2UuY29tcG9zaXRpb25TdGFydDticmVhayBiO2Nhc2UgXCJjb21wb3NpdGlvbmVuZFwiOmY9b2UuY29tcG9zaXRpb25FbmQ7YnJlYWsgYjtjYXNlIFwiY29tcG9zaXRpb251cGRhdGVcIjpmPW9lLmNvbXBvc2l0aW9uVXBkYXRlO2JyZWFrIGJ9Zj12b2lkIDB9ZWxzZSBzZT9xZShhLGMpJiYoZj1vZS5jb21wb3NpdGlvbkVuZCk6XCJrZXlkb3duXCI9PT1hJiYyMjk9PT1jLmtleUNvZGUmJihmPW9lLmNvbXBvc2l0aW9uU3RhcnQpO2Y/KG1lJiZcImtvXCIhPT1jLmxvY2FsZSYmKHNlfHxmIT09b2UuY29tcG9zaXRpb25TdGFydD9mPT09b2UuY29tcG9zaXRpb25FbmQmJnNlJiYoZT1hZSgpKTooWWQ9ZCxaZD1cInZhbHVlXCJpbiBZZD9ZZC52YWx1ZTpZZC50ZXh0Q29udGVudCxzZT0hMCkpLGY9Z2UuZ2V0UG9vbGVkKGYsXG5iLGMsZCksZT9mLmRhdGE9ZTooZT1yZShjKSxudWxsIT09ZSYmKGYuZGF0YT1lKSksWGQoZiksZT1mKTplPW51bGw7KGE9bGU/dGUoYSxjKTp1ZShhLGMpKT8oYj1oZS5nZXRQb29sZWQob2UuYmVmb3JlSW5wdXQsYixjLGQpLGIuZGF0YT1hLFhkKGIpKTpiPW51bGw7cmV0dXJuIG51bGw9PT1lP2I6bnVsbD09PWI/ZTpbZSxiXX19LHdlPXtjb2xvcjohMCxkYXRlOiEwLGRhdGV0aW1lOiEwLFwiZGF0ZXRpbWUtbG9jYWxcIjohMCxlbWFpbDohMCxtb250aDohMCxudW1iZXI6ITAscGFzc3dvcmQ6ITAscmFuZ2U6ITAsc2VhcmNoOiEwLHRlbDohMCx0ZXh0OiEwLHRpbWU6ITAsdXJsOiEwLHdlZWs6ITB9O2Z1bmN0aW9uIHhlKGEpe3ZhciBiPWEmJmEubm9kZU5hbWUmJmEubm9kZU5hbWUudG9Mb3dlckNhc2UoKTtyZXR1cm5cImlucHV0XCI9PT1iPyEhd2VbYS50eXBlXTpcInRleHRhcmVhXCI9PT1iPyEwOiExfVxudmFyIHllPXtjaGFuZ2U6e3BoYXNlZFJlZ2lzdHJhdGlvbk5hbWVzOntidWJibGVkOlwib25DaGFuZ2VcIixjYXB0dXJlZDpcIm9uQ2hhbmdlQ2FwdHVyZVwifSxkZXBlbmRlbmNpZXM6XCJibHVyIGNoYW5nZSBjbGljayBmb2N1cyBpbnB1dCBrZXlkb3duIGtleXVwIHNlbGVjdGlvbmNoYW5nZVwiLnNwbGl0KFwiIFwiKX19O2Z1bmN0aW9uIHplKGEsYixjKXthPUcuZ2V0UG9vbGVkKHllLmNoYW5nZSxhLGIsYyk7YS50eXBlPVwiY2hhbmdlXCI7RGEoYyk7WGQoYSk7cmV0dXJuIGF9dmFyIEFlPW51bGwsQmU9bnVsbDtmdW5jdGlvbiBDZShhKXttYyhhKX1mdW5jdGlvbiBEZShhKXt2YXIgYj1QZChhKTtpZih5YihiKSlyZXR1cm4gYX1mdW5jdGlvbiBFZShhLGIpe2lmKFwiY2hhbmdlXCI9PT1hKXJldHVybiBifXZhciBGZT0hMTt5YSYmKEZlPW9jKFwiaW5wdXRcIikmJighZG9jdW1lbnQuZG9jdW1lbnRNb2RlfHw5PGRvY3VtZW50LmRvY3VtZW50TW9kZSkpO1xuZnVuY3Rpb24gR2UoKXtBZSYmKEFlLmRldGFjaEV2ZW50KFwib25wcm9wZXJ0eWNoYW5nZVwiLEhlKSxCZT1BZT1udWxsKX1mdW5jdGlvbiBIZShhKXtpZihcInZhbHVlXCI9PT1hLnByb3BlcnR5TmFtZSYmRGUoQmUpKWlmKGE9emUoQmUsYSxuYyhhKSksSmEpbWMoYSk7ZWxzZXtKYT0hMDt0cnl7RmEoQ2UsYSl9ZmluYWxseXtKYT0hMSxMYSgpfX19ZnVuY3Rpb24gSWUoYSxiLGMpe1wiZm9jdXNcIj09PWE/KEdlKCksQWU9YixCZT1jLEFlLmF0dGFjaEV2ZW50KFwib25wcm9wZXJ0eWNoYW5nZVwiLEhlKSk6XCJibHVyXCI9PT1hJiZHZSgpfWZ1bmN0aW9uIEplKGEpe2lmKFwic2VsZWN0aW9uY2hhbmdlXCI9PT1hfHxcImtleXVwXCI9PT1hfHxcImtleWRvd25cIj09PWEpcmV0dXJuIERlKEJlKX1mdW5jdGlvbiBLZShhLGIpe2lmKFwiY2xpY2tcIj09PWEpcmV0dXJuIERlKGIpfWZ1bmN0aW9uIExlKGEsYil7aWYoXCJpbnB1dFwiPT09YXx8XCJjaGFuZ2VcIj09PWEpcmV0dXJuIERlKGIpfVxudmFyIE1lPXtldmVudFR5cGVzOnllLF9pc0lucHV0RXZlbnRTdXBwb3J0ZWQ6RmUsZXh0cmFjdEV2ZW50czpmdW5jdGlvbihhLGIsYyxkKXt2YXIgZT1iP1BkKGIpOndpbmRvdyxmPWUubm9kZU5hbWUmJmUubm9kZU5hbWUudG9Mb3dlckNhc2UoKTtpZihcInNlbGVjdFwiPT09Znx8XCJpbnB1dFwiPT09ZiYmXCJmaWxlXCI9PT1lLnR5cGUpdmFyIGc9RWU7ZWxzZSBpZih4ZShlKSlpZihGZSlnPUxlO2Vsc2V7Zz1KZTt2YXIgaD1JZX1lbHNlKGY9ZS5ub2RlTmFtZSkmJlwiaW5wdXRcIj09PWYudG9Mb3dlckNhc2UoKSYmKFwiY2hlY2tib3hcIj09PWUudHlwZXx8XCJyYWRpb1wiPT09ZS50eXBlKSYmKGc9S2UpO2lmKGcmJihnPWcoYSxiKSkpcmV0dXJuIHplKGcsYyxkKTtoJiZoKGEsZSxiKTtcImJsdXJcIj09PWEmJihhPWUuX3dyYXBwZXJTdGF0ZSkmJmEuY29udHJvbGxlZCYmXCJudW1iZXJcIj09PWUudHlwZSYmRGIoZSxcIm51bWJlclwiLGUudmFsdWUpfX0sTmU9Ry5leHRlbmQoe3ZpZXc6bnVsbCxkZXRhaWw6bnVsbH0pLFxuT2U9e0FsdDpcImFsdEtleVwiLENvbnRyb2w6XCJjdHJsS2V5XCIsTWV0YTpcIm1ldGFLZXlcIixTaGlmdDpcInNoaWZ0S2V5XCJ9O2Z1bmN0aW9uIFBlKGEpe3ZhciBiPXRoaXMubmF0aXZlRXZlbnQ7cmV0dXJuIGIuZ2V0TW9kaWZpZXJTdGF0ZT9iLmdldE1vZGlmaWVyU3RhdGUoYSk6KGE9T2VbYV0pPyEhYlthXTohMX1mdW5jdGlvbiBRZSgpe3JldHVybiBQZX1cbnZhciBSZT0wLFNlPTAsVGU9ITEsVWU9ITEsVmU9TmUuZXh0ZW5kKHtzY3JlZW5YOm51bGwsc2NyZWVuWTpudWxsLGNsaWVudFg6bnVsbCxjbGllbnRZOm51bGwscGFnZVg6bnVsbCxwYWdlWTpudWxsLGN0cmxLZXk6bnVsbCxzaGlmdEtleTpudWxsLGFsdEtleTpudWxsLG1ldGFLZXk6bnVsbCxnZXRNb2RpZmllclN0YXRlOlFlLGJ1dHRvbjpudWxsLGJ1dHRvbnM6bnVsbCxyZWxhdGVkVGFyZ2V0OmZ1bmN0aW9uKGEpe3JldHVybiBhLnJlbGF0ZWRUYXJnZXR8fChhLmZyb21FbGVtZW50PT09YS5zcmNFbGVtZW50P2EudG9FbGVtZW50OmEuZnJvbUVsZW1lbnQpfSxtb3ZlbWVudFg6ZnVuY3Rpb24oYSl7aWYoXCJtb3ZlbWVudFhcImluIGEpcmV0dXJuIGEubW92ZW1lbnRYO3ZhciBiPVJlO1JlPWEuc2NyZWVuWDtyZXR1cm4gVGU/XCJtb3VzZW1vdmVcIj09PWEudHlwZT9hLnNjcmVlblgtYjowOihUZT0hMCwwKX0sbW92ZW1lbnRZOmZ1bmN0aW9uKGEpe2lmKFwibW92ZW1lbnRZXCJpbiBhKXJldHVybiBhLm1vdmVtZW50WTtcbnZhciBiPVNlO1NlPWEuc2NyZWVuWTtyZXR1cm4gVWU/XCJtb3VzZW1vdmVcIj09PWEudHlwZT9hLnNjcmVlblktYjowOihVZT0hMCwwKX19KSxXZT1WZS5leHRlbmQoe3BvaW50ZXJJZDpudWxsLHdpZHRoOm51bGwsaGVpZ2h0Om51bGwscHJlc3N1cmU6bnVsbCx0YW5nZW50aWFsUHJlc3N1cmU6bnVsbCx0aWx0WDpudWxsLHRpbHRZOm51bGwsdHdpc3Q6bnVsbCxwb2ludGVyVHlwZTpudWxsLGlzUHJpbWFyeTpudWxsfSksWGU9e21vdXNlRW50ZXI6e3JlZ2lzdHJhdGlvbk5hbWU6XCJvbk1vdXNlRW50ZXJcIixkZXBlbmRlbmNpZXM6W1wibW91c2VvdXRcIixcIm1vdXNlb3ZlclwiXX0sbW91c2VMZWF2ZTp7cmVnaXN0cmF0aW9uTmFtZTpcIm9uTW91c2VMZWF2ZVwiLGRlcGVuZGVuY2llczpbXCJtb3VzZW91dFwiLFwibW91c2VvdmVyXCJdfSxwb2ludGVyRW50ZXI6e3JlZ2lzdHJhdGlvbk5hbWU6XCJvblBvaW50ZXJFbnRlclwiLGRlcGVuZGVuY2llczpbXCJwb2ludGVyb3V0XCIsXCJwb2ludGVyb3ZlclwiXX0scG9pbnRlckxlYXZlOntyZWdpc3RyYXRpb25OYW1lOlwib25Qb2ludGVyTGVhdmVcIixcbmRlcGVuZGVuY2llczpbXCJwb2ludGVyb3V0XCIsXCJwb2ludGVyb3ZlclwiXX19LFllPXtldmVudFR5cGVzOlhlLGV4dHJhY3RFdmVudHM6ZnVuY3Rpb24oYSxiLGMsZCxlKXt2YXIgZj1cIm1vdXNlb3ZlclwiPT09YXx8XCJwb2ludGVyb3ZlclwiPT09YSxnPVwibW91c2VvdXRcIj09PWF8fFwicG9pbnRlcm91dFwiPT09YTtpZihmJiYwPT09KGUmMzIpJiYoYy5yZWxhdGVkVGFyZ2V0fHxjLmZyb21FbGVtZW50KXx8IWcmJiFmKXJldHVybiBudWxsO2Y9ZC53aW5kb3c9PT1kP2Q6KGY9ZC5vd25lckRvY3VtZW50KT9mLmRlZmF1bHRWaWV3fHxmLnBhcmVudFdpbmRvdzp3aW5kb3c7aWYoZyl7aWYoZz1iLGI9KGI9Yy5yZWxhdGVkVGFyZ2V0fHxjLnRvRWxlbWVudCk/dGMoYik6bnVsbCxudWxsIT09Yil7dmFyIGg9ZGMoYik7aWYoYiE9PWh8fDUhPT1iLnRhZyYmNiE9PWIudGFnKWI9bnVsbH19ZWxzZSBnPW51bGw7aWYoZz09PWIpcmV0dXJuIG51bGw7aWYoXCJtb3VzZW91dFwiPT09YXx8XCJtb3VzZW92ZXJcIj09PVxuYSl7dmFyIGs9VmU7dmFyIGw9WGUubW91c2VMZWF2ZTt2YXIgbT1YZS5tb3VzZUVudGVyO3ZhciBwPVwibW91c2VcIn1lbHNlIGlmKFwicG9pbnRlcm91dFwiPT09YXx8XCJwb2ludGVyb3ZlclwiPT09YSlrPVdlLGw9WGUucG9pbnRlckxlYXZlLG09WGUucG9pbnRlckVudGVyLHA9XCJwb2ludGVyXCI7YT1udWxsPT1nP2Y6UGQoZyk7Zj1udWxsPT1iP2Y6UGQoYik7bD1rLmdldFBvb2xlZChsLGcsYyxkKTtsLnR5cGU9cCtcImxlYXZlXCI7bC50YXJnZXQ9YTtsLnJlbGF0ZWRUYXJnZXQ9ZjtjPWsuZ2V0UG9vbGVkKG0sYixjLGQpO2MudHlwZT1wK1wiZW50ZXJcIjtjLnRhcmdldD1mO2MucmVsYXRlZFRhcmdldD1hO2Q9ZztwPWI7aWYoZCYmcClhOntrPWQ7bT1wO2c9MDtmb3IoYT1rO2E7YT1SZChhKSlnKys7YT0wO2ZvcihiPW07YjtiPVJkKGIpKWErKztmb3IoOzA8Zy1hOylrPVJkKGspLGctLTtmb3IoOzA8YS1nOyltPVJkKG0pLGEtLTtmb3IoO2ctLTspe2lmKGs9PT1tfHxrPT09bS5hbHRlcm5hdGUpYnJlYWsgYTtcbms9UmQoayk7bT1SZChtKX1rPW51bGx9ZWxzZSBrPW51bGw7bT1rO2ZvcihrPVtdO2QmJmQhPT1tOyl7Zz1kLmFsdGVybmF0ZTtpZihudWxsIT09ZyYmZz09PW0pYnJlYWs7ay5wdXNoKGQpO2Q9UmQoZCl9Zm9yKGQ9W107cCYmcCE9PW07KXtnPXAuYWx0ZXJuYXRlO2lmKG51bGwhPT1nJiZnPT09bSlicmVhaztkLnB1c2gocCk7cD1SZChwKX1mb3IocD0wO3A8ay5sZW5ndGg7cCsrKVZkKGtbcF0sXCJidWJibGVkXCIsbCk7Zm9yKHA9ZC5sZW5ndGg7MDxwLS07KVZkKGRbcF0sXCJjYXB0dXJlZFwiLGMpO3JldHVybiAwPT09KGUmNjQpP1tsXTpbbCxjXX19O2Z1bmN0aW9uIFplKGEsYil7cmV0dXJuIGE9PT1iJiYoMCE9PWF8fDEvYT09PTEvYil8fGEhPT1hJiZiIT09Yn12YXIgJGU9XCJmdW5jdGlvblwiPT09dHlwZW9mIE9iamVjdC5pcz9PYmplY3QuaXM6WmUsYWY9T2JqZWN0LnByb3RvdHlwZS5oYXNPd25Qcm9wZXJ0eTtcbmZ1bmN0aW9uIGJmKGEsYil7aWYoJGUoYSxiKSlyZXR1cm4hMDtpZihcIm9iamVjdFwiIT09dHlwZW9mIGF8fG51bGw9PT1hfHxcIm9iamVjdFwiIT09dHlwZW9mIGJ8fG51bGw9PT1iKXJldHVybiExO3ZhciBjPU9iamVjdC5rZXlzKGEpLGQ9T2JqZWN0LmtleXMoYik7aWYoYy5sZW5ndGghPT1kLmxlbmd0aClyZXR1cm4hMTtmb3IoZD0wO2Q8Yy5sZW5ndGg7ZCsrKWlmKCFhZi5jYWxsKGIsY1tkXSl8fCEkZShhW2NbZF1dLGJbY1tkXV0pKXJldHVybiExO3JldHVybiEwfVxudmFyIGNmPXlhJiZcImRvY3VtZW50TW9kZVwiaW4gZG9jdW1lbnQmJjExPj1kb2N1bWVudC5kb2N1bWVudE1vZGUsZGY9e3NlbGVjdDp7cGhhc2VkUmVnaXN0cmF0aW9uTmFtZXM6e2J1YmJsZWQ6XCJvblNlbGVjdFwiLGNhcHR1cmVkOlwib25TZWxlY3RDYXB0dXJlXCJ9LGRlcGVuZGVuY2llczpcImJsdXIgY29udGV4dG1lbnUgZHJhZ2VuZCBmb2N1cyBrZXlkb3duIGtleXVwIG1vdXNlZG93biBtb3VzZXVwIHNlbGVjdGlvbmNoYW5nZVwiLnNwbGl0KFwiIFwiKX19LGVmPW51bGwsZmY9bnVsbCxnZj1udWxsLGhmPSExO1xuZnVuY3Rpb24gamYoYSxiKXt2YXIgYz1iLndpbmRvdz09PWI/Yi5kb2N1bWVudDo5PT09Yi5ub2RlVHlwZT9iOmIub3duZXJEb2N1bWVudDtpZihoZnx8bnVsbD09ZWZ8fGVmIT09dGQoYykpcmV0dXJuIG51bGw7Yz1lZjtcInNlbGVjdGlvblN0YXJ0XCJpbiBjJiZ5ZChjKT9jPXtzdGFydDpjLnNlbGVjdGlvblN0YXJ0LGVuZDpjLnNlbGVjdGlvbkVuZH06KGM9KGMub3duZXJEb2N1bWVudCYmYy5vd25lckRvY3VtZW50LmRlZmF1bHRWaWV3fHx3aW5kb3cpLmdldFNlbGVjdGlvbigpLGM9e2FuY2hvck5vZGU6Yy5hbmNob3JOb2RlLGFuY2hvck9mZnNldDpjLmFuY2hvck9mZnNldCxmb2N1c05vZGU6Yy5mb2N1c05vZGUsZm9jdXNPZmZzZXQ6Yy5mb2N1c09mZnNldH0pO3JldHVybiBnZiYmYmYoZ2YsYyk/bnVsbDooZ2Y9YyxhPUcuZ2V0UG9vbGVkKGRmLnNlbGVjdCxmZixhLGIpLGEudHlwZT1cInNlbGVjdFwiLGEudGFyZ2V0PWVmLFhkKGEpLGEpfVxudmFyIGtmPXtldmVudFR5cGVzOmRmLGV4dHJhY3RFdmVudHM6ZnVuY3Rpb24oYSxiLGMsZCxlLGYpe2U9Znx8KGQud2luZG93PT09ZD9kLmRvY3VtZW50Ojk9PT1kLm5vZGVUeXBlP2Q6ZC5vd25lckRvY3VtZW50KTtpZighKGY9IWUpKXthOntlPWNjKGUpO2Y9d2Eub25TZWxlY3Q7Zm9yKHZhciBnPTA7ZzxmLmxlbmd0aDtnKyspaWYoIWUuaGFzKGZbZ10pKXtlPSExO2JyZWFrIGF9ZT0hMH1mPSFlfWlmKGYpcmV0dXJuIG51bGw7ZT1iP1BkKGIpOndpbmRvdztzd2l0Y2goYSl7Y2FzZSBcImZvY3VzXCI6aWYoeGUoZSl8fFwidHJ1ZVwiPT09ZS5jb250ZW50RWRpdGFibGUpZWY9ZSxmZj1iLGdmPW51bGw7YnJlYWs7Y2FzZSBcImJsdXJcIjpnZj1mZj1lZj1udWxsO2JyZWFrO2Nhc2UgXCJtb3VzZWRvd25cIjpoZj0hMDticmVhaztjYXNlIFwiY29udGV4dG1lbnVcIjpjYXNlIFwibW91c2V1cFwiOmNhc2UgXCJkcmFnZW5kXCI6cmV0dXJuIGhmPSExLGpmKGMsZCk7Y2FzZSBcInNlbGVjdGlvbmNoYW5nZVwiOmlmKGNmKWJyZWFrO1xuY2FzZSBcImtleWRvd25cIjpjYXNlIFwia2V5dXBcIjpyZXR1cm4gamYoYyxkKX1yZXR1cm4gbnVsbH19LGxmPUcuZXh0ZW5kKHthbmltYXRpb25OYW1lOm51bGwsZWxhcHNlZFRpbWU6bnVsbCxwc2V1ZG9FbGVtZW50Om51bGx9KSxtZj1HLmV4dGVuZCh7Y2xpcGJvYXJkRGF0YTpmdW5jdGlvbihhKXtyZXR1cm5cImNsaXBib2FyZERhdGFcImluIGE/YS5jbGlwYm9hcmREYXRhOndpbmRvdy5jbGlwYm9hcmREYXRhfX0pLG5mPU5lLmV4dGVuZCh7cmVsYXRlZFRhcmdldDpudWxsfSk7ZnVuY3Rpb24gb2YoYSl7dmFyIGI9YS5rZXlDb2RlO1wiY2hhckNvZGVcImluIGE/KGE9YS5jaGFyQ29kZSwwPT09YSYmMTM9PT1iJiYoYT0xMykpOmE9YjsxMD09PWEmJihhPTEzKTtyZXR1cm4gMzI8PWF8fDEzPT09YT9hOjB9XG52YXIgcGY9e0VzYzpcIkVzY2FwZVwiLFNwYWNlYmFyOlwiIFwiLExlZnQ6XCJBcnJvd0xlZnRcIixVcDpcIkFycm93VXBcIixSaWdodDpcIkFycm93UmlnaHRcIixEb3duOlwiQXJyb3dEb3duXCIsRGVsOlwiRGVsZXRlXCIsV2luOlwiT1NcIixNZW51OlwiQ29udGV4dE1lbnVcIixBcHBzOlwiQ29udGV4dE1lbnVcIixTY3JvbGw6XCJTY3JvbGxMb2NrXCIsTW96UHJpbnRhYmxlS2V5OlwiVW5pZGVudGlmaWVkXCJ9LHFmPXs4OlwiQmFja3NwYWNlXCIsOTpcIlRhYlwiLDEyOlwiQ2xlYXJcIiwxMzpcIkVudGVyXCIsMTY6XCJTaGlmdFwiLDE3OlwiQ29udHJvbFwiLDE4OlwiQWx0XCIsMTk6XCJQYXVzZVwiLDIwOlwiQ2Fwc0xvY2tcIiwyNzpcIkVzY2FwZVwiLDMyOlwiIFwiLDMzOlwiUGFnZVVwXCIsMzQ6XCJQYWdlRG93blwiLDM1OlwiRW5kXCIsMzY6XCJIb21lXCIsMzc6XCJBcnJvd0xlZnRcIiwzODpcIkFycm93VXBcIiwzOTpcIkFycm93UmlnaHRcIiw0MDpcIkFycm93RG93blwiLDQ1OlwiSW5zZXJ0XCIsNDY6XCJEZWxldGVcIiwxMTI6XCJGMVwiLDExMzpcIkYyXCIsMTE0OlwiRjNcIiwxMTU6XCJGNFwiLFxuMTE2OlwiRjVcIiwxMTc6XCJGNlwiLDExODpcIkY3XCIsMTE5OlwiRjhcIiwxMjA6XCJGOVwiLDEyMTpcIkYxMFwiLDEyMjpcIkYxMVwiLDEyMzpcIkYxMlwiLDE0NDpcIk51bUxvY2tcIiwxNDU6XCJTY3JvbGxMb2NrXCIsMjI0OlwiTWV0YVwifSxyZj1OZS5leHRlbmQoe2tleTpmdW5jdGlvbihhKXtpZihhLmtleSl7dmFyIGI9cGZbYS5rZXldfHxhLmtleTtpZihcIlVuaWRlbnRpZmllZFwiIT09YilyZXR1cm4gYn1yZXR1cm5cImtleXByZXNzXCI9PT1hLnR5cGU/KGE9b2YoYSksMTM9PT1hP1wiRW50ZXJcIjpTdHJpbmcuZnJvbUNoYXJDb2RlKGEpKTpcImtleWRvd25cIj09PWEudHlwZXx8XCJrZXl1cFwiPT09YS50eXBlP3FmW2Eua2V5Q29kZV18fFwiVW5pZGVudGlmaWVkXCI6XCJcIn0sbG9jYXRpb246bnVsbCxjdHJsS2V5Om51bGwsc2hpZnRLZXk6bnVsbCxhbHRLZXk6bnVsbCxtZXRhS2V5Om51bGwscmVwZWF0Om51bGwsbG9jYWxlOm51bGwsZ2V0TW9kaWZpZXJTdGF0ZTpRZSxjaGFyQ29kZTpmdW5jdGlvbihhKXtyZXR1cm5cImtleXByZXNzXCI9PT1cbmEudHlwZT9vZihhKTowfSxrZXlDb2RlOmZ1bmN0aW9uKGEpe3JldHVyblwia2V5ZG93blwiPT09YS50eXBlfHxcImtleXVwXCI9PT1hLnR5cGU/YS5rZXlDb2RlOjB9LHdoaWNoOmZ1bmN0aW9uKGEpe3JldHVyblwia2V5cHJlc3NcIj09PWEudHlwZT9vZihhKTpcImtleWRvd25cIj09PWEudHlwZXx8XCJrZXl1cFwiPT09YS50eXBlP2Eua2V5Q29kZTowfX0pLHNmPVZlLmV4dGVuZCh7ZGF0YVRyYW5zZmVyOm51bGx9KSx0Zj1OZS5leHRlbmQoe3RvdWNoZXM6bnVsbCx0YXJnZXRUb3VjaGVzOm51bGwsY2hhbmdlZFRvdWNoZXM6bnVsbCxhbHRLZXk6bnVsbCxtZXRhS2V5Om51bGwsY3RybEtleTpudWxsLHNoaWZ0S2V5Om51bGwsZ2V0TW9kaWZpZXJTdGF0ZTpRZX0pLHVmPUcuZXh0ZW5kKHtwcm9wZXJ0eU5hbWU6bnVsbCxlbGFwc2VkVGltZTpudWxsLHBzZXVkb0VsZW1lbnQ6bnVsbH0pLHZmPVZlLmV4dGVuZCh7ZGVsdGFYOmZ1bmN0aW9uKGEpe3JldHVyblwiZGVsdGFYXCJpbiBhP2EuZGVsdGFYOlwid2hlZWxEZWx0YVhcImluXG5hPy1hLndoZWVsRGVsdGFYOjB9LGRlbHRhWTpmdW5jdGlvbihhKXtyZXR1cm5cImRlbHRhWVwiaW4gYT9hLmRlbHRhWTpcIndoZWVsRGVsdGFZXCJpbiBhPy1hLndoZWVsRGVsdGFZOlwid2hlZWxEZWx0YVwiaW4gYT8tYS53aGVlbERlbHRhOjB9LGRlbHRhWjpudWxsLGRlbHRhTW9kZTpudWxsfSksd2Y9e2V2ZW50VHlwZXM6V2MsZXh0cmFjdEV2ZW50czpmdW5jdGlvbihhLGIsYyxkKXt2YXIgZT1ZYy5nZXQoYSk7aWYoIWUpcmV0dXJuIG51bGw7c3dpdGNoKGEpe2Nhc2UgXCJrZXlwcmVzc1wiOmlmKDA9PT1vZihjKSlyZXR1cm4gbnVsbDtjYXNlIFwia2V5ZG93blwiOmNhc2UgXCJrZXl1cFwiOmE9cmY7YnJlYWs7Y2FzZSBcImJsdXJcIjpjYXNlIFwiZm9jdXNcIjphPW5mO2JyZWFrO2Nhc2UgXCJjbGlja1wiOmlmKDI9PT1jLmJ1dHRvbilyZXR1cm4gbnVsbDtjYXNlIFwiYXV4Y2xpY2tcIjpjYXNlIFwiZGJsY2xpY2tcIjpjYXNlIFwibW91c2Vkb3duXCI6Y2FzZSBcIm1vdXNlbW92ZVwiOmNhc2UgXCJtb3VzZXVwXCI6Y2FzZSBcIm1vdXNlb3V0XCI6Y2FzZSBcIm1vdXNlb3ZlclwiOmNhc2UgXCJjb250ZXh0bWVudVwiOmE9XG5WZTticmVhaztjYXNlIFwiZHJhZ1wiOmNhc2UgXCJkcmFnZW5kXCI6Y2FzZSBcImRyYWdlbnRlclwiOmNhc2UgXCJkcmFnZXhpdFwiOmNhc2UgXCJkcmFnbGVhdmVcIjpjYXNlIFwiZHJhZ292ZXJcIjpjYXNlIFwiZHJhZ3N0YXJ0XCI6Y2FzZSBcImRyb3BcIjphPXNmO2JyZWFrO2Nhc2UgXCJ0b3VjaGNhbmNlbFwiOmNhc2UgXCJ0b3VjaGVuZFwiOmNhc2UgXCJ0b3VjaG1vdmVcIjpjYXNlIFwidG91Y2hzdGFydFwiOmE9dGY7YnJlYWs7Y2FzZSBYYjpjYXNlIFliOmNhc2UgWmI6YT1sZjticmVhaztjYXNlICRiOmE9dWY7YnJlYWs7Y2FzZSBcInNjcm9sbFwiOmE9TmU7YnJlYWs7Y2FzZSBcIndoZWVsXCI6YT12ZjticmVhaztjYXNlIFwiY29weVwiOmNhc2UgXCJjdXRcIjpjYXNlIFwicGFzdGVcIjphPW1mO2JyZWFrO2Nhc2UgXCJnb3Rwb2ludGVyY2FwdHVyZVwiOmNhc2UgXCJsb3N0cG9pbnRlcmNhcHR1cmVcIjpjYXNlIFwicG9pbnRlcmNhbmNlbFwiOmNhc2UgXCJwb2ludGVyZG93blwiOmNhc2UgXCJwb2ludGVybW92ZVwiOmNhc2UgXCJwb2ludGVyb3V0XCI6Y2FzZSBcInBvaW50ZXJvdmVyXCI6Y2FzZSBcInBvaW50ZXJ1cFwiOmE9XG5XZTticmVhaztkZWZhdWx0OmE9R31iPWEuZ2V0UG9vbGVkKGUsYixjLGQpO1hkKGIpO3JldHVybiBifX07aWYocGEpdGhyb3cgRXJyb3IodSgxMDEpKTtwYT1BcnJheS5wcm90b3R5cGUuc2xpY2UuY2FsbChcIlJlc3BvbmRlckV2ZW50UGx1Z2luIFNpbXBsZUV2ZW50UGx1Z2luIEVudGVyTGVhdmVFdmVudFBsdWdpbiBDaGFuZ2VFdmVudFBsdWdpbiBTZWxlY3RFdmVudFBsdWdpbiBCZWZvcmVJbnB1dEV2ZW50UGx1Z2luXCIuc3BsaXQoXCIgXCIpKTtyYSgpO3ZhciB4Zj1OYztsYT1RZDttYT14ZjtuYT1QZDt4YSh7U2ltcGxlRXZlbnRQbHVnaW46d2YsRW50ZXJMZWF2ZUV2ZW50UGx1Z2luOlllLENoYW5nZUV2ZW50UGx1Z2luOk1lLFNlbGVjdEV2ZW50UGx1Z2luOmtmLEJlZm9yZUlucHV0RXZlbnRQbHVnaW46dmV9KTt2YXIgeWY9W10semY9LTE7ZnVuY3Rpb24gSChhKXswPnpmfHwoYS5jdXJyZW50PXlmW3pmXSx5Zlt6Zl09bnVsbCx6Zi0tKX1cbmZ1bmN0aW9uIEkoYSxiKXt6ZisrO3lmW3pmXT1hLmN1cnJlbnQ7YS5jdXJyZW50PWJ9dmFyIEFmPXt9LEo9e2N1cnJlbnQ6QWZ9LEs9e2N1cnJlbnQ6ITF9LEJmPUFmO2Z1bmN0aW9uIENmKGEsYil7dmFyIGM9YS50eXBlLmNvbnRleHRUeXBlcztpZighYylyZXR1cm4gQWY7dmFyIGQ9YS5zdGF0ZU5vZGU7aWYoZCYmZC5fX3JlYWN0SW50ZXJuYWxNZW1vaXplZFVubWFza2VkQ2hpbGRDb250ZXh0PT09YilyZXR1cm4gZC5fX3JlYWN0SW50ZXJuYWxNZW1vaXplZE1hc2tlZENoaWxkQ29udGV4dDt2YXIgZT17fSxmO2ZvcihmIGluIGMpZVtmXT1iW2ZdO2QmJihhPWEuc3RhdGVOb2RlLGEuX19yZWFjdEludGVybmFsTWVtb2l6ZWRVbm1hc2tlZENoaWxkQ29udGV4dD1iLGEuX19yZWFjdEludGVybmFsTWVtb2l6ZWRNYXNrZWRDaGlsZENvbnRleHQ9ZSk7cmV0dXJuIGV9ZnVuY3Rpb24gTChhKXthPWEuY2hpbGRDb250ZXh0VHlwZXM7cmV0dXJuIG51bGwhPT1hJiZ2b2lkIDAhPT1hfVxuZnVuY3Rpb24gRGYoKXtIKEspO0goSil9ZnVuY3Rpb24gRWYoYSxiLGMpe2lmKEouY3VycmVudCE9PUFmKXRocm93IEVycm9yKHUoMTY4KSk7SShKLGIpO0koSyxjKX1mdW5jdGlvbiBGZihhLGIsYyl7dmFyIGQ9YS5zdGF0ZU5vZGU7YT1iLmNoaWxkQ29udGV4dFR5cGVzO2lmKFwiZnVuY3Rpb25cIiE9PXR5cGVvZiBkLmdldENoaWxkQ29udGV4dClyZXR1cm4gYztkPWQuZ2V0Q2hpbGRDb250ZXh0KCk7Zm9yKHZhciBlIGluIGQpaWYoIShlIGluIGEpKXRocm93IEVycm9yKHUoMTA4LHBiKGIpfHxcIlVua25vd25cIixlKSk7cmV0dXJuIG4oe30sYyx7fSxkKX1mdW5jdGlvbiBHZihhKXthPShhPWEuc3RhdGVOb2RlKSYmYS5fX3JlYWN0SW50ZXJuYWxNZW1vaXplZE1lcmdlZENoaWxkQ29udGV4dHx8QWY7QmY9Si5jdXJyZW50O0koSixhKTtJKEssSy5jdXJyZW50KTtyZXR1cm4hMH1cbmZ1bmN0aW9uIEhmKGEsYixjKXt2YXIgZD1hLnN0YXRlTm9kZTtpZighZCl0aHJvdyBFcnJvcih1KDE2OSkpO2M/KGE9RmYoYSxiLEJmKSxkLl9fcmVhY3RJbnRlcm5hbE1lbW9pemVkTWVyZ2VkQ2hpbGRDb250ZXh0PWEsSChLKSxIKEopLEkoSixhKSk6SChLKTtJKEssYyl9XG52YXIgSWY9ci51bnN0YWJsZV9ydW5XaXRoUHJpb3JpdHksSmY9ci51bnN0YWJsZV9zY2hlZHVsZUNhbGxiYWNrLEtmPXIudW5zdGFibGVfY2FuY2VsQ2FsbGJhY2ssTGY9ci51bnN0YWJsZV9yZXF1ZXN0UGFpbnQsTWY9ci51bnN0YWJsZV9ub3csTmY9ci51bnN0YWJsZV9nZXRDdXJyZW50UHJpb3JpdHlMZXZlbCxPZj1yLnVuc3RhYmxlX0ltbWVkaWF0ZVByaW9yaXR5LFBmPXIudW5zdGFibGVfVXNlckJsb2NraW5nUHJpb3JpdHksUWY9ci51bnN0YWJsZV9Ob3JtYWxQcmlvcml0eSxSZj1yLnVuc3RhYmxlX0xvd1ByaW9yaXR5LFNmPXIudW5zdGFibGVfSWRsZVByaW9yaXR5LFRmPXt9LFVmPXIudW5zdGFibGVfc2hvdWxkWWllbGQsVmY9dm9pZCAwIT09TGY/TGY6ZnVuY3Rpb24oKXt9LFdmPW51bGwsWGY9bnVsbCxZZj0hMSxaZj1NZigpLCRmPTFFND5aZj9NZjpmdW5jdGlvbigpe3JldHVybiBNZigpLVpmfTtcbmZ1bmN0aW9uIGFnKCl7c3dpdGNoKE5mKCkpe2Nhc2UgT2Y6cmV0dXJuIDk5O2Nhc2UgUGY6cmV0dXJuIDk4O2Nhc2UgUWY6cmV0dXJuIDk3O2Nhc2UgUmY6cmV0dXJuIDk2O2Nhc2UgU2Y6cmV0dXJuIDk1O2RlZmF1bHQ6dGhyb3cgRXJyb3IodSgzMzIpKTt9fWZ1bmN0aW9uIGJnKGEpe3N3aXRjaChhKXtjYXNlIDk5OnJldHVybiBPZjtjYXNlIDk4OnJldHVybiBQZjtjYXNlIDk3OnJldHVybiBRZjtjYXNlIDk2OnJldHVybiBSZjtjYXNlIDk1OnJldHVybiBTZjtkZWZhdWx0OnRocm93IEVycm9yKHUoMzMyKSk7fX1mdW5jdGlvbiBjZyhhLGIpe2E9YmcoYSk7cmV0dXJuIElmKGEsYil9ZnVuY3Rpb24gZGcoYSxiLGMpe2E9YmcoYSk7cmV0dXJuIEpmKGEsYixjKX1mdW5jdGlvbiBlZyhhKXtudWxsPT09V2Y/KFdmPVthXSxYZj1KZihPZixmZykpOldmLnB1c2goYSk7cmV0dXJuIFRmfWZ1bmN0aW9uIGdnKCl7aWYobnVsbCE9PVhmKXt2YXIgYT1YZjtYZj1udWxsO0tmKGEpfWZnKCl9XG5mdW5jdGlvbiBmZygpe2lmKCFZZiYmbnVsbCE9PVdmKXtZZj0hMDt2YXIgYT0wO3RyeXt2YXIgYj1XZjtjZyg5OSxmdW5jdGlvbigpe2Zvcig7YTxiLmxlbmd0aDthKyspe3ZhciBjPWJbYV07ZG8gYz1jKCEwKTt3aGlsZShudWxsIT09Yyl9fSk7V2Y9bnVsbH1jYXRjaChjKXt0aHJvdyBudWxsIT09V2YmJihXZj1XZi5zbGljZShhKzEpKSxKZihPZixnZyksYzt9ZmluYWxseXtZZj0hMX19fWZ1bmN0aW9uIGhnKGEsYixjKXtjLz0xMDtyZXR1cm4gMTA3Mzc0MTgyMS0oKCgxMDczNzQxODIxLWErYi8xMCkvY3wwKSsxKSpjfWZ1bmN0aW9uIGlnKGEsYil7aWYoYSYmYS5kZWZhdWx0UHJvcHMpe2I9bih7fSxiKTthPWEuZGVmYXVsdFByb3BzO2Zvcih2YXIgYyBpbiBhKXZvaWQgMD09PWJbY10mJihiW2NdPWFbY10pfXJldHVybiBifXZhciBqZz17Y3VycmVudDpudWxsfSxrZz1udWxsLGxnPW51bGwsbWc9bnVsbDtmdW5jdGlvbiBuZygpe21nPWxnPWtnPW51bGx9XG5mdW5jdGlvbiBvZyhhKXt2YXIgYj1qZy5jdXJyZW50O0goamcpO2EudHlwZS5fY29udGV4dC5fY3VycmVudFZhbHVlPWJ9ZnVuY3Rpb24gcGcoYSxiKXtmb3IoO251bGwhPT1hOyl7dmFyIGM9YS5hbHRlcm5hdGU7aWYoYS5jaGlsZEV4cGlyYXRpb25UaW1lPGIpYS5jaGlsZEV4cGlyYXRpb25UaW1lPWIsbnVsbCE9PWMmJmMuY2hpbGRFeHBpcmF0aW9uVGltZTxiJiYoYy5jaGlsZEV4cGlyYXRpb25UaW1lPWIpO2Vsc2UgaWYobnVsbCE9PWMmJmMuY2hpbGRFeHBpcmF0aW9uVGltZTxiKWMuY2hpbGRFeHBpcmF0aW9uVGltZT1iO2Vsc2UgYnJlYWs7YT1hLnJldHVybn19ZnVuY3Rpb24gcWcoYSxiKXtrZz1hO21nPWxnPW51bGw7YT1hLmRlcGVuZGVuY2llcztudWxsIT09YSYmbnVsbCE9PWEuZmlyc3RDb250ZXh0JiYoYS5leHBpcmF0aW9uVGltZT49YiYmKHJnPSEwKSxhLmZpcnN0Q29udGV4dD1udWxsKX1cbmZ1bmN0aW9uIHNnKGEsYil7aWYobWchPT1hJiYhMSE9PWImJjAhPT1iKXtpZihcIm51bWJlclwiIT09dHlwZW9mIGJ8fDEwNzM3NDE4MjM9PT1iKW1nPWEsYj0xMDczNzQxODIzO2I9e2NvbnRleHQ6YSxvYnNlcnZlZEJpdHM6YixuZXh0Om51bGx9O2lmKG51bGw9PT1sZyl7aWYobnVsbD09PWtnKXRocm93IEVycm9yKHUoMzA4KSk7bGc9YjtrZy5kZXBlbmRlbmNpZXM9e2V4cGlyYXRpb25UaW1lOjAsZmlyc3RDb250ZXh0OmIscmVzcG9uZGVyczpudWxsfX1lbHNlIGxnPWxnLm5leHQ9Yn1yZXR1cm4gYS5fY3VycmVudFZhbHVlfXZhciB0Zz0hMTtmdW5jdGlvbiB1ZyhhKXthLnVwZGF0ZVF1ZXVlPXtiYXNlU3RhdGU6YS5tZW1vaXplZFN0YXRlLGJhc2VRdWV1ZTpudWxsLHNoYXJlZDp7cGVuZGluZzpudWxsfSxlZmZlY3RzOm51bGx9fVxuZnVuY3Rpb24gdmcoYSxiKXthPWEudXBkYXRlUXVldWU7Yi51cGRhdGVRdWV1ZT09PWEmJihiLnVwZGF0ZVF1ZXVlPXtiYXNlU3RhdGU6YS5iYXNlU3RhdGUsYmFzZVF1ZXVlOmEuYmFzZVF1ZXVlLHNoYXJlZDphLnNoYXJlZCxlZmZlY3RzOmEuZWZmZWN0c30pfWZ1bmN0aW9uIHdnKGEsYil7YT17ZXhwaXJhdGlvblRpbWU6YSxzdXNwZW5zZUNvbmZpZzpiLHRhZzowLHBheWxvYWQ6bnVsbCxjYWxsYmFjazpudWxsLG5leHQ6bnVsbH07cmV0dXJuIGEubmV4dD1hfWZ1bmN0aW9uIHhnKGEsYil7YT1hLnVwZGF0ZVF1ZXVlO2lmKG51bGwhPT1hKXthPWEuc2hhcmVkO3ZhciBjPWEucGVuZGluZztudWxsPT09Yz9iLm5leHQ9YjooYi5uZXh0PWMubmV4dCxjLm5leHQ9Yik7YS5wZW5kaW5nPWJ9fVxuZnVuY3Rpb24geWcoYSxiKXt2YXIgYz1hLmFsdGVybmF0ZTtudWxsIT09YyYmdmcoYyxhKTthPWEudXBkYXRlUXVldWU7Yz1hLmJhc2VRdWV1ZTtudWxsPT09Yz8oYS5iYXNlUXVldWU9Yi5uZXh0PWIsYi5uZXh0PWIpOihiLm5leHQ9Yy5uZXh0LGMubmV4dD1iKX1cbmZ1bmN0aW9uIHpnKGEsYixjLGQpe3ZhciBlPWEudXBkYXRlUXVldWU7dGc9ITE7dmFyIGY9ZS5iYXNlUXVldWUsZz1lLnNoYXJlZC5wZW5kaW5nO2lmKG51bGwhPT1nKXtpZihudWxsIT09Zil7dmFyIGg9Zi5uZXh0O2YubmV4dD1nLm5leHQ7Zy5uZXh0PWh9Zj1nO2Uuc2hhcmVkLnBlbmRpbmc9bnVsbDtoPWEuYWx0ZXJuYXRlO251bGwhPT1oJiYoaD1oLnVwZGF0ZVF1ZXVlLG51bGwhPT1oJiYoaC5iYXNlUXVldWU9ZykpfWlmKG51bGwhPT1mKXtoPWYubmV4dDt2YXIgaz1lLmJhc2VTdGF0ZSxsPTAsbT1udWxsLHA9bnVsbCx4PW51bGw7aWYobnVsbCE9PWgpe3ZhciB6PWg7ZG97Zz16LmV4cGlyYXRpb25UaW1lO2lmKGc8ZCl7dmFyIGNhPXtleHBpcmF0aW9uVGltZTp6LmV4cGlyYXRpb25UaW1lLHN1c3BlbnNlQ29uZmlnOnouc3VzcGVuc2VDb25maWcsdGFnOnoudGFnLHBheWxvYWQ6ei5wYXlsb2FkLGNhbGxiYWNrOnouY2FsbGJhY2ssbmV4dDpudWxsfTtudWxsPT09eD8ocD14PVxuY2EsbT1rKTp4PXgubmV4dD1jYTtnPmwmJihsPWcpfWVsc2V7bnVsbCE9PXgmJih4PXgubmV4dD17ZXhwaXJhdGlvblRpbWU6MTA3Mzc0MTgyMyxzdXNwZW5zZUNvbmZpZzp6LnN1c3BlbnNlQ29uZmlnLHRhZzp6LnRhZyxwYXlsb2FkOnoucGF5bG9hZCxjYWxsYmFjazp6LmNhbGxiYWNrLG5leHQ6bnVsbH0pO0FnKGcsei5zdXNwZW5zZUNvbmZpZyk7YTp7dmFyIEQ9YSx0PXo7Zz1iO2NhPWM7c3dpdGNoKHQudGFnKXtjYXNlIDE6RD10LnBheWxvYWQ7aWYoXCJmdW5jdGlvblwiPT09dHlwZW9mIEQpe2s9RC5jYWxsKGNhLGssZyk7YnJlYWsgYX1rPUQ7YnJlYWsgYTtjYXNlIDM6RC5lZmZlY3RUYWc9RC5lZmZlY3RUYWcmLTQwOTd8NjQ7Y2FzZSAwOkQ9dC5wYXlsb2FkO2c9XCJmdW5jdGlvblwiPT09dHlwZW9mIEQ/RC5jYWxsKGNhLGssZyk6RDtpZihudWxsPT09Z3x8dm9pZCAwPT09ZylicmVhayBhO2s9bih7fSxrLGcpO2JyZWFrIGE7Y2FzZSAyOnRnPSEwfX1udWxsIT09ei5jYWxsYmFjayYmXG4oYS5lZmZlY3RUYWd8PTMyLGc9ZS5lZmZlY3RzLG51bGw9PT1nP2UuZWZmZWN0cz1bel06Zy5wdXNoKHopKX16PXoubmV4dDtpZihudWxsPT09enx8ej09PWgpaWYoZz1lLnNoYXJlZC5wZW5kaW5nLG51bGw9PT1nKWJyZWFrO2Vsc2Ugej1mLm5leHQ9Zy5uZXh0LGcubmV4dD1oLGUuYmFzZVF1ZXVlPWY9ZyxlLnNoYXJlZC5wZW5kaW5nPW51bGx9d2hpbGUoMSl9bnVsbD09PXg/bT1rOngubmV4dD1wO2UuYmFzZVN0YXRlPW07ZS5iYXNlUXVldWU9eDtCZyhsKTthLmV4cGlyYXRpb25UaW1lPWw7YS5tZW1vaXplZFN0YXRlPWt9fVxuZnVuY3Rpb24gQ2coYSxiLGMpe2E9Yi5lZmZlY3RzO2IuZWZmZWN0cz1udWxsO2lmKG51bGwhPT1hKWZvcihiPTA7YjxhLmxlbmd0aDtiKyspe3ZhciBkPWFbYl0sZT1kLmNhbGxiYWNrO2lmKG51bGwhPT1lKXtkLmNhbGxiYWNrPW51bGw7ZD1lO2U9YztpZihcImZ1bmN0aW9uXCIhPT10eXBlb2YgZCl0aHJvdyBFcnJvcih1KDE5MSxkKSk7ZC5jYWxsKGUpfX19dmFyIERnPVdhLlJlYWN0Q3VycmVudEJhdGNoQ29uZmlnLEVnPShuZXcgYWEuQ29tcG9uZW50KS5yZWZzO2Z1bmN0aW9uIEZnKGEsYixjLGQpe2I9YS5tZW1vaXplZFN0YXRlO2M9YyhkLGIpO2M9bnVsbD09PWN8fHZvaWQgMD09PWM/YjpuKHt9LGIsYyk7YS5tZW1vaXplZFN0YXRlPWM7MD09PWEuZXhwaXJhdGlvblRpbWUmJihhLnVwZGF0ZVF1ZXVlLmJhc2VTdGF0ZT1jKX1cbnZhciBKZz17aXNNb3VudGVkOmZ1bmN0aW9uKGEpe3JldHVybihhPWEuX3JlYWN0SW50ZXJuYWxGaWJlcik/ZGMoYSk9PT1hOiExfSxlbnF1ZXVlU2V0U3RhdGU6ZnVuY3Rpb24oYSxiLGMpe2E9YS5fcmVhY3RJbnRlcm5hbEZpYmVyO3ZhciBkPUdnKCksZT1EZy5zdXNwZW5zZTtkPUhnKGQsYSxlKTtlPXdnKGQsZSk7ZS5wYXlsb2FkPWI7dm9pZCAwIT09YyYmbnVsbCE9PWMmJihlLmNhbGxiYWNrPWMpO3hnKGEsZSk7SWcoYSxkKX0sZW5xdWV1ZVJlcGxhY2VTdGF0ZTpmdW5jdGlvbihhLGIsYyl7YT1hLl9yZWFjdEludGVybmFsRmliZXI7dmFyIGQ9R2coKSxlPURnLnN1c3BlbnNlO2Q9SGcoZCxhLGUpO2U9d2coZCxlKTtlLnRhZz0xO2UucGF5bG9hZD1iO3ZvaWQgMCE9PWMmJm51bGwhPT1jJiYoZS5jYWxsYmFjaz1jKTt4ZyhhLGUpO0lnKGEsZCl9LGVucXVldWVGb3JjZVVwZGF0ZTpmdW5jdGlvbihhLGIpe2E9YS5fcmVhY3RJbnRlcm5hbEZpYmVyO3ZhciBjPUdnKCksZD1EZy5zdXNwZW5zZTtcbmM9SGcoYyxhLGQpO2Q9d2coYyxkKTtkLnRhZz0yO3ZvaWQgMCE9PWImJm51bGwhPT1iJiYoZC5jYWxsYmFjaz1iKTt4ZyhhLGQpO0lnKGEsYyl9fTtmdW5jdGlvbiBLZyhhLGIsYyxkLGUsZixnKXthPWEuc3RhdGVOb2RlO3JldHVyblwiZnVuY3Rpb25cIj09PXR5cGVvZiBhLnNob3VsZENvbXBvbmVudFVwZGF0ZT9hLnNob3VsZENvbXBvbmVudFVwZGF0ZShkLGYsZyk6Yi5wcm90b3R5cGUmJmIucHJvdG90eXBlLmlzUHVyZVJlYWN0Q29tcG9uZW50PyFiZihjLGQpfHwhYmYoZSxmKTohMH1cbmZ1bmN0aW9uIExnKGEsYixjKXt2YXIgZD0hMSxlPUFmO3ZhciBmPWIuY29udGV4dFR5cGU7XCJvYmplY3RcIj09PXR5cGVvZiBmJiZudWxsIT09Zj9mPXNnKGYpOihlPUwoYik/QmY6Si5jdXJyZW50LGQ9Yi5jb250ZXh0VHlwZXMsZj0oZD1udWxsIT09ZCYmdm9pZCAwIT09ZCk/Q2YoYSxlKTpBZik7Yj1uZXcgYihjLGYpO2EubWVtb2l6ZWRTdGF0ZT1udWxsIT09Yi5zdGF0ZSYmdm9pZCAwIT09Yi5zdGF0ZT9iLnN0YXRlOm51bGw7Yi51cGRhdGVyPUpnO2Euc3RhdGVOb2RlPWI7Yi5fcmVhY3RJbnRlcm5hbEZpYmVyPWE7ZCYmKGE9YS5zdGF0ZU5vZGUsYS5fX3JlYWN0SW50ZXJuYWxNZW1vaXplZFVubWFza2VkQ2hpbGRDb250ZXh0PWUsYS5fX3JlYWN0SW50ZXJuYWxNZW1vaXplZE1hc2tlZENoaWxkQ29udGV4dD1mKTtyZXR1cm4gYn1cbmZ1bmN0aW9uIE1nKGEsYixjLGQpe2E9Yi5zdGF0ZTtcImZ1bmN0aW9uXCI9PT10eXBlb2YgYi5jb21wb25lbnRXaWxsUmVjZWl2ZVByb3BzJiZiLmNvbXBvbmVudFdpbGxSZWNlaXZlUHJvcHMoYyxkKTtcImZ1bmN0aW9uXCI9PT10eXBlb2YgYi5VTlNBRkVfY29tcG9uZW50V2lsbFJlY2VpdmVQcm9wcyYmYi5VTlNBRkVfY29tcG9uZW50V2lsbFJlY2VpdmVQcm9wcyhjLGQpO2Iuc3RhdGUhPT1hJiZKZy5lbnF1ZXVlUmVwbGFjZVN0YXRlKGIsYi5zdGF0ZSxudWxsKX1cbmZ1bmN0aW9uIE5nKGEsYixjLGQpe3ZhciBlPWEuc3RhdGVOb2RlO2UucHJvcHM9YztlLnN0YXRlPWEubWVtb2l6ZWRTdGF0ZTtlLnJlZnM9RWc7dWcoYSk7dmFyIGY9Yi5jb250ZXh0VHlwZTtcIm9iamVjdFwiPT09dHlwZW9mIGYmJm51bGwhPT1mP2UuY29udGV4dD1zZyhmKTooZj1MKGIpP0JmOkouY3VycmVudCxlLmNvbnRleHQ9Q2YoYSxmKSk7emcoYSxjLGUsZCk7ZS5zdGF0ZT1hLm1lbW9pemVkU3RhdGU7Zj1iLmdldERlcml2ZWRTdGF0ZUZyb21Qcm9wcztcImZ1bmN0aW9uXCI9PT10eXBlb2YgZiYmKEZnKGEsYixmLGMpLGUuc3RhdGU9YS5tZW1vaXplZFN0YXRlKTtcImZ1bmN0aW9uXCI9PT10eXBlb2YgYi5nZXREZXJpdmVkU3RhdGVGcm9tUHJvcHN8fFwiZnVuY3Rpb25cIj09PXR5cGVvZiBlLmdldFNuYXBzaG90QmVmb3JlVXBkYXRlfHxcImZ1bmN0aW9uXCIhPT10eXBlb2YgZS5VTlNBRkVfY29tcG9uZW50V2lsbE1vdW50JiZcImZ1bmN0aW9uXCIhPT10eXBlb2YgZS5jb21wb25lbnRXaWxsTW91bnR8fFxuKGI9ZS5zdGF0ZSxcImZ1bmN0aW9uXCI9PT10eXBlb2YgZS5jb21wb25lbnRXaWxsTW91bnQmJmUuY29tcG9uZW50V2lsbE1vdW50KCksXCJmdW5jdGlvblwiPT09dHlwZW9mIGUuVU5TQUZFX2NvbXBvbmVudFdpbGxNb3VudCYmZS5VTlNBRkVfY29tcG9uZW50V2lsbE1vdW50KCksYiE9PWUuc3RhdGUmJkpnLmVucXVldWVSZXBsYWNlU3RhdGUoZSxlLnN0YXRlLG51bGwpLHpnKGEsYyxlLGQpLGUuc3RhdGU9YS5tZW1vaXplZFN0YXRlKTtcImZ1bmN0aW9uXCI9PT10eXBlb2YgZS5jb21wb25lbnREaWRNb3VudCYmKGEuZWZmZWN0VGFnfD00KX12YXIgT2c9QXJyYXkuaXNBcnJheTtcbmZ1bmN0aW9uIFBnKGEsYixjKXthPWMucmVmO2lmKG51bGwhPT1hJiZcImZ1bmN0aW9uXCIhPT10eXBlb2YgYSYmXCJvYmplY3RcIiE9PXR5cGVvZiBhKXtpZihjLl9vd25lcil7Yz1jLl9vd25lcjtpZihjKXtpZigxIT09Yy50YWcpdGhyb3cgRXJyb3IodSgzMDkpKTt2YXIgZD1jLnN0YXRlTm9kZX1pZighZCl0aHJvdyBFcnJvcih1KDE0NyxhKSk7dmFyIGU9XCJcIithO2lmKG51bGwhPT1iJiZudWxsIT09Yi5yZWYmJlwiZnVuY3Rpb25cIj09PXR5cGVvZiBiLnJlZiYmYi5yZWYuX3N0cmluZ1JlZj09PWUpcmV0dXJuIGIucmVmO2I9ZnVuY3Rpb24oYSl7dmFyIGI9ZC5yZWZzO2I9PT1FZyYmKGI9ZC5yZWZzPXt9KTtudWxsPT09YT9kZWxldGUgYltlXTpiW2VdPWF9O2IuX3N0cmluZ1JlZj1lO3JldHVybiBifWlmKFwic3RyaW5nXCIhPT10eXBlb2YgYSl0aHJvdyBFcnJvcih1KDI4NCkpO2lmKCFjLl9vd25lcil0aHJvdyBFcnJvcih1KDI5MCxhKSk7fXJldHVybiBhfVxuZnVuY3Rpb24gUWcoYSxiKXtpZihcInRleHRhcmVhXCIhPT1hLnR5cGUpdGhyb3cgRXJyb3IodSgzMSxcIltvYmplY3QgT2JqZWN0XVwiPT09T2JqZWN0LnByb3RvdHlwZS50b1N0cmluZy5jYWxsKGIpP1wib2JqZWN0IHdpdGgga2V5cyB7XCIrT2JqZWN0LmtleXMoYikuam9pbihcIiwgXCIpK1wifVwiOmIsXCJcIikpO31cbmZ1bmN0aW9uIFJnKGEpe2Z1bmN0aW9uIGIoYixjKXtpZihhKXt2YXIgZD1iLmxhc3RFZmZlY3Q7bnVsbCE9PWQ/KGQubmV4dEVmZmVjdD1jLGIubGFzdEVmZmVjdD1jKTpiLmZpcnN0RWZmZWN0PWIubGFzdEVmZmVjdD1jO2MubmV4dEVmZmVjdD1udWxsO2MuZWZmZWN0VGFnPTh9fWZ1bmN0aW9uIGMoYyxkKXtpZighYSlyZXR1cm4gbnVsbDtmb3IoO251bGwhPT1kOyliKGMsZCksZD1kLnNpYmxpbmc7cmV0dXJuIG51bGx9ZnVuY3Rpb24gZChhLGIpe2ZvcihhPW5ldyBNYXA7bnVsbCE9PWI7KW51bGwhPT1iLmtleT9hLnNldChiLmtleSxiKTphLnNldChiLmluZGV4LGIpLGI9Yi5zaWJsaW5nO3JldHVybiBhfWZ1bmN0aW9uIGUoYSxiKXthPVNnKGEsYik7YS5pbmRleD0wO2Euc2libGluZz1udWxsO3JldHVybiBhfWZ1bmN0aW9uIGYoYixjLGQpe2IuaW5kZXg9ZDtpZighYSlyZXR1cm4gYztkPWIuYWx0ZXJuYXRlO2lmKG51bGwhPT1kKXJldHVybiBkPWQuaW5kZXgsZDxjPyhiLmVmZmVjdFRhZz1cbjIsYyk6ZDtiLmVmZmVjdFRhZz0yO3JldHVybiBjfWZ1bmN0aW9uIGcoYil7YSYmbnVsbD09PWIuYWx0ZXJuYXRlJiYoYi5lZmZlY3RUYWc9Mik7cmV0dXJuIGJ9ZnVuY3Rpb24gaChhLGIsYyxkKXtpZihudWxsPT09Ynx8NiE9PWIudGFnKXJldHVybiBiPVRnKGMsYS5tb2RlLGQpLGIucmV0dXJuPWEsYjtiPWUoYixjKTtiLnJldHVybj1hO3JldHVybiBifWZ1bmN0aW9uIGsoYSxiLGMsZCl7aWYobnVsbCE9PWImJmIuZWxlbWVudFR5cGU9PT1jLnR5cGUpcmV0dXJuIGQ9ZShiLGMucHJvcHMpLGQucmVmPVBnKGEsYixjKSxkLnJldHVybj1hLGQ7ZD1VZyhjLnR5cGUsYy5rZXksYy5wcm9wcyxudWxsLGEubW9kZSxkKTtkLnJlZj1QZyhhLGIsYyk7ZC5yZXR1cm49YTtyZXR1cm4gZH1mdW5jdGlvbiBsKGEsYixjLGQpe2lmKG51bGw9PT1ifHw0IT09Yi50YWd8fGIuc3RhdGVOb2RlLmNvbnRhaW5lckluZm8hPT1jLmNvbnRhaW5lckluZm98fGIuc3RhdGVOb2RlLmltcGxlbWVudGF0aW9uIT09XG5jLmltcGxlbWVudGF0aW9uKXJldHVybiBiPVZnKGMsYS5tb2RlLGQpLGIucmV0dXJuPWEsYjtiPWUoYixjLmNoaWxkcmVufHxbXSk7Yi5yZXR1cm49YTtyZXR1cm4gYn1mdW5jdGlvbiBtKGEsYixjLGQsZil7aWYobnVsbD09PWJ8fDchPT1iLnRhZylyZXR1cm4gYj1XZyhjLGEubW9kZSxkLGYpLGIucmV0dXJuPWEsYjtiPWUoYixjKTtiLnJldHVybj1hO3JldHVybiBifWZ1bmN0aW9uIHAoYSxiLGMpe2lmKFwic3RyaW5nXCI9PT10eXBlb2YgYnx8XCJudW1iZXJcIj09PXR5cGVvZiBiKXJldHVybiBiPVRnKFwiXCIrYixhLm1vZGUsYyksYi5yZXR1cm49YSxiO2lmKFwib2JqZWN0XCI9PT10eXBlb2YgYiYmbnVsbCE9PWIpe3N3aXRjaChiLiQkdHlwZW9mKXtjYXNlIFphOnJldHVybiBjPVVnKGIudHlwZSxiLmtleSxiLnByb3BzLG51bGwsYS5tb2RlLGMpLGMucmVmPVBnKGEsbnVsbCxiKSxjLnJldHVybj1hLGM7Y2FzZSAkYTpyZXR1cm4gYj1WZyhiLGEubW9kZSxjKSxiLnJldHVybj1hLGJ9aWYoT2coYil8fFxubmIoYikpcmV0dXJuIGI9V2coYixhLm1vZGUsYyxudWxsKSxiLnJldHVybj1hLGI7UWcoYSxiKX1yZXR1cm4gbnVsbH1mdW5jdGlvbiB4KGEsYixjLGQpe3ZhciBlPW51bGwhPT1iP2Iua2V5Om51bGw7aWYoXCJzdHJpbmdcIj09PXR5cGVvZiBjfHxcIm51bWJlclwiPT09dHlwZW9mIGMpcmV0dXJuIG51bGwhPT1lP251bGw6aChhLGIsXCJcIitjLGQpO2lmKFwib2JqZWN0XCI9PT10eXBlb2YgYyYmbnVsbCE9PWMpe3N3aXRjaChjLiQkdHlwZW9mKXtjYXNlIFphOnJldHVybiBjLmtleT09PWU/Yy50eXBlPT09YWI/bShhLGIsYy5wcm9wcy5jaGlsZHJlbixkLGUpOmsoYSxiLGMsZCk6bnVsbDtjYXNlICRhOnJldHVybiBjLmtleT09PWU/bChhLGIsYyxkKTpudWxsfWlmKE9nKGMpfHxuYihjKSlyZXR1cm4gbnVsbCE9PWU/bnVsbDptKGEsYixjLGQsbnVsbCk7UWcoYSxjKX1yZXR1cm4gbnVsbH1mdW5jdGlvbiB6KGEsYixjLGQsZSl7aWYoXCJzdHJpbmdcIj09PXR5cGVvZiBkfHxcIm51bWJlclwiPT09dHlwZW9mIGQpcmV0dXJuIGE9XG5hLmdldChjKXx8bnVsbCxoKGIsYSxcIlwiK2QsZSk7aWYoXCJvYmplY3RcIj09PXR5cGVvZiBkJiZudWxsIT09ZCl7c3dpdGNoKGQuJCR0eXBlb2Ype2Nhc2UgWmE6cmV0dXJuIGE9YS5nZXQobnVsbD09PWQua2V5P2M6ZC5rZXkpfHxudWxsLGQudHlwZT09PWFiP20oYixhLGQucHJvcHMuY2hpbGRyZW4sZSxkLmtleSk6ayhiLGEsZCxlKTtjYXNlICRhOnJldHVybiBhPWEuZ2V0KG51bGw9PT1kLmtleT9jOmQua2V5KXx8bnVsbCxsKGIsYSxkLGUpfWlmKE9nKGQpfHxuYihkKSlyZXR1cm4gYT1hLmdldChjKXx8bnVsbCxtKGIsYSxkLGUsbnVsbCk7UWcoYixkKX1yZXR1cm4gbnVsbH1mdW5jdGlvbiBjYShlLGcsaCxrKXtmb3IodmFyIGw9bnVsbCx0PW51bGwsbT1nLHk9Zz0wLEE9bnVsbDtudWxsIT09bSYmeTxoLmxlbmd0aDt5Kyspe20uaW5kZXg+eT8oQT1tLG09bnVsbCk6QT1tLnNpYmxpbmc7dmFyIHE9eChlLG0saFt5XSxrKTtpZihudWxsPT09cSl7bnVsbD09PW0mJihtPUEpO2JyZWFrfWEmJlxubSYmbnVsbD09PXEuYWx0ZXJuYXRlJiZiKGUsbSk7Zz1mKHEsZyx5KTtudWxsPT09dD9sPXE6dC5zaWJsaW5nPXE7dD1xO209QX1pZih5PT09aC5sZW5ndGgpcmV0dXJuIGMoZSxtKSxsO2lmKG51bGw9PT1tKXtmb3IoO3k8aC5sZW5ndGg7eSsrKW09cChlLGhbeV0sayksbnVsbCE9PW0mJihnPWYobSxnLHkpLG51bGw9PT10P2w9bTp0LnNpYmxpbmc9bSx0PW0pO3JldHVybiBsfWZvcihtPWQoZSxtKTt5PGgubGVuZ3RoO3krKylBPXoobSxlLHksaFt5XSxrKSxudWxsIT09QSYmKGEmJm51bGwhPT1BLmFsdGVybmF0ZSYmbS5kZWxldGUobnVsbD09PUEua2V5P3k6QS5rZXkpLGc9ZihBLGcseSksbnVsbD09PXQ/bD1BOnQuc2libGluZz1BLHQ9QSk7YSYmbS5mb3JFYWNoKGZ1bmN0aW9uKGEpe3JldHVybiBiKGUsYSl9KTtyZXR1cm4gbH1mdW5jdGlvbiBEKGUsZyxoLGwpe3ZhciBrPW5iKGgpO2lmKFwiZnVuY3Rpb25cIiE9PXR5cGVvZiBrKXRocm93IEVycm9yKHUoMTUwKSk7aD1rLmNhbGwoaCk7XG5pZihudWxsPT1oKXRocm93IEVycm9yKHUoMTUxKSk7Zm9yKHZhciBtPWs9bnVsbCx0PWcseT1nPTAsQT1udWxsLHE9aC5uZXh0KCk7bnVsbCE9PXQmJiFxLmRvbmU7eSsrLHE9aC5uZXh0KCkpe3QuaW5kZXg+eT8oQT10LHQ9bnVsbCk6QT10LnNpYmxpbmc7dmFyIEQ9eChlLHQscS52YWx1ZSxsKTtpZihudWxsPT09RCl7bnVsbD09PXQmJih0PUEpO2JyZWFrfWEmJnQmJm51bGw9PT1ELmFsdGVybmF0ZSYmYihlLHQpO2c9ZihELGcseSk7bnVsbD09PW0/az1EOm0uc2libGluZz1EO209RDt0PUF9aWYocS5kb25lKXJldHVybiBjKGUsdCksaztpZihudWxsPT09dCl7Zm9yKDshcS5kb25lO3krKyxxPWgubmV4dCgpKXE9cChlLHEudmFsdWUsbCksbnVsbCE9PXEmJihnPWYocSxnLHkpLG51bGw9PT1tP2s9cTptLnNpYmxpbmc9cSxtPXEpO3JldHVybiBrfWZvcih0PWQoZSx0KTshcS5kb25lO3krKyxxPWgubmV4dCgpKXE9eih0LGUseSxxLnZhbHVlLGwpLG51bGwhPT1xJiYoYSYmbnVsbCE9PVxucS5hbHRlcm5hdGUmJnQuZGVsZXRlKG51bGw9PT1xLmtleT95OnEua2V5KSxnPWYocSxnLHkpLG51bGw9PT1tP2s9cTptLnNpYmxpbmc9cSxtPXEpO2EmJnQuZm9yRWFjaChmdW5jdGlvbihhKXtyZXR1cm4gYihlLGEpfSk7cmV0dXJuIGt9cmV0dXJuIGZ1bmN0aW9uKGEsZCxmLGgpe3ZhciBrPVwib2JqZWN0XCI9PT10eXBlb2YgZiYmbnVsbCE9PWYmJmYudHlwZT09PWFiJiZudWxsPT09Zi5rZXk7ayYmKGY9Zi5wcm9wcy5jaGlsZHJlbik7dmFyIGw9XCJvYmplY3RcIj09PXR5cGVvZiBmJiZudWxsIT09ZjtpZihsKXN3aXRjaChmLiQkdHlwZW9mKXtjYXNlIFphOmE6e2w9Zi5rZXk7Zm9yKGs9ZDtudWxsIT09azspe2lmKGsua2V5PT09bCl7c3dpdGNoKGsudGFnKXtjYXNlIDc6aWYoZi50eXBlPT09YWIpe2MoYSxrLnNpYmxpbmcpO2Q9ZShrLGYucHJvcHMuY2hpbGRyZW4pO2QucmV0dXJuPWE7YT1kO2JyZWFrIGF9YnJlYWs7ZGVmYXVsdDppZihrLmVsZW1lbnRUeXBlPT09Zi50eXBlKXtjKGEsXG5rLnNpYmxpbmcpO2Q9ZShrLGYucHJvcHMpO2QucmVmPVBnKGEsayxmKTtkLnJldHVybj1hO2E9ZDticmVhayBhfX1jKGEsayk7YnJlYWt9ZWxzZSBiKGEsayk7az1rLnNpYmxpbmd9Zi50eXBlPT09YWI/KGQ9V2coZi5wcm9wcy5jaGlsZHJlbixhLm1vZGUsaCxmLmtleSksZC5yZXR1cm49YSxhPWQpOihoPVVnKGYudHlwZSxmLmtleSxmLnByb3BzLG51bGwsYS5tb2RlLGgpLGgucmVmPVBnKGEsZCxmKSxoLnJldHVybj1hLGE9aCl9cmV0dXJuIGcoYSk7Y2FzZSAkYTphOntmb3Ioaz1mLmtleTtudWxsIT09ZDspe2lmKGQua2V5PT09aylpZig0PT09ZC50YWcmJmQuc3RhdGVOb2RlLmNvbnRhaW5lckluZm89PT1mLmNvbnRhaW5lckluZm8mJmQuc3RhdGVOb2RlLmltcGxlbWVudGF0aW9uPT09Zi5pbXBsZW1lbnRhdGlvbil7YyhhLGQuc2libGluZyk7ZD1lKGQsZi5jaGlsZHJlbnx8W10pO2QucmV0dXJuPWE7YT1kO2JyZWFrIGF9ZWxzZXtjKGEsZCk7YnJlYWt9ZWxzZSBiKGEsZCk7ZD1cbmQuc2libGluZ31kPVZnKGYsYS5tb2RlLGgpO2QucmV0dXJuPWE7YT1kfXJldHVybiBnKGEpfWlmKFwic3RyaW5nXCI9PT10eXBlb2YgZnx8XCJudW1iZXJcIj09PXR5cGVvZiBmKXJldHVybiBmPVwiXCIrZixudWxsIT09ZCYmNj09PWQudGFnPyhjKGEsZC5zaWJsaW5nKSxkPWUoZCxmKSxkLnJldHVybj1hLGE9ZCk6KGMoYSxkKSxkPVRnKGYsYS5tb2RlLGgpLGQucmV0dXJuPWEsYT1kKSxnKGEpO2lmKE9nKGYpKXJldHVybiBjYShhLGQsZixoKTtpZihuYihmKSlyZXR1cm4gRChhLGQsZixoKTtsJiZRZyhhLGYpO2lmKFwidW5kZWZpbmVkXCI9PT10eXBlb2YgZiYmIWspc3dpdGNoKGEudGFnKXtjYXNlIDE6Y2FzZSAwOnRocm93IGE9YS50eXBlLEVycm9yKHUoMTUyLGEuZGlzcGxheU5hbWV8fGEubmFtZXx8XCJDb21wb25lbnRcIikpO31yZXR1cm4gYyhhLGQpfX12YXIgWGc9UmcoITApLFlnPVJnKCExKSxaZz17fSwkZz17Y3VycmVudDpaZ30sYWg9e2N1cnJlbnQ6Wmd9LGJoPXtjdXJyZW50OlpnfTtcbmZ1bmN0aW9uIGNoKGEpe2lmKGE9PT1aZyl0aHJvdyBFcnJvcih1KDE3NCkpO3JldHVybiBhfWZ1bmN0aW9uIGRoKGEsYil7SShiaCxiKTtJKGFoLGEpO0koJGcsWmcpO2E9Yi5ub2RlVHlwZTtzd2l0Y2goYSl7Y2FzZSA5OmNhc2UgMTE6Yj0oYj1iLmRvY3VtZW50RWxlbWVudCk/Yi5uYW1lc3BhY2VVUkk6T2IobnVsbCxcIlwiKTticmVhaztkZWZhdWx0OmE9OD09PWE/Yi5wYXJlbnROb2RlOmIsYj1hLm5hbWVzcGFjZVVSSXx8bnVsbCxhPWEudGFnTmFtZSxiPU9iKGIsYSl9SCgkZyk7SSgkZyxiKX1mdW5jdGlvbiBlaCgpe0goJGcpO0goYWgpO0goYmgpfWZ1bmN0aW9uIGZoKGEpe2NoKGJoLmN1cnJlbnQpO3ZhciBiPWNoKCRnLmN1cnJlbnQpO3ZhciBjPU9iKGIsYS50eXBlKTtiIT09YyYmKEkoYWgsYSksSSgkZyxjKSl9ZnVuY3Rpb24gZ2goYSl7YWguY3VycmVudD09PWEmJihIKCRnKSxIKGFoKSl9dmFyIE09e2N1cnJlbnQ6MH07XG5mdW5jdGlvbiBoaChhKXtmb3IodmFyIGI9YTtudWxsIT09Yjspe2lmKDEzPT09Yi50YWcpe3ZhciBjPWIubWVtb2l6ZWRTdGF0ZTtpZihudWxsIT09YyYmKGM9Yy5kZWh5ZHJhdGVkLG51bGw9PT1jfHxjLmRhdGE9PT1CZHx8Yy5kYXRhPT09Q2QpKXJldHVybiBifWVsc2UgaWYoMTk9PT1iLnRhZyYmdm9pZCAwIT09Yi5tZW1vaXplZFByb3BzLnJldmVhbE9yZGVyKXtpZigwIT09KGIuZWZmZWN0VGFnJjY0KSlyZXR1cm4gYn1lbHNlIGlmKG51bGwhPT1iLmNoaWxkKXtiLmNoaWxkLnJldHVybj1iO2I9Yi5jaGlsZDtjb250aW51ZX1pZihiPT09YSlicmVhaztmb3IoO251bGw9PT1iLnNpYmxpbmc7KXtpZihudWxsPT09Yi5yZXR1cm58fGIucmV0dXJuPT09YSlyZXR1cm4gbnVsbDtiPWIucmV0dXJufWIuc2libGluZy5yZXR1cm49Yi5yZXR1cm47Yj1iLnNpYmxpbmd9cmV0dXJuIG51bGx9ZnVuY3Rpb24gaWgoYSxiKXtyZXR1cm57cmVzcG9uZGVyOmEscHJvcHM6Yn19XG52YXIgamg9V2EuUmVhY3RDdXJyZW50RGlzcGF0Y2hlcixraD1XYS5SZWFjdEN1cnJlbnRCYXRjaENvbmZpZyxsaD0wLE49bnVsbCxPPW51bGwsUD1udWxsLG1oPSExO2Z1bmN0aW9uIFEoKXt0aHJvdyBFcnJvcih1KDMyMSkpO31mdW5jdGlvbiBuaChhLGIpe2lmKG51bGw9PT1iKXJldHVybiExO2Zvcih2YXIgYz0wO2M8Yi5sZW5ndGgmJmM8YS5sZW5ndGg7YysrKWlmKCEkZShhW2NdLGJbY10pKXJldHVybiExO3JldHVybiEwfVxuZnVuY3Rpb24gb2goYSxiLGMsZCxlLGYpe2xoPWY7Tj1iO2IubWVtb2l6ZWRTdGF0ZT1udWxsO2IudXBkYXRlUXVldWU9bnVsbDtiLmV4cGlyYXRpb25UaW1lPTA7amguY3VycmVudD1udWxsPT09YXx8bnVsbD09PWEubWVtb2l6ZWRTdGF0ZT9waDpxaDthPWMoZCxlKTtpZihiLmV4cGlyYXRpb25UaW1lPT09bGgpe2Y9MDtkb3tiLmV4cGlyYXRpb25UaW1lPTA7aWYoISgyNT5mKSl0aHJvdyBFcnJvcih1KDMwMSkpO2YrPTE7UD1PPW51bGw7Yi51cGRhdGVRdWV1ZT1udWxsO2poLmN1cnJlbnQ9cmg7YT1jKGQsZSl9d2hpbGUoYi5leHBpcmF0aW9uVGltZT09PWxoKX1qaC5jdXJyZW50PXNoO2I9bnVsbCE9PU8mJm51bGwhPT1PLm5leHQ7bGg9MDtQPU89Tj1udWxsO21oPSExO2lmKGIpdGhyb3cgRXJyb3IodSgzMDApKTtyZXR1cm4gYX1cbmZ1bmN0aW9uIHRoKCl7dmFyIGE9e21lbW9pemVkU3RhdGU6bnVsbCxiYXNlU3RhdGU6bnVsbCxiYXNlUXVldWU6bnVsbCxxdWV1ZTpudWxsLG5leHQ6bnVsbH07bnVsbD09PVA/Ti5tZW1vaXplZFN0YXRlPVA9YTpQPVAubmV4dD1hO3JldHVybiBQfWZ1bmN0aW9uIHVoKCl7aWYobnVsbD09PU8pe3ZhciBhPU4uYWx0ZXJuYXRlO2E9bnVsbCE9PWE/YS5tZW1vaXplZFN0YXRlOm51bGx9ZWxzZSBhPU8ubmV4dDt2YXIgYj1udWxsPT09UD9OLm1lbW9pemVkU3RhdGU6UC5uZXh0O2lmKG51bGwhPT1iKVA9YixPPWE7ZWxzZXtpZihudWxsPT09YSl0aHJvdyBFcnJvcih1KDMxMCkpO089YTthPXttZW1vaXplZFN0YXRlOk8ubWVtb2l6ZWRTdGF0ZSxiYXNlU3RhdGU6Ty5iYXNlU3RhdGUsYmFzZVF1ZXVlOk8uYmFzZVF1ZXVlLHF1ZXVlOk8ucXVldWUsbmV4dDpudWxsfTtudWxsPT09UD9OLm1lbW9pemVkU3RhdGU9UD1hOlA9UC5uZXh0PWF9cmV0dXJuIFB9XG5mdW5jdGlvbiB2aChhLGIpe3JldHVyblwiZnVuY3Rpb25cIj09PXR5cGVvZiBiP2IoYSk6Yn1cbmZ1bmN0aW9uIHdoKGEpe3ZhciBiPXVoKCksYz1iLnF1ZXVlO2lmKG51bGw9PT1jKXRocm93IEVycm9yKHUoMzExKSk7Yy5sYXN0UmVuZGVyZWRSZWR1Y2VyPWE7dmFyIGQ9TyxlPWQuYmFzZVF1ZXVlLGY9Yy5wZW5kaW5nO2lmKG51bGwhPT1mKXtpZihudWxsIT09ZSl7dmFyIGc9ZS5uZXh0O2UubmV4dD1mLm5leHQ7Zi5uZXh0PWd9ZC5iYXNlUXVldWU9ZT1mO2MucGVuZGluZz1udWxsfWlmKG51bGwhPT1lKXtlPWUubmV4dDtkPWQuYmFzZVN0YXRlO3ZhciBoPWc9Zj1udWxsLGs9ZTtkb3t2YXIgbD1rLmV4cGlyYXRpb25UaW1lO2lmKGw8bGgpe3ZhciBtPXtleHBpcmF0aW9uVGltZTprLmV4cGlyYXRpb25UaW1lLHN1c3BlbnNlQ29uZmlnOmsuc3VzcGVuc2VDb25maWcsYWN0aW9uOmsuYWN0aW9uLGVhZ2VyUmVkdWNlcjprLmVhZ2VyUmVkdWNlcixlYWdlclN0YXRlOmsuZWFnZXJTdGF0ZSxuZXh0Om51bGx9O251bGw9PT1oPyhnPWg9bSxmPWQpOmg9aC5uZXh0PW07bD5OLmV4cGlyYXRpb25UaW1lJiZcbihOLmV4cGlyYXRpb25UaW1lPWwsQmcobCkpfWVsc2UgbnVsbCE9PWgmJihoPWgubmV4dD17ZXhwaXJhdGlvblRpbWU6MTA3Mzc0MTgyMyxzdXNwZW5zZUNvbmZpZzprLnN1c3BlbnNlQ29uZmlnLGFjdGlvbjprLmFjdGlvbixlYWdlclJlZHVjZXI6ay5lYWdlclJlZHVjZXIsZWFnZXJTdGF0ZTprLmVhZ2VyU3RhdGUsbmV4dDpudWxsfSksQWcobCxrLnN1c3BlbnNlQ29uZmlnKSxkPWsuZWFnZXJSZWR1Y2VyPT09YT9rLmVhZ2VyU3RhdGU6YShkLGsuYWN0aW9uKTtrPWsubmV4dH13aGlsZShudWxsIT09ayYmayE9PWUpO251bGw9PT1oP2Y9ZDpoLm5leHQ9ZzskZShkLGIubWVtb2l6ZWRTdGF0ZSl8fChyZz0hMCk7Yi5tZW1vaXplZFN0YXRlPWQ7Yi5iYXNlU3RhdGU9ZjtiLmJhc2VRdWV1ZT1oO2MubGFzdFJlbmRlcmVkU3RhdGU9ZH1yZXR1cm5bYi5tZW1vaXplZFN0YXRlLGMuZGlzcGF0Y2hdfVxuZnVuY3Rpb24geGgoYSl7dmFyIGI9dWgoKSxjPWIucXVldWU7aWYobnVsbD09PWMpdGhyb3cgRXJyb3IodSgzMTEpKTtjLmxhc3RSZW5kZXJlZFJlZHVjZXI9YTt2YXIgZD1jLmRpc3BhdGNoLGU9Yy5wZW5kaW5nLGY9Yi5tZW1vaXplZFN0YXRlO2lmKG51bGwhPT1lKXtjLnBlbmRpbmc9bnVsbDt2YXIgZz1lPWUubmV4dDtkbyBmPWEoZixnLmFjdGlvbiksZz1nLm5leHQ7d2hpbGUoZyE9PWUpOyRlKGYsYi5tZW1vaXplZFN0YXRlKXx8KHJnPSEwKTtiLm1lbW9pemVkU3RhdGU9ZjtudWxsPT09Yi5iYXNlUXVldWUmJihiLmJhc2VTdGF0ZT1mKTtjLmxhc3RSZW5kZXJlZFN0YXRlPWZ9cmV0dXJuW2YsZF19XG5mdW5jdGlvbiB5aChhKXt2YXIgYj10aCgpO1wiZnVuY3Rpb25cIj09PXR5cGVvZiBhJiYoYT1hKCkpO2IubWVtb2l6ZWRTdGF0ZT1iLmJhc2VTdGF0ZT1hO2E9Yi5xdWV1ZT17cGVuZGluZzpudWxsLGRpc3BhdGNoOm51bGwsbGFzdFJlbmRlcmVkUmVkdWNlcjp2aCxsYXN0UmVuZGVyZWRTdGF0ZTphfTthPWEuZGlzcGF0Y2g9emguYmluZChudWxsLE4sYSk7cmV0dXJuW2IubWVtb2l6ZWRTdGF0ZSxhXX1mdW5jdGlvbiBBaChhLGIsYyxkKXthPXt0YWc6YSxjcmVhdGU6YixkZXN0cm95OmMsZGVwczpkLG5leHQ6bnVsbH07Yj1OLnVwZGF0ZVF1ZXVlO251bGw9PT1iPyhiPXtsYXN0RWZmZWN0Om51bGx9LE4udXBkYXRlUXVldWU9YixiLmxhc3RFZmZlY3Q9YS5uZXh0PWEpOihjPWIubGFzdEVmZmVjdCxudWxsPT09Yz9iLmxhc3RFZmZlY3Q9YS5uZXh0PWE6KGQ9Yy5uZXh0LGMubmV4dD1hLGEubmV4dD1kLGIubGFzdEVmZmVjdD1hKSk7cmV0dXJuIGF9XG5mdW5jdGlvbiBCaCgpe3JldHVybiB1aCgpLm1lbW9pemVkU3RhdGV9ZnVuY3Rpb24gQ2goYSxiLGMsZCl7dmFyIGU9dGgoKTtOLmVmZmVjdFRhZ3w9YTtlLm1lbW9pemVkU3RhdGU9QWgoMXxiLGMsdm9pZCAwLHZvaWQgMD09PWQ/bnVsbDpkKX1mdW5jdGlvbiBEaChhLGIsYyxkKXt2YXIgZT11aCgpO2Q9dm9pZCAwPT09ZD9udWxsOmQ7dmFyIGY9dm9pZCAwO2lmKG51bGwhPT1PKXt2YXIgZz1PLm1lbW9pemVkU3RhdGU7Zj1nLmRlc3Ryb3k7aWYobnVsbCE9PWQmJm5oKGQsZy5kZXBzKSl7QWgoYixjLGYsZCk7cmV0dXJufX1OLmVmZmVjdFRhZ3w9YTtlLm1lbW9pemVkU3RhdGU9QWgoMXxiLGMsZixkKX1mdW5jdGlvbiBFaChhLGIpe3JldHVybiBDaCg1MTYsNCxhLGIpfWZ1bmN0aW9uIEZoKGEsYil7cmV0dXJuIERoKDUxNiw0LGEsYil9ZnVuY3Rpb24gR2goYSxiKXtyZXR1cm4gRGgoNCwyLGEsYil9XG5mdW5jdGlvbiBIaChhLGIpe2lmKFwiZnVuY3Rpb25cIj09PXR5cGVvZiBiKXJldHVybiBhPWEoKSxiKGEpLGZ1bmN0aW9uKCl7YihudWxsKX07aWYobnVsbCE9PWImJnZvaWQgMCE9PWIpcmV0dXJuIGE9YSgpLGIuY3VycmVudD1hLGZ1bmN0aW9uKCl7Yi5jdXJyZW50PW51bGx9fWZ1bmN0aW9uIEloKGEsYixjKXtjPW51bGwhPT1jJiZ2b2lkIDAhPT1jP2MuY29uY2F0KFthXSk6bnVsbDtyZXR1cm4gRGgoNCwyLEhoLmJpbmQobnVsbCxiLGEpLGMpfWZ1bmN0aW9uIEpoKCl7fWZ1bmN0aW9uIEtoKGEsYil7dGgoKS5tZW1vaXplZFN0YXRlPVthLHZvaWQgMD09PWI/bnVsbDpiXTtyZXR1cm4gYX1mdW5jdGlvbiBMaChhLGIpe3ZhciBjPXVoKCk7Yj12b2lkIDA9PT1iP251bGw6Yjt2YXIgZD1jLm1lbW9pemVkU3RhdGU7aWYobnVsbCE9PWQmJm51bGwhPT1iJiZuaChiLGRbMV0pKXJldHVybiBkWzBdO2MubWVtb2l6ZWRTdGF0ZT1bYSxiXTtyZXR1cm4gYX1cbmZ1bmN0aW9uIE1oKGEsYil7dmFyIGM9dWgoKTtiPXZvaWQgMD09PWI/bnVsbDpiO3ZhciBkPWMubWVtb2l6ZWRTdGF0ZTtpZihudWxsIT09ZCYmbnVsbCE9PWImJm5oKGIsZFsxXSkpcmV0dXJuIGRbMF07YT1hKCk7Yy5tZW1vaXplZFN0YXRlPVthLGJdO3JldHVybiBhfWZ1bmN0aW9uIE5oKGEsYixjKXt2YXIgZD1hZygpO2NnKDk4PmQ/OTg6ZCxmdW5jdGlvbigpe2EoITApfSk7Y2coOTc8ZD85NzpkLGZ1bmN0aW9uKCl7dmFyIGQ9a2guc3VzcGVuc2U7a2guc3VzcGVuc2U9dm9pZCAwPT09Yj9udWxsOmI7dHJ5e2EoITEpLGMoKX1maW5hbGx5e2toLnN1c3BlbnNlPWR9fSl9XG5mdW5jdGlvbiB6aChhLGIsYyl7dmFyIGQ9R2coKSxlPURnLnN1c3BlbnNlO2Q9SGcoZCxhLGUpO2U9e2V4cGlyYXRpb25UaW1lOmQsc3VzcGVuc2VDb25maWc6ZSxhY3Rpb246YyxlYWdlclJlZHVjZXI6bnVsbCxlYWdlclN0YXRlOm51bGwsbmV4dDpudWxsfTt2YXIgZj1iLnBlbmRpbmc7bnVsbD09PWY/ZS5uZXh0PWU6KGUubmV4dD1mLm5leHQsZi5uZXh0PWUpO2IucGVuZGluZz1lO2Y9YS5hbHRlcm5hdGU7aWYoYT09PU58fG51bGwhPT1mJiZmPT09TiltaD0hMCxlLmV4cGlyYXRpb25UaW1lPWxoLE4uZXhwaXJhdGlvblRpbWU9bGg7ZWxzZXtpZigwPT09YS5leHBpcmF0aW9uVGltZSYmKG51bGw9PT1mfHwwPT09Zi5leHBpcmF0aW9uVGltZSkmJihmPWIubGFzdFJlbmRlcmVkUmVkdWNlcixudWxsIT09ZikpdHJ5e3ZhciBnPWIubGFzdFJlbmRlcmVkU3RhdGUsaD1mKGcsYyk7ZS5lYWdlclJlZHVjZXI9ZjtlLmVhZ2VyU3RhdGU9aDtpZigkZShoLGcpKXJldHVybn1jYXRjaChrKXt9ZmluYWxseXt9SWcoYSxcbmQpfX1cbnZhciBzaD17cmVhZENvbnRleHQ6c2csdXNlQ2FsbGJhY2s6USx1c2VDb250ZXh0OlEsdXNlRWZmZWN0OlEsdXNlSW1wZXJhdGl2ZUhhbmRsZTpRLHVzZUxheW91dEVmZmVjdDpRLHVzZU1lbW86USx1c2VSZWR1Y2VyOlEsdXNlUmVmOlEsdXNlU3RhdGU6USx1c2VEZWJ1Z1ZhbHVlOlEsdXNlUmVzcG9uZGVyOlEsdXNlRGVmZXJyZWRWYWx1ZTpRLHVzZVRyYW5zaXRpb246UX0scGg9e3JlYWRDb250ZXh0OnNnLHVzZUNhbGxiYWNrOktoLHVzZUNvbnRleHQ6c2csdXNlRWZmZWN0OkVoLHVzZUltcGVyYXRpdmVIYW5kbGU6ZnVuY3Rpb24oYSxiLGMpe2M9bnVsbCE9PWMmJnZvaWQgMCE9PWM/Yy5jb25jYXQoW2FdKTpudWxsO3JldHVybiBDaCg0LDIsSGguYmluZChudWxsLGIsYSksYyl9LHVzZUxheW91dEVmZmVjdDpmdW5jdGlvbihhLGIpe3JldHVybiBDaCg0LDIsYSxiKX0sdXNlTWVtbzpmdW5jdGlvbihhLGIpe3ZhciBjPXRoKCk7Yj12b2lkIDA9PT1iP251bGw6YjthPWEoKTtjLm1lbW9pemVkU3RhdGU9W2EsXG5iXTtyZXR1cm4gYX0sdXNlUmVkdWNlcjpmdW5jdGlvbihhLGIsYyl7dmFyIGQ9dGgoKTtiPXZvaWQgMCE9PWM/YyhiKTpiO2QubWVtb2l6ZWRTdGF0ZT1kLmJhc2VTdGF0ZT1iO2E9ZC5xdWV1ZT17cGVuZGluZzpudWxsLGRpc3BhdGNoOm51bGwsbGFzdFJlbmRlcmVkUmVkdWNlcjphLGxhc3RSZW5kZXJlZFN0YXRlOmJ9O2E9YS5kaXNwYXRjaD16aC5iaW5kKG51bGwsTixhKTtyZXR1cm5bZC5tZW1vaXplZFN0YXRlLGFdfSx1c2VSZWY6ZnVuY3Rpb24oYSl7dmFyIGI9dGgoKTthPXtjdXJyZW50OmF9O3JldHVybiBiLm1lbW9pemVkU3RhdGU9YX0sdXNlU3RhdGU6eWgsdXNlRGVidWdWYWx1ZTpKaCx1c2VSZXNwb25kZXI6aWgsdXNlRGVmZXJyZWRWYWx1ZTpmdW5jdGlvbihhLGIpe3ZhciBjPXloKGEpLGQ9Y1swXSxlPWNbMV07RWgoZnVuY3Rpb24oKXt2YXIgYz1raC5zdXNwZW5zZTtraC5zdXNwZW5zZT12b2lkIDA9PT1iP251bGw6Yjt0cnl7ZShhKX1maW5hbGx5e2toLnN1c3BlbnNlPVxuY319LFthLGJdKTtyZXR1cm4gZH0sdXNlVHJhbnNpdGlvbjpmdW5jdGlvbihhKXt2YXIgYj15aCghMSksYz1iWzBdO2I9YlsxXTtyZXR1cm5bS2goTmguYmluZChudWxsLGIsYSksW2IsYV0pLGNdfX0scWg9e3JlYWRDb250ZXh0OnNnLHVzZUNhbGxiYWNrOkxoLHVzZUNvbnRleHQ6c2csdXNlRWZmZWN0OkZoLHVzZUltcGVyYXRpdmVIYW5kbGU6SWgsdXNlTGF5b3V0RWZmZWN0OkdoLHVzZU1lbW86TWgsdXNlUmVkdWNlcjp3aCx1c2VSZWY6QmgsdXNlU3RhdGU6ZnVuY3Rpb24oKXtyZXR1cm4gd2godmgpfSx1c2VEZWJ1Z1ZhbHVlOkpoLHVzZVJlc3BvbmRlcjppaCx1c2VEZWZlcnJlZFZhbHVlOmZ1bmN0aW9uKGEsYil7dmFyIGM9d2godmgpLGQ9Y1swXSxlPWNbMV07RmgoZnVuY3Rpb24oKXt2YXIgYz1raC5zdXNwZW5zZTtraC5zdXNwZW5zZT12b2lkIDA9PT1iP251bGw6Yjt0cnl7ZShhKX1maW5hbGx5e2toLnN1c3BlbnNlPWN9fSxbYSxiXSk7cmV0dXJuIGR9LHVzZVRyYW5zaXRpb246ZnVuY3Rpb24oYSl7dmFyIGI9XG53aCh2aCksYz1iWzBdO2I9YlsxXTtyZXR1cm5bTGgoTmguYmluZChudWxsLGIsYSksW2IsYV0pLGNdfX0scmg9e3JlYWRDb250ZXh0OnNnLHVzZUNhbGxiYWNrOkxoLHVzZUNvbnRleHQ6c2csdXNlRWZmZWN0OkZoLHVzZUltcGVyYXRpdmVIYW5kbGU6SWgsdXNlTGF5b3V0RWZmZWN0OkdoLHVzZU1lbW86TWgsdXNlUmVkdWNlcjp4aCx1c2VSZWY6QmgsdXNlU3RhdGU6ZnVuY3Rpb24oKXtyZXR1cm4geGgodmgpfSx1c2VEZWJ1Z1ZhbHVlOkpoLHVzZVJlc3BvbmRlcjppaCx1c2VEZWZlcnJlZFZhbHVlOmZ1bmN0aW9uKGEsYil7dmFyIGM9eGgodmgpLGQ9Y1swXSxlPWNbMV07RmgoZnVuY3Rpb24oKXt2YXIgYz1raC5zdXNwZW5zZTtraC5zdXNwZW5zZT12b2lkIDA9PT1iP251bGw6Yjt0cnl7ZShhKX1maW5hbGx5e2toLnN1c3BlbnNlPWN9fSxbYSxiXSk7cmV0dXJuIGR9LHVzZVRyYW5zaXRpb246ZnVuY3Rpb24oYSl7dmFyIGI9eGgodmgpLGM9YlswXTtiPWJbMV07cmV0dXJuW0xoKE5oLmJpbmQobnVsbCxcbmIsYSksW2IsYV0pLGNdfX0sT2g9bnVsbCxQaD1udWxsLFFoPSExO2Z1bmN0aW9uIFJoKGEsYil7dmFyIGM9U2goNSxudWxsLG51bGwsMCk7Yy5lbGVtZW50VHlwZT1cIkRFTEVURURcIjtjLnR5cGU9XCJERUxFVEVEXCI7Yy5zdGF0ZU5vZGU9YjtjLnJldHVybj1hO2MuZWZmZWN0VGFnPTg7bnVsbCE9PWEubGFzdEVmZmVjdD8oYS5sYXN0RWZmZWN0Lm5leHRFZmZlY3Q9YyxhLmxhc3RFZmZlY3Q9Yyk6YS5maXJzdEVmZmVjdD1hLmxhc3RFZmZlY3Q9Y31cbmZ1bmN0aW9uIFRoKGEsYil7c3dpdGNoKGEudGFnKXtjYXNlIDU6dmFyIGM9YS50eXBlO2I9MSE9PWIubm9kZVR5cGV8fGMudG9Mb3dlckNhc2UoKSE9PWIubm9kZU5hbWUudG9Mb3dlckNhc2UoKT9udWxsOmI7cmV0dXJuIG51bGwhPT1iPyhhLnN0YXRlTm9kZT1iLCEwKTohMTtjYXNlIDY6cmV0dXJuIGI9XCJcIj09PWEucGVuZGluZ1Byb3BzfHwzIT09Yi5ub2RlVHlwZT9udWxsOmIsbnVsbCE9PWI/KGEuc3RhdGVOb2RlPWIsITApOiExO2Nhc2UgMTM6cmV0dXJuITE7ZGVmYXVsdDpyZXR1cm4hMX19XG5mdW5jdGlvbiBVaChhKXtpZihRaCl7dmFyIGI9UGg7aWYoYil7dmFyIGM9YjtpZighVGgoYSxiKSl7Yj1KZChjLm5leHRTaWJsaW5nKTtpZighYnx8IVRoKGEsYikpe2EuZWZmZWN0VGFnPWEuZWZmZWN0VGFnJi0xMDI1fDI7UWg9ITE7T2g9YTtyZXR1cm59UmgoT2gsYyl9T2g9YTtQaD1KZChiLmZpcnN0Q2hpbGQpfWVsc2UgYS5lZmZlY3RUYWc9YS5lZmZlY3RUYWcmLTEwMjV8MixRaD0hMSxPaD1hfX1mdW5jdGlvbiBWaChhKXtmb3IoYT1hLnJldHVybjtudWxsIT09YSYmNSE9PWEudGFnJiYzIT09YS50YWcmJjEzIT09YS50YWc7KWE9YS5yZXR1cm47T2g9YX1cbmZ1bmN0aW9uIFdoKGEpe2lmKGEhPT1PaClyZXR1cm4hMTtpZighUWgpcmV0dXJuIFZoKGEpLFFoPSEwLCExO3ZhciBiPWEudHlwZTtpZig1IT09YS50YWd8fFwiaGVhZFwiIT09YiYmXCJib2R5XCIhPT1iJiYhR2QoYixhLm1lbW9pemVkUHJvcHMpKWZvcihiPVBoO2I7KVJoKGEsYiksYj1KZChiLm5leHRTaWJsaW5nKTtWaChhKTtpZigxMz09PWEudGFnKXthPWEubWVtb2l6ZWRTdGF0ZTthPW51bGwhPT1hP2EuZGVoeWRyYXRlZDpudWxsO2lmKCFhKXRocm93IEVycm9yKHUoMzE3KSk7YTp7YT1hLm5leHRTaWJsaW5nO2ZvcihiPTA7YTspe2lmKDg9PT1hLm5vZGVUeXBlKXt2YXIgYz1hLmRhdGE7aWYoYz09PUFkKXtpZigwPT09Yil7UGg9SmQoYS5uZXh0U2libGluZyk7YnJlYWsgYX1iLS19ZWxzZSBjIT09emQmJmMhPT1DZCYmYyE9PUJkfHxiKyt9YT1hLm5leHRTaWJsaW5nfVBoPW51bGx9fWVsc2UgUGg9T2g/SmQoYS5zdGF0ZU5vZGUubmV4dFNpYmxpbmcpOm51bGw7cmV0dXJuITB9XG5mdW5jdGlvbiBYaCgpe1BoPU9oPW51bGw7UWg9ITF9dmFyIFloPVdhLlJlYWN0Q3VycmVudE93bmVyLHJnPSExO2Z1bmN0aW9uIFIoYSxiLGMsZCl7Yi5jaGlsZD1udWxsPT09YT9ZZyhiLG51bGwsYyxkKTpYZyhiLGEuY2hpbGQsYyxkKX1mdW5jdGlvbiBaaChhLGIsYyxkLGUpe2M9Yy5yZW5kZXI7dmFyIGY9Yi5yZWY7cWcoYixlKTtkPW9oKGEsYixjLGQsZixlKTtpZihudWxsIT09YSYmIXJnKXJldHVybiBiLnVwZGF0ZVF1ZXVlPWEudXBkYXRlUXVldWUsYi5lZmZlY3RUYWcmPS01MTcsYS5leHBpcmF0aW9uVGltZTw9ZSYmKGEuZXhwaXJhdGlvblRpbWU9MCksJGgoYSxiLGUpO2IuZWZmZWN0VGFnfD0xO1IoYSxiLGQsZSk7cmV0dXJuIGIuY2hpbGR9XG5mdW5jdGlvbiBhaShhLGIsYyxkLGUsZil7aWYobnVsbD09PWEpe3ZhciBnPWMudHlwZTtpZihcImZ1bmN0aW9uXCI9PT10eXBlb2YgZyYmIWJpKGcpJiZ2b2lkIDA9PT1nLmRlZmF1bHRQcm9wcyYmbnVsbD09PWMuY29tcGFyZSYmdm9pZCAwPT09Yy5kZWZhdWx0UHJvcHMpcmV0dXJuIGIudGFnPTE1LGIudHlwZT1nLGNpKGEsYixnLGQsZSxmKTthPVVnKGMudHlwZSxudWxsLGQsbnVsbCxiLm1vZGUsZik7YS5yZWY9Yi5yZWY7YS5yZXR1cm49YjtyZXR1cm4gYi5jaGlsZD1hfWc9YS5jaGlsZDtpZihlPGYmJihlPWcubWVtb2l6ZWRQcm9wcyxjPWMuY29tcGFyZSxjPW51bGwhPT1jP2M6YmYsYyhlLGQpJiZhLnJlZj09PWIucmVmKSlyZXR1cm4gJGgoYSxiLGYpO2IuZWZmZWN0VGFnfD0xO2E9U2coZyxkKTthLnJlZj1iLnJlZjthLnJldHVybj1iO3JldHVybiBiLmNoaWxkPWF9XG5mdW5jdGlvbiBjaShhLGIsYyxkLGUsZil7cmV0dXJuIG51bGwhPT1hJiZiZihhLm1lbW9pemVkUHJvcHMsZCkmJmEucmVmPT09Yi5yZWYmJihyZz0hMSxlPGYpPyhiLmV4cGlyYXRpb25UaW1lPWEuZXhwaXJhdGlvblRpbWUsJGgoYSxiLGYpKTpkaShhLGIsYyxkLGYpfWZ1bmN0aW9uIGVpKGEsYil7dmFyIGM9Yi5yZWY7aWYobnVsbD09PWEmJm51bGwhPT1jfHxudWxsIT09YSYmYS5yZWYhPT1jKWIuZWZmZWN0VGFnfD0xMjh9ZnVuY3Rpb24gZGkoYSxiLGMsZCxlKXt2YXIgZj1MKGMpP0JmOkouY3VycmVudDtmPUNmKGIsZik7cWcoYixlKTtjPW9oKGEsYixjLGQsZixlKTtpZihudWxsIT09YSYmIXJnKXJldHVybiBiLnVwZGF0ZVF1ZXVlPWEudXBkYXRlUXVldWUsYi5lZmZlY3RUYWcmPS01MTcsYS5leHBpcmF0aW9uVGltZTw9ZSYmKGEuZXhwaXJhdGlvblRpbWU9MCksJGgoYSxiLGUpO2IuZWZmZWN0VGFnfD0xO1IoYSxiLGMsZSk7cmV0dXJuIGIuY2hpbGR9XG5mdW5jdGlvbiBmaShhLGIsYyxkLGUpe2lmKEwoYykpe3ZhciBmPSEwO0dmKGIpfWVsc2UgZj0hMTtxZyhiLGUpO2lmKG51bGw9PT1iLnN0YXRlTm9kZSludWxsIT09YSYmKGEuYWx0ZXJuYXRlPW51bGwsYi5hbHRlcm5hdGU9bnVsbCxiLmVmZmVjdFRhZ3w9MiksTGcoYixjLGQpLE5nKGIsYyxkLGUpLGQ9ITA7ZWxzZSBpZihudWxsPT09YSl7dmFyIGc9Yi5zdGF0ZU5vZGUsaD1iLm1lbW9pemVkUHJvcHM7Zy5wcm9wcz1oO3ZhciBrPWcuY29udGV4dCxsPWMuY29udGV4dFR5cGU7XCJvYmplY3RcIj09PXR5cGVvZiBsJiZudWxsIT09bD9sPXNnKGwpOihsPUwoYyk/QmY6Si5jdXJyZW50LGw9Q2YoYixsKSk7dmFyIG09Yy5nZXREZXJpdmVkU3RhdGVGcm9tUHJvcHMscD1cImZ1bmN0aW9uXCI9PT10eXBlb2YgbXx8XCJmdW5jdGlvblwiPT09dHlwZW9mIGcuZ2V0U25hcHNob3RCZWZvcmVVcGRhdGU7cHx8XCJmdW5jdGlvblwiIT09dHlwZW9mIGcuVU5TQUZFX2NvbXBvbmVudFdpbGxSZWNlaXZlUHJvcHMmJlxuXCJmdW5jdGlvblwiIT09dHlwZW9mIGcuY29tcG9uZW50V2lsbFJlY2VpdmVQcm9wc3x8KGghPT1kfHxrIT09bCkmJk1nKGIsZyxkLGwpO3RnPSExO3ZhciB4PWIubWVtb2l6ZWRTdGF0ZTtnLnN0YXRlPXg7emcoYixkLGcsZSk7az1iLm1lbW9pemVkU3RhdGU7aCE9PWR8fHghPT1rfHxLLmN1cnJlbnR8fHRnPyhcImZ1bmN0aW9uXCI9PT10eXBlb2YgbSYmKEZnKGIsYyxtLGQpLGs9Yi5tZW1vaXplZFN0YXRlKSwoaD10Z3x8S2coYixjLGgsZCx4LGssbCkpPyhwfHxcImZ1bmN0aW9uXCIhPT10eXBlb2YgZy5VTlNBRkVfY29tcG9uZW50V2lsbE1vdW50JiZcImZ1bmN0aW9uXCIhPT10eXBlb2YgZy5jb21wb25lbnRXaWxsTW91bnR8fChcImZ1bmN0aW9uXCI9PT10eXBlb2YgZy5jb21wb25lbnRXaWxsTW91bnQmJmcuY29tcG9uZW50V2lsbE1vdW50KCksXCJmdW5jdGlvblwiPT09dHlwZW9mIGcuVU5TQUZFX2NvbXBvbmVudFdpbGxNb3VudCYmZy5VTlNBRkVfY29tcG9uZW50V2lsbE1vdW50KCkpLFwiZnVuY3Rpb25cIj09PVxudHlwZW9mIGcuY29tcG9uZW50RGlkTW91bnQmJihiLmVmZmVjdFRhZ3w9NCkpOihcImZ1bmN0aW9uXCI9PT10eXBlb2YgZy5jb21wb25lbnREaWRNb3VudCYmKGIuZWZmZWN0VGFnfD00KSxiLm1lbW9pemVkUHJvcHM9ZCxiLm1lbW9pemVkU3RhdGU9ayksZy5wcm9wcz1kLGcuc3RhdGU9ayxnLmNvbnRleHQ9bCxkPWgpOihcImZ1bmN0aW9uXCI9PT10eXBlb2YgZy5jb21wb25lbnREaWRNb3VudCYmKGIuZWZmZWN0VGFnfD00KSxkPSExKX1lbHNlIGc9Yi5zdGF0ZU5vZGUsdmcoYSxiKSxoPWIubWVtb2l6ZWRQcm9wcyxnLnByb3BzPWIudHlwZT09PWIuZWxlbWVudFR5cGU/aDppZyhiLnR5cGUsaCksaz1nLmNvbnRleHQsbD1jLmNvbnRleHRUeXBlLFwib2JqZWN0XCI9PT10eXBlb2YgbCYmbnVsbCE9PWw/bD1zZyhsKToobD1MKGMpP0JmOkouY3VycmVudCxsPUNmKGIsbCkpLG09Yy5nZXREZXJpdmVkU3RhdGVGcm9tUHJvcHMsKHA9XCJmdW5jdGlvblwiPT09dHlwZW9mIG18fFwiZnVuY3Rpb25cIj09PVxudHlwZW9mIGcuZ2V0U25hcHNob3RCZWZvcmVVcGRhdGUpfHxcImZ1bmN0aW9uXCIhPT10eXBlb2YgZy5VTlNBRkVfY29tcG9uZW50V2lsbFJlY2VpdmVQcm9wcyYmXCJmdW5jdGlvblwiIT09dHlwZW9mIGcuY29tcG9uZW50V2lsbFJlY2VpdmVQcm9wc3x8KGghPT1kfHxrIT09bCkmJk1nKGIsZyxkLGwpLHRnPSExLGs9Yi5tZW1vaXplZFN0YXRlLGcuc3RhdGU9ayx6ZyhiLGQsZyxlKSx4PWIubWVtb2l6ZWRTdGF0ZSxoIT09ZHx8ayE9PXh8fEsuY3VycmVudHx8dGc/KFwiZnVuY3Rpb25cIj09PXR5cGVvZiBtJiYoRmcoYixjLG0sZCkseD1iLm1lbW9pemVkU3RhdGUpLChtPXRnfHxLZyhiLGMsaCxkLGsseCxsKSk/KHB8fFwiZnVuY3Rpb25cIiE9PXR5cGVvZiBnLlVOU0FGRV9jb21wb25lbnRXaWxsVXBkYXRlJiZcImZ1bmN0aW9uXCIhPT10eXBlb2YgZy5jb21wb25lbnRXaWxsVXBkYXRlfHwoXCJmdW5jdGlvblwiPT09dHlwZW9mIGcuY29tcG9uZW50V2lsbFVwZGF0ZSYmZy5jb21wb25lbnRXaWxsVXBkYXRlKGQsXG54LGwpLFwiZnVuY3Rpb25cIj09PXR5cGVvZiBnLlVOU0FGRV9jb21wb25lbnRXaWxsVXBkYXRlJiZnLlVOU0FGRV9jb21wb25lbnRXaWxsVXBkYXRlKGQseCxsKSksXCJmdW5jdGlvblwiPT09dHlwZW9mIGcuY29tcG9uZW50RGlkVXBkYXRlJiYoYi5lZmZlY3RUYWd8PTQpLFwiZnVuY3Rpb25cIj09PXR5cGVvZiBnLmdldFNuYXBzaG90QmVmb3JlVXBkYXRlJiYoYi5lZmZlY3RUYWd8PTI1NikpOihcImZ1bmN0aW9uXCIhPT10eXBlb2YgZy5jb21wb25lbnREaWRVcGRhdGV8fGg9PT1hLm1lbW9pemVkUHJvcHMmJms9PT1hLm1lbW9pemVkU3RhdGV8fChiLmVmZmVjdFRhZ3w9NCksXCJmdW5jdGlvblwiIT09dHlwZW9mIGcuZ2V0U25hcHNob3RCZWZvcmVVcGRhdGV8fGg9PT1hLm1lbW9pemVkUHJvcHMmJms9PT1hLm1lbW9pemVkU3RhdGV8fChiLmVmZmVjdFRhZ3w9MjU2KSxiLm1lbW9pemVkUHJvcHM9ZCxiLm1lbW9pemVkU3RhdGU9eCksZy5wcm9wcz1kLGcuc3RhdGU9eCxnLmNvbnRleHQ9bCxkPW0pOlxuKFwiZnVuY3Rpb25cIiE9PXR5cGVvZiBnLmNvbXBvbmVudERpZFVwZGF0ZXx8aD09PWEubWVtb2l6ZWRQcm9wcyYmaz09PWEubWVtb2l6ZWRTdGF0ZXx8KGIuZWZmZWN0VGFnfD00KSxcImZ1bmN0aW9uXCIhPT10eXBlb2YgZy5nZXRTbmFwc2hvdEJlZm9yZVVwZGF0ZXx8aD09PWEubWVtb2l6ZWRQcm9wcyYmaz09PWEubWVtb2l6ZWRTdGF0ZXx8KGIuZWZmZWN0VGFnfD0yNTYpLGQ9ITEpO3JldHVybiBnaShhLGIsYyxkLGYsZSl9XG5mdW5jdGlvbiBnaShhLGIsYyxkLGUsZil7ZWkoYSxiKTt2YXIgZz0wIT09KGIuZWZmZWN0VGFnJjY0KTtpZighZCYmIWcpcmV0dXJuIGUmJkhmKGIsYywhMSksJGgoYSxiLGYpO2Q9Yi5zdGF0ZU5vZGU7WWguY3VycmVudD1iO3ZhciBoPWcmJlwiZnVuY3Rpb25cIiE9PXR5cGVvZiBjLmdldERlcml2ZWRTdGF0ZUZyb21FcnJvcj9udWxsOmQucmVuZGVyKCk7Yi5lZmZlY3RUYWd8PTE7bnVsbCE9PWEmJmc/KGIuY2hpbGQ9WGcoYixhLmNoaWxkLG51bGwsZiksYi5jaGlsZD1YZyhiLG51bGwsaCxmKSk6UihhLGIsaCxmKTtiLm1lbW9pemVkU3RhdGU9ZC5zdGF0ZTtlJiZIZihiLGMsITApO3JldHVybiBiLmNoaWxkfWZ1bmN0aW9uIGhpKGEpe3ZhciBiPWEuc3RhdGVOb2RlO2IucGVuZGluZ0NvbnRleHQ/RWYoYSxiLnBlbmRpbmdDb250ZXh0LGIucGVuZGluZ0NvbnRleHQhPT1iLmNvbnRleHQpOmIuY29udGV4dCYmRWYoYSxiLmNvbnRleHQsITEpO2RoKGEsYi5jb250YWluZXJJbmZvKX1cbnZhciBpaT17ZGVoeWRyYXRlZDpudWxsLHJldHJ5VGltZTowfTtcbmZ1bmN0aW9uIGppKGEsYixjKXt2YXIgZD1iLm1vZGUsZT1iLnBlbmRpbmdQcm9wcyxmPU0uY3VycmVudCxnPSExLGg7KGg9MCE9PShiLmVmZmVjdFRhZyY2NCkpfHwoaD0wIT09KGYmMikmJihudWxsPT09YXx8bnVsbCE9PWEubWVtb2l6ZWRTdGF0ZSkpO2g/KGc9ITAsYi5lZmZlY3RUYWcmPS02NSk6bnVsbCE9PWEmJm51bGw9PT1hLm1lbW9pemVkU3RhdGV8fHZvaWQgMD09PWUuZmFsbGJhY2t8fCEwPT09ZS51bnN0YWJsZV9hdm9pZFRoaXNGYWxsYmFja3x8KGZ8PTEpO0koTSxmJjEpO2lmKG51bGw9PT1hKXt2b2lkIDAhPT1lLmZhbGxiYWNrJiZVaChiKTtpZihnKXtnPWUuZmFsbGJhY2s7ZT1XZyhudWxsLGQsMCxudWxsKTtlLnJldHVybj1iO2lmKDA9PT0oYi5tb2RlJjIpKWZvcihhPW51bGwhPT1iLm1lbW9pemVkU3RhdGU/Yi5jaGlsZC5jaGlsZDpiLmNoaWxkLGUuY2hpbGQ9YTtudWxsIT09YTspYS5yZXR1cm49ZSxhPWEuc2libGluZztjPVdnKGcsZCxjLG51bGwpO2MucmV0dXJuPVxuYjtlLnNpYmxpbmc9YztiLm1lbW9pemVkU3RhdGU9aWk7Yi5jaGlsZD1lO3JldHVybiBjfWQ9ZS5jaGlsZHJlbjtiLm1lbW9pemVkU3RhdGU9bnVsbDtyZXR1cm4gYi5jaGlsZD1ZZyhiLG51bGwsZCxjKX1pZihudWxsIT09YS5tZW1vaXplZFN0YXRlKXthPWEuY2hpbGQ7ZD1hLnNpYmxpbmc7aWYoZyl7ZT1lLmZhbGxiYWNrO2M9U2coYSxhLnBlbmRpbmdQcm9wcyk7Yy5yZXR1cm49YjtpZigwPT09KGIubW9kZSYyKSYmKGc9bnVsbCE9PWIubWVtb2l6ZWRTdGF0ZT9iLmNoaWxkLmNoaWxkOmIuY2hpbGQsZyE9PWEuY2hpbGQpKWZvcihjLmNoaWxkPWc7bnVsbCE9PWc7KWcucmV0dXJuPWMsZz1nLnNpYmxpbmc7ZD1TZyhkLGUpO2QucmV0dXJuPWI7Yy5zaWJsaW5nPWQ7Yy5jaGlsZEV4cGlyYXRpb25UaW1lPTA7Yi5tZW1vaXplZFN0YXRlPWlpO2IuY2hpbGQ9YztyZXR1cm4gZH1jPVhnKGIsYS5jaGlsZCxlLmNoaWxkcmVuLGMpO2IubWVtb2l6ZWRTdGF0ZT1udWxsO3JldHVybiBiLmNoaWxkPVxuY31hPWEuY2hpbGQ7aWYoZyl7Zz1lLmZhbGxiYWNrO2U9V2cobnVsbCxkLDAsbnVsbCk7ZS5yZXR1cm49YjtlLmNoaWxkPWE7bnVsbCE9PWEmJihhLnJldHVybj1lKTtpZigwPT09KGIubW9kZSYyKSlmb3IoYT1udWxsIT09Yi5tZW1vaXplZFN0YXRlP2IuY2hpbGQuY2hpbGQ6Yi5jaGlsZCxlLmNoaWxkPWE7bnVsbCE9PWE7KWEucmV0dXJuPWUsYT1hLnNpYmxpbmc7Yz1XZyhnLGQsYyxudWxsKTtjLnJldHVybj1iO2Uuc2libGluZz1jO2MuZWZmZWN0VGFnfD0yO2UuY2hpbGRFeHBpcmF0aW9uVGltZT0wO2IubWVtb2l6ZWRTdGF0ZT1paTtiLmNoaWxkPWU7cmV0dXJuIGN9Yi5tZW1vaXplZFN0YXRlPW51bGw7cmV0dXJuIGIuY2hpbGQ9WGcoYixhLGUuY2hpbGRyZW4sYyl9XG5mdW5jdGlvbiBraShhLGIpe2EuZXhwaXJhdGlvblRpbWU8YiYmKGEuZXhwaXJhdGlvblRpbWU9Yik7dmFyIGM9YS5hbHRlcm5hdGU7bnVsbCE9PWMmJmMuZXhwaXJhdGlvblRpbWU8YiYmKGMuZXhwaXJhdGlvblRpbWU9Yik7cGcoYS5yZXR1cm4sYil9ZnVuY3Rpb24gbGkoYSxiLGMsZCxlLGYpe3ZhciBnPWEubWVtb2l6ZWRTdGF0ZTtudWxsPT09Zz9hLm1lbW9pemVkU3RhdGU9e2lzQmFja3dhcmRzOmIscmVuZGVyaW5nOm51bGwscmVuZGVyaW5nU3RhcnRUaW1lOjAsbGFzdDpkLHRhaWw6Yyx0YWlsRXhwaXJhdGlvbjowLHRhaWxNb2RlOmUsbGFzdEVmZmVjdDpmfTooZy5pc0JhY2t3YXJkcz1iLGcucmVuZGVyaW5nPW51bGwsZy5yZW5kZXJpbmdTdGFydFRpbWU9MCxnLmxhc3Q9ZCxnLnRhaWw9YyxnLnRhaWxFeHBpcmF0aW9uPTAsZy50YWlsTW9kZT1lLGcubGFzdEVmZmVjdD1mKX1cbmZ1bmN0aW9uIG1pKGEsYixjKXt2YXIgZD1iLnBlbmRpbmdQcm9wcyxlPWQucmV2ZWFsT3JkZXIsZj1kLnRhaWw7UihhLGIsZC5jaGlsZHJlbixjKTtkPU0uY3VycmVudDtpZigwIT09KGQmMikpZD1kJjF8MixiLmVmZmVjdFRhZ3w9NjQ7ZWxzZXtpZihudWxsIT09YSYmMCE9PShhLmVmZmVjdFRhZyY2NCkpYTpmb3IoYT1iLmNoaWxkO251bGwhPT1hOyl7aWYoMTM9PT1hLnRhZyludWxsIT09YS5tZW1vaXplZFN0YXRlJiZraShhLGMpO2Vsc2UgaWYoMTk9PT1hLnRhZylraShhLGMpO2Vsc2UgaWYobnVsbCE9PWEuY2hpbGQpe2EuY2hpbGQucmV0dXJuPWE7YT1hLmNoaWxkO2NvbnRpbnVlfWlmKGE9PT1iKWJyZWFrIGE7Zm9yKDtudWxsPT09YS5zaWJsaW5nOyl7aWYobnVsbD09PWEucmV0dXJufHxhLnJldHVybj09PWIpYnJlYWsgYTthPWEucmV0dXJufWEuc2libGluZy5yZXR1cm49YS5yZXR1cm47YT1hLnNpYmxpbmd9ZCY9MX1JKE0sZCk7aWYoMD09PShiLm1vZGUmMikpYi5tZW1vaXplZFN0YXRlPVxubnVsbDtlbHNlIHN3aXRjaChlKXtjYXNlIFwiZm9yd2FyZHNcIjpjPWIuY2hpbGQ7Zm9yKGU9bnVsbDtudWxsIT09YzspYT1jLmFsdGVybmF0ZSxudWxsIT09YSYmbnVsbD09PWhoKGEpJiYoZT1jKSxjPWMuc2libGluZztjPWU7bnVsbD09PWM/KGU9Yi5jaGlsZCxiLmNoaWxkPW51bGwpOihlPWMuc2libGluZyxjLnNpYmxpbmc9bnVsbCk7bGkoYiwhMSxlLGMsZixiLmxhc3RFZmZlY3QpO2JyZWFrO2Nhc2UgXCJiYWNrd2FyZHNcIjpjPW51bGw7ZT1iLmNoaWxkO2ZvcihiLmNoaWxkPW51bGw7bnVsbCE9PWU7KXthPWUuYWx0ZXJuYXRlO2lmKG51bGwhPT1hJiZudWxsPT09aGgoYSkpe2IuY2hpbGQ9ZTticmVha31hPWUuc2libGluZztlLnNpYmxpbmc9YztjPWU7ZT1hfWxpKGIsITAsYyxudWxsLGYsYi5sYXN0RWZmZWN0KTticmVhaztjYXNlIFwidG9nZXRoZXJcIjpsaShiLCExLG51bGwsbnVsbCx2b2lkIDAsYi5sYXN0RWZmZWN0KTticmVhaztkZWZhdWx0OmIubWVtb2l6ZWRTdGF0ZT1udWxsfXJldHVybiBiLmNoaWxkfVxuZnVuY3Rpb24gJGgoYSxiLGMpe251bGwhPT1hJiYoYi5kZXBlbmRlbmNpZXM9YS5kZXBlbmRlbmNpZXMpO3ZhciBkPWIuZXhwaXJhdGlvblRpbWU7MCE9PWQmJkJnKGQpO2lmKGIuY2hpbGRFeHBpcmF0aW9uVGltZTxjKXJldHVybiBudWxsO2lmKG51bGwhPT1hJiZiLmNoaWxkIT09YS5jaGlsZCl0aHJvdyBFcnJvcih1KDE1MykpO2lmKG51bGwhPT1iLmNoaWxkKXthPWIuY2hpbGQ7Yz1TZyhhLGEucGVuZGluZ1Byb3BzKTtiLmNoaWxkPWM7Zm9yKGMucmV0dXJuPWI7bnVsbCE9PWEuc2libGluZzspYT1hLnNpYmxpbmcsYz1jLnNpYmxpbmc9U2coYSxhLnBlbmRpbmdQcm9wcyksYy5yZXR1cm49YjtjLnNpYmxpbmc9bnVsbH1yZXR1cm4gYi5jaGlsZH12YXIgbmksb2kscGkscWk7XG5uaT1mdW5jdGlvbihhLGIpe2Zvcih2YXIgYz1iLmNoaWxkO251bGwhPT1jOyl7aWYoNT09PWMudGFnfHw2PT09Yy50YWcpYS5hcHBlbmRDaGlsZChjLnN0YXRlTm9kZSk7ZWxzZSBpZig0IT09Yy50YWcmJm51bGwhPT1jLmNoaWxkKXtjLmNoaWxkLnJldHVybj1jO2M9Yy5jaGlsZDtjb250aW51ZX1pZihjPT09YilicmVhaztmb3IoO251bGw9PT1jLnNpYmxpbmc7KXtpZihudWxsPT09Yy5yZXR1cm58fGMucmV0dXJuPT09YilyZXR1cm47Yz1jLnJldHVybn1jLnNpYmxpbmcucmV0dXJuPWMucmV0dXJuO2M9Yy5zaWJsaW5nfX07b2k9ZnVuY3Rpb24oKXt9O1xucGk9ZnVuY3Rpb24oYSxiLGMsZCxlKXt2YXIgZj1hLm1lbW9pemVkUHJvcHM7aWYoZiE9PWQpe3ZhciBnPWIuc3RhdGVOb2RlO2NoKCRnLmN1cnJlbnQpO2E9bnVsbDtzd2l0Y2goYyl7Y2FzZSBcImlucHV0XCI6Zj16YihnLGYpO2Q9emIoZyxkKTthPVtdO2JyZWFrO2Nhc2UgXCJvcHRpb25cIjpmPUdiKGcsZik7ZD1HYihnLGQpO2E9W107YnJlYWs7Y2FzZSBcInNlbGVjdFwiOmY9bih7fSxmLHt2YWx1ZTp2b2lkIDB9KTtkPW4oe30sZCx7dmFsdWU6dm9pZCAwfSk7YT1bXTticmVhaztjYXNlIFwidGV4dGFyZWFcIjpmPUliKGcsZik7ZD1JYihnLGQpO2E9W107YnJlYWs7ZGVmYXVsdDpcImZ1bmN0aW9uXCIhPT10eXBlb2YgZi5vbkNsaWNrJiZcImZ1bmN0aW9uXCI9PT10eXBlb2YgZC5vbkNsaWNrJiYoZy5vbmNsaWNrPXNkKX1vZChjLGQpO3ZhciBoLGs7Yz1udWxsO2ZvcihoIGluIGYpaWYoIWQuaGFzT3duUHJvcGVydHkoaCkmJmYuaGFzT3duUHJvcGVydHkoaCkmJm51bGwhPWZbaF0paWYoXCJzdHlsZVwiPT09XG5oKWZvcihrIGluIGc9ZltoXSxnKWcuaGFzT3duUHJvcGVydHkoaykmJihjfHwoYz17fSksY1trXT1cIlwiKTtlbHNlXCJkYW5nZXJvdXNseVNldElubmVySFRNTFwiIT09aCYmXCJjaGlsZHJlblwiIT09aCYmXCJzdXBwcmVzc0NvbnRlbnRFZGl0YWJsZVdhcm5pbmdcIiE9PWgmJlwic3VwcHJlc3NIeWRyYXRpb25XYXJuaW5nXCIhPT1oJiZcImF1dG9Gb2N1c1wiIT09aCYmKHZhLmhhc093blByb3BlcnR5KGgpP2F8fChhPVtdKTooYT1hfHxbXSkucHVzaChoLG51bGwpKTtmb3IoaCBpbiBkKXt2YXIgbD1kW2hdO2c9bnVsbCE9Zj9mW2hdOnZvaWQgMDtpZihkLmhhc093blByb3BlcnR5KGgpJiZsIT09ZyYmKG51bGwhPWx8fG51bGwhPWcpKWlmKFwic3R5bGVcIj09PWgpaWYoZyl7Zm9yKGsgaW4gZykhZy5oYXNPd25Qcm9wZXJ0eShrKXx8bCYmbC5oYXNPd25Qcm9wZXJ0eShrKXx8KGN8fChjPXt9KSxjW2tdPVwiXCIpO2ZvcihrIGluIGwpbC5oYXNPd25Qcm9wZXJ0eShrKSYmZ1trXSE9PWxba10mJihjfHwoYz17fSksXG5jW2tdPWxba10pfWVsc2UgY3x8KGF8fChhPVtdKSxhLnB1c2goaCxjKSksYz1sO2Vsc2VcImRhbmdlcm91c2x5U2V0SW5uZXJIVE1MXCI9PT1oPyhsPWw/bC5fX2h0bWw6dm9pZCAwLGc9Zz9nLl9faHRtbDp2b2lkIDAsbnVsbCE9bCYmZyE9PWwmJihhPWF8fFtdKS5wdXNoKGgsbCkpOlwiY2hpbGRyZW5cIj09PWg/Zz09PWx8fFwic3RyaW5nXCIhPT10eXBlb2YgbCYmXCJudW1iZXJcIiE9PXR5cGVvZiBsfHwoYT1hfHxbXSkucHVzaChoLFwiXCIrbCk6XCJzdXBwcmVzc0NvbnRlbnRFZGl0YWJsZVdhcm5pbmdcIiE9PWgmJlwic3VwcHJlc3NIeWRyYXRpb25XYXJuaW5nXCIhPT1oJiYodmEuaGFzT3duUHJvcGVydHkoaCk/KG51bGwhPWwmJnJkKGUsaCksYXx8Zz09PWx8fChhPVtdKSk6KGE9YXx8W10pLnB1c2goaCxsKSl9YyYmKGE9YXx8W10pLnB1c2goXCJzdHlsZVwiLGMpO2U9YTtpZihiLnVwZGF0ZVF1ZXVlPWUpYi5lZmZlY3RUYWd8PTR9fTtcbnFpPWZ1bmN0aW9uKGEsYixjLGQpe2MhPT1kJiYoYi5lZmZlY3RUYWd8PTQpfTtmdW5jdGlvbiByaShhLGIpe3N3aXRjaChhLnRhaWxNb2RlKXtjYXNlIFwiaGlkZGVuXCI6Yj1hLnRhaWw7Zm9yKHZhciBjPW51bGw7bnVsbCE9PWI7KW51bGwhPT1iLmFsdGVybmF0ZSYmKGM9YiksYj1iLnNpYmxpbmc7bnVsbD09PWM/YS50YWlsPW51bGw6Yy5zaWJsaW5nPW51bGw7YnJlYWs7Y2FzZSBcImNvbGxhcHNlZFwiOmM9YS50YWlsO2Zvcih2YXIgZD1udWxsO251bGwhPT1jOyludWxsIT09Yy5hbHRlcm5hdGUmJihkPWMpLGM9Yy5zaWJsaW5nO251bGw9PT1kP2J8fG51bGw9PT1hLnRhaWw/YS50YWlsPW51bGw6YS50YWlsLnNpYmxpbmc9bnVsbDpkLnNpYmxpbmc9bnVsbH19XG5mdW5jdGlvbiBzaShhLGIsYyl7dmFyIGQ9Yi5wZW5kaW5nUHJvcHM7c3dpdGNoKGIudGFnKXtjYXNlIDI6Y2FzZSAxNjpjYXNlIDE1OmNhc2UgMDpjYXNlIDExOmNhc2UgNzpjYXNlIDg6Y2FzZSAxMjpjYXNlIDk6Y2FzZSAxNDpyZXR1cm4gbnVsbDtjYXNlIDE6cmV0dXJuIEwoYi50eXBlKSYmRGYoKSxudWxsO2Nhc2UgMzpyZXR1cm4gZWgoKSxIKEspLEgoSiksYz1iLnN0YXRlTm9kZSxjLnBlbmRpbmdDb250ZXh0JiYoYy5jb250ZXh0PWMucGVuZGluZ0NvbnRleHQsYy5wZW5kaW5nQ29udGV4dD1udWxsKSxudWxsIT09YSYmbnVsbCE9PWEuY2hpbGR8fCFXaChiKXx8KGIuZWZmZWN0VGFnfD00KSxvaShiKSxudWxsO2Nhc2UgNTpnaChiKTtjPWNoKGJoLmN1cnJlbnQpO3ZhciBlPWIudHlwZTtpZihudWxsIT09YSYmbnVsbCE9Yi5zdGF0ZU5vZGUpcGkoYSxiLGUsZCxjKSxhLnJlZiE9PWIucmVmJiYoYi5lZmZlY3RUYWd8PTEyOCk7ZWxzZXtpZighZCl7aWYobnVsbD09PWIuc3RhdGVOb2RlKXRocm93IEVycm9yKHUoMTY2KSk7XG5yZXR1cm4gbnVsbH1hPWNoKCRnLmN1cnJlbnQpO2lmKFdoKGIpKXtkPWIuc3RhdGVOb2RlO2U9Yi50eXBlO3ZhciBmPWIubWVtb2l6ZWRQcm9wcztkW01kXT1iO2RbTmRdPWY7c3dpdGNoKGUpe2Nhc2UgXCJpZnJhbWVcIjpjYXNlIFwib2JqZWN0XCI6Y2FzZSBcImVtYmVkXCI6RihcImxvYWRcIixkKTticmVhaztjYXNlIFwidmlkZW9cIjpjYXNlIFwiYXVkaW9cIjpmb3IoYT0wO2E8YWMubGVuZ3RoO2ErKylGKGFjW2FdLGQpO2JyZWFrO2Nhc2UgXCJzb3VyY2VcIjpGKFwiZXJyb3JcIixkKTticmVhaztjYXNlIFwiaW1nXCI6Y2FzZSBcImltYWdlXCI6Y2FzZSBcImxpbmtcIjpGKFwiZXJyb3JcIixkKTtGKFwibG9hZFwiLGQpO2JyZWFrO2Nhc2UgXCJmb3JtXCI6RihcInJlc2V0XCIsZCk7RihcInN1Ym1pdFwiLGQpO2JyZWFrO2Nhc2UgXCJkZXRhaWxzXCI6RihcInRvZ2dsZVwiLGQpO2JyZWFrO2Nhc2UgXCJpbnB1dFwiOkFiKGQsZik7RihcImludmFsaWRcIixkKTtyZChjLFwib25DaGFuZ2VcIik7YnJlYWs7Y2FzZSBcInNlbGVjdFwiOmQuX3dyYXBwZXJTdGF0ZT1cbnt3YXNNdWx0aXBsZTohIWYubXVsdGlwbGV9O0YoXCJpbnZhbGlkXCIsZCk7cmQoYyxcIm9uQ2hhbmdlXCIpO2JyZWFrO2Nhc2UgXCJ0ZXh0YXJlYVwiOkpiKGQsZiksRihcImludmFsaWRcIixkKSxyZChjLFwib25DaGFuZ2VcIil9b2QoZSxmKTthPW51bGw7Zm9yKHZhciBnIGluIGYpaWYoZi5oYXNPd25Qcm9wZXJ0eShnKSl7dmFyIGg9ZltnXTtcImNoaWxkcmVuXCI9PT1nP1wic3RyaW5nXCI9PT10eXBlb2YgaD9kLnRleHRDb250ZW50IT09aCYmKGE9W1wiY2hpbGRyZW5cIixoXSk6XCJudW1iZXJcIj09PXR5cGVvZiBoJiZkLnRleHRDb250ZW50IT09XCJcIitoJiYoYT1bXCJjaGlsZHJlblwiLFwiXCIraF0pOnZhLmhhc093blByb3BlcnR5KGcpJiZudWxsIT1oJiZyZChjLGcpfXN3aXRjaChlKXtjYXNlIFwiaW5wdXRcIjp4YihkKTtFYihkLGYsITApO2JyZWFrO2Nhc2UgXCJ0ZXh0YXJlYVwiOnhiKGQpO0xiKGQpO2JyZWFrO2Nhc2UgXCJzZWxlY3RcIjpjYXNlIFwib3B0aW9uXCI6YnJlYWs7ZGVmYXVsdDpcImZ1bmN0aW9uXCI9PT10eXBlb2YgZi5vbkNsaWNrJiZcbihkLm9uY2xpY2s9c2QpfWM9YTtiLnVwZGF0ZVF1ZXVlPWM7bnVsbCE9PWMmJihiLmVmZmVjdFRhZ3w9NCl9ZWxzZXtnPTk9PT1jLm5vZGVUeXBlP2M6Yy5vd25lckRvY3VtZW50O2E9PT1xZCYmKGE9TmIoZSkpO2E9PT1xZD9cInNjcmlwdFwiPT09ZT8oYT1nLmNyZWF0ZUVsZW1lbnQoXCJkaXZcIiksYS5pbm5lckhUTUw9XCI8c2NyaXB0PlxceDNjL3NjcmlwdD5cIixhPWEucmVtb3ZlQ2hpbGQoYS5maXJzdENoaWxkKSk6XCJzdHJpbmdcIj09PXR5cGVvZiBkLmlzP2E9Zy5jcmVhdGVFbGVtZW50KGUse2lzOmQuaXN9KTooYT1nLmNyZWF0ZUVsZW1lbnQoZSksXCJzZWxlY3RcIj09PWUmJihnPWEsZC5tdWx0aXBsZT9nLm11bHRpcGxlPSEwOmQuc2l6ZSYmKGcuc2l6ZT1kLnNpemUpKSk6YT1nLmNyZWF0ZUVsZW1lbnROUyhhLGUpO2FbTWRdPWI7YVtOZF09ZDtuaShhLGIsITEsITEpO2Iuc3RhdGVOb2RlPWE7Zz1wZChlLGQpO3N3aXRjaChlKXtjYXNlIFwiaWZyYW1lXCI6Y2FzZSBcIm9iamVjdFwiOmNhc2UgXCJlbWJlZFwiOkYoXCJsb2FkXCIsXG5hKTtoPWQ7YnJlYWs7Y2FzZSBcInZpZGVvXCI6Y2FzZSBcImF1ZGlvXCI6Zm9yKGg9MDtoPGFjLmxlbmd0aDtoKyspRihhY1toXSxhKTtoPWQ7YnJlYWs7Y2FzZSBcInNvdXJjZVwiOkYoXCJlcnJvclwiLGEpO2g9ZDticmVhaztjYXNlIFwiaW1nXCI6Y2FzZSBcImltYWdlXCI6Y2FzZSBcImxpbmtcIjpGKFwiZXJyb3JcIixhKTtGKFwibG9hZFwiLGEpO2g9ZDticmVhaztjYXNlIFwiZm9ybVwiOkYoXCJyZXNldFwiLGEpO0YoXCJzdWJtaXRcIixhKTtoPWQ7YnJlYWs7Y2FzZSBcImRldGFpbHNcIjpGKFwidG9nZ2xlXCIsYSk7aD1kO2JyZWFrO2Nhc2UgXCJpbnB1dFwiOkFiKGEsZCk7aD16YihhLGQpO0YoXCJpbnZhbGlkXCIsYSk7cmQoYyxcIm9uQ2hhbmdlXCIpO2JyZWFrO2Nhc2UgXCJvcHRpb25cIjpoPUdiKGEsZCk7YnJlYWs7Y2FzZSBcInNlbGVjdFwiOmEuX3dyYXBwZXJTdGF0ZT17d2FzTXVsdGlwbGU6ISFkLm11bHRpcGxlfTtoPW4oe30sZCx7dmFsdWU6dm9pZCAwfSk7RihcImludmFsaWRcIixhKTtyZChjLFwib25DaGFuZ2VcIik7YnJlYWs7Y2FzZSBcInRleHRhcmVhXCI6SmIoYSxcbmQpO2g9SWIoYSxkKTtGKFwiaW52YWxpZFwiLGEpO3JkKGMsXCJvbkNoYW5nZVwiKTticmVhaztkZWZhdWx0Omg9ZH1vZChlLGgpO3ZhciBrPWg7Zm9yKGYgaW4gaylpZihrLmhhc093blByb3BlcnR5KGYpKXt2YXIgbD1rW2ZdO1wic3R5bGVcIj09PWY/bWQoYSxsKTpcImRhbmdlcm91c2x5U2V0SW5uZXJIVE1MXCI9PT1mPyhsPWw/bC5fX2h0bWw6dm9pZCAwLG51bGwhPWwmJlFiKGEsbCkpOlwiY2hpbGRyZW5cIj09PWY/XCJzdHJpbmdcIj09PXR5cGVvZiBsPyhcInRleHRhcmVhXCIhPT1lfHxcIlwiIT09bCkmJlJiKGEsbCk6XCJudW1iZXJcIj09PXR5cGVvZiBsJiZSYihhLFwiXCIrbCk6XCJzdXBwcmVzc0NvbnRlbnRFZGl0YWJsZVdhcm5pbmdcIiE9PWYmJlwic3VwcHJlc3NIeWRyYXRpb25XYXJuaW5nXCIhPT1mJiZcImF1dG9Gb2N1c1wiIT09ZiYmKHZhLmhhc093blByb3BlcnR5KGYpP251bGwhPWwmJnJkKGMsZik6bnVsbCE9bCYmWGEoYSxmLGwsZykpfXN3aXRjaChlKXtjYXNlIFwiaW5wdXRcIjp4YihhKTtFYihhLGQsITEpO1xuYnJlYWs7Y2FzZSBcInRleHRhcmVhXCI6eGIoYSk7TGIoYSk7YnJlYWs7Y2FzZSBcIm9wdGlvblwiOm51bGwhPWQudmFsdWUmJmEuc2V0QXR0cmlidXRlKFwidmFsdWVcIixcIlwiK3JiKGQudmFsdWUpKTticmVhaztjYXNlIFwic2VsZWN0XCI6YS5tdWx0aXBsZT0hIWQubXVsdGlwbGU7Yz1kLnZhbHVlO251bGwhPWM/SGIoYSwhIWQubXVsdGlwbGUsYywhMSk6bnVsbCE9ZC5kZWZhdWx0VmFsdWUmJkhiKGEsISFkLm11bHRpcGxlLGQuZGVmYXVsdFZhbHVlLCEwKTticmVhaztkZWZhdWx0OlwiZnVuY3Rpb25cIj09PXR5cGVvZiBoLm9uQ2xpY2smJihhLm9uY2xpY2s9c2QpfUZkKGUsZCkmJihiLmVmZmVjdFRhZ3w9NCl9bnVsbCE9PWIucmVmJiYoYi5lZmZlY3RUYWd8PTEyOCl9cmV0dXJuIG51bGw7Y2FzZSA2OmlmKGEmJm51bGwhPWIuc3RhdGVOb2RlKXFpKGEsYixhLm1lbW9pemVkUHJvcHMsZCk7ZWxzZXtpZihcInN0cmluZ1wiIT09dHlwZW9mIGQmJm51bGw9PT1iLnN0YXRlTm9kZSl0aHJvdyBFcnJvcih1KDE2NikpO1xuYz1jaChiaC5jdXJyZW50KTtjaCgkZy5jdXJyZW50KTtXaChiKT8oYz1iLnN0YXRlTm9kZSxkPWIubWVtb2l6ZWRQcm9wcyxjW01kXT1iLGMubm9kZVZhbHVlIT09ZCYmKGIuZWZmZWN0VGFnfD00KSk6KGM9KDk9PT1jLm5vZGVUeXBlP2M6Yy5vd25lckRvY3VtZW50KS5jcmVhdGVUZXh0Tm9kZShkKSxjW01kXT1iLGIuc3RhdGVOb2RlPWMpfXJldHVybiBudWxsO2Nhc2UgMTM6SChNKTtkPWIubWVtb2l6ZWRTdGF0ZTtpZigwIT09KGIuZWZmZWN0VGFnJjY0KSlyZXR1cm4gYi5leHBpcmF0aW9uVGltZT1jLGI7Yz1udWxsIT09ZDtkPSExO251bGw9PT1hP3ZvaWQgMCE9PWIubWVtb2l6ZWRQcm9wcy5mYWxsYmFjayYmV2goYik6KGU9YS5tZW1vaXplZFN0YXRlLGQ9bnVsbCE9PWUsY3x8bnVsbD09PWV8fChlPWEuY2hpbGQuc2libGluZyxudWxsIT09ZSYmKGY9Yi5maXJzdEVmZmVjdCxudWxsIT09Zj8oYi5maXJzdEVmZmVjdD1lLGUubmV4dEVmZmVjdD1mKTooYi5maXJzdEVmZmVjdD1iLmxhc3RFZmZlY3Q9XG5lLGUubmV4dEVmZmVjdD1udWxsKSxlLmVmZmVjdFRhZz04KSkpO2lmKGMmJiFkJiYwIT09KGIubW9kZSYyKSlpZihudWxsPT09YSYmITAhPT1iLm1lbW9pemVkUHJvcHMudW5zdGFibGVfYXZvaWRUaGlzRmFsbGJhY2t8fDAhPT0oTS5jdXJyZW50JjEpKVM9PT10aSYmKFM9dWkpO2Vsc2V7aWYoUz09PXRpfHxTPT09dWkpUz12aTswIT09d2kmJm51bGwhPT1UJiYoeGkoVCxVKSx5aShULHdpKSl9aWYoY3x8ZCliLmVmZmVjdFRhZ3w9NDtyZXR1cm4gbnVsbDtjYXNlIDQ6cmV0dXJuIGVoKCksb2koYiksbnVsbDtjYXNlIDEwOnJldHVybiBvZyhiKSxudWxsO2Nhc2UgMTc6cmV0dXJuIEwoYi50eXBlKSYmRGYoKSxudWxsO2Nhc2UgMTk6SChNKTtkPWIubWVtb2l6ZWRTdGF0ZTtpZihudWxsPT09ZClyZXR1cm4gbnVsbDtlPTAhPT0oYi5lZmZlY3RUYWcmNjQpO2Y9ZC5yZW5kZXJpbmc7aWYobnVsbD09PWYpaWYoZSlyaShkLCExKTtlbHNle2lmKFMhPT10aXx8bnVsbCE9PWEmJjAhPT0oYS5lZmZlY3RUYWcmXG42NCkpZm9yKGY9Yi5jaGlsZDtudWxsIT09Zjspe2E9aGgoZik7aWYobnVsbCE9PWEpe2IuZWZmZWN0VGFnfD02NDtyaShkLCExKTtlPWEudXBkYXRlUXVldWU7bnVsbCE9PWUmJihiLnVwZGF0ZVF1ZXVlPWUsYi5lZmZlY3RUYWd8PTQpO251bGw9PT1kLmxhc3RFZmZlY3QmJihiLmZpcnN0RWZmZWN0PW51bGwpO2IubGFzdEVmZmVjdD1kLmxhc3RFZmZlY3Q7Zm9yKGQ9Yi5jaGlsZDtudWxsIT09ZDspZT1kLGY9YyxlLmVmZmVjdFRhZyY9MixlLm5leHRFZmZlY3Q9bnVsbCxlLmZpcnN0RWZmZWN0PW51bGwsZS5sYXN0RWZmZWN0PW51bGwsYT1lLmFsdGVybmF0ZSxudWxsPT09YT8oZS5jaGlsZEV4cGlyYXRpb25UaW1lPTAsZS5leHBpcmF0aW9uVGltZT1mLGUuY2hpbGQ9bnVsbCxlLm1lbW9pemVkUHJvcHM9bnVsbCxlLm1lbW9pemVkU3RhdGU9bnVsbCxlLnVwZGF0ZVF1ZXVlPW51bGwsZS5kZXBlbmRlbmNpZXM9bnVsbCk6KGUuY2hpbGRFeHBpcmF0aW9uVGltZT1hLmNoaWxkRXhwaXJhdGlvblRpbWUsXG5lLmV4cGlyYXRpb25UaW1lPWEuZXhwaXJhdGlvblRpbWUsZS5jaGlsZD1hLmNoaWxkLGUubWVtb2l6ZWRQcm9wcz1hLm1lbW9pemVkUHJvcHMsZS5tZW1vaXplZFN0YXRlPWEubWVtb2l6ZWRTdGF0ZSxlLnVwZGF0ZVF1ZXVlPWEudXBkYXRlUXVldWUsZj1hLmRlcGVuZGVuY2llcyxlLmRlcGVuZGVuY2llcz1udWxsPT09Zj9udWxsOntleHBpcmF0aW9uVGltZTpmLmV4cGlyYXRpb25UaW1lLGZpcnN0Q29udGV4dDpmLmZpcnN0Q29udGV4dCxyZXNwb25kZXJzOmYucmVzcG9uZGVyc30pLGQ9ZC5zaWJsaW5nO0koTSxNLmN1cnJlbnQmMXwyKTtyZXR1cm4gYi5jaGlsZH1mPWYuc2libGluZ319ZWxzZXtpZighZSlpZihhPWhoKGYpLG51bGwhPT1hKXtpZihiLmVmZmVjdFRhZ3w9NjQsZT0hMCxjPWEudXBkYXRlUXVldWUsbnVsbCE9PWMmJihiLnVwZGF0ZVF1ZXVlPWMsYi5lZmZlY3RUYWd8PTQpLHJpKGQsITApLG51bGw9PT1kLnRhaWwmJlwiaGlkZGVuXCI9PT1kLnRhaWxNb2RlJiYhZi5hbHRlcm5hdGUpcmV0dXJuIGI9XG5iLmxhc3RFZmZlY3Q9ZC5sYXN0RWZmZWN0LG51bGwhPT1iJiYoYi5uZXh0RWZmZWN0PW51bGwpLG51bGx9ZWxzZSAyKiRmKCktZC5yZW5kZXJpbmdTdGFydFRpbWU+ZC50YWlsRXhwaXJhdGlvbiYmMTxjJiYoYi5lZmZlY3RUYWd8PTY0LGU9ITAscmkoZCwhMSksYi5leHBpcmF0aW9uVGltZT1iLmNoaWxkRXhwaXJhdGlvblRpbWU9Yy0xKTtkLmlzQmFja3dhcmRzPyhmLnNpYmxpbmc9Yi5jaGlsZCxiLmNoaWxkPWYpOihjPWQubGFzdCxudWxsIT09Yz9jLnNpYmxpbmc9ZjpiLmNoaWxkPWYsZC5sYXN0PWYpfXJldHVybiBudWxsIT09ZC50YWlsPygwPT09ZC50YWlsRXhwaXJhdGlvbiYmKGQudGFpbEV4cGlyYXRpb249JGYoKSs1MDApLGM9ZC50YWlsLGQucmVuZGVyaW5nPWMsZC50YWlsPWMuc2libGluZyxkLmxhc3RFZmZlY3Q9Yi5sYXN0RWZmZWN0LGQucmVuZGVyaW5nU3RhcnRUaW1lPSRmKCksYy5zaWJsaW5nPW51bGwsYj1NLmN1cnJlbnQsSShNLGU/YiYxfDI6YiYxKSxjKTpudWxsfXRocm93IEVycm9yKHUoMTU2LFxuYi50YWcpKTt9ZnVuY3Rpb24gemkoYSl7c3dpdGNoKGEudGFnKXtjYXNlIDE6TChhLnR5cGUpJiZEZigpO3ZhciBiPWEuZWZmZWN0VGFnO3JldHVybiBiJjQwOTY/KGEuZWZmZWN0VGFnPWImLTQwOTd8NjQsYSk6bnVsbDtjYXNlIDM6ZWgoKTtIKEspO0goSik7Yj1hLmVmZmVjdFRhZztpZigwIT09KGImNjQpKXRocm93IEVycm9yKHUoMjg1KSk7YS5lZmZlY3RUYWc9YiYtNDA5N3w2NDtyZXR1cm4gYTtjYXNlIDU6cmV0dXJuIGdoKGEpLG51bGw7Y2FzZSAxMzpyZXR1cm4gSChNKSxiPWEuZWZmZWN0VGFnLGImNDA5Nj8oYS5lZmZlY3RUYWc9YiYtNDA5N3w2NCxhKTpudWxsO2Nhc2UgMTk6cmV0dXJuIEgoTSksbnVsbDtjYXNlIDQ6cmV0dXJuIGVoKCksbnVsbDtjYXNlIDEwOnJldHVybiBvZyhhKSxudWxsO2RlZmF1bHQ6cmV0dXJuIG51bGx9fWZ1bmN0aW9uIEFpKGEsYil7cmV0dXJue3ZhbHVlOmEsc291cmNlOmIsc3RhY2s6cWIoYil9fVxudmFyIEJpPVwiZnVuY3Rpb25cIj09PXR5cGVvZiBXZWFrU2V0P1dlYWtTZXQ6U2V0O2Z1bmN0aW9uIENpKGEsYil7dmFyIGM9Yi5zb3VyY2UsZD1iLnN0YWNrO251bGw9PT1kJiZudWxsIT09YyYmKGQ9cWIoYykpO251bGwhPT1jJiZwYihjLnR5cGUpO2I9Yi52YWx1ZTtudWxsIT09YSYmMT09PWEudGFnJiZwYihhLnR5cGUpO3RyeXtjb25zb2xlLmVycm9yKGIpfWNhdGNoKGUpe3NldFRpbWVvdXQoZnVuY3Rpb24oKXt0aHJvdyBlO30pfX1mdW5jdGlvbiBEaShhLGIpe3RyeXtiLnByb3BzPWEubWVtb2l6ZWRQcm9wcyxiLnN0YXRlPWEubWVtb2l6ZWRTdGF0ZSxiLmNvbXBvbmVudFdpbGxVbm1vdW50KCl9Y2F0Y2goYyl7RWkoYSxjKX19ZnVuY3Rpb24gRmkoYSl7dmFyIGI9YS5yZWY7aWYobnVsbCE9PWIpaWYoXCJmdW5jdGlvblwiPT09dHlwZW9mIGIpdHJ5e2IobnVsbCl9Y2F0Y2goYyl7RWkoYSxjKX1lbHNlIGIuY3VycmVudD1udWxsfVxuZnVuY3Rpb24gR2koYSxiKXtzd2l0Y2goYi50YWcpe2Nhc2UgMDpjYXNlIDExOmNhc2UgMTU6Y2FzZSAyMjpyZXR1cm47Y2FzZSAxOmlmKGIuZWZmZWN0VGFnJjI1NiYmbnVsbCE9PWEpe3ZhciBjPWEubWVtb2l6ZWRQcm9wcyxkPWEubWVtb2l6ZWRTdGF0ZTthPWIuc3RhdGVOb2RlO2I9YS5nZXRTbmFwc2hvdEJlZm9yZVVwZGF0ZShiLmVsZW1lbnRUeXBlPT09Yi50eXBlP2M6aWcoYi50eXBlLGMpLGQpO2EuX19yZWFjdEludGVybmFsU25hcHNob3RCZWZvcmVVcGRhdGU9Yn1yZXR1cm47Y2FzZSAzOmNhc2UgNTpjYXNlIDY6Y2FzZSA0OmNhc2UgMTc6cmV0dXJufXRocm93IEVycm9yKHUoMTYzKSk7fVxuZnVuY3Rpb24gSGkoYSxiKXtiPWIudXBkYXRlUXVldWU7Yj1udWxsIT09Yj9iLmxhc3RFZmZlY3Q6bnVsbDtpZihudWxsIT09Yil7dmFyIGM9Yj1iLm5leHQ7ZG97aWYoKGMudGFnJmEpPT09YSl7dmFyIGQ9Yy5kZXN0cm95O2MuZGVzdHJveT12b2lkIDA7dm9pZCAwIT09ZCYmZCgpfWM9Yy5uZXh0fXdoaWxlKGMhPT1iKX19ZnVuY3Rpb24gSWkoYSxiKXtiPWIudXBkYXRlUXVldWU7Yj1udWxsIT09Yj9iLmxhc3RFZmZlY3Q6bnVsbDtpZihudWxsIT09Yil7dmFyIGM9Yj1iLm5leHQ7ZG97aWYoKGMudGFnJmEpPT09YSl7dmFyIGQ9Yy5jcmVhdGU7Yy5kZXN0cm95PWQoKX1jPWMubmV4dH13aGlsZShjIT09Yil9fVxuZnVuY3Rpb24gSmkoYSxiLGMpe3N3aXRjaChjLnRhZyl7Y2FzZSAwOmNhc2UgMTE6Y2FzZSAxNTpjYXNlIDIyOklpKDMsYyk7cmV0dXJuO2Nhc2UgMTphPWMuc3RhdGVOb2RlO2lmKGMuZWZmZWN0VGFnJjQpaWYobnVsbD09PWIpYS5jb21wb25lbnREaWRNb3VudCgpO2Vsc2V7dmFyIGQ9Yy5lbGVtZW50VHlwZT09PWMudHlwZT9iLm1lbW9pemVkUHJvcHM6aWcoYy50eXBlLGIubWVtb2l6ZWRQcm9wcyk7YS5jb21wb25lbnREaWRVcGRhdGUoZCxiLm1lbW9pemVkU3RhdGUsYS5fX3JlYWN0SW50ZXJuYWxTbmFwc2hvdEJlZm9yZVVwZGF0ZSl9Yj1jLnVwZGF0ZVF1ZXVlO251bGwhPT1iJiZDZyhjLGIsYSk7cmV0dXJuO2Nhc2UgMzpiPWMudXBkYXRlUXVldWU7aWYobnVsbCE9PWIpe2E9bnVsbDtpZihudWxsIT09Yy5jaGlsZClzd2l0Y2goYy5jaGlsZC50YWcpe2Nhc2UgNTphPWMuY2hpbGQuc3RhdGVOb2RlO2JyZWFrO2Nhc2UgMTphPWMuY2hpbGQuc3RhdGVOb2RlfUNnKGMsYixhKX1yZXR1cm47XG5jYXNlIDU6YT1jLnN0YXRlTm9kZTtudWxsPT09YiYmYy5lZmZlY3RUYWcmNCYmRmQoYy50eXBlLGMubWVtb2l6ZWRQcm9wcykmJmEuZm9jdXMoKTtyZXR1cm47Y2FzZSA2OnJldHVybjtjYXNlIDQ6cmV0dXJuO2Nhc2UgMTI6cmV0dXJuO2Nhc2UgMTM6bnVsbD09PWMubWVtb2l6ZWRTdGF0ZSYmKGM9Yy5hbHRlcm5hdGUsbnVsbCE9PWMmJihjPWMubWVtb2l6ZWRTdGF0ZSxudWxsIT09YyYmKGM9Yy5kZWh5ZHJhdGVkLG51bGwhPT1jJiZWYyhjKSkpKTtyZXR1cm47Y2FzZSAxOTpjYXNlIDE3OmNhc2UgMjA6Y2FzZSAyMTpyZXR1cm59dGhyb3cgRXJyb3IodSgxNjMpKTt9XG5mdW5jdGlvbiBLaShhLGIsYyl7XCJmdW5jdGlvblwiPT09dHlwZW9mIExpJiZMaShiKTtzd2l0Y2goYi50YWcpe2Nhc2UgMDpjYXNlIDExOmNhc2UgMTQ6Y2FzZSAxNTpjYXNlIDIyOmE9Yi51cGRhdGVRdWV1ZTtpZihudWxsIT09YSYmKGE9YS5sYXN0RWZmZWN0LG51bGwhPT1hKSl7dmFyIGQ9YS5uZXh0O2NnKDk3PGM/OTc6YyxmdW5jdGlvbigpe3ZhciBhPWQ7ZG97dmFyIGM9YS5kZXN0cm95O2lmKHZvaWQgMCE9PWMpe3ZhciBnPWI7dHJ5e2MoKX1jYXRjaChoKXtFaShnLGgpfX1hPWEubmV4dH13aGlsZShhIT09ZCl9KX1icmVhaztjYXNlIDE6RmkoYik7Yz1iLnN0YXRlTm9kZTtcImZ1bmN0aW9uXCI9PT10eXBlb2YgYy5jb21wb25lbnRXaWxsVW5tb3VudCYmRGkoYixjKTticmVhaztjYXNlIDU6RmkoYik7YnJlYWs7Y2FzZSA0Ok1pKGEsYixjKX19XG5mdW5jdGlvbiBOaShhKXt2YXIgYj1hLmFsdGVybmF0ZTthLnJldHVybj1udWxsO2EuY2hpbGQ9bnVsbDthLm1lbW9pemVkU3RhdGU9bnVsbDthLnVwZGF0ZVF1ZXVlPW51bGw7YS5kZXBlbmRlbmNpZXM9bnVsbDthLmFsdGVybmF0ZT1udWxsO2EuZmlyc3RFZmZlY3Q9bnVsbDthLmxhc3RFZmZlY3Q9bnVsbDthLnBlbmRpbmdQcm9wcz1udWxsO2EubWVtb2l6ZWRQcm9wcz1udWxsO2Euc3RhdGVOb2RlPW51bGw7bnVsbCE9PWImJk5pKGIpfWZ1bmN0aW9uIE9pKGEpe3JldHVybiA1PT09YS50YWd8fDM9PT1hLnRhZ3x8ND09PWEudGFnfVxuZnVuY3Rpb24gUGkoYSl7YTp7Zm9yKHZhciBiPWEucmV0dXJuO251bGwhPT1iOyl7aWYoT2koYikpe3ZhciBjPWI7YnJlYWsgYX1iPWIucmV0dXJufXRocm93IEVycm9yKHUoMTYwKSk7fWI9Yy5zdGF0ZU5vZGU7c3dpdGNoKGMudGFnKXtjYXNlIDU6dmFyIGQ9ITE7YnJlYWs7Y2FzZSAzOmI9Yi5jb250YWluZXJJbmZvO2Q9ITA7YnJlYWs7Y2FzZSA0OmI9Yi5jb250YWluZXJJbmZvO2Q9ITA7YnJlYWs7ZGVmYXVsdDp0aHJvdyBFcnJvcih1KDE2MSkpO31jLmVmZmVjdFRhZyYxNiYmKFJiKGIsXCJcIiksYy5lZmZlY3RUYWcmPS0xNyk7YTpiOmZvcihjPWE7Oyl7Zm9yKDtudWxsPT09Yy5zaWJsaW5nOyl7aWYobnVsbD09PWMucmV0dXJufHxPaShjLnJldHVybikpe2M9bnVsbDticmVhayBhfWM9Yy5yZXR1cm59Yy5zaWJsaW5nLnJldHVybj1jLnJldHVybjtmb3IoYz1jLnNpYmxpbmc7NSE9PWMudGFnJiY2IT09Yy50YWcmJjE4IT09Yy50YWc7KXtpZihjLmVmZmVjdFRhZyYyKWNvbnRpbnVlIGI7XG5pZihudWxsPT09Yy5jaGlsZHx8ND09PWMudGFnKWNvbnRpbnVlIGI7ZWxzZSBjLmNoaWxkLnJldHVybj1jLGM9Yy5jaGlsZH1pZighKGMuZWZmZWN0VGFnJjIpKXtjPWMuc3RhdGVOb2RlO2JyZWFrIGF9fWQ/UWkoYSxjLGIpOlJpKGEsYyxiKX1cbmZ1bmN0aW9uIFFpKGEsYixjKXt2YXIgZD1hLnRhZyxlPTU9PT1kfHw2PT09ZDtpZihlKWE9ZT9hLnN0YXRlTm9kZTphLnN0YXRlTm9kZS5pbnN0YW5jZSxiPzg9PT1jLm5vZGVUeXBlP2MucGFyZW50Tm9kZS5pbnNlcnRCZWZvcmUoYSxiKTpjLmluc2VydEJlZm9yZShhLGIpOig4PT09Yy5ub2RlVHlwZT8oYj1jLnBhcmVudE5vZGUsYi5pbnNlcnRCZWZvcmUoYSxjKSk6KGI9YyxiLmFwcGVuZENoaWxkKGEpKSxjPWMuX3JlYWN0Um9vdENvbnRhaW5lcixudWxsIT09YyYmdm9pZCAwIT09Y3x8bnVsbCE9PWIub25jbGlja3x8KGIub25jbGljaz1zZCkpO2Vsc2UgaWYoNCE9PWQmJihhPWEuY2hpbGQsbnVsbCE9PWEpKWZvcihRaShhLGIsYyksYT1hLnNpYmxpbmc7bnVsbCE9PWE7KVFpKGEsYixjKSxhPWEuc2libGluZ31cbmZ1bmN0aW9uIFJpKGEsYixjKXt2YXIgZD1hLnRhZyxlPTU9PT1kfHw2PT09ZDtpZihlKWE9ZT9hLnN0YXRlTm9kZTphLnN0YXRlTm9kZS5pbnN0YW5jZSxiP2MuaW5zZXJ0QmVmb3JlKGEsYik6Yy5hcHBlbmRDaGlsZChhKTtlbHNlIGlmKDQhPT1kJiYoYT1hLmNoaWxkLG51bGwhPT1hKSlmb3IoUmkoYSxiLGMpLGE9YS5zaWJsaW5nO251bGwhPT1hOylSaShhLGIsYyksYT1hLnNpYmxpbmd9XG5mdW5jdGlvbiBNaShhLGIsYyl7Zm9yKHZhciBkPWIsZT0hMSxmLGc7Oyl7aWYoIWUpe2U9ZC5yZXR1cm47YTpmb3IoOzspe2lmKG51bGw9PT1lKXRocm93IEVycm9yKHUoMTYwKSk7Zj1lLnN0YXRlTm9kZTtzd2l0Y2goZS50YWcpe2Nhc2UgNTpnPSExO2JyZWFrIGE7Y2FzZSAzOmY9Zi5jb250YWluZXJJbmZvO2c9ITA7YnJlYWsgYTtjYXNlIDQ6Zj1mLmNvbnRhaW5lckluZm87Zz0hMDticmVhayBhfWU9ZS5yZXR1cm59ZT0hMH1pZig1PT09ZC50YWd8fDY9PT1kLnRhZyl7YTpmb3IodmFyIGg9YSxrPWQsbD1jLG09azs7KWlmKEtpKGgsbSxsKSxudWxsIT09bS5jaGlsZCYmNCE9PW0udGFnKW0uY2hpbGQucmV0dXJuPW0sbT1tLmNoaWxkO2Vsc2V7aWYobT09PWspYnJlYWsgYTtmb3IoO251bGw9PT1tLnNpYmxpbmc7KXtpZihudWxsPT09bS5yZXR1cm58fG0ucmV0dXJuPT09aylicmVhayBhO209bS5yZXR1cm59bS5zaWJsaW5nLnJldHVybj1tLnJldHVybjttPW0uc2libGluZ31nPyhoPVxuZixrPWQuc3RhdGVOb2RlLDg9PT1oLm5vZGVUeXBlP2gucGFyZW50Tm9kZS5yZW1vdmVDaGlsZChrKTpoLnJlbW92ZUNoaWxkKGspKTpmLnJlbW92ZUNoaWxkKGQuc3RhdGVOb2RlKX1lbHNlIGlmKDQ9PT1kLnRhZyl7aWYobnVsbCE9PWQuY2hpbGQpe2Y9ZC5zdGF0ZU5vZGUuY29udGFpbmVySW5mbztnPSEwO2QuY2hpbGQucmV0dXJuPWQ7ZD1kLmNoaWxkO2NvbnRpbnVlfX1lbHNlIGlmKEtpKGEsZCxjKSxudWxsIT09ZC5jaGlsZCl7ZC5jaGlsZC5yZXR1cm49ZDtkPWQuY2hpbGQ7Y29udGludWV9aWYoZD09PWIpYnJlYWs7Zm9yKDtudWxsPT09ZC5zaWJsaW5nOyl7aWYobnVsbD09PWQucmV0dXJufHxkLnJldHVybj09PWIpcmV0dXJuO2Q9ZC5yZXR1cm47ND09PWQudGFnJiYoZT0hMSl9ZC5zaWJsaW5nLnJldHVybj1kLnJldHVybjtkPWQuc2libGluZ319XG5mdW5jdGlvbiBTaShhLGIpe3N3aXRjaChiLnRhZyl7Y2FzZSAwOmNhc2UgMTE6Y2FzZSAxNDpjYXNlIDE1OmNhc2UgMjI6SGkoMyxiKTtyZXR1cm47Y2FzZSAxOnJldHVybjtjYXNlIDU6dmFyIGM9Yi5zdGF0ZU5vZGU7aWYobnVsbCE9Yyl7dmFyIGQ9Yi5tZW1vaXplZFByb3BzLGU9bnVsbCE9PWE/YS5tZW1vaXplZFByb3BzOmQ7YT1iLnR5cGU7dmFyIGY9Yi51cGRhdGVRdWV1ZTtiLnVwZGF0ZVF1ZXVlPW51bGw7aWYobnVsbCE9PWYpe2NbTmRdPWQ7XCJpbnB1dFwiPT09YSYmXCJyYWRpb1wiPT09ZC50eXBlJiZudWxsIT1kLm5hbWUmJkJiKGMsZCk7cGQoYSxlKTtiPXBkKGEsZCk7Zm9yKGU9MDtlPGYubGVuZ3RoO2UrPTIpe3ZhciBnPWZbZV0saD1mW2UrMV07XCJzdHlsZVwiPT09Zz9tZChjLGgpOlwiZGFuZ2Vyb3VzbHlTZXRJbm5lckhUTUxcIj09PWc/UWIoYyxoKTpcImNoaWxkcmVuXCI9PT1nP1JiKGMsaCk6WGEoYyxnLGgsYil9c3dpdGNoKGEpe2Nhc2UgXCJpbnB1dFwiOkNiKGMsZCk7YnJlYWs7XG5jYXNlIFwidGV4dGFyZWFcIjpLYihjLGQpO2JyZWFrO2Nhc2UgXCJzZWxlY3RcIjpiPWMuX3dyYXBwZXJTdGF0ZS53YXNNdWx0aXBsZSxjLl93cmFwcGVyU3RhdGUud2FzTXVsdGlwbGU9ISFkLm11bHRpcGxlLGE9ZC52YWx1ZSxudWxsIT1hP0hiKGMsISFkLm11bHRpcGxlLGEsITEpOmIhPT0hIWQubXVsdGlwbGUmJihudWxsIT1kLmRlZmF1bHRWYWx1ZT9IYihjLCEhZC5tdWx0aXBsZSxkLmRlZmF1bHRWYWx1ZSwhMCk6SGIoYywhIWQubXVsdGlwbGUsZC5tdWx0aXBsZT9bXTpcIlwiLCExKSl9fX1yZXR1cm47Y2FzZSA2OmlmKG51bGw9PT1iLnN0YXRlTm9kZSl0aHJvdyBFcnJvcih1KDE2MikpO2Iuc3RhdGVOb2RlLm5vZGVWYWx1ZT1iLm1lbW9pemVkUHJvcHM7cmV0dXJuO2Nhc2UgMzpiPWIuc3RhdGVOb2RlO2IuaHlkcmF0ZSYmKGIuaHlkcmF0ZT0hMSxWYyhiLmNvbnRhaW5lckluZm8pKTtyZXR1cm47Y2FzZSAxMjpyZXR1cm47Y2FzZSAxMzpjPWI7bnVsbD09PWIubWVtb2l6ZWRTdGF0ZT9cbmQ9ITE6KGQ9ITAsYz1iLmNoaWxkLFRpPSRmKCkpO2lmKG51bGwhPT1jKWE6Zm9yKGE9Yzs7KXtpZig1PT09YS50YWcpZj1hLnN0YXRlTm9kZSxkPyhmPWYuc3R5bGUsXCJmdW5jdGlvblwiPT09dHlwZW9mIGYuc2V0UHJvcGVydHk/Zi5zZXRQcm9wZXJ0eShcImRpc3BsYXlcIixcIm5vbmVcIixcImltcG9ydGFudFwiKTpmLmRpc3BsYXk9XCJub25lXCIpOihmPWEuc3RhdGVOb2RlLGU9YS5tZW1vaXplZFByb3BzLnN0eWxlLGU9dm9pZCAwIT09ZSYmbnVsbCE9PWUmJmUuaGFzT3duUHJvcGVydHkoXCJkaXNwbGF5XCIpP2UuZGlzcGxheTpudWxsLGYuc3R5bGUuZGlzcGxheT1sZChcImRpc3BsYXlcIixlKSk7ZWxzZSBpZig2PT09YS50YWcpYS5zdGF0ZU5vZGUubm9kZVZhbHVlPWQ/XCJcIjphLm1lbW9pemVkUHJvcHM7ZWxzZSBpZigxMz09PWEudGFnJiZudWxsIT09YS5tZW1vaXplZFN0YXRlJiZudWxsPT09YS5tZW1vaXplZFN0YXRlLmRlaHlkcmF0ZWQpe2Y9YS5jaGlsZC5zaWJsaW5nO2YucmV0dXJuPWE7YT1cbmY7Y29udGludWV9ZWxzZSBpZihudWxsIT09YS5jaGlsZCl7YS5jaGlsZC5yZXR1cm49YTthPWEuY2hpbGQ7Y29udGludWV9aWYoYT09PWMpYnJlYWs7Zm9yKDtudWxsPT09YS5zaWJsaW5nOyl7aWYobnVsbD09PWEucmV0dXJufHxhLnJldHVybj09PWMpYnJlYWsgYTthPWEucmV0dXJufWEuc2libGluZy5yZXR1cm49YS5yZXR1cm47YT1hLnNpYmxpbmd9VWkoYik7cmV0dXJuO2Nhc2UgMTk6VWkoYik7cmV0dXJuO2Nhc2UgMTc6cmV0dXJufXRocm93IEVycm9yKHUoMTYzKSk7fWZ1bmN0aW9uIFVpKGEpe3ZhciBiPWEudXBkYXRlUXVldWU7aWYobnVsbCE9PWIpe2EudXBkYXRlUXVldWU9bnVsbDt2YXIgYz1hLnN0YXRlTm9kZTtudWxsPT09YyYmKGM9YS5zdGF0ZU5vZGU9bmV3IEJpKTtiLmZvckVhY2goZnVuY3Rpb24oYil7dmFyIGQ9VmkuYmluZChudWxsLGEsYik7Yy5oYXMoYil8fChjLmFkZChiKSxiLnRoZW4oZCxkKSl9KX19XG52YXIgV2k9XCJmdW5jdGlvblwiPT09dHlwZW9mIFdlYWtNYXA/V2Vha01hcDpNYXA7ZnVuY3Rpb24gWGkoYSxiLGMpe2M9d2coYyxudWxsKTtjLnRhZz0zO2MucGF5bG9hZD17ZWxlbWVudDpudWxsfTt2YXIgZD1iLnZhbHVlO2MuY2FsbGJhY2s9ZnVuY3Rpb24oKXtZaXx8KFlpPSEwLFppPWQpO0NpKGEsYil9O3JldHVybiBjfVxuZnVuY3Rpb24gJGkoYSxiLGMpe2M9d2coYyxudWxsKTtjLnRhZz0zO3ZhciBkPWEudHlwZS5nZXREZXJpdmVkU3RhdGVGcm9tRXJyb3I7aWYoXCJmdW5jdGlvblwiPT09dHlwZW9mIGQpe3ZhciBlPWIudmFsdWU7Yy5wYXlsb2FkPWZ1bmN0aW9uKCl7Q2koYSxiKTtyZXR1cm4gZChlKX19dmFyIGY9YS5zdGF0ZU5vZGU7bnVsbCE9PWYmJlwiZnVuY3Rpb25cIj09PXR5cGVvZiBmLmNvbXBvbmVudERpZENhdGNoJiYoYy5jYWxsYmFjaz1mdW5jdGlvbigpe1wiZnVuY3Rpb25cIiE9PXR5cGVvZiBkJiYobnVsbD09PWFqP2FqPW5ldyBTZXQoW3RoaXNdKTphai5hZGQodGhpcyksQ2koYSxiKSk7dmFyIGM9Yi5zdGFjazt0aGlzLmNvbXBvbmVudERpZENhdGNoKGIudmFsdWUse2NvbXBvbmVudFN0YWNrOm51bGwhPT1jP2M6XCJcIn0pfSk7cmV0dXJuIGN9XG52YXIgYmo9TWF0aC5jZWlsLGNqPVdhLlJlYWN0Q3VycmVudERpc3BhdGNoZXIsZGo9V2EuUmVhY3RDdXJyZW50T3duZXIsVj0wLGVqPTgsZmo9MTYsZ2o9MzIsdGk9MCxoaj0xLGlqPTIsdWk9Myx2aT00LGpqPTUsVz1WLFQ9bnVsbCxYPW51bGwsVT0wLFM9dGksa2o9bnVsbCxsaj0xMDczNzQxODIzLG1qPTEwNzM3NDE4MjMsbmo9bnVsbCx3aT0wLG9qPSExLFRpPTAscGo9NTAwLFk9bnVsbCxZaT0hMSxaaT1udWxsLGFqPW51bGwscWo9ITEscmo9bnVsbCxzaj05MCx0aj1udWxsLHVqPTAsdmo9bnVsbCx3aj0wO2Z1bmN0aW9uIEdnKCl7cmV0dXJuKFcmKGZqfGdqKSkhPT1WPzEwNzM3NDE4MjEtKCRmKCkvMTB8MCk6MCE9PXdqP3dqOndqPTEwNzM3NDE4MjEtKCRmKCkvMTB8MCl9XG5mdW5jdGlvbiBIZyhhLGIsYyl7Yj1iLm1vZGU7aWYoMD09PShiJjIpKXJldHVybiAxMDczNzQxODIzO3ZhciBkPWFnKCk7aWYoMD09PShiJjQpKXJldHVybiA5OT09PWQ/MTA3Mzc0MTgyMzoxMDczNzQxODIyO2lmKChXJmZqKSE9PVYpcmV0dXJuIFU7aWYobnVsbCE9PWMpYT1oZyhhLGMudGltZW91dE1zfDB8fDVFMywyNTApO2Vsc2Ugc3dpdGNoKGQpe2Nhc2UgOTk6YT0xMDczNzQxODIzO2JyZWFrO2Nhc2UgOTg6YT1oZyhhLDE1MCwxMDApO2JyZWFrO2Nhc2UgOTc6Y2FzZSA5NjphPWhnKGEsNUUzLDI1MCk7YnJlYWs7Y2FzZSA5NTphPTI7YnJlYWs7ZGVmYXVsdDp0aHJvdyBFcnJvcih1KDMyNikpO31udWxsIT09VCYmYT09PVUmJi0tYTtyZXR1cm4gYX1cbmZ1bmN0aW9uIElnKGEsYil7aWYoNTA8dWopdGhyb3cgdWo9MCx2aj1udWxsLEVycm9yKHUoMTg1KSk7YT14aihhLGIpO2lmKG51bGwhPT1hKXt2YXIgYz1hZygpOzEwNzM3NDE4MjM9PT1iPyhXJmVqKSE9PVYmJihXJihmanxnaikpPT09Vj95aihhKTooWihhKSxXPT09ViYmZ2coKSk6WihhKTsoVyY0KT09PVZ8fDk4IT09YyYmOTkhPT1jfHwobnVsbD09PXRqP3RqPW5ldyBNYXAoW1thLGJdXSk6KGM9dGouZ2V0KGEpLCh2b2lkIDA9PT1jfHxjPmIpJiZ0ai5zZXQoYSxiKSkpfX1cbmZ1bmN0aW9uIHhqKGEsYil7YS5leHBpcmF0aW9uVGltZTxiJiYoYS5leHBpcmF0aW9uVGltZT1iKTt2YXIgYz1hLmFsdGVybmF0ZTtudWxsIT09YyYmYy5leHBpcmF0aW9uVGltZTxiJiYoYy5leHBpcmF0aW9uVGltZT1iKTt2YXIgZD1hLnJldHVybixlPW51bGw7aWYobnVsbD09PWQmJjM9PT1hLnRhZyllPWEuc3RhdGVOb2RlO2Vsc2UgZm9yKDtudWxsIT09ZDspe2M9ZC5hbHRlcm5hdGU7ZC5jaGlsZEV4cGlyYXRpb25UaW1lPGImJihkLmNoaWxkRXhwaXJhdGlvblRpbWU9Yik7bnVsbCE9PWMmJmMuY2hpbGRFeHBpcmF0aW9uVGltZTxiJiYoYy5jaGlsZEV4cGlyYXRpb25UaW1lPWIpO2lmKG51bGw9PT1kLnJldHVybiYmMz09PWQudGFnKXtlPWQuc3RhdGVOb2RlO2JyZWFrfWQ9ZC5yZXR1cm59bnVsbCE9PWUmJihUPT09ZSYmKEJnKGIpLFM9PT12aSYmeGkoZSxVKSkseWkoZSxiKSk7cmV0dXJuIGV9XG5mdW5jdGlvbiB6aihhKXt2YXIgYj1hLmxhc3RFeHBpcmVkVGltZTtpZigwIT09YilyZXR1cm4gYjtiPWEuZmlyc3RQZW5kaW5nVGltZTtpZighQWooYSxiKSlyZXR1cm4gYjt2YXIgYz1hLmxhc3RQaW5nZWRUaW1lO2E9YS5uZXh0S25vd25QZW5kaW5nTGV2ZWw7YT1jPmE/YzphO3JldHVybiAyPj1hJiZiIT09YT8wOmF9XG5mdW5jdGlvbiBaKGEpe2lmKDAhPT1hLmxhc3RFeHBpcmVkVGltZSlhLmNhbGxiYWNrRXhwaXJhdGlvblRpbWU9MTA3Mzc0MTgyMyxhLmNhbGxiYWNrUHJpb3JpdHk9OTksYS5jYWxsYmFja05vZGU9ZWcoeWouYmluZChudWxsLGEpKTtlbHNle3ZhciBiPXpqKGEpLGM9YS5jYWxsYmFja05vZGU7aWYoMD09PWIpbnVsbCE9PWMmJihhLmNhbGxiYWNrTm9kZT1udWxsLGEuY2FsbGJhY2tFeHBpcmF0aW9uVGltZT0wLGEuY2FsbGJhY2tQcmlvcml0eT05MCk7ZWxzZXt2YXIgZD1HZygpOzEwNzM3NDE4MjM9PT1iP2Q9OTk6MT09PWJ8fDI9PT1iP2Q9OTU6KGQ9MTAqKDEwNzM3NDE4MjEtYiktMTAqKDEwNzM3NDE4MjEtZCksZD0wPj1kPzk5OjI1MD49ZD85ODo1MjUwPj1kPzk3Ojk1KTtpZihudWxsIT09Yyl7dmFyIGU9YS5jYWxsYmFja1ByaW9yaXR5O2lmKGEuY2FsbGJhY2tFeHBpcmF0aW9uVGltZT09PWImJmU+PWQpcmV0dXJuO2MhPT1UZiYmS2YoYyl9YS5jYWxsYmFja0V4cGlyYXRpb25UaW1lPVxuYjthLmNhbGxiYWNrUHJpb3JpdHk9ZDtiPTEwNzM3NDE4MjM9PT1iP2VnKHlqLmJpbmQobnVsbCxhKSk6ZGcoZCxCai5iaW5kKG51bGwsYSkse3RpbWVvdXQ6MTAqKDEwNzM3NDE4MjEtYiktJGYoKX0pO2EuY2FsbGJhY2tOb2RlPWJ9fX1cbmZ1bmN0aW9uIEJqKGEsYil7d2o9MDtpZihiKXJldHVybiBiPUdnKCksQ2ooYSxiKSxaKGEpLG51bGw7dmFyIGM9emooYSk7aWYoMCE9PWMpe2I9YS5jYWxsYmFja05vZGU7aWYoKFcmKGZqfGdqKSkhPT1WKXRocm93IEVycm9yKHUoMzI3KSk7RGooKTthPT09VCYmYz09PVV8fEVqKGEsYyk7aWYobnVsbCE9PVgpe3ZhciBkPVc7V3w9Zmo7dmFyIGU9RmooKTtkbyB0cnl7R2ooKTticmVha31jYXRjaChoKXtIaihhLGgpfXdoaWxlKDEpO25nKCk7Vz1kO2NqLmN1cnJlbnQ9ZTtpZihTPT09aGopdGhyb3cgYj1raixFaihhLGMpLHhpKGEsYyksWihhKSxiO2lmKG51bGw9PT1YKXN3aXRjaChlPWEuZmluaXNoZWRXb3JrPWEuY3VycmVudC5hbHRlcm5hdGUsYS5maW5pc2hlZEV4cGlyYXRpb25UaW1lPWMsZD1TLFQ9bnVsbCxkKXtjYXNlIHRpOmNhc2UgaGo6dGhyb3cgRXJyb3IodSgzNDUpKTtjYXNlIGlqOkNqKGEsMjxjPzI6Yyk7YnJlYWs7Y2FzZSB1aTp4aShhLGMpO2Q9YS5sYXN0U3VzcGVuZGVkVGltZTtcbmM9PT1kJiYoYS5uZXh0S25vd25QZW5kaW5nTGV2ZWw9SWooZSkpO2lmKDEwNzM3NDE4MjM9PT1saiYmKGU9VGkrcGotJGYoKSwxMDxlKSl7aWYob2ope3ZhciBmPWEubGFzdFBpbmdlZFRpbWU7aWYoMD09PWZ8fGY+PWMpe2EubGFzdFBpbmdlZFRpbWU9YztFaihhLGMpO2JyZWFrfX1mPXpqKGEpO2lmKDAhPT1mJiZmIT09YylicmVhaztpZigwIT09ZCYmZCE9PWMpe2EubGFzdFBpbmdlZFRpbWU9ZDticmVha31hLnRpbWVvdXRIYW5kbGU9SGQoSmouYmluZChudWxsLGEpLGUpO2JyZWFrfUpqKGEpO2JyZWFrO2Nhc2Ugdmk6eGkoYSxjKTtkPWEubGFzdFN1c3BlbmRlZFRpbWU7Yz09PWQmJihhLm5leHRLbm93blBlbmRpbmdMZXZlbD1JaihlKSk7aWYob2omJihlPWEubGFzdFBpbmdlZFRpbWUsMD09PWV8fGU+PWMpKXthLmxhc3RQaW5nZWRUaW1lPWM7RWooYSxjKTticmVha31lPXpqKGEpO2lmKDAhPT1lJiZlIT09YylicmVhaztpZigwIT09ZCYmZCE9PWMpe2EubGFzdFBpbmdlZFRpbWU9XG5kO2JyZWFrfTEwNzM3NDE4MjMhPT1taj9kPTEwKigxMDczNzQxODIxLW1qKS0kZigpOjEwNzM3NDE4MjM9PT1saj9kPTA6KGQ9MTAqKDEwNzM3NDE4MjEtbGopLTVFMyxlPSRmKCksYz0xMCooMTA3Mzc0MTgyMS1jKS1lLGQ9ZS1kLDA+ZCYmKGQ9MCksZD0oMTIwPmQ/MTIwOjQ4MD5kPzQ4MDoxMDgwPmQ/MTA4MDoxOTIwPmQ/MTkyMDozRTM+ZD8zRTM6NDMyMD5kPzQzMjA6MTk2MCpiaihkLzE5NjApKS1kLGM8ZCYmKGQ9YykpO2lmKDEwPGQpe2EudGltZW91dEhhbmRsZT1IZChKai5iaW5kKG51bGwsYSksZCk7YnJlYWt9SmooYSk7YnJlYWs7Y2FzZSBqajppZigxMDczNzQxODIzIT09bGomJm51bGwhPT1uail7Zj1sajt2YXIgZz1uajtkPWcuYnVzeU1pbkR1cmF0aW9uTXN8MDswPj1kP2Q9MDooZT1nLmJ1c3lEZWxheU1zfDAsZj0kZigpLSgxMCooMTA3Mzc0MTgyMS1mKS0oZy50aW1lb3V0TXN8MHx8NUUzKSksZD1mPD1lPzA6ZStkLWYpO2lmKDEwPGQpe3hpKGEsYyk7YS50aW1lb3V0SGFuZGxlPVxuSGQoSmouYmluZChudWxsLGEpLGQpO2JyZWFrfX1KaihhKTticmVhaztkZWZhdWx0OnRocm93IEVycm9yKHUoMzI5KSk7fVooYSk7aWYoYS5jYWxsYmFja05vZGU9PT1iKXJldHVybiBCai5iaW5kKG51bGwsYSl9fXJldHVybiBudWxsfVxuZnVuY3Rpb24geWooYSl7dmFyIGI9YS5sYXN0RXhwaXJlZFRpbWU7Yj0wIT09Yj9iOjEwNzM3NDE4MjM7aWYoKFcmKGZqfGdqKSkhPT1WKXRocm93IEVycm9yKHUoMzI3KSk7RGooKTthPT09VCYmYj09PVV8fEVqKGEsYik7aWYobnVsbCE9PVgpe3ZhciBjPVc7V3w9Zmo7dmFyIGQ9RmooKTtkbyB0cnl7S2ooKTticmVha31jYXRjaChlKXtIaihhLGUpfXdoaWxlKDEpO25nKCk7Vz1jO2NqLmN1cnJlbnQ9ZDtpZihTPT09aGopdGhyb3cgYz1raixFaihhLGIpLHhpKGEsYiksWihhKSxjO2lmKG51bGwhPT1YKXRocm93IEVycm9yKHUoMjYxKSk7YS5maW5pc2hlZFdvcms9YS5jdXJyZW50LmFsdGVybmF0ZTthLmZpbmlzaGVkRXhwaXJhdGlvblRpbWU9YjtUPW51bGw7SmooYSk7WihhKX1yZXR1cm4gbnVsbH1mdW5jdGlvbiBMaigpe2lmKG51bGwhPT10ail7dmFyIGE9dGo7dGo9bnVsbDthLmZvckVhY2goZnVuY3Rpb24oYSxjKXtDaihjLGEpO1ooYyl9KTtnZygpfX1cbmZ1bmN0aW9uIE1qKGEsYil7dmFyIGM9VztXfD0xO3RyeXtyZXR1cm4gYShiKX1maW5hbGx5e1c9YyxXPT09ViYmZ2coKX19ZnVuY3Rpb24gTmooYSxiKXt2YXIgYz1XO1cmPS0yO1d8PWVqO3RyeXtyZXR1cm4gYShiKX1maW5hbGx5e1c9YyxXPT09ViYmZ2coKX19XG5mdW5jdGlvbiBFaihhLGIpe2EuZmluaXNoZWRXb3JrPW51bGw7YS5maW5pc2hlZEV4cGlyYXRpb25UaW1lPTA7dmFyIGM9YS50aW1lb3V0SGFuZGxlOy0xIT09YyYmKGEudGltZW91dEhhbmRsZT0tMSxJZChjKSk7aWYobnVsbCE9PVgpZm9yKGM9WC5yZXR1cm47bnVsbCE9PWM7KXt2YXIgZD1jO3N3aXRjaChkLnRhZyl7Y2FzZSAxOmQ9ZC50eXBlLmNoaWxkQ29udGV4dFR5cGVzO251bGwhPT1kJiZ2b2lkIDAhPT1kJiZEZigpO2JyZWFrO2Nhc2UgMzplaCgpO0goSyk7SChKKTticmVhaztjYXNlIDU6Z2goZCk7YnJlYWs7Y2FzZSA0OmVoKCk7YnJlYWs7Y2FzZSAxMzpIKE0pO2JyZWFrO2Nhc2UgMTk6SChNKTticmVhaztjYXNlIDEwOm9nKGQpfWM9Yy5yZXR1cm59VD1hO1g9U2coYS5jdXJyZW50LG51bGwpO1U9YjtTPXRpO2tqPW51bGw7bWo9bGo9MTA3Mzc0MTgyMztuaj1udWxsO3dpPTA7b2o9ITF9XG5mdW5jdGlvbiBIaihhLGIpe2Rve3RyeXtuZygpO2poLmN1cnJlbnQ9c2g7aWYobWgpZm9yKHZhciBjPU4ubWVtb2l6ZWRTdGF0ZTtudWxsIT09Yzspe3ZhciBkPWMucXVldWU7bnVsbCE9PWQmJihkLnBlbmRpbmc9bnVsbCk7Yz1jLm5leHR9bGg9MDtQPU89Tj1udWxsO21oPSExO2lmKG51bGw9PT1YfHxudWxsPT09WC5yZXR1cm4pcmV0dXJuIFM9aGosa2o9YixYPW51bGw7YTp7dmFyIGU9YSxmPVgucmV0dXJuLGc9WCxoPWI7Yj1VO2cuZWZmZWN0VGFnfD0yMDQ4O2cuZmlyc3RFZmZlY3Q9Zy5sYXN0RWZmZWN0PW51bGw7aWYobnVsbCE9PWgmJlwib2JqZWN0XCI9PT10eXBlb2YgaCYmXCJmdW5jdGlvblwiPT09dHlwZW9mIGgudGhlbil7dmFyIGs9aDtpZigwPT09KGcubW9kZSYyKSl7dmFyIGw9Zy5hbHRlcm5hdGU7bD8oZy51cGRhdGVRdWV1ZT1sLnVwZGF0ZVF1ZXVlLGcubWVtb2l6ZWRTdGF0ZT1sLm1lbW9pemVkU3RhdGUsZy5leHBpcmF0aW9uVGltZT1sLmV4cGlyYXRpb25UaW1lKTooZy51cGRhdGVRdWV1ZT1cbm51bGwsZy5tZW1vaXplZFN0YXRlPW51bGwpfXZhciBtPTAhPT0oTS5jdXJyZW50JjEpLHA9Zjtkb3t2YXIgeDtpZih4PTEzPT09cC50YWcpe3ZhciB6PXAubWVtb2l6ZWRTdGF0ZTtpZihudWxsIT09eil4PW51bGwhPT16LmRlaHlkcmF0ZWQ/ITA6ITE7ZWxzZXt2YXIgY2E9cC5tZW1vaXplZFByb3BzO3g9dm9pZCAwPT09Y2EuZmFsbGJhY2s/ITE6ITAhPT1jYS51bnN0YWJsZV9hdm9pZFRoaXNGYWxsYmFjaz8hMDptPyExOiEwfX1pZih4KXt2YXIgRD1wLnVwZGF0ZVF1ZXVlO2lmKG51bGw9PT1EKXt2YXIgdD1uZXcgU2V0O3QuYWRkKGspO3AudXBkYXRlUXVldWU9dH1lbHNlIEQuYWRkKGspO2lmKDA9PT0ocC5tb2RlJjIpKXtwLmVmZmVjdFRhZ3w9NjQ7Zy5lZmZlY3RUYWcmPS0yOTgxO2lmKDE9PT1nLnRhZylpZihudWxsPT09Zy5hbHRlcm5hdGUpZy50YWc9MTc7ZWxzZXt2YXIgeT13ZygxMDczNzQxODIzLG51bGwpO3kudGFnPTI7eGcoZyx5KX1nLmV4cGlyYXRpb25UaW1lPTEwNzM3NDE4MjM7XG5icmVhayBhfWg9dm9pZCAwO2c9Yjt2YXIgQT1lLnBpbmdDYWNoZTtudWxsPT09QT8oQT1lLnBpbmdDYWNoZT1uZXcgV2ksaD1uZXcgU2V0LEEuc2V0KGssaCkpOihoPUEuZ2V0KGspLHZvaWQgMD09PWgmJihoPW5ldyBTZXQsQS5zZXQoayxoKSkpO2lmKCFoLmhhcyhnKSl7aC5hZGQoZyk7dmFyIHE9T2ouYmluZChudWxsLGUsayxnKTtrLnRoZW4ocSxxKX1wLmVmZmVjdFRhZ3w9NDA5NjtwLmV4cGlyYXRpb25UaW1lPWI7YnJlYWsgYX1wPXAucmV0dXJufXdoaWxlKG51bGwhPT1wKTtoPUVycm9yKChwYihnLnR5cGUpfHxcIkEgUmVhY3QgY29tcG9uZW50XCIpK1wiIHN1c3BlbmRlZCB3aGlsZSByZW5kZXJpbmcsIGJ1dCBubyBmYWxsYmFjayBVSSB3YXMgc3BlY2lmaWVkLlxcblxcbkFkZCBhIDxTdXNwZW5zZSBmYWxsYmFjaz0uLi4+IGNvbXBvbmVudCBoaWdoZXIgaW4gdGhlIHRyZWUgdG8gcHJvdmlkZSBhIGxvYWRpbmcgaW5kaWNhdG9yIG9yIHBsYWNlaG9sZGVyIHRvIGRpc3BsYXkuXCIrcWIoZykpfVMhPT1cbmpqJiYoUz1paik7aD1BaShoLGcpO3A9Zjtkb3tzd2l0Y2gocC50YWcpe2Nhc2UgMzprPWg7cC5lZmZlY3RUYWd8PTQwOTY7cC5leHBpcmF0aW9uVGltZT1iO3ZhciBCPVhpKHAsayxiKTt5ZyhwLEIpO2JyZWFrIGE7Y2FzZSAxOms9aDt2YXIgdz1wLnR5cGUsdWI9cC5zdGF0ZU5vZGU7aWYoMD09PShwLmVmZmVjdFRhZyY2NCkmJihcImZ1bmN0aW9uXCI9PT10eXBlb2Ygdy5nZXREZXJpdmVkU3RhdGVGcm9tRXJyb3J8fG51bGwhPT11YiYmXCJmdW5jdGlvblwiPT09dHlwZW9mIHViLmNvbXBvbmVudERpZENhdGNoJiYobnVsbD09PWFqfHwhYWouaGFzKHViKSkpKXtwLmVmZmVjdFRhZ3w9NDA5NjtwLmV4cGlyYXRpb25UaW1lPWI7dmFyIHZiPSRpKHAsayxiKTt5ZyhwLHZiKTticmVhayBhfX1wPXAucmV0dXJufXdoaWxlKG51bGwhPT1wKX1YPVBqKFgpfWNhdGNoKFhjKXtiPVhjO2NvbnRpbnVlfWJyZWFrfXdoaWxlKDEpfVxuZnVuY3Rpb24gRmooKXt2YXIgYT1jai5jdXJyZW50O2NqLmN1cnJlbnQ9c2g7cmV0dXJuIG51bGw9PT1hP3NoOmF9ZnVuY3Rpb24gQWcoYSxiKXthPGxqJiYyPGEmJihsaj1hKTtudWxsIT09YiYmYTxtaiYmMjxhJiYobWo9YSxuaj1iKX1mdW5jdGlvbiBCZyhhKXthPndpJiYod2k9YSl9ZnVuY3Rpb24gS2ooKXtmb3IoO251bGwhPT1YOylYPVFqKFgpfWZ1bmN0aW9uIEdqKCl7Zm9yKDtudWxsIT09WCYmIVVmKCk7KVg9UWooWCl9ZnVuY3Rpb24gUWooYSl7dmFyIGI9UmooYS5hbHRlcm5hdGUsYSxVKTthLm1lbW9pemVkUHJvcHM9YS5wZW5kaW5nUHJvcHM7bnVsbD09PWImJihiPVBqKGEpKTtkai5jdXJyZW50PW51bGw7cmV0dXJuIGJ9XG5mdW5jdGlvbiBQaihhKXtYPWE7ZG97dmFyIGI9WC5hbHRlcm5hdGU7YT1YLnJldHVybjtpZigwPT09KFguZWZmZWN0VGFnJjIwNDgpKXtiPXNpKGIsWCxVKTtpZigxPT09VXx8MSE9PVguY2hpbGRFeHBpcmF0aW9uVGltZSl7Zm9yKHZhciBjPTAsZD1YLmNoaWxkO251bGwhPT1kOyl7dmFyIGU9ZC5leHBpcmF0aW9uVGltZSxmPWQuY2hpbGRFeHBpcmF0aW9uVGltZTtlPmMmJihjPWUpO2Y+YyYmKGM9Zik7ZD1kLnNpYmxpbmd9WC5jaGlsZEV4cGlyYXRpb25UaW1lPWN9aWYobnVsbCE9PWIpcmV0dXJuIGI7bnVsbCE9PWEmJjA9PT0oYS5lZmZlY3RUYWcmMjA0OCkmJihudWxsPT09YS5maXJzdEVmZmVjdCYmKGEuZmlyc3RFZmZlY3Q9WC5maXJzdEVmZmVjdCksbnVsbCE9PVgubGFzdEVmZmVjdCYmKG51bGwhPT1hLmxhc3RFZmZlY3QmJihhLmxhc3RFZmZlY3QubmV4dEVmZmVjdD1YLmZpcnN0RWZmZWN0KSxhLmxhc3RFZmZlY3Q9WC5sYXN0RWZmZWN0KSwxPFguZWZmZWN0VGFnJiYobnVsbCE9PVxuYS5sYXN0RWZmZWN0P2EubGFzdEVmZmVjdC5uZXh0RWZmZWN0PVg6YS5maXJzdEVmZmVjdD1YLGEubGFzdEVmZmVjdD1YKSl9ZWxzZXtiPXppKFgpO2lmKG51bGwhPT1iKXJldHVybiBiLmVmZmVjdFRhZyY9MjA0NyxiO251bGwhPT1hJiYoYS5maXJzdEVmZmVjdD1hLmxhc3RFZmZlY3Q9bnVsbCxhLmVmZmVjdFRhZ3w9MjA0OCl9Yj1YLnNpYmxpbmc7aWYobnVsbCE9PWIpcmV0dXJuIGI7WD1hfXdoaWxlKG51bGwhPT1YKTtTPT09dGkmJihTPWpqKTtyZXR1cm4gbnVsbH1mdW5jdGlvbiBJaihhKXt2YXIgYj1hLmV4cGlyYXRpb25UaW1lO2E9YS5jaGlsZEV4cGlyYXRpb25UaW1lO3JldHVybiBiPmE/YjphfWZ1bmN0aW9uIEpqKGEpe3ZhciBiPWFnKCk7Y2coOTksU2ouYmluZChudWxsLGEsYikpO3JldHVybiBudWxsfVxuZnVuY3Rpb24gU2ooYSxiKXtkbyBEaigpO3doaWxlKG51bGwhPT1yaik7aWYoKFcmKGZqfGdqKSkhPT1WKXRocm93IEVycm9yKHUoMzI3KSk7dmFyIGM9YS5maW5pc2hlZFdvcmssZD1hLmZpbmlzaGVkRXhwaXJhdGlvblRpbWU7aWYobnVsbD09PWMpcmV0dXJuIG51bGw7YS5maW5pc2hlZFdvcms9bnVsbDthLmZpbmlzaGVkRXhwaXJhdGlvblRpbWU9MDtpZihjPT09YS5jdXJyZW50KXRocm93IEVycm9yKHUoMTc3KSk7YS5jYWxsYmFja05vZGU9bnVsbDthLmNhbGxiYWNrRXhwaXJhdGlvblRpbWU9MDthLmNhbGxiYWNrUHJpb3JpdHk9OTA7YS5uZXh0S25vd25QZW5kaW5nTGV2ZWw9MDt2YXIgZT1JaihjKTthLmZpcnN0UGVuZGluZ1RpbWU9ZTtkPD1hLmxhc3RTdXNwZW5kZWRUaW1lP2EuZmlyc3RTdXNwZW5kZWRUaW1lPWEubGFzdFN1c3BlbmRlZFRpbWU9YS5uZXh0S25vd25QZW5kaW5nTGV2ZWw9MDpkPD1hLmZpcnN0U3VzcGVuZGVkVGltZSYmKGEuZmlyc3RTdXNwZW5kZWRUaW1lPVxuZC0xKTtkPD1hLmxhc3RQaW5nZWRUaW1lJiYoYS5sYXN0UGluZ2VkVGltZT0wKTtkPD1hLmxhc3RFeHBpcmVkVGltZSYmKGEubGFzdEV4cGlyZWRUaW1lPTApO2E9PT1UJiYoWD1UPW51bGwsVT0wKTsxPGMuZWZmZWN0VGFnP251bGwhPT1jLmxhc3RFZmZlY3Q/KGMubGFzdEVmZmVjdC5uZXh0RWZmZWN0PWMsZT1jLmZpcnN0RWZmZWN0KTplPWM6ZT1jLmZpcnN0RWZmZWN0O2lmKG51bGwhPT1lKXt2YXIgZj1XO1d8PWdqO2RqLmN1cnJlbnQ9bnVsbDtEZD1mZDt2YXIgZz14ZCgpO2lmKHlkKGcpKXtpZihcInNlbGVjdGlvblN0YXJ0XCJpbiBnKXZhciBoPXtzdGFydDpnLnNlbGVjdGlvblN0YXJ0LGVuZDpnLnNlbGVjdGlvbkVuZH07ZWxzZSBhOntoPShoPWcub3duZXJEb2N1bWVudCkmJmguZGVmYXVsdFZpZXd8fHdpbmRvdzt2YXIgaz1oLmdldFNlbGVjdGlvbiYmaC5nZXRTZWxlY3Rpb24oKTtpZihrJiYwIT09ay5yYW5nZUNvdW50KXtoPWsuYW5jaG9yTm9kZTt2YXIgbD1rLmFuY2hvck9mZnNldCxcbm09ay5mb2N1c05vZGU7az1rLmZvY3VzT2Zmc2V0O3RyeXtoLm5vZGVUeXBlLG0ubm9kZVR5cGV9Y2F0Y2god2Ipe2g9bnVsbDticmVhayBhfXZhciBwPTAseD0tMSx6PS0xLGNhPTAsRD0wLHQ9Zyx5PW51bGw7Yjpmb3IoOzspe2Zvcih2YXIgQTs7KXt0IT09aHx8MCE9PWwmJjMhPT10Lm5vZGVUeXBlfHwoeD1wK2wpO3QhPT1tfHwwIT09ayYmMyE9PXQubm9kZVR5cGV8fCh6PXArayk7Mz09PXQubm9kZVR5cGUmJihwKz10Lm5vZGVWYWx1ZS5sZW5ndGgpO2lmKG51bGw9PT0oQT10LmZpcnN0Q2hpbGQpKWJyZWFrO3k9dDt0PUF9Zm9yKDs7KXtpZih0PT09ZylicmVhayBiO3k9PT1oJiYrK2NhPT09bCYmKHg9cCk7eT09PW0mJisrRD09PWsmJih6PXApO2lmKG51bGwhPT0oQT10Lm5leHRTaWJsaW5nKSlicmVhazt0PXk7eT10LnBhcmVudE5vZGV9dD1BfWg9LTE9PT14fHwtMT09PXo/bnVsbDp7c3RhcnQ6eCxlbmQ6en19ZWxzZSBoPW51bGx9aD1ofHx7c3RhcnQ6MCxlbmQ6MH19ZWxzZSBoPVxubnVsbDtFZD17YWN0aXZlRWxlbWVudERldGFjaGVkOm51bGwsZm9jdXNlZEVsZW06ZyxzZWxlY3Rpb25SYW5nZTpofTtmZD0hMTtZPWU7ZG8gdHJ5e1RqKCl9Y2F0Y2god2Ipe2lmKG51bGw9PT1ZKXRocm93IEVycm9yKHUoMzMwKSk7RWkoWSx3Yik7WT1ZLm5leHRFZmZlY3R9d2hpbGUobnVsbCE9PVkpO1k9ZTtkbyB0cnl7Zm9yKGc9YSxoPWI7bnVsbCE9PVk7KXt2YXIgcT1ZLmVmZmVjdFRhZztxJjE2JiZSYihZLnN0YXRlTm9kZSxcIlwiKTtpZihxJjEyOCl7dmFyIEI9WS5hbHRlcm5hdGU7aWYobnVsbCE9PUIpe3ZhciB3PUIucmVmO251bGwhPT13JiYoXCJmdW5jdGlvblwiPT09dHlwZW9mIHc/dyhudWxsKTp3LmN1cnJlbnQ9bnVsbCl9fXN3aXRjaChxJjEwMzgpe2Nhc2UgMjpQaShZKTtZLmVmZmVjdFRhZyY9LTM7YnJlYWs7Y2FzZSA2OlBpKFkpO1kuZWZmZWN0VGFnJj0tMztTaShZLmFsdGVybmF0ZSxZKTticmVhaztjYXNlIDEwMjQ6WS5lZmZlY3RUYWcmPS0xMDI1O2JyZWFrO2Nhc2UgMTAyODpZLmVmZmVjdFRhZyY9XG4tMTAyNTtTaShZLmFsdGVybmF0ZSxZKTticmVhaztjYXNlIDQ6U2koWS5hbHRlcm5hdGUsWSk7YnJlYWs7Y2FzZSA4Omw9WSxNaShnLGwsaCksTmkobCl9WT1ZLm5leHRFZmZlY3R9fWNhdGNoKHdiKXtpZihudWxsPT09WSl0aHJvdyBFcnJvcih1KDMzMCkpO0VpKFksd2IpO1k9WS5uZXh0RWZmZWN0fXdoaWxlKG51bGwhPT1ZKTt3PUVkO0I9eGQoKTtxPXcuZm9jdXNlZEVsZW07aD13LnNlbGVjdGlvblJhbmdlO2lmKEIhPT1xJiZxJiZxLm93bmVyRG9jdW1lbnQmJndkKHEub3duZXJEb2N1bWVudC5kb2N1bWVudEVsZW1lbnQscSkpe251bGwhPT1oJiZ5ZChxKSYmKEI9aC5zdGFydCx3PWguZW5kLHZvaWQgMD09PXcmJih3PUIpLFwic2VsZWN0aW9uU3RhcnRcImluIHE/KHEuc2VsZWN0aW9uU3RhcnQ9QixxLnNlbGVjdGlvbkVuZD1NYXRoLm1pbih3LHEudmFsdWUubGVuZ3RoKSk6KHc9KEI9cS5vd25lckRvY3VtZW50fHxkb2N1bWVudCkmJkIuZGVmYXVsdFZpZXd8fHdpbmRvdyx3LmdldFNlbGVjdGlvbiYmXG4odz13LmdldFNlbGVjdGlvbigpLGw9cS50ZXh0Q29udGVudC5sZW5ndGgsZz1NYXRoLm1pbihoLnN0YXJ0LGwpLGg9dm9pZCAwPT09aC5lbmQ/ZzpNYXRoLm1pbihoLmVuZCxsKSwhdy5leHRlbmQmJmc+aCYmKGw9aCxoPWcsZz1sKSxsPXZkKHEsZyksbT12ZChxLGgpLGwmJm0mJigxIT09dy5yYW5nZUNvdW50fHx3LmFuY2hvck5vZGUhPT1sLm5vZGV8fHcuYW5jaG9yT2Zmc2V0IT09bC5vZmZzZXR8fHcuZm9jdXNOb2RlIT09bS5ub2RlfHx3LmZvY3VzT2Zmc2V0IT09bS5vZmZzZXQpJiYoQj1CLmNyZWF0ZVJhbmdlKCksQi5zZXRTdGFydChsLm5vZGUsbC5vZmZzZXQpLHcucmVtb3ZlQWxsUmFuZ2VzKCksZz5oPyh3LmFkZFJhbmdlKEIpLHcuZXh0ZW5kKG0ubm9kZSxtLm9mZnNldCkpOihCLnNldEVuZChtLm5vZGUsbS5vZmZzZXQpLHcuYWRkUmFuZ2UoQikpKSkpKTtCPVtdO2Zvcih3PXE7dz13LnBhcmVudE5vZGU7KTE9PT13Lm5vZGVUeXBlJiZCLnB1c2goe2VsZW1lbnQ6dyxsZWZ0Oncuc2Nyb2xsTGVmdCxcbnRvcDp3LnNjcm9sbFRvcH0pO1wiZnVuY3Rpb25cIj09PXR5cGVvZiBxLmZvY3VzJiZxLmZvY3VzKCk7Zm9yKHE9MDtxPEIubGVuZ3RoO3ErKyl3PUJbcV0sdy5lbGVtZW50LnNjcm9sbExlZnQ9dy5sZWZ0LHcuZWxlbWVudC5zY3JvbGxUb3A9dy50b3B9ZmQ9ISFEZDtFZD1EZD1udWxsO2EuY3VycmVudD1jO1k9ZTtkbyB0cnl7Zm9yKHE9YTtudWxsIT09WTspe3ZhciB1Yj1ZLmVmZmVjdFRhZzt1YiYzNiYmSmkocSxZLmFsdGVybmF0ZSxZKTtpZih1YiYxMjgpe0I9dm9pZCAwO3ZhciB2Yj1ZLnJlZjtpZihudWxsIT09dmIpe3ZhciBYYz1ZLnN0YXRlTm9kZTtzd2l0Y2goWS50YWcpe2Nhc2UgNTpCPVhjO2JyZWFrO2RlZmF1bHQ6Qj1YY31cImZ1bmN0aW9uXCI9PT10eXBlb2YgdmI/dmIoQik6dmIuY3VycmVudD1CfX1ZPVkubmV4dEVmZmVjdH19Y2F0Y2god2Ipe2lmKG51bGw9PT1ZKXRocm93IEVycm9yKHUoMzMwKSk7RWkoWSx3Yik7WT1ZLm5leHRFZmZlY3R9d2hpbGUobnVsbCE9PVkpO1k9XG5udWxsO1ZmKCk7Vz1mfWVsc2UgYS5jdXJyZW50PWM7aWYocWopcWo9ITEscmo9YSxzaj1iO2Vsc2UgZm9yKFk9ZTtudWxsIT09WTspYj1ZLm5leHRFZmZlY3QsWS5uZXh0RWZmZWN0PW51bGwsWT1iO2I9YS5maXJzdFBlbmRpbmdUaW1lOzA9PT1iJiYoYWo9bnVsbCk7MTA3Mzc0MTgyMz09PWI/YT09PXZqP3VqKys6KHVqPTAsdmo9YSk6dWo9MDtcImZ1bmN0aW9uXCI9PT10eXBlb2YgVWomJlVqKGMuc3RhdGVOb2RlLGQpO1ooYSk7aWYoWWkpdGhyb3cgWWk9ITEsYT1aaSxaaT1udWxsLGE7aWYoKFcmZWopIT09VilyZXR1cm4gbnVsbDtnZygpO3JldHVybiBudWxsfWZ1bmN0aW9uIFRqKCl7Zm9yKDtudWxsIT09WTspe3ZhciBhPVkuZWZmZWN0VGFnOzAhPT0oYSYyNTYpJiZHaShZLmFsdGVybmF0ZSxZKTswPT09KGEmNTEyKXx8cWp8fChxaj0hMCxkZyg5NyxmdW5jdGlvbigpe0RqKCk7cmV0dXJuIG51bGx9KSk7WT1ZLm5leHRFZmZlY3R9fVxuZnVuY3Rpb24gRGooKXtpZig5MCE9PXNqKXt2YXIgYT05Nzxzaj85Nzpzajtzaj05MDtyZXR1cm4gY2coYSxWail9fWZ1bmN0aW9uIFZqKCl7aWYobnVsbD09PXJqKXJldHVybiExO3ZhciBhPXJqO3JqPW51bGw7aWYoKFcmKGZqfGdqKSkhPT1WKXRocm93IEVycm9yKHUoMzMxKSk7dmFyIGI9VztXfD1najtmb3IoYT1hLmN1cnJlbnQuZmlyc3RFZmZlY3Q7bnVsbCE9PWE7KXt0cnl7dmFyIGM9YTtpZigwIT09KGMuZWZmZWN0VGFnJjUxMikpc3dpdGNoKGMudGFnKXtjYXNlIDA6Y2FzZSAxMTpjYXNlIDE1OmNhc2UgMjI6SGkoNSxjKSxJaSg1LGMpfX1jYXRjaChkKXtpZihudWxsPT09YSl0aHJvdyBFcnJvcih1KDMzMCkpO0VpKGEsZCl9Yz1hLm5leHRFZmZlY3Q7YS5uZXh0RWZmZWN0PW51bGw7YT1jfVc9YjtnZygpO3JldHVybiEwfVxuZnVuY3Rpb24gV2ooYSxiLGMpe2I9QWkoYyxiKTtiPVhpKGEsYiwxMDczNzQxODIzKTt4ZyhhLGIpO2E9eGooYSwxMDczNzQxODIzKTtudWxsIT09YSYmWihhKX1mdW5jdGlvbiBFaShhLGIpe2lmKDM9PT1hLnRhZylXaihhLGEsYik7ZWxzZSBmb3IodmFyIGM9YS5yZXR1cm47bnVsbCE9PWM7KXtpZigzPT09Yy50YWcpe1dqKGMsYSxiKTticmVha31lbHNlIGlmKDE9PT1jLnRhZyl7dmFyIGQ9Yy5zdGF0ZU5vZGU7aWYoXCJmdW5jdGlvblwiPT09dHlwZW9mIGMudHlwZS5nZXREZXJpdmVkU3RhdGVGcm9tRXJyb3J8fFwiZnVuY3Rpb25cIj09PXR5cGVvZiBkLmNvbXBvbmVudERpZENhdGNoJiYobnVsbD09PWFqfHwhYWouaGFzKGQpKSl7YT1BaShiLGEpO2E9JGkoYyxhLDEwNzM3NDE4MjMpO3hnKGMsYSk7Yz14aihjLDEwNzM3NDE4MjMpO251bGwhPT1jJiZaKGMpO2JyZWFrfX1jPWMucmV0dXJufX1cbmZ1bmN0aW9uIE9qKGEsYixjKXt2YXIgZD1hLnBpbmdDYWNoZTtudWxsIT09ZCYmZC5kZWxldGUoYik7VD09PWEmJlU9PT1jP1M9PT12aXx8Uz09PXVpJiYxMDczNzQxODIzPT09bGomJiRmKCktVGk8cGo/RWooYSxVKTpvaj0hMDpBaihhLGMpJiYoYj1hLmxhc3RQaW5nZWRUaW1lLDAhPT1iJiZiPGN8fChhLmxhc3RQaW5nZWRUaW1lPWMsWihhKSkpfWZ1bmN0aW9uIFZpKGEsYil7dmFyIGM9YS5zdGF0ZU5vZGU7bnVsbCE9PWMmJmMuZGVsZXRlKGIpO2I9MDswPT09YiYmKGI9R2coKSxiPUhnKGIsYSxudWxsKSk7YT14aihhLGIpO251bGwhPT1hJiZaKGEpfXZhciBSajtcblJqPWZ1bmN0aW9uKGEsYixjKXt2YXIgZD1iLmV4cGlyYXRpb25UaW1lO2lmKG51bGwhPT1hKXt2YXIgZT1iLnBlbmRpbmdQcm9wcztpZihhLm1lbW9pemVkUHJvcHMhPT1lfHxLLmN1cnJlbnQpcmc9ITA7ZWxzZXtpZihkPGMpe3JnPSExO3N3aXRjaChiLnRhZyl7Y2FzZSAzOmhpKGIpO1hoKCk7YnJlYWs7Y2FzZSA1OmZoKGIpO2lmKGIubW9kZSY0JiYxIT09YyYmZS5oaWRkZW4pcmV0dXJuIGIuZXhwaXJhdGlvblRpbWU9Yi5jaGlsZEV4cGlyYXRpb25UaW1lPTEsbnVsbDticmVhaztjYXNlIDE6TChiLnR5cGUpJiZHZihiKTticmVhaztjYXNlIDQ6ZGgoYixiLnN0YXRlTm9kZS5jb250YWluZXJJbmZvKTticmVhaztjYXNlIDEwOmQ9Yi5tZW1vaXplZFByb3BzLnZhbHVlO2U9Yi50eXBlLl9jb250ZXh0O0koamcsZS5fY3VycmVudFZhbHVlKTtlLl9jdXJyZW50VmFsdWU9ZDticmVhaztjYXNlIDEzOmlmKG51bGwhPT1iLm1lbW9pemVkU3RhdGUpe2Q9Yi5jaGlsZC5jaGlsZEV4cGlyYXRpb25UaW1lO1xuaWYoMCE9PWQmJmQ+PWMpcmV0dXJuIGppKGEsYixjKTtJKE0sTS5jdXJyZW50JjEpO2I9JGgoYSxiLGMpO3JldHVybiBudWxsIT09Yj9iLnNpYmxpbmc6bnVsbH1JKE0sTS5jdXJyZW50JjEpO2JyZWFrO2Nhc2UgMTk6ZD1iLmNoaWxkRXhwaXJhdGlvblRpbWU+PWM7aWYoMCE9PShhLmVmZmVjdFRhZyY2NCkpe2lmKGQpcmV0dXJuIG1pKGEsYixjKTtiLmVmZmVjdFRhZ3w9NjR9ZT1iLm1lbW9pemVkU3RhdGU7bnVsbCE9PWUmJihlLnJlbmRlcmluZz1udWxsLGUudGFpbD1udWxsKTtJKE0sTS5jdXJyZW50KTtpZighZClyZXR1cm4gbnVsbH1yZXR1cm4gJGgoYSxiLGMpfXJnPSExfX1lbHNlIHJnPSExO2IuZXhwaXJhdGlvblRpbWU9MDtzd2l0Y2goYi50YWcpe2Nhc2UgMjpkPWIudHlwZTtudWxsIT09YSYmKGEuYWx0ZXJuYXRlPW51bGwsYi5hbHRlcm5hdGU9bnVsbCxiLmVmZmVjdFRhZ3w9Mik7YT1iLnBlbmRpbmdQcm9wcztlPUNmKGIsSi5jdXJyZW50KTtxZyhiLGMpO2U9b2gobnVsbCxcbmIsZCxhLGUsYyk7Yi5lZmZlY3RUYWd8PTE7aWYoXCJvYmplY3RcIj09PXR5cGVvZiBlJiZudWxsIT09ZSYmXCJmdW5jdGlvblwiPT09dHlwZW9mIGUucmVuZGVyJiZ2b2lkIDA9PT1lLiQkdHlwZW9mKXtiLnRhZz0xO2IubWVtb2l6ZWRTdGF0ZT1udWxsO2IudXBkYXRlUXVldWU9bnVsbDtpZihMKGQpKXt2YXIgZj0hMDtHZihiKX1lbHNlIGY9ITE7Yi5tZW1vaXplZFN0YXRlPW51bGwhPT1lLnN0YXRlJiZ2b2lkIDAhPT1lLnN0YXRlP2Uuc3RhdGU6bnVsbDt1ZyhiKTt2YXIgZz1kLmdldERlcml2ZWRTdGF0ZUZyb21Qcm9wcztcImZ1bmN0aW9uXCI9PT10eXBlb2YgZyYmRmcoYixkLGcsYSk7ZS51cGRhdGVyPUpnO2Iuc3RhdGVOb2RlPWU7ZS5fcmVhY3RJbnRlcm5hbEZpYmVyPWI7TmcoYixkLGEsYyk7Yj1naShudWxsLGIsZCwhMCxmLGMpfWVsc2UgYi50YWc9MCxSKG51bGwsYixlLGMpLGI9Yi5jaGlsZDtyZXR1cm4gYjtjYXNlIDE2OmE6e2U9Yi5lbGVtZW50VHlwZTtudWxsIT09YSYmKGEuYWx0ZXJuYXRlPVxubnVsbCxiLmFsdGVybmF0ZT1udWxsLGIuZWZmZWN0VGFnfD0yKTthPWIucGVuZGluZ1Byb3BzO29iKGUpO2lmKDEhPT1lLl9zdGF0dXMpdGhyb3cgZS5fcmVzdWx0O2U9ZS5fcmVzdWx0O2IudHlwZT1lO2Y9Yi50YWc9WGooZSk7YT1pZyhlLGEpO3N3aXRjaChmKXtjYXNlIDA6Yj1kaShudWxsLGIsZSxhLGMpO2JyZWFrIGE7Y2FzZSAxOmI9ZmkobnVsbCxiLGUsYSxjKTticmVhayBhO2Nhc2UgMTE6Yj1aaChudWxsLGIsZSxhLGMpO2JyZWFrIGE7Y2FzZSAxNDpiPWFpKG51bGwsYixlLGlnKGUudHlwZSxhKSxkLGMpO2JyZWFrIGF9dGhyb3cgRXJyb3IodSgzMDYsZSxcIlwiKSk7fXJldHVybiBiO2Nhc2UgMDpyZXR1cm4gZD1iLnR5cGUsZT1iLnBlbmRpbmdQcm9wcyxlPWIuZWxlbWVudFR5cGU9PT1kP2U6aWcoZCxlKSxkaShhLGIsZCxlLGMpO2Nhc2UgMTpyZXR1cm4gZD1iLnR5cGUsZT1iLnBlbmRpbmdQcm9wcyxlPWIuZWxlbWVudFR5cGU9PT1kP2U6aWcoZCxlKSxmaShhLGIsZCxlLGMpO1xuY2FzZSAzOmhpKGIpO2Q9Yi51cGRhdGVRdWV1ZTtpZihudWxsPT09YXx8bnVsbD09PWQpdGhyb3cgRXJyb3IodSgyODIpKTtkPWIucGVuZGluZ1Byb3BzO2U9Yi5tZW1vaXplZFN0YXRlO2U9bnVsbCE9PWU/ZS5lbGVtZW50Om51bGw7dmcoYSxiKTt6ZyhiLGQsbnVsbCxjKTtkPWIubWVtb2l6ZWRTdGF0ZS5lbGVtZW50O2lmKGQ9PT1lKVhoKCksYj0kaChhLGIsYyk7ZWxzZXtpZihlPWIuc3RhdGVOb2RlLmh5ZHJhdGUpUGg9SmQoYi5zdGF0ZU5vZGUuY29udGFpbmVySW5mby5maXJzdENoaWxkKSxPaD1iLGU9UWg9ITA7aWYoZSlmb3IoYz1ZZyhiLG51bGwsZCxjKSxiLmNoaWxkPWM7YzspYy5lZmZlY3RUYWc9Yy5lZmZlY3RUYWcmLTN8MTAyNCxjPWMuc2libGluZztlbHNlIFIoYSxiLGQsYyksWGgoKTtiPWIuY2hpbGR9cmV0dXJuIGI7Y2FzZSA1OnJldHVybiBmaChiKSxudWxsPT09YSYmVWgoYiksZD1iLnR5cGUsZT1iLnBlbmRpbmdQcm9wcyxmPW51bGwhPT1hP2EubWVtb2l6ZWRQcm9wczpcbm51bGwsZz1lLmNoaWxkcmVuLEdkKGQsZSk/Zz1udWxsOm51bGwhPT1mJiZHZChkLGYpJiYoYi5lZmZlY3RUYWd8PTE2KSxlaShhLGIpLGIubW9kZSY0JiYxIT09YyYmZS5oaWRkZW4/KGIuZXhwaXJhdGlvblRpbWU9Yi5jaGlsZEV4cGlyYXRpb25UaW1lPTEsYj1udWxsKTooUihhLGIsZyxjKSxiPWIuY2hpbGQpLGI7Y2FzZSA2OnJldHVybiBudWxsPT09YSYmVWgoYiksbnVsbDtjYXNlIDEzOnJldHVybiBqaShhLGIsYyk7Y2FzZSA0OnJldHVybiBkaChiLGIuc3RhdGVOb2RlLmNvbnRhaW5lckluZm8pLGQ9Yi5wZW5kaW5nUHJvcHMsbnVsbD09PWE/Yi5jaGlsZD1YZyhiLG51bGwsZCxjKTpSKGEsYixkLGMpLGIuY2hpbGQ7Y2FzZSAxMTpyZXR1cm4gZD1iLnR5cGUsZT1iLnBlbmRpbmdQcm9wcyxlPWIuZWxlbWVudFR5cGU9PT1kP2U6aWcoZCxlKSxaaChhLGIsZCxlLGMpO2Nhc2UgNzpyZXR1cm4gUihhLGIsYi5wZW5kaW5nUHJvcHMsYyksYi5jaGlsZDtjYXNlIDg6cmV0dXJuIFIoYSxcbmIsYi5wZW5kaW5nUHJvcHMuY2hpbGRyZW4sYyksYi5jaGlsZDtjYXNlIDEyOnJldHVybiBSKGEsYixiLnBlbmRpbmdQcm9wcy5jaGlsZHJlbixjKSxiLmNoaWxkO2Nhc2UgMTA6YTp7ZD1iLnR5cGUuX2NvbnRleHQ7ZT1iLnBlbmRpbmdQcm9wcztnPWIubWVtb2l6ZWRQcm9wcztmPWUudmFsdWU7dmFyIGg9Yi50eXBlLl9jb250ZXh0O0koamcsaC5fY3VycmVudFZhbHVlKTtoLl9jdXJyZW50VmFsdWU9ZjtpZihudWxsIT09ZylpZihoPWcudmFsdWUsZj0kZShoLGYpPzA6KFwiZnVuY3Rpb25cIj09PXR5cGVvZiBkLl9jYWxjdWxhdGVDaGFuZ2VkQml0cz9kLl9jYWxjdWxhdGVDaGFuZ2VkQml0cyhoLGYpOjEwNzM3NDE4MjMpfDAsMD09PWYpe2lmKGcuY2hpbGRyZW49PT1lLmNoaWxkcmVuJiYhSy5jdXJyZW50KXtiPSRoKGEsYixjKTticmVhayBhfX1lbHNlIGZvcihoPWIuY2hpbGQsbnVsbCE9PWgmJihoLnJldHVybj1iKTtudWxsIT09aDspe3ZhciBrPWguZGVwZW5kZW5jaWVzO2lmKG51bGwhPT1cbmspe2c9aC5jaGlsZDtmb3IodmFyIGw9ay5maXJzdENvbnRleHQ7bnVsbCE9PWw7KXtpZihsLmNvbnRleHQ9PT1kJiYwIT09KGwub2JzZXJ2ZWRCaXRzJmYpKXsxPT09aC50YWcmJihsPXdnKGMsbnVsbCksbC50YWc9Mix4ZyhoLGwpKTtoLmV4cGlyYXRpb25UaW1lPGMmJihoLmV4cGlyYXRpb25UaW1lPWMpO2w9aC5hbHRlcm5hdGU7bnVsbCE9PWwmJmwuZXhwaXJhdGlvblRpbWU8YyYmKGwuZXhwaXJhdGlvblRpbWU9Yyk7cGcoaC5yZXR1cm4sYyk7ay5leHBpcmF0aW9uVGltZTxjJiYoay5leHBpcmF0aW9uVGltZT1jKTticmVha31sPWwubmV4dH19ZWxzZSBnPTEwPT09aC50YWc/aC50eXBlPT09Yi50eXBlP251bGw6aC5jaGlsZDpoLmNoaWxkO2lmKG51bGwhPT1nKWcucmV0dXJuPWg7ZWxzZSBmb3IoZz1oO251bGwhPT1nOyl7aWYoZz09PWIpe2c9bnVsbDticmVha31oPWcuc2libGluZztpZihudWxsIT09aCl7aC5yZXR1cm49Zy5yZXR1cm47Zz1oO2JyZWFrfWc9Zy5yZXR1cm59aD1cbmd9UihhLGIsZS5jaGlsZHJlbixjKTtiPWIuY2hpbGR9cmV0dXJuIGI7Y2FzZSA5OnJldHVybiBlPWIudHlwZSxmPWIucGVuZGluZ1Byb3BzLGQ9Zi5jaGlsZHJlbixxZyhiLGMpLGU9c2coZSxmLnVuc3RhYmxlX29ic2VydmVkQml0cyksZD1kKGUpLGIuZWZmZWN0VGFnfD0xLFIoYSxiLGQsYyksYi5jaGlsZDtjYXNlIDE0OnJldHVybiBlPWIudHlwZSxmPWlnKGUsYi5wZW5kaW5nUHJvcHMpLGY9aWcoZS50eXBlLGYpLGFpKGEsYixlLGYsZCxjKTtjYXNlIDE1OnJldHVybiBjaShhLGIsYi50eXBlLGIucGVuZGluZ1Byb3BzLGQsYyk7Y2FzZSAxNzpyZXR1cm4gZD1iLnR5cGUsZT1iLnBlbmRpbmdQcm9wcyxlPWIuZWxlbWVudFR5cGU9PT1kP2U6aWcoZCxlKSxudWxsIT09YSYmKGEuYWx0ZXJuYXRlPW51bGwsYi5hbHRlcm5hdGU9bnVsbCxiLmVmZmVjdFRhZ3w9MiksYi50YWc9MSxMKGQpPyhhPSEwLEdmKGIpKTphPSExLHFnKGIsYyksTGcoYixkLGUpLE5nKGIsZCxlLGMpLGdpKG51bGwsXG5iLGQsITAsYSxjKTtjYXNlIDE5OnJldHVybiBtaShhLGIsYyl9dGhyb3cgRXJyb3IodSgxNTYsYi50YWcpKTt9O3ZhciBVaj1udWxsLExpPW51bGw7ZnVuY3Rpb24gWWooYSl7aWYoXCJ1bmRlZmluZWRcIj09PXR5cGVvZiBfX1JFQUNUX0RFVlRPT0xTX0dMT0JBTF9IT09LX18pcmV0dXJuITE7dmFyIGI9X19SRUFDVF9ERVZUT09MU19HTE9CQUxfSE9PS19fO2lmKGIuaXNEaXNhYmxlZHx8IWIuc3VwcG9ydHNGaWJlcilyZXR1cm4hMDt0cnl7dmFyIGM9Yi5pbmplY3QoYSk7VWo9ZnVuY3Rpb24oYSl7dHJ5e2Iub25Db21taXRGaWJlclJvb3QoYyxhLHZvaWQgMCw2ND09PShhLmN1cnJlbnQuZWZmZWN0VGFnJjY0KSl9Y2F0Y2goZSl7fX07TGk9ZnVuY3Rpb24oYSl7dHJ5e2Iub25Db21taXRGaWJlclVubW91bnQoYyxhKX1jYXRjaChlKXt9fX1jYXRjaChkKXt9cmV0dXJuITB9XG5mdW5jdGlvbiBaaihhLGIsYyxkKXt0aGlzLnRhZz1hO3RoaXMua2V5PWM7dGhpcy5zaWJsaW5nPXRoaXMuY2hpbGQ9dGhpcy5yZXR1cm49dGhpcy5zdGF0ZU5vZGU9dGhpcy50eXBlPXRoaXMuZWxlbWVudFR5cGU9bnVsbDt0aGlzLmluZGV4PTA7dGhpcy5yZWY9bnVsbDt0aGlzLnBlbmRpbmdQcm9wcz1iO3RoaXMuZGVwZW5kZW5jaWVzPXRoaXMubWVtb2l6ZWRTdGF0ZT10aGlzLnVwZGF0ZVF1ZXVlPXRoaXMubWVtb2l6ZWRQcm9wcz1udWxsO3RoaXMubW9kZT1kO3RoaXMuZWZmZWN0VGFnPTA7dGhpcy5sYXN0RWZmZWN0PXRoaXMuZmlyc3RFZmZlY3Q9dGhpcy5uZXh0RWZmZWN0PW51bGw7dGhpcy5jaGlsZEV4cGlyYXRpb25UaW1lPXRoaXMuZXhwaXJhdGlvblRpbWU9MDt0aGlzLmFsdGVybmF0ZT1udWxsfWZ1bmN0aW9uIFNoKGEsYixjLGQpe3JldHVybiBuZXcgWmooYSxiLGMsZCl9XG5mdW5jdGlvbiBiaShhKXthPWEucHJvdG90eXBlO3JldHVybiEoIWF8fCFhLmlzUmVhY3RDb21wb25lbnQpfWZ1bmN0aW9uIFhqKGEpe2lmKFwiZnVuY3Rpb25cIj09PXR5cGVvZiBhKXJldHVybiBiaShhKT8xOjA7aWYodm9pZCAwIT09YSYmbnVsbCE9PWEpe2E9YS4kJHR5cGVvZjtpZihhPT09Z2IpcmV0dXJuIDExO2lmKGE9PT1qYilyZXR1cm4gMTR9cmV0dXJuIDJ9XG5mdW5jdGlvbiBTZyhhLGIpe3ZhciBjPWEuYWx0ZXJuYXRlO251bGw9PT1jPyhjPVNoKGEudGFnLGIsYS5rZXksYS5tb2RlKSxjLmVsZW1lbnRUeXBlPWEuZWxlbWVudFR5cGUsYy50eXBlPWEudHlwZSxjLnN0YXRlTm9kZT1hLnN0YXRlTm9kZSxjLmFsdGVybmF0ZT1hLGEuYWx0ZXJuYXRlPWMpOihjLnBlbmRpbmdQcm9wcz1iLGMuZWZmZWN0VGFnPTAsYy5uZXh0RWZmZWN0PW51bGwsYy5maXJzdEVmZmVjdD1udWxsLGMubGFzdEVmZmVjdD1udWxsKTtjLmNoaWxkRXhwaXJhdGlvblRpbWU9YS5jaGlsZEV4cGlyYXRpb25UaW1lO2MuZXhwaXJhdGlvblRpbWU9YS5leHBpcmF0aW9uVGltZTtjLmNoaWxkPWEuY2hpbGQ7Yy5tZW1vaXplZFByb3BzPWEubWVtb2l6ZWRQcm9wcztjLm1lbW9pemVkU3RhdGU9YS5tZW1vaXplZFN0YXRlO2MudXBkYXRlUXVldWU9YS51cGRhdGVRdWV1ZTtiPWEuZGVwZW5kZW5jaWVzO2MuZGVwZW5kZW5jaWVzPW51bGw9PT1iP251bGw6e2V4cGlyYXRpb25UaW1lOmIuZXhwaXJhdGlvblRpbWUsXG5maXJzdENvbnRleHQ6Yi5maXJzdENvbnRleHQscmVzcG9uZGVyczpiLnJlc3BvbmRlcnN9O2Muc2libGluZz1hLnNpYmxpbmc7Yy5pbmRleD1hLmluZGV4O2MucmVmPWEucmVmO3JldHVybiBjfVxuZnVuY3Rpb24gVWcoYSxiLGMsZCxlLGYpe3ZhciBnPTI7ZD1hO2lmKFwiZnVuY3Rpb25cIj09PXR5cGVvZiBhKWJpKGEpJiYoZz0xKTtlbHNlIGlmKFwic3RyaW5nXCI9PT10eXBlb2YgYSlnPTU7ZWxzZSBhOnN3aXRjaChhKXtjYXNlIGFiOnJldHVybiBXZyhjLmNoaWxkcmVuLGUsZixiKTtjYXNlIGZiOmc9ODtlfD03O2JyZWFrO2Nhc2UgYmI6Zz04O2V8PTE7YnJlYWs7Y2FzZSBjYjpyZXR1cm4gYT1TaCgxMixjLGIsZXw4KSxhLmVsZW1lbnRUeXBlPWNiLGEudHlwZT1jYixhLmV4cGlyYXRpb25UaW1lPWYsYTtjYXNlIGhiOnJldHVybiBhPVNoKDEzLGMsYixlKSxhLnR5cGU9aGIsYS5lbGVtZW50VHlwZT1oYixhLmV4cGlyYXRpb25UaW1lPWYsYTtjYXNlIGliOnJldHVybiBhPVNoKDE5LGMsYixlKSxhLmVsZW1lbnRUeXBlPWliLGEuZXhwaXJhdGlvblRpbWU9ZixhO2RlZmF1bHQ6aWYoXCJvYmplY3RcIj09PXR5cGVvZiBhJiZudWxsIT09YSlzd2l0Y2goYS4kJHR5cGVvZil7Y2FzZSBkYjpnPVxuMTA7YnJlYWsgYTtjYXNlIGViOmc9OTticmVhayBhO2Nhc2UgZ2I6Zz0xMTticmVhayBhO2Nhc2UgamI6Zz0xNDticmVhayBhO2Nhc2Uga2I6Zz0xNjtkPW51bGw7YnJlYWsgYTtjYXNlIGxiOmc9MjI7YnJlYWsgYX10aHJvdyBFcnJvcih1KDEzMCxudWxsPT1hP2E6dHlwZW9mIGEsXCJcIikpO31iPVNoKGcsYyxiLGUpO2IuZWxlbWVudFR5cGU9YTtiLnR5cGU9ZDtiLmV4cGlyYXRpb25UaW1lPWY7cmV0dXJuIGJ9ZnVuY3Rpb24gV2coYSxiLGMsZCl7YT1TaCg3LGEsZCxiKTthLmV4cGlyYXRpb25UaW1lPWM7cmV0dXJuIGF9ZnVuY3Rpb24gVGcoYSxiLGMpe2E9U2goNixhLG51bGwsYik7YS5leHBpcmF0aW9uVGltZT1jO3JldHVybiBhfVxuZnVuY3Rpb24gVmcoYSxiLGMpe2I9U2goNCxudWxsIT09YS5jaGlsZHJlbj9hLmNoaWxkcmVuOltdLGEua2V5LGIpO2IuZXhwaXJhdGlvblRpbWU9YztiLnN0YXRlTm9kZT17Y29udGFpbmVySW5mbzphLmNvbnRhaW5lckluZm8scGVuZGluZ0NoaWxkcmVuOm51bGwsaW1wbGVtZW50YXRpb246YS5pbXBsZW1lbnRhdGlvbn07cmV0dXJuIGJ9XG5mdW5jdGlvbiBhayhhLGIsYyl7dGhpcy50YWc9Yjt0aGlzLmN1cnJlbnQ9bnVsbDt0aGlzLmNvbnRhaW5lckluZm89YTt0aGlzLnBpbmdDYWNoZT10aGlzLnBlbmRpbmdDaGlsZHJlbj1udWxsO3RoaXMuZmluaXNoZWRFeHBpcmF0aW9uVGltZT0wO3RoaXMuZmluaXNoZWRXb3JrPW51bGw7dGhpcy50aW1lb3V0SGFuZGxlPS0xO3RoaXMucGVuZGluZ0NvbnRleHQ9dGhpcy5jb250ZXh0PW51bGw7dGhpcy5oeWRyYXRlPWM7dGhpcy5jYWxsYmFja05vZGU9bnVsbDt0aGlzLmNhbGxiYWNrUHJpb3JpdHk9OTA7dGhpcy5sYXN0RXhwaXJlZFRpbWU9dGhpcy5sYXN0UGluZ2VkVGltZT10aGlzLm5leHRLbm93blBlbmRpbmdMZXZlbD10aGlzLmxhc3RTdXNwZW5kZWRUaW1lPXRoaXMuZmlyc3RTdXNwZW5kZWRUaW1lPXRoaXMuZmlyc3RQZW5kaW5nVGltZT0wfVxuZnVuY3Rpb24gQWooYSxiKXt2YXIgYz1hLmZpcnN0U3VzcGVuZGVkVGltZTthPWEubGFzdFN1c3BlbmRlZFRpbWU7cmV0dXJuIDAhPT1jJiZjPj1iJiZhPD1ifWZ1bmN0aW9uIHhpKGEsYil7dmFyIGM9YS5maXJzdFN1c3BlbmRlZFRpbWUsZD1hLmxhc3RTdXNwZW5kZWRUaW1lO2M8YiYmKGEuZmlyc3RTdXNwZW5kZWRUaW1lPWIpO2lmKGQ+Ynx8MD09PWMpYS5sYXN0U3VzcGVuZGVkVGltZT1iO2I8PWEubGFzdFBpbmdlZFRpbWUmJihhLmxhc3RQaW5nZWRUaW1lPTApO2I8PWEubGFzdEV4cGlyZWRUaW1lJiYoYS5sYXN0RXhwaXJlZFRpbWU9MCl9XG5mdW5jdGlvbiB5aShhLGIpe2I+YS5maXJzdFBlbmRpbmdUaW1lJiYoYS5maXJzdFBlbmRpbmdUaW1lPWIpO3ZhciBjPWEuZmlyc3RTdXNwZW5kZWRUaW1lOzAhPT1jJiYoYj49Yz9hLmZpcnN0U3VzcGVuZGVkVGltZT1hLmxhc3RTdXNwZW5kZWRUaW1lPWEubmV4dEtub3duUGVuZGluZ0xldmVsPTA6Yj49YS5sYXN0U3VzcGVuZGVkVGltZSYmKGEubGFzdFN1c3BlbmRlZFRpbWU9YisxKSxiPmEubmV4dEtub3duUGVuZGluZ0xldmVsJiYoYS5uZXh0S25vd25QZW5kaW5nTGV2ZWw9YikpfWZ1bmN0aW9uIENqKGEsYil7dmFyIGM9YS5sYXN0RXhwaXJlZFRpbWU7aWYoMD09PWN8fGM+YilhLmxhc3RFeHBpcmVkVGltZT1ifVxuZnVuY3Rpb24gYmsoYSxiLGMsZCl7dmFyIGU9Yi5jdXJyZW50LGY9R2coKSxnPURnLnN1c3BlbnNlO2Y9SGcoZixlLGcpO2E6aWYoYyl7Yz1jLl9yZWFjdEludGVybmFsRmliZXI7Yjp7aWYoZGMoYykhPT1jfHwxIT09Yy50YWcpdGhyb3cgRXJyb3IodSgxNzApKTt2YXIgaD1jO2Rve3N3aXRjaChoLnRhZyl7Y2FzZSAzOmg9aC5zdGF0ZU5vZGUuY29udGV4dDticmVhayBiO2Nhc2UgMTppZihMKGgudHlwZSkpe2g9aC5zdGF0ZU5vZGUuX19yZWFjdEludGVybmFsTWVtb2l6ZWRNZXJnZWRDaGlsZENvbnRleHQ7YnJlYWsgYn19aD1oLnJldHVybn13aGlsZShudWxsIT09aCk7dGhyb3cgRXJyb3IodSgxNzEpKTt9aWYoMT09PWMudGFnKXt2YXIgaz1jLnR5cGU7aWYoTChrKSl7Yz1GZihjLGssaCk7YnJlYWsgYX19Yz1ofWVsc2UgYz1BZjtudWxsPT09Yi5jb250ZXh0P2IuY29udGV4dD1jOmIucGVuZGluZ0NvbnRleHQ9YztiPXdnKGYsZyk7Yi5wYXlsb2FkPXtlbGVtZW50OmF9O2Q9dm9pZCAwPT09XG5kP251bGw6ZDtudWxsIT09ZCYmKGIuY2FsbGJhY2s9ZCk7eGcoZSxiKTtJZyhlLGYpO3JldHVybiBmfWZ1bmN0aW9uIGNrKGEpe2E9YS5jdXJyZW50O2lmKCFhLmNoaWxkKXJldHVybiBudWxsO3N3aXRjaChhLmNoaWxkLnRhZyl7Y2FzZSA1OnJldHVybiBhLmNoaWxkLnN0YXRlTm9kZTtkZWZhdWx0OnJldHVybiBhLmNoaWxkLnN0YXRlTm9kZX19ZnVuY3Rpb24gZGsoYSxiKXthPWEubWVtb2l6ZWRTdGF0ZTtudWxsIT09YSYmbnVsbCE9PWEuZGVoeWRyYXRlZCYmYS5yZXRyeVRpbWU8YiYmKGEucmV0cnlUaW1lPWIpfWZ1bmN0aW9uIGVrKGEsYil7ZGsoYSxiKTsoYT1hLmFsdGVybmF0ZSkmJmRrKGEsYil9XG5mdW5jdGlvbiBmayhhLGIsYyl7Yz1udWxsIT1jJiYhMD09PWMuaHlkcmF0ZTt2YXIgZD1uZXcgYWsoYSxiLGMpLGU9U2goMyxudWxsLG51bGwsMj09PWI/NzoxPT09Yj8zOjApO2QuY3VycmVudD1lO2Uuc3RhdGVOb2RlPWQ7dWcoZSk7YVtPZF09ZC5jdXJyZW50O2MmJjAhPT1iJiZKYyhhLDk9PT1hLm5vZGVUeXBlP2E6YS5vd25lckRvY3VtZW50KTt0aGlzLl9pbnRlcm5hbFJvb3Q9ZH1may5wcm90b3R5cGUucmVuZGVyPWZ1bmN0aW9uKGEpe2JrKGEsdGhpcy5faW50ZXJuYWxSb290LG51bGwsbnVsbCl9O2ZrLnByb3RvdHlwZS51bm1vdW50PWZ1bmN0aW9uKCl7dmFyIGE9dGhpcy5faW50ZXJuYWxSb290LGI9YS5jb250YWluZXJJbmZvO2JrKG51bGwsYSxudWxsLGZ1bmN0aW9uKCl7YltPZF09bnVsbH0pfTtcbmZ1bmN0aW9uIGdrKGEpe3JldHVybiEoIWF8fDEhPT1hLm5vZGVUeXBlJiY5IT09YS5ub2RlVHlwZSYmMTEhPT1hLm5vZGVUeXBlJiYoOCE9PWEubm9kZVR5cGV8fFwiIHJlYWN0LW1vdW50LXBvaW50LXVuc3RhYmxlIFwiIT09YS5ub2RlVmFsdWUpKX1mdW5jdGlvbiBoayhhLGIpe2J8fChiPWE/OT09PWEubm9kZVR5cGU/YS5kb2N1bWVudEVsZW1lbnQ6YS5maXJzdENoaWxkOm51bGwsYj0hKCFifHwxIT09Yi5ub2RlVHlwZXx8IWIuaGFzQXR0cmlidXRlKFwiZGF0YS1yZWFjdHJvb3RcIikpKTtpZighYilmb3IodmFyIGM7Yz1hLmxhc3RDaGlsZDspYS5yZW1vdmVDaGlsZChjKTtyZXR1cm4gbmV3IGZrKGEsMCxiP3toeWRyYXRlOiEwfTp2b2lkIDApfVxuZnVuY3Rpb24gaWsoYSxiLGMsZCxlKXt2YXIgZj1jLl9yZWFjdFJvb3RDb250YWluZXI7aWYoZil7dmFyIGc9Zi5faW50ZXJuYWxSb290O2lmKFwiZnVuY3Rpb25cIj09PXR5cGVvZiBlKXt2YXIgaD1lO2U9ZnVuY3Rpb24oKXt2YXIgYT1jayhnKTtoLmNhbGwoYSl9fWJrKGIsZyxhLGUpfWVsc2V7Zj1jLl9yZWFjdFJvb3RDb250YWluZXI9aGsoYyxkKTtnPWYuX2ludGVybmFsUm9vdDtpZihcImZ1bmN0aW9uXCI9PT10eXBlb2YgZSl7dmFyIGs9ZTtlPWZ1bmN0aW9uKCl7dmFyIGE9Y2soZyk7ay5jYWxsKGEpfX1OaihmdW5jdGlvbigpe2JrKGIsZyxhLGUpfSl9cmV0dXJuIGNrKGcpfWZ1bmN0aW9uIGprKGEsYixjKXt2YXIgZD0zPGFyZ3VtZW50cy5sZW5ndGgmJnZvaWQgMCE9PWFyZ3VtZW50c1szXT9hcmd1bWVudHNbM106bnVsbDtyZXR1cm57JCR0eXBlb2Y6JGEsa2V5Om51bGw9PWQ/bnVsbDpcIlwiK2QsY2hpbGRyZW46YSxjb250YWluZXJJbmZvOmIsaW1wbGVtZW50YXRpb246Y319XG53Yz1mdW5jdGlvbihhKXtpZigxMz09PWEudGFnKXt2YXIgYj1oZyhHZygpLDE1MCwxMDApO0lnKGEsYik7ZWsoYSxiKX19O3hjPWZ1bmN0aW9uKGEpezEzPT09YS50YWcmJihJZyhhLDMpLGVrKGEsMykpfTt5Yz1mdW5jdGlvbihhKXtpZigxMz09PWEudGFnKXt2YXIgYj1HZygpO2I9SGcoYixhLG51bGwpO0lnKGEsYik7ZWsoYSxiKX19O1xuemE9ZnVuY3Rpb24oYSxiLGMpe3N3aXRjaChiKXtjYXNlIFwiaW5wdXRcIjpDYihhLGMpO2I9Yy5uYW1lO2lmKFwicmFkaW9cIj09PWMudHlwZSYmbnVsbCE9Yil7Zm9yKGM9YTtjLnBhcmVudE5vZGU7KWM9Yy5wYXJlbnROb2RlO2M9Yy5xdWVyeVNlbGVjdG9yQWxsKFwiaW5wdXRbbmFtZT1cIitKU09OLnN0cmluZ2lmeShcIlwiK2IpKyddW3R5cGU9XCJyYWRpb1wiXScpO2ZvcihiPTA7YjxjLmxlbmd0aDtiKyspe3ZhciBkPWNbYl07aWYoZCE9PWEmJmQuZm9ybT09PWEuZm9ybSl7dmFyIGU9UWQoZCk7aWYoIWUpdGhyb3cgRXJyb3IodSg5MCkpO3liKGQpO0NiKGQsZSl9fX1icmVhaztjYXNlIFwidGV4dGFyZWFcIjpLYihhLGMpO2JyZWFrO2Nhc2UgXCJzZWxlY3RcIjpiPWMudmFsdWUsbnVsbCE9YiYmSGIoYSwhIWMubXVsdGlwbGUsYiwhMSl9fTtGYT1NajtcbkdhPWZ1bmN0aW9uKGEsYixjLGQsZSl7dmFyIGY9VztXfD00O3RyeXtyZXR1cm4gY2coOTgsYS5iaW5kKG51bGwsYixjLGQsZSkpfWZpbmFsbHl7Vz1mLFc9PT1WJiZnZygpfX07SGE9ZnVuY3Rpb24oKXsoVyYoMXxmanxnaikpPT09ViYmKExqKCksRGooKSl9O0lhPWZ1bmN0aW9uKGEsYil7dmFyIGM9VztXfD0yO3RyeXtyZXR1cm4gYShiKX1maW5hbGx5e1c9YyxXPT09ViYmZ2coKX19O2Z1bmN0aW9uIGtrKGEsYil7dmFyIGM9Mjxhcmd1bWVudHMubGVuZ3RoJiZ2b2lkIDAhPT1hcmd1bWVudHNbMl0/YXJndW1lbnRzWzJdOm51bGw7aWYoIWdrKGIpKXRocm93IEVycm9yKHUoMjAwKSk7cmV0dXJuIGprKGEsYixudWxsLGMpfXZhciBsaz17RXZlbnRzOltOYyxQZCxRZCx4YSx0YSxYZCxmdW5jdGlvbihhKXtqYyhhLFdkKX0sRGEsRWEsaWQsbWMsRGose2N1cnJlbnQ6ITF9XX07XG4oZnVuY3Rpb24oYSl7dmFyIGI9YS5maW5kRmliZXJCeUhvc3RJbnN0YW5jZTtyZXR1cm4gWWoobih7fSxhLHtvdmVycmlkZUhvb2tTdGF0ZTpudWxsLG92ZXJyaWRlUHJvcHM6bnVsbCxzZXRTdXNwZW5zZUhhbmRsZXI6bnVsbCxzY2hlZHVsZVVwZGF0ZTpudWxsLGN1cnJlbnREaXNwYXRjaGVyUmVmOldhLlJlYWN0Q3VycmVudERpc3BhdGNoZXIsZmluZEhvc3RJbnN0YW5jZUJ5RmliZXI6ZnVuY3Rpb24oYSl7YT1oYyhhKTtyZXR1cm4gbnVsbD09PWE/bnVsbDphLnN0YXRlTm9kZX0sZmluZEZpYmVyQnlIb3N0SW5zdGFuY2U6ZnVuY3Rpb24oYSl7cmV0dXJuIGI/YihhKTpudWxsfSxmaW5kSG9zdEluc3RhbmNlc0ZvclJlZnJlc2g6bnVsbCxzY2hlZHVsZVJlZnJlc2g6bnVsbCxzY2hlZHVsZVJvb3Q6bnVsbCxzZXRSZWZyZXNoSGFuZGxlcjpudWxsLGdldEN1cnJlbnRGaWJlcjpudWxsfSkpfSkoe2ZpbmRGaWJlckJ5SG9zdEluc3RhbmNlOnRjLGJ1bmRsZVR5cGU6MCx2ZXJzaW9uOlwiMTYuMTMuMVwiLFxucmVuZGVyZXJQYWNrYWdlTmFtZTpcInJlYWN0LWRvbVwifSk7ZXhwb3J0cy5fX1NFQ1JFVF9JTlRFUk5BTFNfRE9fTk9UX1VTRV9PUl9ZT1VfV0lMTF9CRV9GSVJFRD1saztleHBvcnRzLmNyZWF0ZVBvcnRhbD1raztleHBvcnRzLmZpbmRET01Ob2RlPWZ1bmN0aW9uKGEpe2lmKG51bGw9PWEpcmV0dXJuIG51bGw7aWYoMT09PWEubm9kZVR5cGUpcmV0dXJuIGE7dmFyIGI9YS5fcmVhY3RJbnRlcm5hbEZpYmVyO2lmKHZvaWQgMD09PWIpe2lmKFwiZnVuY3Rpb25cIj09PXR5cGVvZiBhLnJlbmRlcil0aHJvdyBFcnJvcih1KDE4OCkpO3Rocm93IEVycm9yKHUoMjY4LE9iamVjdC5rZXlzKGEpKSk7fWE9aGMoYik7YT1udWxsPT09YT9udWxsOmEuc3RhdGVOb2RlO3JldHVybiBhfTtcbmV4cG9ydHMuZmx1c2hTeW5jPWZ1bmN0aW9uKGEsYil7aWYoKFcmKGZqfGdqKSkhPT1WKXRocm93IEVycm9yKHUoMTg3KSk7dmFyIGM9VztXfD0xO3RyeXtyZXR1cm4gY2coOTksYS5iaW5kKG51bGwsYikpfWZpbmFsbHl7Vz1jLGdnKCl9fTtleHBvcnRzLmh5ZHJhdGU9ZnVuY3Rpb24oYSxiLGMpe2lmKCFnayhiKSl0aHJvdyBFcnJvcih1KDIwMCkpO3JldHVybiBpayhudWxsLGEsYiwhMCxjKX07ZXhwb3J0cy5yZW5kZXI9ZnVuY3Rpb24oYSxiLGMpe2lmKCFnayhiKSl0aHJvdyBFcnJvcih1KDIwMCkpO3JldHVybiBpayhudWxsLGEsYiwhMSxjKX07XG5leHBvcnRzLnVubW91bnRDb21wb25lbnRBdE5vZGU9ZnVuY3Rpb24oYSl7aWYoIWdrKGEpKXRocm93IEVycm9yKHUoNDApKTtyZXR1cm4gYS5fcmVhY3RSb290Q29udGFpbmVyPyhOaihmdW5jdGlvbigpe2lrKG51bGwsbnVsbCxhLCExLGZ1bmN0aW9uKCl7YS5fcmVhY3RSb290Q29udGFpbmVyPW51bGw7YVtPZF09bnVsbH0pfSksITApOiExfTtleHBvcnRzLnVuc3RhYmxlX2JhdGNoZWRVcGRhdGVzPU1qO2V4cG9ydHMudW5zdGFibGVfY3JlYXRlUG9ydGFsPWZ1bmN0aW9uKGEsYil7cmV0dXJuIGtrKGEsYiwyPGFyZ3VtZW50cy5sZW5ndGgmJnZvaWQgMCE9PWFyZ3VtZW50c1syXT9hcmd1bWVudHNbMl06bnVsbCl9O1xuZXhwb3J0cy51bnN0YWJsZV9yZW5kZXJTdWJ0cmVlSW50b0NvbnRhaW5lcj1mdW5jdGlvbihhLGIsYyxkKXtpZighZ2soYykpdGhyb3cgRXJyb3IodSgyMDApKTtpZihudWxsPT1hfHx2b2lkIDA9PT1hLl9yZWFjdEludGVybmFsRmliZXIpdGhyb3cgRXJyb3IodSgzOCkpO3JldHVybiBpayhhLGIsYywhMSxkKX07ZXhwb3J0cy52ZXJzaW9uPVwiMTYuMTMuMVwiO1xuIiwiJ3VzZSBzdHJpY3QnO1xuXG5pZiAocHJvY2Vzcy5lbnYuTk9ERV9FTlYgPT09ICdwcm9kdWN0aW9uJykge1xuICBtb2R1bGUuZXhwb3J0cyA9IHJlcXVpcmUoJy4vY2pzL3NjaGVkdWxlci5wcm9kdWN0aW9uLm1pbi5qcycpO1xufSBlbHNlIHtcbiAgbW9kdWxlLmV4cG9ydHMgPSByZXF1aXJlKCcuL2Nqcy9zY2hlZHVsZXIuZGV2ZWxvcG1lbnQuanMnKTtcbn1cbiIsIi8qKiBAbGljZW5zZSBSZWFjdCB2MC4xOS4xXG4gKiBzY2hlZHVsZXIucHJvZHVjdGlvbi5taW4uanNcbiAqXG4gKiBDb3B5cmlnaHQgKGMpIEZhY2Vib29rLCBJbmMuIGFuZCBpdHMgYWZmaWxpYXRlcy5cbiAqXG4gKiBUaGlzIHNvdXJjZSBjb2RlIGlzIGxpY2Vuc2VkIHVuZGVyIHRoZSBNSVQgbGljZW5zZSBmb3VuZCBpbiB0aGVcbiAqIExJQ0VOU0UgZmlsZSBpbiB0aGUgcm9vdCBkaXJlY3Rvcnkgb2YgdGhpcyBzb3VyY2UgdHJlZS5cbiAqL1xuXG4ndXNlIHN0cmljdCc7dmFyIGYsZyxoLGssbDtcbmlmKFwidW5kZWZpbmVkXCI9PT10eXBlb2Ygd2luZG93fHxcImZ1bmN0aW9uXCIhPT10eXBlb2YgTWVzc2FnZUNoYW5uZWwpe3ZhciBwPW51bGwscT1udWxsLHQ9ZnVuY3Rpb24oKXtpZihudWxsIT09cCl0cnl7dmFyIGE9ZXhwb3J0cy51bnN0YWJsZV9ub3coKTtwKCEwLGEpO3A9bnVsbH1jYXRjaChiKXt0aHJvdyBzZXRUaW1lb3V0KHQsMCksYjt9fSx1PURhdGUubm93KCk7ZXhwb3J0cy51bnN0YWJsZV9ub3c9ZnVuY3Rpb24oKXtyZXR1cm4gRGF0ZS5ub3coKS11fTtmPWZ1bmN0aW9uKGEpe251bGwhPT1wP3NldFRpbWVvdXQoZiwwLGEpOihwPWEsc2V0VGltZW91dCh0LDApKX07Zz1mdW5jdGlvbihhLGIpe3E9c2V0VGltZW91dChhLGIpfTtoPWZ1bmN0aW9uKCl7Y2xlYXJUaW1lb3V0KHEpfTtrPWZ1bmN0aW9uKCl7cmV0dXJuITF9O2w9ZXhwb3J0cy51bnN0YWJsZV9mb3JjZUZyYW1lUmF0ZT1mdW5jdGlvbigpe319ZWxzZXt2YXIgdz13aW5kb3cucGVyZm9ybWFuY2UseD13aW5kb3cuRGF0ZSxcbnk9d2luZG93LnNldFRpbWVvdXQsej13aW5kb3cuY2xlYXJUaW1lb3V0O2lmKFwidW5kZWZpbmVkXCIhPT10eXBlb2YgY29uc29sZSl7dmFyIEE9d2luZG93LmNhbmNlbEFuaW1hdGlvbkZyYW1lO1wiZnVuY3Rpb25cIiE9PXR5cGVvZiB3aW5kb3cucmVxdWVzdEFuaW1hdGlvbkZyYW1lJiZjb25zb2xlLmVycm9yKFwiVGhpcyBicm93c2VyIGRvZXNuJ3Qgc3VwcG9ydCByZXF1ZXN0QW5pbWF0aW9uRnJhbWUuIE1ha2Ugc3VyZSB0aGF0IHlvdSBsb2FkIGEgcG9seWZpbGwgaW4gb2xkZXIgYnJvd3NlcnMuIGh0dHBzOi8vZmIubWUvcmVhY3QtcG9seWZpbGxzXCIpO1wiZnVuY3Rpb25cIiE9PXR5cGVvZiBBJiZjb25zb2xlLmVycm9yKFwiVGhpcyBicm93c2VyIGRvZXNuJ3Qgc3VwcG9ydCBjYW5jZWxBbmltYXRpb25GcmFtZS4gTWFrZSBzdXJlIHRoYXQgeW91IGxvYWQgYSBwb2x5ZmlsbCBpbiBvbGRlciBicm93c2Vycy4gaHR0cHM6Ly9mYi5tZS9yZWFjdC1wb2x5ZmlsbHNcIil9aWYoXCJvYmplY3RcIj09PVxudHlwZW9mIHcmJlwiZnVuY3Rpb25cIj09PXR5cGVvZiB3Lm5vdylleHBvcnRzLnVuc3RhYmxlX25vdz1mdW5jdGlvbigpe3JldHVybiB3Lm5vdygpfTtlbHNle3ZhciBCPXgubm93KCk7ZXhwb3J0cy51bnN0YWJsZV9ub3c9ZnVuY3Rpb24oKXtyZXR1cm4geC5ub3coKS1CfX12YXIgQz0hMSxEPW51bGwsRT0tMSxGPTUsRz0wO2s9ZnVuY3Rpb24oKXtyZXR1cm4gZXhwb3J0cy51bnN0YWJsZV9ub3coKT49R307bD1mdW5jdGlvbigpe307ZXhwb3J0cy51bnN0YWJsZV9mb3JjZUZyYW1lUmF0ZT1mdW5jdGlvbihhKXswPmF8fDEyNTxhP2NvbnNvbGUuZXJyb3IoXCJmb3JjZUZyYW1lUmF0ZSB0YWtlcyBhIHBvc2l0aXZlIGludCBiZXR3ZWVuIDAgYW5kIDEyNSwgZm9yY2luZyBmcmFtZXJhdGVzIGhpZ2hlciB0aGFuIDEyNSBmcHMgaXMgbm90IHVuc3VwcG9ydGVkXCIpOkY9MDxhP01hdGguZmxvb3IoMUUzL2EpOjV9O3ZhciBIPW5ldyBNZXNzYWdlQ2hhbm5lbCxJPUgucG9ydDI7SC5wb3J0MS5vbm1lc3NhZ2U9XG5mdW5jdGlvbigpe2lmKG51bGwhPT1EKXt2YXIgYT1leHBvcnRzLnVuc3RhYmxlX25vdygpO0c9YStGO3RyeXtEKCEwLGEpP0kucG9zdE1lc3NhZ2UobnVsbCk6KEM9ITEsRD1udWxsKX1jYXRjaChiKXt0aHJvdyBJLnBvc3RNZXNzYWdlKG51bGwpLGI7fX1lbHNlIEM9ITF9O2Y9ZnVuY3Rpb24oYSl7RD1hO0N8fChDPSEwLEkucG9zdE1lc3NhZ2UobnVsbCkpfTtnPWZ1bmN0aW9uKGEsYil7RT15KGZ1bmN0aW9uKCl7YShleHBvcnRzLnVuc3RhYmxlX25vdygpKX0sYil9O2g9ZnVuY3Rpb24oKXt6KEUpO0U9LTF9fWZ1bmN0aW9uIEooYSxiKXt2YXIgYz1hLmxlbmd0aDthLnB1c2goYik7YTpmb3IoOzspe3ZhciBkPWMtMT4+PjEsZT1hW2RdO2lmKHZvaWQgMCE9PWUmJjA8SyhlLGIpKWFbZF09YixhW2NdPWUsYz1kO2Vsc2UgYnJlYWsgYX19ZnVuY3Rpb24gTChhKXthPWFbMF07cmV0dXJuIHZvaWQgMD09PWE/bnVsbDphfVxuZnVuY3Rpb24gTShhKXt2YXIgYj1hWzBdO2lmKHZvaWQgMCE9PWIpe3ZhciBjPWEucG9wKCk7aWYoYyE9PWIpe2FbMF09YzthOmZvcih2YXIgZD0wLGU9YS5sZW5ndGg7ZDxlOyl7dmFyIG09MiooZCsxKS0xLG49YVttXSx2PW0rMSxyPWFbdl07aWYodm9pZCAwIT09biYmMD5LKG4sYykpdm9pZCAwIT09ciYmMD5LKHIsbik/KGFbZF09cixhW3ZdPWMsZD12KTooYVtkXT1uLGFbbV09YyxkPW0pO2Vsc2UgaWYodm9pZCAwIT09ciYmMD5LKHIsYykpYVtkXT1yLGFbdl09YyxkPXY7ZWxzZSBicmVhayBhfX1yZXR1cm4gYn1yZXR1cm4gbnVsbH1mdW5jdGlvbiBLKGEsYil7dmFyIGM9YS5zb3J0SW5kZXgtYi5zb3J0SW5kZXg7cmV0dXJuIDAhPT1jP2M6YS5pZC1iLmlkfXZhciBOPVtdLE89W10sUD0xLFE9bnVsbCxSPTMsUz0hMSxUPSExLFU9ITE7XG5mdW5jdGlvbiBWKGEpe2Zvcih2YXIgYj1MKE8pO251bGwhPT1iOyl7aWYobnVsbD09PWIuY2FsbGJhY2spTShPKTtlbHNlIGlmKGIuc3RhcnRUaW1lPD1hKU0oTyksYi5zb3J0SW5kZXg9Yi5leHBpcmF0aW9uVGltZSxKKE4sYik7ZWxzZSBicmVhaztiPUwoTyl9fWZ1bmN0aW9uIFcoYSl7VT0hMTtWKGEpO2lmKCFUKWlmKG51bGwhPT1MKE4pKVQ9ITAsZihYKTtlbHNle3ZhciBiPUwoTyk7bnVsbCE9PWImJmcoVyxiLnN0YXJ0VGltZS1hKX19XG5mdW5jdGlvbiBYKGEsYil7VD0hMTtVJiYoVT0hMSxoKCkpO1M9ITA7dmFyIGM9Ujt0cnl7VihiKTtmb3IoUT1MKE4pO251bGwhPT1RJiYoIShRLmV4cGlyYXRpb25UaW1lPmIpfHxhJiYhaygpKTspe3ZhciBkPVEuY2FsbGJhY2s7aWYobnVsbCE9PWQpe1EuY2FsbGJhY2s9bnVsbDtSPVEucHJpb3JpdHlMZXZlbDt2YXIgZT1kKFEuZXhwaXJhdGlvblRpbWU8PWIpO2I9ZXhwb3J0cy51bnN0YWJsZV9ub3coKTtcImZ1bmN0aW9uXCI9PT10eXBlb2YgZT9RLmNhbGxiYWNrPWU6UT09PUwoTikmJk0oTik7VihiKX1lbHNlIE0oTik7UT1MKE4pfWlmKG51bGwhPT1RKXZhciBtPSEwO2Vsc2V7dmFyIG49TChPKTtudWxsIT09biYmZyhXLG4uc3RhcnRUaW1lLWIpO209ITF9cmV0dXJuIG19ZmluYWxseXtRPW51bGwsUj1jLFM9ITF9fVxuZnVuY3Rpb24gWShhKXtzd2l0Y2goYSl7Y2FzZSAxOnJldHVybi0xO2Nhc2UgMjpyZXR1cm4gMjUwO2Nhc2UgNTpyZXR1cm4gMTA3Mzc0MTgyMztjYXNlIDQ6cmV0dXJuIDFFNDtkZWZhdWx0OnJldHVybiA1RTN9fXZhciBaPWw7ZXhwb3J0cy51bnN0YWJsZV9JZGxlUHJpb3JpdHk9NTtleHBvcnRzLnVuc3RhYmxlX0ltbWVkaWF0ZVByaW9yaXR5PTE7ZXhwb3J0cy51bnN0YWJsZV9Mb3dQcmlvcml0eT00O2V4cG9ydHMudW5zdGFibGVfTm9ybWFsUHJpb3JpdHk9MztleHBvcnRzLnVuc3RhYmxlX1Byb2ZpbGluZz1udWxsO2V4cG9ydHMudW5zdGFibGVfVXNlckJsb2NraW5nUHJpb3JpdHk9MjtleHBvcnRzLnVuc3RhYmxlX2NhbmNlbENhbGxiYWNrPWZ1bmN0aW9uKGEpe2EuY2FsbGJhY2s9bnVsbH07ZXhwb3J0cy51bnN0YWJsZV9jb250aW51ZUV4ZWN1dGlvbj1mdW5jdGlvbigpe1R8fFN8fChUPSEwLGYoWCkpfTtcbmV4cG9ydHMudW5zdGFibGVfZ2V0Q3VycmVudFByaW9yaXR5TGV2ZWw9ZnVuY3Rpb24oKXtyZXR1cm4gUn07ZXhwb3J0cy51bnN0YWJsZV9nZXRGaXJzdENhbGxiYWNrTm9kZT1mdW5jdGlvbigpe3JldHVybiBMKE4pfTtleHBvcnRzLnVuc3RhYmxlX25leHQ9ZnVuY3Rpb24oYSl7c3dpdGNoKFIpe2Nhc2UgMTpjYXNlIDI6Y2FzZSAzOnZhciBiPTM7YnJlYWs7ZGVmYXVsdDpiPVJ9dmFyIGM9UjtSPWI7dHJ5e3JldHVybiBhKCl9ZmluYWxseXtSPWN9fTtleHBvcnRzLnVuc3RhYmxlX3BhdXNlRXhlY3V0aW9uPWZ1bmN0aW9uKCl7fTtleHBvcnRzLnVuc3RhYmxlX3JlcXVlc3RQYWludD1aO2V4cG9ydHMudW5zdGFibGVfcnVuV2l0aFByaW9yaXR5PWZ1bmN0aW9uKGEsYil7c3dpdGNoKGEpe2Nhc2UgMTpjYXNlIDI6Y2FzZSAzOmNhc2UgNDpjYXNlIDU6YnJlYWs7ZGVmYXVsdDphPTN9dmFyIGM9UjtSPWE7dHJ5e3JldHVybiBiKCl9ZmluYWxseXtSPWN9fTtcbmV4cG9ydHMudW5zdGFibGVfc2NoZWR1bGVDYWxsYmFjaz1mdW5jdGlvbihhLGIsYyl7dmFyIGQ9ZXhwb3J0cy51bnN0YWJsZV9ub3coKTtpZihcIm9iamVjdFwiPT09dHlwZW9mIGMmJm51bGwhPT1jKXt2YXIgZT1jLmRlbGF5O2U9XCJudW1iZXJcIj09PXR5cGVvZiBlJiYwPGU/ZCtlOmQ7Yz1cIm51bWJlclwiPT09dHlwZW9mIGMudGltZW91dD9jLnRpbWVvdXQ6WShhKX1lbHNlIGM9WShhKSxlPWQ7Yz1lK2M7YT17aWQ6UCsrLGNhbGxiYWNrOmIscHJpb3JpdHlMZXZlbDphLHN0YXJ0VGltZTplLGV4cGlyYXRpb25UaW1lOmMsc29ydEluZGV4Oi0xfTtlPmQ/KGEuc29ydEluZGV4PWUsSihPLGEpLG51bGw9PT1MKE4pJiZhPT09TChPKSYmKFU/aCgpOlU9ITAsZyhXLGUtZCkpKTooYS5zb3J0SW5kZXg9YyxKKE4sYSksVHx8U3x8KFQ9ITAsZihYKSkpO3JldHVybiBhfTtcbmV4cG9ydHMudW5zdGFibGVfc2hvdWxkWWllbGQ9ZnVuY3Rpb24oKXt2YXIgYT1leHBvcnRzLnVuc3RhYmxlX25vdygpO1YoYSk7dmFyIGI9TChOKTtyZXR1cm4gYiE9PVEmJm51bGwhPT1RJiZudWxsIT09YiYmbnVsbCE9PWIuY2FsbGJhY2smJmIuc3RhcnRUaW1lPD1hJiZiLmV4cGlyYXRpb25UaW1lPFEuZXhwaXJhdGlvblRpbWV8fGsoKX07ZXhwb3J0cy51bnN0YWJsZV93cmFwQ2FsbGJhY2s9ZnVuY3Rpb24oYSl7dmFyIGI9UjtyZXR1cm4gZnVuY3Rpb24oKXt2YXIgYz1SO1I9Yjt0cnl7cmV0dXJuIGEuYXBwbHkodGhpcyxhcmd1bWVudHMpfWZpbmFsbHl7Uj1jfX19O1xuIiwidmFyIGVsZW1lbnQgPSByZXF1aXJlKCcuL19lbGVtZW50JylcbnZhciB3aW5kb3cgPSByZXF1aXJlKCcuL193aW5kb3cnKVxudmFyIHdpdGhGYXV4RE9NID0gcmVxdWlyZSgnLi9fd2l0aEZhdXhET00nKVxuXG5mdW5jdGlvbiBmYWN0b3J5ICgpIHtcbiAgdmFyIEVsZW1lbnQgPSBlbGVtZW50KClcbiAgdmFyIFdpbmRvdyA9IHdpbmRvdygpXG4gIHZhciBSZWFjdEZhdXhET00gPSB7XG4gICAgRWxlbWVudDogRWxlbWVudCxcbiAgICBkZWZhdWx0VmlldzogV2luZG93LFxuICAgIHdpdGhGYXV4RE9NOiB3aXRoRmF1eERPTShFbGVtZW50KSxcbiAgICBjcmVhdGVFbGVtZW50OiBmdW5jdGlvbiAobm9kZU5hbWUpIHtcbiAgICAgIHJldHVybiBuZXcgRWxlbWVudChub2RlTmFtZSlcbiAgICB9LFxuICAgIGNyZWF0ZUVsZW1lbnROUzogZnVuY3Rpb24gKG5hbWVzcGFjZSwgbm9kZU5hbWUpIHtcbiAgICAgIHJldHVybiB0aGlzLmNyZWF0ZUVsZW1lbnQobm9kZU5hbWUpXG4gICAgfSxcbiAgICBjb21wYXJlRG9jdW1lbnRQb3NpdGlvbjogZnVuY3Rpb24gKCkge1xuICAgICAgLy8gVGhlIHNlbGVjdG9yIGVuZ2luZSB0cmllcyB0byB2YWxpZGF0ZSB3aXRoIHRoaXMsIGJ1dCB3ZSBkb24ndCBjYXJlLlxuICAgICAgLy8gOCA9IERPQ1VNRU5UX1BPU0lUSU9OX0NPTlRBSU5TLCBzbyB3ZSBzYXkgYWxsIG5vZGVzIGFyZSBpbiB0aGlzIGRvY3VtZW50LlxuICAgICAgcmV0dXJuIDhcbiAgICB9XG4gIH1cblxuICBFbGVtZW50LnByb3RvdHlwZS5vd25lckRvY3VtZW50ID0gUmVhY3RGYXV4RE9NXG4gIHJldHVybiBSZWFjdEZhdXhET01cbn1cblxubW9kdWxlLmV4cG9ydHMgPSBmYWN0b3J5XG4iLCJ2YXIgUmVhY3QgPSByZXF1aXJlKCdyZWFjdCcpXG52YXIgc3R5bGVBdHRyID0gcmVxdWlyZSgnc3R5bGUtYXR0cicpXG52YXIgcXVlcnlTZWxlY3RvckFsbCA9IHJlcXVpcmUoJ3F1ZXJ5LXNlbGVjdG9yJylcbnZhciBjYW1lbENhc2UgPSByZXF1aXJlKCcuL3V0aWxzL2NhbWVsQ2FzZScpXG52YXIgaXNTdHJpbmcgPSByZXF1aXJlKCcuL3V0aWxzL2lzU3RyaW5nJylcbnZhciBpc1VuZGVmaW5lZCA9IHJlcXVpcmUoJy4vdXRpbHMvaXNVbmRlZmluZWQnKVxudmFyIGFzc2lnbiA9IHJlcXVpcmUoJy4vdXRpbHMvYXNzaWduJylcbnZhciBtYXBWYWx1ZXMgPSByZXF1aXJlKCcuL3V0aWxzL21hcFZhbHVlcycpXG52YXIgc3R5bGVDYW1lbENhc2UgPSByZXF1aXJlKCcuL3V0aWxzL3N0eWxlQ2FtZWxDYXNlJylcblxuZnVuY3Rpb24gZWxlbWVudCAoKSB7XG4gIGZ1bmN0aW9uIEVsZW1lbnQgKG5vZGVOYW1lLCBwYXJlbnROb2RlKSB7XG4gICAgdGhpcy5ub2RlTmFtZSA9IG5vZGVOYW1lXG4gICAgdGhpcy5wYXJlbnROb2RlID0gcGFyZW50Tm9kZVxuICAgIHRoaXMuY2hpbGROb2RlcyA9IFtdXG4gICAgdGhpcy5ldmVudExpc3RlbmVycyA9IHt9XG4gICAgdGhpcy50ZXh0ID0gJydcbiAgICB2YXIgc2VsZiA9IHRoaXNcbiAgICB2YXIgcHJvcHMgPSB0aGlzLnByb3BzID0ge1xuICAgICAgcmVmOiBmdW5jdGlvbiAoY29tcG9uZW50KSB7XG4gICAgICAgIHNlbGYuY29tcG9uZW50ID0gY29tcG9uZW50XG4gICAgICB9LFxuICAgICAgc3R5bGU6IHtcbiAgICAgICAgc2V0UHJvcGVydHk6IGZ1bmN0aW9uIChuYW1lLCB2YWx1ZSkge1xuICAgICAgICAgIHByb3BzLnN0eWxlW3N0eWxlQ2FtZWxDYXNlKG5hbWUpXSA9IHZhbHVlXG4gICAgICAgIH0sXG4gICAgICAgIGdldFByb3BlcnR5OiBmdW5jdGlvbiAobmFtZSkge1xuICAgICAgICAgIHJldHVybiBwcm9wcy5zdHlsZVtzdHlsZUNhbWVsQ2FzZShuYW1lKV0gfHwgJydcbiAgICAgICAgfSxcbiAgICAgICAgZ2V0UHJvcGVydHlWYWx1ZTogZnVuY3Rpb24gKG5hbWUpIHtcbiAgICAgICAgICByZXR1cm4gcHJvcHMuc3R5bGUuZ2V0UHJvcGVydHkobmFtZSlcbiAgICAgICAgfSxcbiAgICAgICAgcmVtb3ZlUHJvcGVydHk6IGZ1bmN0aW9uIChuYW1lKSB7XG4gICAgICAgICAgZGVsZXRlIHByb3BzLnN0eWxlW3N0eWxlQ2FtZWxDYXNlKG5hbWUpXVxuICAgICAgICB9XG4gICAgICB9XG4gICAgfVxuXG4gICAgdGhpcy5zdHlsZSA9IHByb3BzLnN0eWxlXG4gIH1cblxuICBFbGVtZW50LkVMRU1FTlRfTk9ERSA9IDFcbiAgRWxlbWVudC5ET0NVTUVOVF9QT1NJVElPTl9ESVNDT05ORUNURUQgPSAxXG4gIEVsZW1lbnQuRE9DVU1FTlRfUE9TSVRJT05fUFJFQ0VESU5HID0gMlxuICBFbGVtZW50LkRPQ1VNRU5UX1BPU0lUSU9OX0ZPTExPV0lORyA9IDRcbiAgRWxlbWVudC5ET0NVTUVOVF9QT1NJVElPTl9DT05UQUlOUyA9IDhcbiAgRWxlbWVudC5ET0NVTUVOVF9QT1NJVElPTl9DT05UQUlORURfQlkgPSAxNlxuXG4gIEVsZW1lbnQucHJvdG90eXBlLm5vZGVUeXBlID0gMVxuXG4gIC8vIFRoaXMgd2FzIGVhc3kgdG8gZG8gd2l0aCBWaW0uXG4gIC8vIEp1c3Qgc2F5aW5nLlxuICBFbGVtZW50LnByb3RvdHlwZS5ldmVudE5hbWVNYXBwaW5ncyA9IHtcbiAgICAnYmx1cic6ICdvbkJsdXInLFxuICAgICdjaGFuZ2UnOiAnb25DaGFuZ2UnLFxuICAgICdjbGljayc6ICdvbkNsaWNrJyxcbiAgICAnY29udGV4dG1lbnUnOiAnb25Db250ZXh0TWVudScsXG4gICAgJ2NvcHknOiAnb25Db3B5JyxcbiAgICAnY3V0JzogJ29uQ3V0JyxcbiAgICAnZG91YmxlY2xpY2snOiAnb25Eb3VibGVDbGljaycsXG4gICAgJ2RyYWcnOiAnb25EcmFnJyxcbiAgICAnZHJhZ2VuZCc6ICdvbkRyYWdFbmQnLFxuICAgICdkcmFnZW50ZXInOiAnb25EcmFnRW50ZXInLFxuICAgICdkcmFnZXhpdCc6ICdvbkRyYWdFeGl0JyxcbiAgICAnZHJhZ2xlYXZlJzogJ29uRHJhZ0xlYXZlJyxcbiAgICAnZHJhZ292ZXInOiAnb25EcmFnT3ZlcicsXG4gICAgJ2RyYWdzdGFydCc6ICdvbkRyYWdTdGFydCcsXG4gICAgJ2Ryb3AnOiAnb25Ecm9wJyxcbiAgICAnZXJyb3InOiAnb25FcnJvcicsXG4gICAgJ2ZvY3VzJzogJ29uRm9jdXMnLFxuICAgICdpbnB1dCc6ICdvbklucHV0JyxcbiAgICAna2V5ZG93bic6ICdvbktleURvd24nLFxuICAgICdrZXlwcmVzcyc6ICdvbktleVByZXNzJyxcbiAgICAna2V5dXAnOiAnb25LZXlVcCcsXG4gICAgJ2xvYWQnOiAnb25Mb2FkJyxcbiAgICAnbW91c2Vkb3duJzogJ29uTW91c2VEb3duJyxcbiAgICAnbW91c2VlbnRlcic6ICdvbk1vdXNlRW50ZXInLFxuICAgICdtb3VzZWxlYXZlJzogJ29uTW91c2VMZWF2ZScsXG4gICAgJ21vdXNlbW92ZSc6ICdvbk1vdXNlTW92ZScsXG4gICAgJ21vdXNlb3V0JzogJ29uTW91c2VPdXQnLFxuICAgICdtb3VzZW92ZXInOiAnb25Nb3VzZU92ZXInLFxuICAgICdtb3VzZXVwJzogJ29uTW91c2VVcCcsXG4gICAgJ3Bhc3RlJzogJ29uUGFzdGUnLFxuICAgICdzY3JvbGwnOiAnb25TY3JvbGwnLFxuICAgICdzdWJtaXQnOiAnb25TdWJtaXQnLFxuICAgICd0b3VjaGNhbmNlbCc6ICdvblRvdWNoQ2FuY2VsJyxcbiAgICAndG91Y2hlbmQnOiAnb25Ub3VjaEVuZCcsXG4gICAgJ3RvdWNobW92ZSc6ICdvblRvdWNoTW92ZScsXG4gICAgJ3RvdWNoc3RhcnQnOiAnb25Ub3VjaFN0YXJ0JyxcbiAgICAnd2hlZWwnOiAnb25XaGVlbCdcbiAgfVxuXG4gIEVsZW1lbnQucHJvdG90eXBlLnNraXBOYW1lVHJhbnNmb3JtYXRpb25FeHByZXNzaW9ucyA9IFtcbiAgICAvXmRhdGEtLyxcbiAgICAvXmFyaWEtL1xuICBdXG5cbiAgRWxlbWVudC5wcm90b3R5cGUuYXR0cmlidXRlTmFtZU1hcHBpbmdzID0ge1xuICAgICdjbGFzcyc6ICdjbGFzc05hbWUnXG4gIH1cblxuICBFbGVtZW50LnByb3RvdHlwZS5hdHRyaWJ1dGVUb1Byb3BOYW1lID0gZnVuY3Rpb24gKG5hbWUpIHtcbiAgICB2YXIgc2tpcFRyYW5zZm9ybU1hdGNoZXMgPSB0aGlzLnNraXBOYW1lVHJhbnNmb3JtYXRpb25FeHByZXNzaW9ucy5tYXAoZnVuY3Rpb24gKGV4cHIpIHtcbiAgICAgIHJldHVybiBleHByLnRlc3QobmFtZSlcbiAgICB9KVxuXG4gICAgaWYgKHNraXBUcmFuc2Zvcm1NYXRjaGVzLnNvbWUoQm9vbGVhbikpIHtcbiAgICAgIHJldHVybiBuYW1lXG4gICAgfSBlbHNlIHtcbiAgICAgIHJldHVybiB0aGlzLmF0dHJpYnV0ZU5hbWVNYXBwaW5nc1tuYW1lXSB8fCBjYW1lbENhc2UobmFtZSlcbiAgICB9XG4gIH1cblxuICBFbGVtZW50LnByb3RvdHlwZS5zZXRBdHRyaWJ1dGUgPSBmdW5jdGlvbiAobmFtZSwgdmFsdWUpIHtcbiAgICBpZiAobmFtZSA9PT0gJ3N0eWxlJyAmJiBpc1N0cmluZyh2YWx1ZSkpIHtcbiAgICAgIHZhciBzdHlsZXMgPSBzdHlsZUF0dHIucGFyc2UodmFsdWUpXG5cbiAgICAgIGZvciAodmFyIGtleSBpbiBzdHlsZXMpIHtcbiAgICAgICAgdGhpcy5zdHlsZS5zZXRQcm9wZXJ0eShrZXksIHN0eWxlc1trZXldKVxuICAgICAgfVxuICAgIH0gZWxzZSB7XG4gICAgICB0aGlzLnByb3BzW3RoaXMuYXR0cmlidXRlVG9Qcm9wTmFtZShuYW1lKV0gPSB2YWx1ZVxuICAgIH1cbiAgfVxuXG4gIEVsZW1lbnQucHJvdG90eXBlLmdldEF0dHJpYnV0ZSA9IGZ1bmN0aW9uIChuYW1lKSB7XG4gICAgcmV0dXJuIHRoaXMucHJvcHNbdGhpcy5hdHRyaWJ1dGVUb1Byb3BOYW1lKG5hbWUpXVxuICB9XG5cbiAgRWxlbWVudC5wcm90b3R5cGUuZ2V0QXR0cmlidXRlTm9kZSA9IGZ1bmN0aW9uIChuYW1lKSB7XG4gICAgdmFyIHZhbHVlID0gdGhpcy5nZXRBdHRyaWJ1dGUobmFtZSlcblxuICAgIGlmICghaXNVbmRlZmluZWQodmFsdWUpKSB7XG4gICAgICByZXR1cm4ge1xuICAgICAgICB2YWx1ZTogdmFsdWUsXG4gICAgICAgIHNwZWNpZmllZDogdHJ1ZVxuICAgICAgfVxuICAgIH1cbiAgfVxuXG4gIEVsZW1lbnQucHJvdG90eXBlLnJlbW92ZUF0dHJpYnV0ZSA9IGZ1bmN0aW9uIChuYW1lKSB7XG4gICAgZGVsZXRlIHRoaXMucHJvcHNbdGhpcy5hdHRyaWJ1dGVUb1Byb3BOYW1lKG5hbWUpXVxuICB9XG5cbiAgRWxlbWVudC5wcm90b3R5cGUuZXZlbnRUb1Byb3BOYW1lID0gZnVuY3Rpb24gKG5hbWUpIHtcbiAgICByZXR1cm4gdGhpcy5ldmVudE5hbWVNYXBwaW5nc1tuYW1lXSB8fCBuYW1lXG4gIH1cblxuICBFbGVtZW50LnByb3RvdHlwZS5hZGRFdmVudExpc3RlbmVyID0gZnVuY3Rpb24gKG5hbWUsIGZuKSB7XG4gICAgdmFyIHByb3AgPSB0aGlzLmV2ZW50VG9Qcm9wTmFtZShuYW1lKVxuICAgIHRoaXMuZXZlbnRMaXN0ZW5lcnNbcHJvcF0gPSB0aGlzLmV2ZW50TGlzdGVuZXJzW3Byb3BdIHx8IFtdXG4gICAgdGhpcy5ldmVudExpc3RlbmVyc1twcm9wXS5wdXNoKGZuKVxuICB9XG5cbiAgRWxlbWVudC5wcm90b3R5cGUucmVtb3ZlRXZlbnRMaXN0ZW5lciA9IGZ1bmN0aW9uIChuYW1lLCBmbikge1xuICAgIHZhciBsaXN0ZW5lcnMgPSB0aGlzLmV2ZW50TGlzdGVuZXJzW3RoaXMuZXZlbnRUb1Byb3BOYW1lKG5hbWUpXVxuXG4gICAgaWYgKGxpc3RlbmVycykge1xuICAgICAgdmFyIG1hdGNoID0gbGlzdGVuZXJzLmluZGV4T2YoZm4pXG5cbiAgICAgIGlmIChtYXRjaCAhPT0gLTEpIHtcbiAgICAgICAgbGlzdGVuZXJzLnNwbGljZShtYXRjaCwgMSlcbiAgICAgIH1cbiAgICB9XG4gIH1cblxuICBFbGVtZW50LnByb3RvdHlwZS5hcHBlbmRDaGlsZCA9IGZ1bmN0aW9uIChlbCkge1xuICAgIGlmIChlbCBpbnN0YW5jZW9mIEVsZW1lbnQpIHtcbiAgICAgIGVsLnBhcmVudE5vZGUgPSB0aGlzXG4gICAgfVxuXG4gICAgdGhpcy5jaGlsZE5vZGVzLnB1c2goZWwpXG4gICAgcmV0dXJuIGVsXG4gIH1cblxuICBFbGVtZW50LnByb3RvdHlwZS5pbnNlcnRCZWZvcmUgPSBmdW5jdGlvbiAoZWwsIGJlZm9yZSkge1xuICAgIHZhciBpbmRleCA9IHRoaXMuY2hpbGROb2Rlcy5pbmRleE9mKGJlZm9yZSlcbiAgICBlbC5wYXJlbnROb2RlID0gdGhpc1xuXG4gICAgaWYgKGluZGV4ICE9PSAtMSkge1xuICAgICAgdGhpcy5jaGlsZE5vZGVzLnNwbGljZShpbmRleCwgMCwgZWwpXG4gICAgfSBlbHNlIHtcbiAgICAgIHRoaXMuY2hpbGROb2Rlcy5wdXNoKGVsKVxuICAgIH1cblxuICAgIHJldHVybiBlbFxuICB9XG5cbiAgRWxlbWVudC5wcm90b3R5cGUucmVtb3ZlQ2hpbGQgPSBmdW5jdGlvbiAoY2hpbGQpIHtcbiAgICB2YXIgdGFyZ2V0ID0gdGhpcy5jaGlsZE5vZGVzLmluZGV4T2YoY2hpbGQpXG4gICAgdGhpcy5jaGlsZE5vZGVzLnNwbGljZSh0YXJnZXQsIDEpXG4gIH1cblxuICBFbGVtZW50LnByb3RvdHlwZS5xdWVyeVNlbGVjdG9yID0gZnVuY3Rpb24gKCkge1xuICAgIHJldHVybiB0aGlzLnF1ZXJ5U2VsZWN0b3JBbGwuYXBwbHkodGhpcywgYXJndW1lbnRzKVswXSB8fCBudWxsXG4gIH1cblxuICBFbGVtZW50LnByb3RvdHlwZS5xdWVyeVNlbGVjdG9yQWxsID0gZnVuY3Rpb24gKHNlbGVjdG9yKSB7XG4gICAgaWYgKCFzZWxlY3Rvcikge1xuICAgICAgdGhyb3cgbmV3IEVycm9yKCdOb3QgZW5vdWdoIGFyZ3VtZW50cycpXG4gICAgfVxuXG4gICAgcmV0dXJuIHF1ZXJ5U2VsZWN0b3JBbGwoc2VsZWN0b3IsIHRoaXMpXG4gIH1cblxuICBFbGVtZW50LnByb3RvdHlwZS5nZXRFbGVtZW50c0J5VGFnTmFtZSA9IGZ1bmN0aW9uIChub2RlTmFtZSkge1xuICAgIHZhciBjaGlsZHJlbiA9IHRoaXMuY2hpbGRyZW5cblxuICAgIGlmIChjaGlsZHJlbi5sZW5ndGggPT09IDApIHtcbiAgICAgIHJldHVybiBbXVxuICAgIH0gZWxzZSB7XG4gICAgICB2YXIgbWF0Y2hlc1xuXG4gICAgICBpZiAobm9kZU5hbWUgIT09ICcqJykge1xuICAgICAgICBtYXRjaGVzID0gY2hpbGRyZW4uZmlsdGVyKGZ1bmN0aW9uIChlbCkge1xuICAgICAgICAgIHJldHVybiBlbC5ub2RlTmFtZSA9PT0gbm9kZU5hbWVcbiAgICAgICAgfSlcbiAgICAgIH0gZWxzZSB7XG4gICAgICAgIG1hdGNoZXMgPSBjaGlsZHJlblxuICAgICAgfVxuXG4gICAgICB2YXIgY2hpbGRNYXRjaGVzID0gY2hpbGRyZW4ubWFwKGZ1bmN0aW9uIChlbCkge1xuICAgICAgICByZXR1cm4gZWwuZ2V0RWxlbWVudHNCeVRhZ05hbWUobm9kZU5hbWUpXG4gICAgICB9KVxuXG4gICAgICByZXR1cm4gbWF0Y2hlcy5jb25jYXQuYXBwbHkobWF0Y2hlcywgY2hpbGRNYXRjaGVzKVxuICAgIH1cbiAgfVxuXG4gIEVsZW1lbnQucHJvdG90eXBlLmdldEVsZW1lbnRCeUlkID0gZnVuY3Rpb24gKGlkKSB7XG4gICAgdmFyIGNoaWxkcmVuID0gdGhpcy5jaGlsZHJlblxuXG4gICAgaWYgKGNoaWxkcmVuLmxlbmd0aCA9PT0gMCkge1xuICAgICAgcmV0dXJuIG51bGxcbiAgICB9IGVsc2Uge1xuICAgICAgdmFyIG1hdGNoID0gY2hpbGRyZW4uZmlsdGVyKGZ1bmN0aW9uIChlbCkge1xuICAgICAgICByZXR1cm4gZWwuZ2V0QXR0cmlidXRlKCdpZCcpID09PSBpZFxuICAgICAgfSlbMF1cblxuICAgICAgaWYgKG1hdGNoKSB7XG4gICAgICAgIHJldHVybiBtYXRjaFxuICAgICAgfSBlbHNlIHtcbiAgICAgICAgdmFyIGNoaWxkTWF0Y2hlcyA9IGNoaWxkcmVuLm1hcChmdW5jdGlvbiAoZWwpIHtcbiAgICAgICAgICByZXR1cm4gZWwuZ2V0RWxlbWVudEJ5SWQoaWQpXG4gICAgICAgIH0pXG5cbiAgICAgICAgcmV0dXJuIGNoaWxkTWF0Y2hlcy5maWx0ZXIoZnVuY3Rpb24gKG1hdGNoKSB7XG4gICAgICAgICAgcmV0dXJuIG1hdGNoICE9PSBudWxsXG4gICAgICAgIH0pWzBdIHx8IG51bGxcbiAgICAgIH1cbiAgICB9XG4gIH1cblxuICBFbGVtZW50LnByb3RvdHlwZS5nZXRCb3VuZGluZ0NsaWVudFJlY3QgPSBmdW5jdGlvbiAoKSB7XG4gICAgaWYgKCF0aGlzLmNvbXBvbmVudCkge1xuICAgICAgcmV0dXJuIHVuZGVmaW5lZFxuICAgIH1cblxuICAgIHJldHVybiB0aGlzLmNvbXBvbmVudC5nZXRCb3VuZGluZ0NsaWVudFJlY3QoKVxuICB9XG5cbiAgRWxlbWVudC5wcm90b3R5cGUuY2xvbmVOb2RlID0gZnVuY3Rpb24gKGRlZXApIHtcbiAgICAvLyBpZiBkZWVwIGlzIG5vdCBwcm92aWRlZCwgaXQgZGVmYXVsdCB0byB0cnVlXG4gICAgaWYgKGRlZXAgPT09IHVuZGVmaW5lZCkge1xuICAgICAgZGVlcCA9IHRydWVcbiAgICB9XG4gICAgdmFyIGVsID0gbmV3IEVsZW1lbnQodGhpcy5ub2RlTmFtZSwgdGhpcy5wYXJlbnROb2RlKVxuICAgIC8vIGNvcHkgbm9kZVR5cGVcbiAgICBpZiAodGhpcy5ub2RlVHlwZSkge1xuICAgICAgZWwubm9kZVR5cGUgPSB0aGlzLm5vZGVUeXBlXG4gICAgfVxuXG4gICAgdmFyIGtcblxuICAgIC8vIGNvcHkgdGhlIHByb3BzXG4gICAgZm9yIChrIGluIHRoaXMucHJvcHMpIHtcbiAgICAgIGlmICh0aGlzLnByb3BzLmhhc093blByb3BlcnR5KGspICYmIGsgIT09ICdyZWYnICYmIGsgIT09ICdzdHlsZScpIHtcbiAgICAgICAgZWwucHJvcHNba10gPSB0aGlzLnByb3BzW2tdXG4gICAgICB9XG4gICAgfVxuICAgIC8vIGNvcHkgdGhlIHN0eWxlc1xuICAgIGZvciAoayBpbiB0aGlzLnN0eWxlKSB7XG4gICAgICBpZiAodGhpcy5zdHlsZS5oYXNPd25Qcm9wZXJ0eShrKSAmJiBbXG4gICAgICAgICdzZXRQcm9wZXJ0eScsXG4gICAgICAgICdnZXRQcm9wZXJ0eScsXG4gICAgICAgICdnZXRQcm9wZXJ0eVZhbHVlJyxcbiAgICAgICAgJ3JlbW92ZVByb3BlcnR5J1xuICAgICAgXS5pbmRleE9mKGspID09PSAtMSkge1xuICAgICAgICBlbC5zdHlsZVtrXSA9IHRoaXMuc3R5bGVba11cbiAgICAgIH1cbiAgICB9XG4gICAgaWYgKGRlZXApIHtcbiAgICAgIGVsLmNoaWxkTm9kZXMgPSB0aGlzLmNoaWxkTm9kZXMubWFwKGZ1bmN0aW9uIChjaGlsZEVsKSB7XG4gICAgICAgIGlmICghY2hpbGRFbC5ub2RlVHlwZSkge1xuICAgICAgICAgIC8vIEl0J3MgYSBSZWFjdCBlbGVtZW50LCBsZXQgUmVhY3QgY2xvbmUgaXRcbiAgICAgICAgICByZXR1cm4gUmVhY3QuY2xvbmVFbGVtZW50KGNoaWxkRWwpXG4gICAgICAgIH1cbiAgICAgICAgLy8gZWl0aGVyIEVsZW1lbnQgb3IgdHJ1ZSBkb20gZWxlbWVudFxuICAgICAgICBjaGlsZEVsID0gY2hpbGRFbC5jbG9uZU5vZGUodHJ1ZSlcbiAgICAgICAgLy8gaWYgYSBmYXV4IGRvbSBlbGVtZW50LCBtb2RpZnkgcGFyZW50Tm9kZVxuICAgICAgICBpZiAoY2hpbGRFbCBpbnN0YW5jZW9mIEVsZW1lbnQpIHtcbiAgICAgICAgICBjaGlsZEVsLnBhcmVudE5vZGUgPSBlbFxuICAgICAgICB9XG4gICAgICAgIHJldHVybiBjaGlsZEVsXG4gICAgICB9KVxuICAgIH1cbiAgICByZXR1cm4gZWxcbiAgfVxuXG4gIEVsZW1lbnQucHJvdG90eXBlLnRvUmVhY3QgPSBmdW5jdGlvbiAoaW5kZXgpIHtcbiAgICBpbmRleCA9IGluZGV4IHx8IDBcbiAgICB2YXIgcHJvcHMgPSBhc3NpZ24oe30sIHRoaXMucHJvcHMpXG4gICAgcHJvcHMuc3R5bGUgPSBhc3NpZ24oe30sIHByb3BzLnN0eWxlKVxuXG4gICAgdmFyIG9yaWdpbmFsRWxlbWVudCA9IHRoaXNcblxuICAgIGZ1bmN0aW9uIHVuaXF1ZUtleSAoKSB7XG4gICAgICByZXR1cm4gJ2ZhdXgtZG9tLScgKyBpbmRleFxuICAgIH1cblxuICAgIGlmIChpc1VuZGVmaW5lZChwcm9wcy5rZXkpKSB7XG4gICAgICBwcm9wcy5rZXkgPSB1bmlxdWVLZXkoKVxuICAgIH1cblxuICAgIGRlbGV0ZSBwcm9wcy5zdHlsZS5zZXRQcm9wZXJ0eVxuICAgIGRlbGV0ZSBwcm9wcy5zdHlsZS5nZXRQcm9wZXJ0eVxuICAgIGRlbGV0ZSBwcm9wcy5zdHlsZS5nZXRQcm9wZXJ0eVZhbHVlXG4gICAgZGVsZXRlIHByb3BzLnN0eWxlLnJlbW92ZVByb3BlcnR5XG5cbiAgICBhc3NpZ24ocHJvcHMsIG1hcFZhbHVlcyh0aGlzLmV2ZW50TGlzdGVuZXJzLCBmdW5jdGlvbiAobGlzdGVuZXJzKSB7XG4gICAgICByZXR1cm4gZnVuY3Rpb24gKHN5bnRoZXRpY0V2ZW50KSB7XG4gICAgICAgIHZhciBldmVudFxuXG4gICAgICAgIGlmIChzeW50aGV0aWNFdmVudCkge1xuICAgICAgICAgIGV2ZW50ID0gc3ludGhldGljRXZlbnQubmF0aXZlRXZlbnRcbiAgICAgICAgICBldmVudC5zeW50aGV0aWNFdmVudCA9IHN5bnRoZXRpY0V2ZW50XG4gICAgICAgIH1cblxuICAgICAgICBtYXBWYWx1ZXMobGlzdGVuZXJzLCBmdW5jdGlvbiAobGlzdGVuZXIpIHtcbiAgICAgICAgICBsaXN0ZW5lci5jYWxsKG9yaWdpbmFsRWxlbWVudCwgZXZlbnQpXG4gICAgICAgIH0pXG4gICAgICB9XG4gICAgfSkpXG5cbiAgICByZXR1cm4gUmVhY3QuY3JlYXRlRWxlbWVudCh0aGlzLm5vZGVOYW1lLCBwcm9wcywgdGhpcy50ZXh0IHx8IHRoaXMuY2hpbGRyZW4ubWFwKGZ1bmN0aW9uIChlbCwgaSkge1xuICAgICAgaWYgKGVsIGluc3RhbmNlb2YgRWxlbWVudCkge1xuICAgICAgICByZXR1cm4gZWwudG9SZWFjdChpKVxuICAgICAgfSBlbHNlIHtcbiAgICAgICAgcmV0dXJuIGVsXG4gICAgICB9XG4gICAgfSkpXG4gIH1cblxuICBFbGVtZW50LnByb3RvdHlwZS5jb21wYXJlRG9jdW1lbnRQb3NpdGlvbiA9IGZ1bmN0aW9uIChvdGhlcikge1xuICAgIGZ1bmN0aW9uIGdldEZpcnN0Tm9kZUJ5T3JkZXIgKG5vZGVzLCBub2RlT25lLCBub2RlVHdvKSB7XG4gICAgICByZXR1cm4gbm9kZXMucmVkdWNlKGZ1bmN0aW9uIChyZXN1bHQsIG5vZGUpIHtcbiAgICAgICAgaWYgKHJlc3VsdCAhPT0gZmFsc2UpIHtcbiAgICAgICAgICByZXR1cm4gcmVzdWx0XG4gICAgICAgIH0gZWxzZSBpZiAobm9kZSA9PT0gbm9kZU9uZSkge1xuICAgICAgICAgIHJldHVybiBub2RlT25lXG4gICAgICAgIH0gZWxzZSBpZiAobm9kZSA9PT0gbm9kZVR3bykge1xuICAgICAgICAgIHJldHVybiBub2RlVHdvXG4gICAgICAgIH0gZWxzZSBpZiAobm9kZS5jaGlsZE5vZGVzKSB7XG4gICAgICAgICAgcmV0dXJuIGdldEZpcnN0Tm9kZUJ5T3JkZXIobm9kZS5jaGlsZE5vZGVzLCBub2RlT25lLCBub2RlVHdvKVxuICAgICAgICB9IGVsc2Uge1xuICAgICAgICAgIHJldHVybiBmYWxzZVxuICAgICAgICB9XG4gICAgICB9LCBmYWxzZSlcbiAgICB9XG5cbiAgICBmdW5jdGlvbiBpc0FuY2VzdG9yIChzb3VyY2UsIHRhcmdldCkge1xuICAgICAgd2hpbGUgKHRhcmdldC5wYXJlbnROb2RlKSB7XG4gICAgICAgIHRhcmdldCA9IHRhcmdldC5wYXJlbnROb2RlXG4gICAgICAgIGlmICh0YXJnZXQgPT09IHNvdXJjZSkge1xuICAgICAgICAgIHJldHVybiB0cnVlXG4gICAgICAgIH1cbiAgICAgIH1cbiAgICAgIHJldHVybiBmYWxzZVxuICAgIH1cblxuICAgIGZ1bmN0aW9uIGVpdGhlckNvbnRhaW5zIChsZWZ0LCByaWdodCkge1xuICAgICAgcmV0dXJuIGlzQW5jZXN0b3IobGVmdCwgcmlnaHQpXG4gICAgICAgID8gRWxlbWVudC5ET0NVTUVOVF9QT1NJVElPTl9DT05UQUlORURfQlkgKyBFbGVtZW50LkRPQ1VNRU5UX1BPU0lUSU9OX0ZPTExPV0lOR1xuICAgICAgICA6IGlzQW5jZXN0b3IocmlnaHQsIGxlZnQpXG4gICAgICAgICAgPyBFbGVtZW50LkRPQ1VNRU5UX1BPU0lUSU9OX0NPTlRBSU5TICsgRWxlbWVudC5ET0NVTUVOVF9QT1NJVElPTl9QUkVDRURJTkdcbiAgICAgICAgICA6IGZhbHNlXG4gICAgfVxuXG4gICAgZnVuY3Rpb24gZ2V0Um9vdE5vZGUgKG5vZGUpIHtcbiAgICAgIHdoaWxlIChub2RlLnBhcmVudE5vZGUpIHtcbiAgICAgICAgbm9kZSA9IG5vZGUucGFyZW50Tm9kZVxuICAgICAgfVxuICAgICAgcmV0dXJuIG5vZGVcbiAgICB9XG5cbiAgICBpZiAodGhpcyA9PT0gb3RoZXIpIHtcbiAgICAgIHJldHVybiAwXG4gICAgfVxuXG4gICAgdmFyIHJlZmVyZW5jZVJvb3QgPSBnZXRSb290Tm9kZSh0aGlzKVxuICAgIHZhciBvdGhlclJvb3QgPSBnZXRSb290Tm9kZShvdGhlcilcblxuICAgIGlmIChyZWZlcmVuY2VSb290ICE9PSBvdGhlclJvb3QpIHtcbiAgICAgIHJldHVybiBFbGVtZW50LkRPQ1VNRU5UX1BPU0lUSU9OX0RJU0NPTk5FQ1RFRFxuICAgIH1cblxuICAgIHZhciByZXN1bHQgPSBlaXRoZXJDb250YWlucyh0aGlzLCBvdGhlcilcbiAgICBpZiAocmVzdWx0KSB7XG4gICAgICByZXR1cm4gcmVzdWx0XG4gICAgfVxuXG4gICAgdmFyIGZpcnN0ID0gZ2V0Rmlyc3ROb2RlQnlPcmRlcihbcmVmZXJlbmNlUm9vdF0sIHRoaXMsIG90aGVyKVxuICAgIHJldHVybiBmaXJzdCA9PT0gdGhpc1xuICAgICAgPyBFbGVtZW50LkRPQ1VNRU5UX1BPU0lUSU9OX0ZPTExPV0lOR1xuICAgICAgOiBmaXJzdCA9PT0gb3RoZXJcbiAgICAgICAgPyBFbGVtZW50LkRPQ1VNRU5UX1BPU0lUSU9OX1BSRUNFRElOR1xuICAgICAgICA6IEVsZW1lbnQuRE9DVU1FTlRfUE9TSVRJT05fRElTQ09OTkVDVEVEXG4gIH1cblxuICBPYmplY3QuZGVmaW5lUHJvcGVydGllcyhFbGVtZW50LnByb3RvdHlwZSwge1xuICAgIG5leHRTaWJsaW5nOiB7XG4gICAgICBnZXQ6IGZ1bmN0aW9uICgpIHtcbiAgICAgICAgdmFyIHNpYmxpbmdzID0gdGhpcy5wYXJlbnROb2RlLmNoaWxkcmVuXG4gICAgICAgIHZhciBtZSA9IHNpYmxpbmdzLmluZGV4T2YodGhpcylcbiAgICAgICAgcmV0dXJuIHNpYmxpbmdzW21lICsgMV1cbiAgICAgIH1cbiAgICB9LFxuICAgIHByZXZpb3VzU2libGluZzoge1xuICAgICAgZ2V0OiBmdW5jdGlvbiAoKSB7XG4gICAgICAgIHZhciBzaWJsaW5ncyA9IHRoaXMucGFyZW50Tm9kZS5jaGlsZHJlblxuICAgICAgICB2YXIgbWUgPSBzaWJsaW5ncy5pbmRleE9mKHRoaXMpXG4gICAgICAgIHJldHVybiBzaWJsaW5nc1ttZSAtIDFdXG4gICAgICB9XG4gICAgfSxcbiAgICBpbm5lckhUTUw6IHtcbiAgICAgIGdldDogZnVuY3Rpb24gKCkge1xuICAgICAgICByZXR1cm4gdGhpcy50ZXh0XG4gICAgICB9LFxuICAgICAgc2V0OiBmdW5jdGlvbiAodGV4dCkge1xuICAgICAgICB0aGlzLnRleHQgPSB0ZXh0XG4gICAgICB9XG4gICAgfSxcbiAgICB0ZXh0Q29udGVudDoge1xuICAgICAgZ2V0OiBmdW5jdGlvbiAoKSB7XG4gICAgICAgIHJldHVybiB0aGlzLnRleHRcbiAgICAgIH0sXG4gICAgICBzZXQ6IGZ1bmN0aW9uICh0ZXh0KSB7XG4gICAgICAgIHRoaXMudGV4dCA9IHRleHRcbiAgICAgIH1cbiAgICB9LFxuICAgIGNoaWxkcmVuOiB7XG4gICAgICBnZXQ6IGZ1bmN0aW9uICgpIHtcbiAgICAgICAgLy8gU28gZmFyIG5vZGVzIGNyZWF0ZWQgYnkgdGhpcyBsaWJyYXJ5IGFyZSBhbGwgb2Ygbm9kZVR5cGUgMSAoZWxlbWVudHMpLFxuICAgICAgICAvLyBidXQgdGhpcyBjb3VsZCBjaGFuZ2UgaW4gdGhlIGZ1dHVyZS5cbiAgICAgICAgcmV0dXJuIHRoaXMuY2hpbGROb2Rlcy5maWx0ZXIoZnVuY3Rpb24gKGVsKSB7XG4gICAgICAgICAgaWYgKCFlbC5ub2RlVHlwZSkge1xuICAgICAgICAgICAgLy8gSXQncyBhIFJlYWN0IGVsZW1lbnQsIHdlIGFsd2F5cyBhZGQgaXRcbiAgICAgICAgICAgIHJldHVybiB0cnVlXG4gICAgICAgICAgfVxuXG4gICAgICAgICAgLy8gSXQncyBhIEhUTUwgbm9kZS4gV2Ugd2FudCB0byBmaWx0ZXIgdG8gaGF2ZSBvbmx5IG5vZGVzIHdpdGggdHlwZSAxXG4gICAgICAgICAgcmV0dXJuIGVsLm5vZGVUeXBlID09PSAxXG4gICAgICAgIH0pXG4gICAgICB9XG4gICAgfVxuICB9KVxuXG4gIC8vIFRoZXNlIE5TIG1ldGhvZHMgYXJlIGNhbGxlZCBieSB0aGluZ3MgbGlrZSBEMyBpZiBpdCBzcG90cyBhIG5hbWVzcGFjZS5cbiAgLy8gTGlrZSB4bGluazpocmVmLiBJIGRvbid0IGNhcmUgYWJvdXQgbmFtZXNwYWNlcywgc28gdGhlc2UgZnVuY3Rpb25zIGhhdmUgTlMgYWxpYXNlcyBjcmVhdGVkLlxuICB2YXIgbmFtZXNwYWNlTWV0aG9kcyA9IFtcbiAgICAnc2V0QXR0cmlidXRlJyxcbiAgICAnZ2V0QXR0cmlidXRlJyxcbiAgICAnZ2V0QXR0cmlidXRlTm9kZScsXG4gICAgJ3JlbW92ZUF0dHJpYnV0ZScsXG4gICAgJ2dldEVsZW1lbnRzQnlUYWdOYW1lJyxcbiAgICAnZ2V0RWxlbWVudEJ5SWQnXG4gIF1cblxuICBuYW1lc3BhY2VNZXRob2RzLmZvckVhY2goZnVuY3Rpb24gKG5hbWUpIHtcbiAgICB2YXIgZm4gPSBFbGVtZW50LnByb3RvdHlwZVtuYW1lXVxuICAgIEVsZW1lbnQucHJvdG90eXBlW25hbWUgKyAnTlMnXSA9IGZ1bmN0aW9uICgpIHtcbiAgICAgIHJldHVybiBmbi5hcHBseSh0aGlzLCBBcnJheS5wcm90b3R5cGUuc2xpY2UuY2FsbChhcmd1bWVudHMsIDEpKVxuICAgIH1cbiAgfSlcblxuICByZXR1cm4gRWxlbWVudFxufVxuXG5tb2R1bGUuZXhwb3J0cyA9IGVsZW1lbnRcbiIsIlxuXG4vKjo6IHR5cGUgQXR0ciA9IHsgW2tleTogc3RyaW5nXTogc3RyaW5nIHwgbnVtYmVyIH0gKi9cbi8qOjogdHlwZSBPcHRzID0geyBwcmVzZXJ2ZU51bWJlcnM6ID9ib29sZWFuIH0gKi9cblxuLypcblxuc3R5bGUtYXR0clxuPT09PVxuXG5WZXJ5IHNpbXBsZSBwYXJzaW5nIGFuZCBzdHJpbmdpZnlpbmcgb2Ygc3R5bGUgYXR0cmlidXRlcy5cblxuYHBhcnNlYFxuLS0tLVxuXG5Db252ZXJ0IGEgc3R5bGUgYXR0cmlidXRlIHN0cmluZyB0byBhbiBvYmplY3QuXG5cbiovXG5cbi8qOjogZGVjbGFyZSBmdW5jdGlvbiBwYXJzZSAocmF3OiBzdHJpbmcsIG9wdHM6ID9PcHRzKTogQXR0ciAqL1xuZnVuY3Rpb24gcGFyc2UocmF3LCBvcHRzKSB7XG4gIG9wdHMgPSBvcHRzIHx8IHt9O1xuXG4gIHZhciBwcmVzZXJ2ZU51bWJlcnMgPSBvcHRzLnByZXNlcnZlTnVtYmVycztcbiAgdmFyIHRyaW0gPSBmdW5jdGlvbiAocykge1xuICAgIHJldHVybiBzLnRyaW0oKTtcbiAgfTtcbiAgdmFyIG9iaiA9IHt9O1xuXG4gIGdldEtleVZhbHVlQ2h1bmtzKHJhdykubWFwKHRyaW0pLmZpbHRlcihCb29sZWFuKS5mb3JFYWNoKGZ1bmN0aW9uIChpdGVtKSB7XG4gICAgLy8gc3BsaXQgd2l0aCBgLmluZGV4T2ZgIHJhdGhlciB0aGFuIGAuc3BsaXRgIGJlY2F1c2UgdGhlIHZhbHVlIG1heSBhbHNvIGNvbnRhaW4gY29sb25zLlxuICAgIHZhciBwb3MgPSBpdGVtLmluZGV4T2YoJzonKTtcbiAgICB2YXIga2V5ID0gaXRlbS5zdWJzdHIoMCwgcG9zKS50cmltKCk7XG4gICAgdmFyIHZhbCA9IGl0ZW0uc3Vic3RyKHBvcyArIDEpLnRyaW0oKTtcbiAgICBpZiAocHJlc2VydmVOdW1iZXJzICYmIGlzTnVtZXJpYyh2YWwpKSB7XG4gICAgICB2YWwgPSBOdW1iZXIodmFsKTtcbiAgICB9XG5cbiAgICBvYmpba2V5XSA9IHZhbDtcbiAgfSk7XG5cbiAgcmV0dXJuIG9iajtcbn1cblxuLypcblxuYGlzTnVtZXJpY2Bcbi0tLS1cblxuQ2hlY2sgaWYgYSB2YWx1ZSBpcyBudW1lcmljLlxuVmlhOiBodHRwczovL3N0YWNrb3ZlcmZsb3cuY29tL2EvMTgzMDg0NC85MzI0XG5cbiovXG5cbi8qOjogZGVjbGFyZSBmdW5jdGlvbiBpc051bWVyaWMgKG46IGFueSk6IGJvb2xlYW4gKi9cblxuZnVuY3Rpb24gaXNOdW1lcmljKG4pIHtcbiAgcmV0dXJuICFpc05hTihwYXJzZUZsb2F0KG4pKSAmJiBpc0Zpbml0ZShuKTtcbn1cblxuLypcblxuYGdldEtleVZhbHVlQ2h1bmtzYFxuLS0tLVxuXG5TcGxpdCBhIHN0cmluZyBpbnRvIGNodW5rcyBtYXRjaGluZyBgPGtleT46IDx2YWx1ZT5gXG5cbiovXG4vKjo6IGRlY2xhcmUgZnVuY3Rpb24gZ2V0S2V5VmFsdWVDaHVua3MgKHJhdzogc3RyaW5nKTogQXJyYXk8c3RyaW5nPiAqL1xuZnVuY3Rpb24gZ2V0S2V5VmFsdWVDaHVua3MocmF3KSB7XG4gIHZhciBjaHVua3MgPSBbXTtcbiAgdmFyIG9mZnNldCA9IDA7XG4gIHZhciBzZXAgPSAnOyc7XG4gIHZhciBoYXNVbmNsb3NlZFVybCA9IC91cmxcXChbXlxcKV0rJC87XG4gIHZhciBjaHVuayA9ICcnO1xuICB2YXIgbmV4dFNwbGl0O1xuICB3aGlsZSAob2Zmc2V0IDwgcmF3Lmxlbmd0aCkge1xuICAgIG5leHRTcGxpdCA9IHJhdy5pbmRleE9mKHNlcCwgb2Zmc2V0KTtcbiAgICBpZiAobmV4dFNwbGl0ID09PSAtMSkge1xuICAgICAgbmV4dFNwbGl0ID0gcmF3Lmxlbmd0aDtcbiAgICB9XG5cbiAgICBjaHVuayArPSByYXcuc3Vic3RyaW5nKG9mZnNldCwgbmV4dFNwbGl0KTtcblxuICAgIC8vIGRhdGEgVVJJcyBjYW4gY29udGFpbiBzZW1pY29sb25zLCBzbyBtYWtlIHN1cmUgd2UgZ2V0IHRoZSB3aG9sZSB0aGluZ1xuICAgIGlmIChoYXNVbmNsb3NlZFVybC50ZXN0KGNodW5rKSkge1xuICAgICAgY2h1bmsgKz0gJzsnO1xuICAgICAgb2Zmc2V0ID0gbmV4dFNwbGl0ICsgMTtcbiAgICAgIGNvbnRpbnVlO1xuICAgIH1cblxuICAgIGNodW5rcy5wdXNoKGNodW5rKTtcbiAgICBjaHVuayA9ICcnO1xuICAgIG9mZnNldCA9IG5leHRTcGxpdCArIDE7XG4gIH1cblxuICByZXR1cm4gY2h1bmtzO1xufVxuXG4vKlxuXG5gc3RyaW5naWZ5YFxuLS0tLVxuXG5Db252ZXJ0IGFuIG9iamVjdCBpbnRvIGFuIGF0dHJpYnV0ZSBzdHJpbmdcblxuKi9cbi8qOjogZGVjbGFyZSBmdW5jdGlvbiBzdHJpbmdpZnkgKG9iajogQXR0cik6IHN0cmluZyAqL1xuZnVuY3Rpb24gc3RyaW5naWZ5KG9iaikge1xuICByZXR1cm4gT2JqZWN0LmtleXMob2JqKS5tYXAoZnVuY3Rpb24gKGtleSkge1xuICAgIHJldHVybiBrZXkgKyAnOicgKyBvYmpba2V5XTtcbiAgfSkuam9pbignOycpO1xufVxuXG4vKlxuXG5gbm9ybWFsaXplYFxuLS0tLVxuXG5Ob3JtYWxpemUgYW4gYXR0cmlidXRlIHN0cmluZyAoZWcuIGNvbGxhcHNlIGR1cGxpY2F0ZXMpXG5cbiovXG4vKjo6IGRlY2xhcmUgZnVuY3Rpb24gbm9ybWFsaXplIChzdHI6IHN0cmluZywgb3B0czogP09wdHMpOiBzdHJpbmcgKi9cbmZ1bmN0aW9uIG5vcm1hbGl6ZShzdHIsIG9wdHMpIHtcbiAgcmV0dXJuIHN0cmluZ2lmeShwYXJzZShzdHIsIG9wdHMpKTtcbn1cblxubW9kdWxlLmV4cG9ydHMucGFyc2UgPSBwYXJzZTtcbm1vZHVsZS5leHBvcnRzLnN0cmluZ2lmeSA9IHN0cmluZ2lmeTtcbm1vZHVsZS5leHBvcnRzLm5vcm1hbGl6ZSA9IG5vcm1hbGl6ZTsiLCJtb2R1bGUuZXhwb3J0cyA9IHJlcXVpcmUoJy4vbGliL3F1ZXJ5LXNlbGVjdG9yJyk7IiwiLyoqXG4gKiBAaWdub3JlXG4gKiBjc3MzIHNlbGVjdG9yIGVuZ2luZSBmb3IgaWU2LThcbiAqIEBhdXRob3IgeWltaW5naGVAZ21haWwuY29tXG4gKi9cblxudmFyIHV0aWwgPSByZXF1aXJlKCcuL3F1ZXJ5LXNlbGVjdG9yL3V0aWwnKTtcbnZhciBwYXJzZXIgPSByZXF1aXJlKCcuL3F1ZXJ5LXNlbGVjdG9yL3BhcnNlcicpO1xuXG52YXIgRVhQQU5ET19TRUxFQ1RPUl9LRVkgPSAnX2tzX2RhdGFfc2VsZWN0b3JfaWRfJyxcbiAgY2FjaGVzID0ge30sXG4gIGlzQ29udGV4dFhNTCxcbiAgdXVpZCA9IDAsXG4gIHN1Yk1hdGNoZXNDYWNoZSA9IHt9LFxuICBnZXRBdHRyID0gZnVuY3Rpb24gKGVsLCBuYW1lKSB7XG4gICAgaWYgKGlzQ29udGV4dFhNTCkge1xuICAgICAgcmV0dXJuIHV0aWwuZ2V0U2ltcGxlQXR0cihlbCwgbmFtZSk7XG4gICAgfSBlbHNlIHtcbiAgICAgIHJldHVybiB1dGlsLmF0dHIoZWwsIG5hbWUpO1xuICAgIH1cbiAgfSxcbiAgaGFzU2luZ2xlQ2xhc3MgPSB1dGlsLmhhc1NpbmdsZUNsYXNzLFxuICBpc1RhZyA9IHV0aWwuaXNUYWcsXG4gIGFOUGx1c0IgPSAvXigoWystXT8oPzpcXGQrKT8pP24pPyhbKy1dP1xcZCspPyQvO1xuXG4vLyBDU1MgZXNjYXBlcyBodHRwOi8vd3d3LnczLm9yZy9UUi9DU1MyMS9zeW5kYXRhLmh0bWwjZXNjYXBlZC1jaGFyYWN0ZXJzXG52YXIgdW5lc2NhcGUgPSAvXFxcXChbXFxkYS1mQS1GXXsxLDZ9W1xceDIwXFx0XFxyXFxuXFxmXT98LikvZyxcbiAgdW5lc2NhcGVGbiA9IGZ1bmN0aW9uIChfLCBlc2NhcGVkKSB7XG4gICAgdmFyIGhpZ2ggPSAnMHgnICsgZXNjYXBlZCAtIDB4MTAwMDA7XG4gICAgLy8gTmFOIG1lYW5zIG5vbi1jb2RlcG9pbnRcbiAgICByZXR1cm4gaXNOYU4oaGlnaCkgP1xuICAgICAgZXNjYXBlZCA6XG4gICAgICAvLyBCTVAgY29kZXBvaW50XG4gICAgICBoaWdoIDwgMCA/XG4gICAgICAgIFN0cmluZy5mcm9tQ2hhckNvZGUoaGlnaCArIDB4MTAwMDApIDpcbiAgICAgICAgLy8gU3VwcGxlbWVudGFsIFBsYW5lIGNvZGVwb2ludCAoc3Vycm9nYXRlIHBhaXIpXG4gICAgICAgIFN0cmluZy5mcm9tQ2hhckNvZGUoaGlnaCA+PiAxMCB8IDB4RDgwMCwgaGlnaCAmIDB4M0ZGIHwgMHhEQzAwKTtcbiAgfTtcblxudmFyIG1hdGNoRXhwcjtcblxudmFyIHBzZXVkb0ZuRXhwciA9IHtcbiAgJ250aC1jaGlsZCc6IGZ1bmN0aW9uIChlbCwgcGFyYW0pIHtcbiAgICB2YXIgYWIgPSBnZXRBYihwYXJhbSksXG4gICAgICBhID0gYWIuYSxcbiAgICAgIGIgPSBhYi5iO1xuICAgIGlmIChhID09PSAwICYmIGIgPT09IDApIHtcbiAgICAgIHJldHVybiAwO1xuICAgIH1cbiAgICB2YXIgaW5kZXggPSAwLFxuICAgICAgcGFyZW50ID0gZWwucGFyZW50Tm9kZTtcbiAgICBpZiAocGFyZW50KSB7XG4gICAgICB2YXIgY2hpbGROb2RlcyA9IHBhcmVudC5jaGlsZE5vZGVzLFxuICAgICAgICBjb3VudCA9IDAsXG4gICAgICAgIGNoaWxkLFxuICAgICAgICByZXQsXG4gICAgICAgIGxlbiA9IGNoaWxkTm9kZXMubGVuZ3RoO1xuICAgICAgZm9yICg7IGNvdW50IDwgbGVuOyBjb3VudCsrKSB7XG4gICAgICAgIGNoaWxkID0gY2hpbGROb2Rlc1tjb3VudF07XG4gICAgICAgIGlmIChjaGlsZC5ub2RlVHlwZSA9PT0gMSkge1xuICAgICAgICAgIGluZGV4Kys7XG4gICAgICAgICAgcmV0ID0gbWF0Y2hJbmRleEJ5QWIoaW5kZXgsIGEsIGIsIGNoaWxkID09PSBlbCk7XG4gICAgICAgICAgaWYgKHJldCAhPT0gdW5kZWZpbmVkKSB7XG4gICAgICAgICAgICByZXR1cm4gcmV0O1xuICAgICAgICAgIH1cbiAgICAgICAgfVxuICAgICAgfVxuICAgIH1cbiAgICByZXR1cm4gMDtcbiAgfSxcbiAgJ250aC1sYXN0LWNoaWxkJzogZnVuY3Rpb24gKGVsLCBwYXJhbSkge1xuICAgIHZhciBhYiA9IGdldEFiKHBhcmFtKSxcbiAgICAgIGEgPSBhYi5hLFxuICAgICAgYiA9IGFiLmI7XG4gICAgaWYgKGEgPT09IDAgJiYgYiA9PT0gMCkge1xuICAgICAgcmV0dXJuIDA7XG4gICAgfVxuICAgIHZhciBpbmRleCA9IDAsXG4gICAgICBwYXJlbnQgPSBlbC5wYXJlbnROb2RlO1xuICAgIGlmIChwYXJlbnQpIHtcbiAgICAgIHZhciBjaGlsZE5vZGVzID0gcGFyZW50LmNoaWxkTm9kZXMsXG4gICAgICAgIGxlbiA9IGNoaWxkTm9kZXMubGVuZ3RoLFxuICAgICAgICBjb3VudCA9IGxlbiAtIDEsXG4gICAgICAgIGNoaWxkLFxuICAgICAgICByZXQ7XG4gICAgICBmb3IgKDsgY291bnQgPj0gMDsgY291bnQtLSkge1xuICAgICAgICBjaGlsZCA9IGNoaWxkTm9kZXNbY291bnRdO1xuICAgICAgICBpZiAoY2hpbGQubm9kZVR5cGUgPT09IDEpIHtcbiAgICAgICAgICBpbmRleCsrO1xuICAgICAgICAgIHJldCA9IG1hdGNoSW5kZXhCeUFiKGluZGV4LCBhLCBiLCBjaGlsZCA9PT0gZWwpO1xuICAgICAgICAgIGlmIChyZXQgIT09IHVuZGVmaW5lZCkge1xuICAgICAgICAgICAgcmV0dXJuIHJldDtcbiAgICAgICAgICB9XG4gICAgICAgIH1cbiAgICAgIH1cbiAgICB9XG4gICAgcmV0dXJuIDA7XG4gIH0sXG4gICdudGgtb2YtdHlwZSc6IGZ1bmN0aW9uIChlbCwgcGFyYW0pIHtcbiAgICB2YXIgYWIgPSBnZXRBYihwYXJhbSksXG4gICAgICBhID0gYWIuYSxcbiAgICAgIGIgPSBhYi5iO1xuICAgIGlmIChhID09PSAwICYmIGIgPT09IDApIHtcbiAgICAgIHJldHVybiAwO1xuICAgIH1cbiAgICB2YXIgaW5kZXggPSAwLFxuICAgICAgcGFyZW50ID0gZWwucGFyZW50Tm9kZTtcbiAgICBpZiAocGFyZW50KSB7XG4gICAgICB2YXIgY2hpbGROb2RlcyA9IHBhcmVudC5jaGlsZE5vZGVzLFxuICAgICAgICBlbFR5cGUgPSBlbC50YWdOYW1lLFxuICAgICAgICBjb3VudCA9IDAsXG4gICAgICAgIGNoaWxkLFxuICAgICAgICByZXQsXG4gICAgICAgIGxlbiA9IGNoaWxkTm9kZXMubGVuZ3RoO1xuICAgICAgZm9yICg7IGNvdW50IDwgbGVuOyBjb3VudCsrKSB7XG4gICAgICAgIGNoaWxkID0gY2hpbGROb2Rlc1tjb3VudF07XG4gICAgICAgIGlmIChjaGlsZC50YWdOYW1lID09PSBlbFR5cGUpIHtcbiAgICAgICAgICBpbmRleCsrO1xuICAgICAgICAgIHJldCA9IG1hdGNoSW5kZXhCeUFiKGluZGV4LCBhLCBiLCBjaGlsZCA9PT0gZWwpO1xuICAgICAgICAgIGlmIChyZXQgIT09IHVuZGVmaW5lZCkge1xuICAgICAgICAgICAgcmV0dXJuIHJldDtcbiAgICAgICAgICB9XG4gICAgICAgIH1cbiAgICAgIH1cbiAgICB9XG4gICAgcmV0dXJuIDA7XG4gIH0sXG4gICdudGgtbGFzdC1vZi10eXBlJzogZnVuY3Rpb24gKGVsLCBwYXJhbSkge1xuICAgIHZhciBhYiA9IGdldEFiKHBhcmFtKSxcbiAgICAgIGEgPSBhYi5hLFxuICAgICAgYiA9IGFiLmI7XG4gICAgaWYgKGEgPT09IDAgJiYgYiA9PT0gMCkge1xuICAgICAgcmV0dXJuIDA7XG4gICAgfVxuICAgIHZhciBpbmRleCA9IDAsXG4gICAgICBwYXJlbnQgPSBlbC5wYXJlbnROb2RlO1xuICAgIGlmIChwYXJlbnQpIHtcbiAgICAgIHZhciBjaGlsZE5vZGVzID0gcGFyZW50LmNoaWxkTm9kZXMsXG4gICAgICAgIGxlbiA9IGNoaWxkTm9kZXMubGVuZ3RoLFxuICAgICAgICBlbFR5cGUgPSBlbC50YWdOYW1lLFxuICAgICAgICBjb3VudCA9IGxlbiAtIDEsXG4gICAgICAgIGNoaWxkLFxuICAgICAgICByZXQ7XG4gICAgICBmb3IgKDsgY291bnQgPj0gMDsgY291bnQtLSkge1xuICAgICAgICBjaGlsZCA9IGNoaWxkTm9kZXNbY291bnRdO1xuICAgICAgICBpZiAoY2hpbGQudGFnTmFtZSA9PT0gZWxUeXBlKSB7XG4gICAgICAgICAgaW5kZXgrKztcbiAgICAgICAgICByZXQgPSBtYXRjaEluZGV4QnlBYihpbmRleCwgYSwgYiwgY2hpbGQgPT09IGVsKTtcbiAgICAgICAgICBpZiAocmV0ICE9PSB1bmRlZmluZWQpIHtcbiAgICAgICAgICAgIHJldHVybiByZXQ7XG4gICAgICAgICAgfVxuICAgICAgICB9XG4gICAgICB9XG4gICAgfVxuICAgIHJldHVybiAwO1xuICB9LFxuICBsYW5nOiBmdW5jdGlvbiAoZWwsIGxhbmcpIHtcbiAgICB2YXIgZWxMYW5nO1xuICAgIGxhbmcgPSB1bkVzY2FwZShsYW5nLnRvTG93ZXJDYXNlKCkpO1xuICAgIGRvIHtcbiAgICAgIGlmICgoZWxMYW5nID0gKGlzQ29udGV4dFhNTCA/XG4gICAgICAgIGVsLmdldEF0dHJpYnV0ZSgneG1sOmxhbmcnKSB8fCBlbC5nZXRBdHRyaWJ1dGUoJ2xhbmcnKSA6XG4gICAgICAgICAgZWwubGFuZykpKSB7XG4gICAgICAgIGVsTGFuZyA9IGVsTGFuZy50b0xvd2VyQ2FzZSgpO1xuICAgICAgICByZXR1cm4gZWxMYW5nID09PSBsYW5nIHx8IGVsTGFuZy5pbmRleE9mKGxhbmcgKyAnLScpID09PSAwO1xuICAgICAgfVxuICAgIH0gd2hpbGUgKChlbCA9IGVsLnBhcmVudE5vZGUpICYmIGVsLm5vZGVUeXBlID09PSAxKTtcbiAgICByZXR1cm4gZmFsc2U7XG4gIH0sXG4gIG5vdDogZnVuY3Rpb24gKGVsLCBuZWdhdGlvbkFyZykge1xuICAgIHJldHVybiAhbWF0Y2hFeHByW25lZ2F0aW9uQXJnLnRdKGVsLCBuZWdhdGlvbkFyZy52YWx1ZSk7XG4gIH1cbn07XG5cbnZhciBwc2V1ZG9JZGVudEV4cHIgPSB7XG4gIGVtcHR5OiBmdW5jdGlvbiAoZWwpIHtcbiAgICB2YXIgY2hpbGROb2RlcyA9IGVsLmNoaWxkTm9kZXMsXG4gICAgICBpbmRleCA9IDAsXG4gICAgICBsZW4gPSBjaGlsZE5vZGVzLmxlbmd0aCAtIDEsXG4gICAgICBjaGlsZCxcbiAgICAgIG5vZGVUeXBlO1xuICAgIGZvciAoOyBpbmRleCA8IGxlbjsgaW5kZXgrKykge1xuICAgICAgY2hpbGQgPSBjaGlsZE5vZGVzW2luZGV4XTtcbiAgICAgIG5vZGVUeXBlID0gY2hpbGQubm9kZVR5cGU7XG4gICAgICAvLyBvbmx5IGVsZW1lbnQgbm9kZXMgYW5kIGNvbnRlbnQgbm9kZXNcbiAgICAgIC8vIChzdWNoIGFzIERvbSBbRG9tLUxFVkVMLTMtQ09SRV0gdGV4dCBub2RlcyxcbiAgICAgIC8vIENEQVRBIG5vZGVzLCBhbmQgZW50aXR5IHJlZmVyZW5jZXNcbiAgICAgIGlmIChub2RlVHlwZSA9PT0gMSB8fCBub2RlVHlwZSA9PT0gMyB8fCBub2RlVHlwZSA9PT0gNCB8fCBub2RlVHlwZSA9PT0gNSkge1xuICAgICAgICByZXR1cm4gMDtcbiAgICAgIH1cbiAgICB9XG4gICAgcmV0dXJuIDE7XG4gIH0sXG4gIHJvb3Q6IGZ1bmN0aW9uIChlbCkge1xuICAgIGlmIChlbC5ub2RlVHlwZSA9PT0gOSkge1xuICAgICAgcmV0dXJuIHRydWU7XG4gICAgfVxuICAgIHJldHVybiBlbC5vd25lckRvY3VtZW50ICYmXG4gICAgICBlbCA9PT0gZWwub3duZXJEb2N1bWVudC5kb2N1bWVudEVsZW1lbnQ7XG4gIH0sXG4gICdmaXJzdC1jaGlsZCc6IGZ1bmN0aW9uIChlbCkge1xuICAgIHJldHVybiBwc2V1ZG9GbkV4cHJbJ250aC1jaGlsZCddKGVsLCAxKTtcbiAgfSxcbiAgJ2xhc3QtY2hpbGQnOiBmdW5jdGlvbiAoZWwpIHtcbiAgICByZXR1cm4gcHNldWRvRm5FeHByWydudGgtbGFzdC1jaGlsZCddKGVsLCAxKTtcbiAgfSxcbiAgJ2ZpcnN0LW9mLXR5cGUnOiBmdW5jdGlvbiAoZWwpIHtcbiAgICByZXR1cm4gcHNldWRvRm5FeHByWydudGgtb2YtdHlwZSddKGVsLCAxKTtcbiAgfSxcbiAgJ2xhc3Qtb2YtdHlwZSc6IGZ1bmN0aW9uIChlbCkge1xuICAgIHJldHVybiBwc2V1ZG9GbkV4cHJbJ250aC1sYXN0LW9mLXR5cGUnXShlbCwgMSk7XG4gIH0sXG4gICdvbmx5LWNoaWxkJzogZnVuY3Rpb24gKGVsKSB7XG4gICAgcmV0dXJuIHBzZXVkb0lkZW50RXhwclsnZmlyc3QtY2hpbGQnXShlbCkgJiZcbiAgICAgIHBzZXVkb0lkZW50RXhwclsnbGFzdC1jaGlsZCddKGVsKTtcbiAgfSxcbiAgJ29ubHktb2YtdHlwZSc6IGZ1bmN0aW9uIChlbCkge1xuICAgIHJldHVybiBwc2V1ZG9JZGVudEV4cHJbJ2ZpcnN0LW9mLXR5cGUnXShlbCkgJiZcbiAgICAgIHBzZXVkb0lkZW50RXhwclsnbGFzdC1vZi10eXBlJ10oZWwpO1xuICB9LFxuICBmb2N1czogZnVuY3Rpb24gKGVsKSB7XG4gICAgdmFyIGRvYyA9IGVsLm93bmVyRG9jdW1lbnQ7XG4gICAgcmV0dXJuIGRvYyAmJiBlbCA9PT0gZG9jLmFjdGl2ZUVsZW1lbnQgJiZcbiAgICAgICghZG9jLmhhc0ZvY3VzIHx8IGRvYy5oYXNGb2N1cygpKSAmJiAhIShlbC50eXBlIHx8IGVsLmhyZWYgfHwgZWwudGFiSW5kZXggPj0gMCk7XG4gIH0sXG4gIHRhcmdldDogZnVuY3Rpb24gKGVsKSB7XG4gICAgdmFyIGhhc2ggPSBsb2NhdGlvbi5oYXNoO1xuICAgIHJldHVybiBoYXNoICYmIGhhc2guc2xpY2UoMSkgPT09IGdldEF0dHIoZWwsICdpZCcpO1xuICB9LFxuICBlbmFibGVkOiBmdW5jdGlvbiAoZWwpIHtcbiAgICByZXR1cm4gIWVsLmRpc2FibGVkO1xuICB9LFxuICBkaXNhYmxlZDogZnVuY3Rpb24gKGVsKSB7XG4gICAgcmV0dXJuIGVsLmRpc2FibGVkO1xuICB9LFxuICBjaGVja2VkOiBmdW5jdGlvbiAoZWwpIHtcbiAgICB2YXIgbm9kZU5hbWUgPSBlbC5ub2RlTmFtZS50b0xvd2VyQ2FzZSgpO1xuICAgIHJldHVybiAobm9kZU5hbWUgPT09ICdpbnB1dCcgJiYgZWwuY2hlY2tlZCkgfHxcbiAgICAgIChub2RlTmFtZSA9PT0gJ29wdGlvbicgJiYgZWwuc2VsZWN0ZWQpO1xuICB9XG59O1xuXG52YXIgYXR0cmlidXRlRXhwciA9IHtcbiAgJ349JzogZnVuY3Rpb24gKGVsVmFsdWUsIHZhbHVlKSB7XG4gICAgaWYgKCF2YWx1ZSB8fCB2YWx1ZS5pbmRleE9mKCcgJykgPiAtMSkge1xuICAgICAgcmV0dXJuIDA7XG4gICAgfVxuICAgIHJldHVybiAoJyAnICsgZWxWYWx1ZSArICcgJykuaW5kZXhPZignICcgKyB2YWx1ZSArICcgJykgIT09IC0xO1xuICB9LFxuICAnfD0nOiBmdW5jdGlvbiAoZWxWYWx1ZSwgdmFsdWUpIHtcbiAgICByZXR1cm4gKCcgJyArIGVsVmFsdWUpLmluZGV4T2YoJyAnICsgdmFsdWUgKyAnLScpICE9PSAtMTtcbiAgfSxcbiAgJ149JzogZnVuY3Rpb24gKGVsVmFsdWUsIHZhbHVlKSB7XG4gICAgcmV0dXJuIHZhbHVlICYmIHV0aWwuc3RhcnRzV2l0aChlbFZhbHVlLCB2YWx1ZSk7XG4gIH0sXG4gICckPSc6IGZ1bmN0aW9uIChlbFZhbHVlLCB2YWx1ZSkge1xuICAgIHJldHVybiB2YWx1ZSAmJiB1dGlsLmVuZHNXaXRoKGVsVmFsdWUsIHZhbHVlKTtcbiAgfSxcbiAgJyo9JzogZnVuY3Rpb24gKGVsVmFsdWUsIHZhbHVlKSB7XG4gICAgcmV0dXJuIHZhbHVlICYmIGVsVmFsdWUuaW5kZXhPZih2YWx1ZSkgIT09IC0xO1xuICB9LFxuICAnPSc6IGZ1bmN0aW9uIChlbFZhbHVlLCB2YWx1ZSkge1xuICAgIHJldHVybiBlbFZhbHVlID09PSB2YWx1ZTtcbiAgfVxufTtcblxudmFyIHJlbGF0aXZlRXhwciA9IHtcbiAgJz4nOiB7XG4gICAgZGlyOiAncGFyZW50Tm9kZScsXG4gICAgaW1tZWRpYXRlOiAxXG4gIH0sXG4gICcgJzoge1xuICAgIGRpcjogJ3BhcmVudE5vZGUnXG4gIH0sXG4gICcrJzoge1xuICAgIGRpcjogJ3ByZXZpb3VzU2libGluZycsXG4gICAgaW1tZWRpYXRlOiAxXG4gIH0sXG4gICd+Jzoge1xuICAgIGRpcjogJ3ByZXZpb3VzU2libGluZydcbiAgfVxufTtcblxubWF0Y2hFeHByID0ge1xuICB0YWc6IGlzVGFnLFxuICBjbHM6IGhhc1NpbmdsZUNsYXNzLFxuICBpZDogZnVuY3Rpb24gKGVsLCB2YWx1ZSkge1xuICAgIHJldHVybiBnZXRBdHRyKGVsLCAnaWQnKSA9PT0gdmFsdWU7XG4gIH0sXG4gIGF0dHJpYjogZnVuY3Rpb24gKGVsLCB2YWx1ZSkge1xuICAgIHZhciBuYW1lID0gdmFsdWUuaWRlbnQ7XG4gICAgaWYgKCFpc0NvbnRleHRYTUwpIHtcbiAgICAgIG5hbWUgPSBuYW1lLnRvTG93ZXJDYXNlKCk7XG4gICAgfVxuICAgIHZhciBlbFZhbHVlID0gZ2V0QXR0cihlbCwgbmFtZSk7XG4gICAgdmFyIG1hdGNoID0gdmFsdWUubWF0Y2g7XG4gICAgaWYgKCFtYXRjaCAmJiBlbFZhbHVlICE9PSB1bmRlZmluZWQpIHtcbiAgICAgIHJldHVybiAxO1xuICAgIH0gZWxzZSBpZiAobWF0Y2gpIHtcbiAgICAgIGlmIChlbFZhbHVlID09PSB1bmRlZmluZWQpIHtcbiAgICAgICAgcmV0dXJuIDA7XG4gICAgICB9XG4gICAgICB2YXIgbWF0Y2hGbiA9IGF0dHJpYnV0ZUV4cHJbbWF0Y2hdO1xuICAgICAgaWYgKG1hdGNoRm4pIHtcbiAgICAgICAgcmV0dXJuIG1hdGNoRm4oZWxWYWx1ZSArICcnLCB2YWx1ZS52YWx1ZSArICcnKTtcbiAgICAgIH1cbiAgICB9XG4gICAgcmV0dXJuIDA7XG4gIH0sXG4gIHBzZXVkbzogZnVuY3Rpb24gKGVsLCB2YWx1ZSkge1xuICAgIHZhciBmbiwgZm5TdHIsIGlkZW50O1xuICAgIGlmICgoZm5TdHIgPSB2YWx1ZS5mbikpIHtcbiAgICAgIGlmICghKGZuID0gcHNldWRvRm5FeHByW2ZuU3RyXSkpIHtcbiAgICAgICAgdGhyb3cgbmV3IFN5bnRheEVycm9yKCdTeW50YXggZXJyb3I6IG5vdCBzdXBwb3J0IHBzZXVkbzogJyArIGZuU3RyKTtcbiAgICAgIH1cbiAgICAgIHJldHVybiBmbihlbCwgdmFsdWUucGFyYW0pO1xuICAgIH1cbiAgICBpZiAoKGlkZW50ID0gdmFsdWUuaWRlbnQpKSB7XG4gICAgICBpZiAoIXBzZXVkb0lkZW50RXhwcltpZGVudF0pIHtcbiAgICAgICAgdGhyb3cgbmV3IFN5bnRheEVycm9yKCdTeW50YXggZXJyb3I6IG5vdCBzdXBwb3J0IHBzZXVkbzogJyArIGlkZW50KTtcbiAgICAgIH1cbiAgICAgIHJldHVybiBwc2V1ZG9JZGVudEV4cHJbaWRlbnRdKGVsKTtcbiAgICB9XG4gICAgcmV0dXJuIDA7XG4gIH1cbn07XG5cbmZ1bmN0aW9uIHVuRXNjYXBlKHN0cikge1xuICByZXR1cm4gc3RyLnJlcGxhY2UodW5lc2NhcGUsIHVuZXNjYXBlRm4pO1xufVxuXG5wYXJzZXIubGV4ZXIueXkgPSB7XG4gIHRyaW06IHV0aWwudHJpbSxcbiAgdW5Fc2NhcGU6IHVuRXNjYXBlLFxuICB1bkVzY2FwZVN0cjogZnVuY3Rpb24gKHN0cikge1xuICAgIHJldHVybiB0aGlzLnVuRXNjYXBlKHN0ci5zbGljZSgxLCAtMSkpO1xuICB9XG59O1xuXG5mdW5jdGlvbiByZXNldFN0YXR1cygpIHtcbiAgc3ViTWF0Y2hlc0NhY2hlID0ge307XG59XG5cbmZ1bmN0aW9uIGRpcihlbCwgZGlyZWN0aW9uKSB7XG4gIGRvIHtcbiAgICBlbCA9IGVsW2RpcmVjdGlvbl07XG4gIH0gd2hpbGUgKGVsICYmIGVsLm5vZGVUeXBlICE9PSAxKTtcbiAgcmV0dXJuIGVsO1xufVxuXG5mdW5jdGlvbiBnZXRBYihwYXJhbSkge1xuICB2YXIgYSA9IDAsXG4gICAgbWF0Y2gsXG4gICAgYiA9IDA7XG4gIGlmICh0eXBlb2YgcGFyYW0gPT09ICdudW1iZXInKSB7XG4gICAgYiA9IHBhcmFtO1xuICB9IGVsc2UgaWYgKHBhcmFtID09PSAnb2RkJykge1xuICAgIGEgPSAyO1xuICAgIGIgPSAxO1xuICB9IGVsc2UgaWYgKHBhcmFtID09PSAnZXZlbicpIHtcbiAgICBhID0gMjtcbiAgICBiID0gMDtcbiAgfSBlbHNlIGlmICgobWF0Y2ggPSBwYXJhbS5yZXBsYWNlKC9cXHMvZywgJycpLm1hdGNoKGFOUGx1c0IpKSkge1xuICAgIGlmIChtYXRjaFsxXSkge1xuICAgICAgYSA9IHBhcnNlSW50KG1hdGNoWzJdLCAxMCk7XG4gICAgICBpZiAoaXNOYU4oYSkpIHtcbiAgICAgICAgaWYgKG1hdGNoWzJdID09PSAnLScpIHtcbiAgICAgICAgICBhID0gLTE7XG4gICAgICAgIH0gZWxzZSB7XG4gICAgICAgICAgYSA9IDE7XG4gICAgICAgIH1cbiAgICAgIH1cbiAgICB9IGVsc2Uge1xuICAgICAgYSA9IDA7XG4gICAgfVxuICAgIGIgPSBwYXJzZUludChtYXRjaFszXSwgMTApIHx8IDA7XG4gIH1cbiAgcmV0dXJuIHtcbiAgICBhOiBhLFxuICAgIGI6IGJcbiAgfTtcbn1cblxuZnVuY3Rpb24gbWF0Y2hJbmRleEJ5QWIoaW5kZXgsIGEsIGIsIGVxKSB7XG4gIGlmIChhID09PSAwKSB7XG4gICAgaWYgKGluZGV4ID09PSBiKSB7XG4gICAgICByZXR1cm4gZXE7XG4gICAgfVxuICB9IGVsc2Uge1xuICAgIGlmICgoaW5kZXggLSBiKSAvIGEgPj0gMCAmJiAoaW5kZXggLSBiKSAlIGEgPT09IDAgJiYgZXEpIHtcbiAgICAgIHJldHVybiAxO1xuICAgIH1cbiAgfVxuICByZXR1cm4gdW5kZWZpbmVkO1xufVxuXG5mdW5jdGlvbiBpc1hNTChlbGVtKSB7XG4gIHZhciBkb2N1bWVudEVsZW1lbnQgPSBlbGVtICYmIChlbGVtLm93bmVyRG9jdW1lbnQgfHwgZWxlbSkuZG9jdW1lbnRFbGVtZW50O1xuICByZXR1cm4gZG9jdW1lbnRFbGVtZW50ID8gZG9jdW1lbnRFbGVtZW50Lm5vZGVOYW1lLnRvTG93ZXJDYXNlKCkgIT09ICdodG1sJyA6IGZhbHNlO1xufVxuXG5mdW5jdGlvbiBtYXRjaGVzKHN0ciwgc2VlZHMpIHtcbiAgcmV0dXJuIHNlbGVjdChzdHIsIG51bGwsIHNlZWRzKTtcbn1cblxuZnVuY3Rpb24gc2luZ2xlTWF0Y2goZWwsIG1hdGNoKSB7XG4gIGlmICghbWF0Y2gpIHtcbiAgICByZXR1cm4gdHJ1ZTtcbiAgfVxuICBpZiAoIWVsKSB7XG4gICAgcmV0dXJuIGZhbHNlO1xuICB9XG5cbiAgaWYgKGVsLm5vZGVUeXBlID09PSA5KSB7XG4gICAgcmV0dXJuIGZhbHNlO1xuICB9XG5cbiAgdmFyIG1hdGNoZWQgPSAxLFxuICAgIG1hdGNoU3VmZml4ID0gbWF0Y2guc3VmZml4LFxuICAgIG1hdGNoU3VmZml4TGVuLFxuICAgIG1hdGNoU3VmZml4SW5kZXg7XG5cbiAgaWYgKG1hdGNoLnQgPT09ICd0YWcnKSB7XG4gICAgbWF0Y2hlZCAmPSBtYXRjaEV4cHIudGFnKGVsLCBtYXRjaC52YWx1ZSk7XG4gIH1cblxuICBpZiAobWF0Y2hlZCAmJiBtYXRjaFN1ZmZpeCkge1xuICAgIG1hdGNoU3VmZml4TGVuID0gbWF0Y2hTdWZmaXgubGVuZ3RoO1xuICAgIG1hdGNoU3VmZml4SW5kZXggPSAwO1xuICAgIGZvciAoOyBtYXRjaGVkICYmIG1hdGNoU3VmZml4SW5kZXggPCBtYXRjaFN1ZmZpeExlbjsgbWF0Y2hTdWZmaXhJbmRleCsrKSB7XG4gICAgICB2YXIgc2luZ2xlTWF0Y2hTdWZmaXggPSBtYXRjaFN1ZmZpeFttYXRjaFN1ZmZpeEluZGV4XSxcbiAgICAgICAgc2luZ2xlTWF0Y2hTdWZmaXhUeXBlID0gc2luZ2xlTWF0Y2hTdWZmaXgudDtcbiAgICAgIGlmIChtYXRjaEV4cHJbc2luZ2xlTWF0Y2hTdWZmaXhUeXBlXSkge1xuICAgICAgICBtYXRjaGVkICY9IG1hdGNoRXhwcltzaW5nbGVNYXRjaFN1ZmZpeFR5cGVdKGVsLCBzaW5nbGVNYXRjaFN1ZmZpeC52YWx1ZSk7XG4gICAgICB9XG4gICAgfVxuICB9XG5cbiAgcmV0dXJuIG1hdGNoZWQ7XG59XG5cbi8vIG1hdGNoIGJ5IGFkamFjZW50IGltbWVkaWF0ZSBzaW5nbGUgc2VsZWN0b3IgbWF0Y2hcbmZ1bmN0aW9uIG1hdGNoSW1tZWRpYXRlKGVsLCBtYXRjaCkge1xuICB2YXIgbWF0Y2hlZCA9IDEsXG4gICAgc3RhcnRFbCA9IGVsLFxuICAgIHJlbGF0aXZlT3AsXG4gICAgc3RhcnRNYXRjaCA9IG1hdGNoO1xuXG4gIGRvIHtcbiAgICBtYXRjaGVkICY9IHNpbmdsZU1hdGNoKGVsLCBtYXRjaCk7XG4gICAgaWYgKG1hdGNoZWQpIHtcbiAgICAgIC8vIGFkdmFuY2VcbiAgICAgIG1hdGNoID0gbWF0Y2ggJiYgbWF0Y2gucHJldjtcbiAgICAgIGlmICghbWF0Y2gpIHtcbiAgICAgICAgcmV0dXJuIHRydWU7XG4gICAgICB9XG4gICAgICByZWxhdGl2ZU9wID0gcmVsYXRpdmVFeHByW21hdGNoLm5leHRDb21iaW5hdG9yXTtcbiAgICAgIGVsID0gZGlyKGVsLCByZWxhdGl2ZU9wLmRpcik7XG4gICAgICBpZiAoIXJlbGF0aXZlT3AuaW1tZWRpYXRlKSB7XG4gICAgICAgIHJldHVybiB7XG4gICAgICAgICAgLy8gYWR2YW5jZSBmb3Igbm9uLWltbWVkaWF0ZVxuICAgICAgICAgIGVsOiBlbCxcbiAgICAgICAgICBtYXRjaDogbWF0Y2hcbiAgICAgICAgfTtcbiAgICAgIH1cbiAgICB9IGVsc2Uge1xuICAgICAgcmVsYXRpdmVPcCA9IHJlbGF0aXZlRXhwclttYXRjaC5uZXh0Q29tYmluYXRvcl07XG4gICAgICBpZiAocmVsYXRpdmVPcC5pbW1lZGlhdGUpIHtcbiAgICAgICAgLy8gcmV0cmVhdCBidXQgYWR2YW5jZSBzdGFydEVsXG4gICAgICAgIHJldHVybiB7XG4gICAgICAgICAgZWw6IGRpcihzdGFydEVsLCByZWxhdGl2ZUV4cHJbc3RhcnRNYXRjaC5uZXh0Q29tYmluYXRvcl0uZGlyKSxcbiAgICAgICAgICBtYXRjaDogc3RhcnRNYXRjaFxuICAgICAgICB9O1xuICAgICAgfSBlbHNlIHtcbiAgICAgICAgLy8gYWR2YW5jZSAoYmVmb3JlIGltbWVkaWF0ZSBtYXRjaCArIGp1bXAgdW5tYXRjaGVkKVxuICAgICAgICByZXR1cm4ge1xuICAgICAgICAgIGVsOiBlbCAmJiBkaXIoZWwsIHJlbGF0aXZlT3AuZGlyKSxcbiAgICAgICAgICBtYXRjaDogbWF0Y2hcbiAgICAgICAgfTtcbiAgICAgIH1cbiAgICB9XG4gIH0gd2hpbGUgKGVsKTtcblxuICAvLyBvbmx5IG9jY3VyIHdoZW4gbWF0Y2ggaW1tZWRpYXRlXG4gIHJldHVybiB7XG4gICAgZWw6IGRpcihzdGFydEVsLCByZWxhdGl2ZUV4cHJbc3RhcnRNYXRjaC5uZXh0Q29tYmluYXRvcl0uZGlyKSxcbiAgICBtYXRjaDogc3RhcnRNYXRjaFxuICB9O1xufVxuXG4vLyBmaW5kIGZpeGVkIHBhcnQsIGZpeGVkIHdpdGggc2VlZHNcbmZ1bmN0aW9uIGZpbmRGaXhlZE1hdGNoRnJvbUhlYWQoZWwsIGhlYWQpIHtcbiAgdmFyIHJlbGF0aXZlT3AsXG4gICAgY3VyID0gaGVhZDtcblxuICBkbyB7XG4gICAgaWYgKCFzaW5nbGVNYXRjaChlbCwgY3VyKSkge1xuICAgICAgcmV0dXJuIG51bGw7XG4gICAgfVxuICAgIGN1ciA9IGN1ci5wcmV2O1xuICAgIGlmICghY3VyKSB7XG4gICAgICByZXR1cm4gdHJ1ZTtcbiAgICB9XG4gICAgcmVsYXRpdmVPcCA9IHJlbGF0aXZlRXhwcltjdXIubmV4dENvbWJpbmF0b3JdO1xuICAgIGVsID0gZGlyKGVsLCByZWxhdGl2ZU9wLmRpcik7XG4gIH0gd2hpbGUgKGVsICYmIHJlbGF0aXZlT3AuaW1tZWRpYXRlKTtcbiAgaWYgKCFlbCkge1xuICAgIHJldHVybiBudWxsO1xuICB9XG4gIHJldHVybiB7XG4gICAgZWw6IGVsLFxuICAgIG1hdGNoOiBjdXJcbiAgfTtcbn1cblxuZnVuY3Rpb24gZ2VuSWQoZWwpIHtcbiAgdmFyIHNlbGVjdG9ySWQ7XG5cbiAgaWYgKGlzQ29udGV4dFhNTCkge1xuICAgIGlmICghKHNlbGVjdG9ySWQgPSBlbC5nZXRBdHRyaWJ1dGUoRVhQQU5ET19TRUxFQ1RPUl9LRVkpKSkge1xuICAgICAgZWwuc2V0QXR0cmlidXRlKEVYUEFORE9fU0VMRUNUT1JfS0VZLCBzZWxlY3RvcklkID0gKCtuZXcgRGF0ZSgpICsgJ18nICsgKCsrdXVpZCkpKTtcbiAgICB9XG4gIH0gZWxzZSB7XG4gICAgaWYgKCEoc2VsZWN0b3JJZCA9IGVsW0VYUEFORE9fU0VMRUNUT1JfS0VZXSkpIHtcbiAgICAgIHNlbGVjdG9ySWQgPSBlbFtFWFBBTkRPX1NFTEVDVE9SX0tFWV0gPSAoK25ldyBEYXRlKCkpICsgJ18nICsgKCsrdXVpZCk7XG4gICAgfVxuICB9XG5cbiAgcmV0dXJuIHNlbGVjdG9ySWQ7XG59XG5cbmZ1bmN0aW9uIG1hdGNoU3ViKGVsLCBtYXRjaCkge1xuICB2YXIgc2VsZWN0b3JJZCA9IGdlbklkKGVsKSxcbiAgICBtYXRjaEtleTtcbiAgbWF0Y2hLZXkgPSBzZWxlY3RvcklkICsgJ18nICsgKG1hdGNoLm9yZGVyIHx8IDApO1xuICBpZiAobWF0Y2hLZXkgaW4gc3ViTWF0Y2hlc0NhY2hlKSB7XG4gICAgcmV0dXJuIHN1Yk1hdGNoZXNDYWNoZVttYXRjaEtleV07XG4gIH1cbiAgc3ViTWF0Y2hlc0NhY2hlW21hdGNoS2V5XSA9IG1hdGNoU3ViSW50ZXJuYWwoZWwsIG1hdGNoKTtcbiAgcmV0dXJuIHN1Yk1hdGNoZXNDYWNoZVttYXRjaEtleV07XG59XG5cbi8vIHJlY3Vyc2l2ZSBtYXRjaCBieSBzdWIgc2VsZWN0b3Igc3RyaW5nIGZyb20gcmlnaHQgdG8gbGVmdFxuLy8gZ3JvdXBlZCBieSBpbW1lZGlhdGUgc2VsZWN0b3JzXG5mdW5jdGlvbiBtYXRjaFN1YkludGVybmFsKGVsLCBtYXRjaCkge1xuICB2YXIgbWF0Y2hJbW1lZGlhdGVSZXQgPSBtYXRjaEltbWVkaWF0ZShlbCwgbWF0Y2gpO1xuICBpZiAobWF0Y2hJbW1lZGlhdGVSZXQgPT09IHRydWUpIHtcbiAgICByZXR1cm4gdHJ1ZTtcbiAgfSBlbHNlIHtcbiAgICBlbCA9IG1hdGNoSW1tZWRpYXRlUmV0LmVsO1xuICAgIG1hdGNoID0gbWF0Y2hJbW1lZGlhdGVSZXQubWF0Y2g7XG4gICAgd2hpbGUgKGVsKSB7XG4gICAgICBpZiAobWF0Y2hTdWIoZWwsIG1hdGNoKSkge1xuICAgICAgICByZXR1cm4gdHJ1ZTtcbiAgICAgIH1cbiAgICAgIGVsID0gZGlyKGVsLCByZWxhdGl2ZUV4cHJbbWF0Y2gubmV4dENvbWJpbmF0b3JdLmRpcik7XG4gICAgfVxuICAgIHJldHVybiBmYWxzZTtcbiAgfVxufVxuXG5mdW5jdGlvbiBzZWxlY3Qoc3RyLCBjb250ZXh0LCBzZWVkcykge1xuICBpZiAoIWNhY2hlc1tzdHJdKSB7XG4gICAgY2FjaGVzW3N0cl0gPSBwYXJzZXIucGFyc2Uoc3RyKTtcbiAgfVxuXG4gIHZhciBzZWxlY3RvciA9IGNhY2hlc1tzdHJdLFxuICAgIGdyb3VwSW5kZXggPSAwLFxuICAgIGdyb3VwTGVuID0gc2VsZWN0b3IubGVuZ3RoLFxuICAgIGNvbnRleHREb2N1bWVudCxcbiAgICBncm91cCxcbiAgICByZXQgPSBbXTtcblxuICBpZiAoc2VlZHMpIHtcbiAgICBjb250ZXh0ID0gY29udGV4dCB8fCBzZWVkc1swXS5vd25lckRvY3VtZW50O1xuICB9XG5cbiAgY29udGV4dERvY3VtZW50ID0gY29udGV4dCAmJiBjb250ZXh0Lm93bmVyRG9jdW1lbnQgfHwgdHlwZW9mIGRvY3VtZW50ICE9PSAndW5kZWZpbmVkJyAmJiBkb2N1bWVudDtcblxuICBpZiAoY29udGV4dCAmJiBjb250ZXh0Lm5vZGVUeXBlID09PSA5ICYmICFjb250ZXh0RG9jdW1lbnQpIHtcbiAgICBjb250ZXh0RG9jdW1lbnQgPSBjb250ZXh0O1xuICB9XG5cbiAgY29udGV4dCA9IGNvbnRleHQgfHwgY29udGV4dERvY3VtZW50O1xuXG4gIGlzQ29udGV4dFhNTCA9IGlzWE1MKGNvbnRleHQpO1xuXG4gIGZvciAoOyBncm91cEluZGV4IDwgZ3JvdXBMZW47IGdyb3VwSW5kZXgrKykge1xuICAgIHJlc2V0U3RhdHVzKCk7XG5cbiAgICBncm91cCA9IHNlbGVjdG9yW2dyb3VwSW5kZXhdO1xuXG4gICAgdmFyIHN1ZmZpeCA9IGdyb3VwLnN1ZmZpeCxcbiAgICAgIHN1ZmZpeEluZGV4LFxuICAgICAgc3VmZml4TGVuLFxuICAgICAgc2VlZHNJbmRleCxcbiAgICAgIG15U2VlZHMgPSBzZWVkcyxcbiAgICAgIHNlZWRzTGVuLFxuICAgICAgaWQgPSBudWxsO1xuXG4gICAgaWYgKCFteVNlZWRzKSB7XG4gICAgICBpZiAoc3VmZml4ICYmICFpc0NvbnRleHRYTUwpIHtcbiAgICAgICAgc3VmZml4SW5kZXggPSAwO1xuICAgICAgICBzdWZmaXhMZW4gPSBzdWZmaXgubGVuZ3RoO1xuICAgICAgICBmb3IgKDsgc3VmZml4SW5kZXggPCBzdWZmaXhMZW47IHN1ZmZpeEluZGV4KyspIHtcbiAgICAgICAgICB2YXIgc2luZ2xlU3VmZml4ID0gc3VmZml4W3N1ZmZpeEluZGV4XTtcbiAgICAgICAgICBpZiAoc2luZ2xlU3VmZml4LnQgPT09ICdpZCcpIHtcbiAgICAgICAgICAgIGlkID0gc2luZ2xlU3VmZml4LnZhbHVlO1xuICAgICAgICAgICAgYnJlYWs7XG4gICAgICAgICAgfVxuICAgICAgICB9XG4gICAgICB9XG5cbiAgICAgIGlmIChpZCkge1xuICAgICAgICAvLyBodHRwOi8veWltaW5naGUuZ2l0aHViLmlvL2xhYi9wbGF5Z3JvdW5kL2ZyYWdtZW50LXNlbGVjdG9yL3NlbGVjdG9yLmh0bWxcbiAgICAgICAgdmFyIGRvZXNOb3RIYXNCeUlkID0gIWNvbnRleHQuZ2V0RWxlbWVudEJ5SWQsXG4gICAgICAgICAgY29udGV4dEluRG9tID0gdXRpbC5jb250YWlucyhjb250ZXh0RG9jdW1lbnQsIGNvbnRleHQpLFxuICAgICAgICAgIHRtcCA9IGRvZXNOb3RIYXNCeUlkID8gKFxuICAgICAgICAgICAgY29udGV4dEluRG9tID9cbiAgICAgICAgICAgICAgY29udGV4dERvY3VtZW50LmdldEVsZW1lbnRCeUlkKGlkKSA6XG4gICAgICAgICAgICAgIG51bGxcbiAgICAgICAgICApIDogY29udGV4dC5nZXRFbGVtZW50QnlJZChpZCk7XG4gICAgICAgIC8vIGlkIGJ1Z1xuICAgICAgICAvLyBodHRwczovL2dpdGh1Yi5jb20va2lzc3l0ZWFtL2tpc3N5L2lzc3Vlcy82N1xuICAgICAgICBpZiAoIXRtcCAmJiBkb2VzTm90SGFzQnlJZCB8fCB0bXAgJiYgZ2V0QXR0cih0bXAsICdpZCcpICE9PSBpZCkge1xuICAgICAgICAgIHZhciB0bXBzID0gdXRpbC5nZXRFbGVtZW50c0J5VGFnTmFtZSgnKicsIGNvbnRleHQpLFxuICAgICAgICAgICAgdG1wTGVuID0gdG1wcy5sZW5ndGgsXG4gICAgICAgICAgICB0bXBJID0gMDtcbiAgICAgICAgICBmb3IgKDsgdG1wSSA8IHRtcExlbjsgdG1wSSsrKSB7XG4gICAgICAgICAgICB0bXAgPSB0bXBzW3RtcEldO1xuICAgICAgICAgICAgaWYgKGdldEF0dHIodG1wLCAnaWQnKSA9PT0gaWQpIHtcbiAgICAgICAgICAgICAgbXlTZWVkcyA9IFt0bXBdO1xuICAgICAgICAgICAgICBicmVhaztcbiAgICAgICAgICAgIH1cbiAgICAgICAgICB9XG4gICAgICAgICAgaWYgKHRtcEkgPT09IHRtcExlbikge1xuICAgICAgICAgICAgbXlTZWVkcyA9IFtdO1xuICAgICAgICAgIH1cbiAgICAgICAgfSBlbHNlIHtcbiAgICAgICAgICBpZiAoY29udGV4dEluRG9tICYmIHRtcCAmJiBjb250ZXh0ICE9PSBjb250ZXh0RG9jdW1lbnQpIHtcbiAgICAgICAgICAgIHRtcCA9IHV0aWwuY29udGFpbnMoY29udGV4dCwgdG1wKSA/IHRtcCA6IG51bGw7XG4gICAgICAgICAgfVxuICAgICAgICAgIG15U2VlZHMgPSB0bXAgPyBbdG1wXSA6IFtdO1xuICAgICAgICB9XG4gICAgICB9IGVsc2Uge1xuICAgICAgICBteVNlZWRzID0gdXRpbC5nZXRFbGVtZW50c0J5VGFnTmFtZShncm91cC52YWx1ZSB8fCAnKicsIGNvbnRleHQpO1xuICAgICAgfVxuICAgIH1cblxuICAgIHNlZWRzSW5kZXggPSAwO1xuICAgIHNlZWRzTGVuID0gbXlTZWVkcy5sZW5ndGg7XG5cbiAgICBpZiAoIXNlZWRzTGVuKSB7XG4gICAgICBjb250aW51ZTtcbiAgICB9XG5cbiAgICBmb3IgKDsgc2VlZHNJbmRleCA8IHNlZWRzTGVuOyBzZWVkc0luZGV4KyspIHtcbiAgICAgIHZhciBzZWVkID0gbXlTZWVkc1tzZWVkc0luZGV4XTtcbiAgICAgIHZhciBtYXRjaEhlYWQgPSBmaW5kRml4ZWRNYXRjaEZyb21IZWFkKHNlZWQsIGdyb3VwKTtcbiAgICAgIGlmIChtYXRjaEhlYWQgPT09IHRydWUpIHtcbiAgICAgICAgcmV0LnB1c2goc2VlZCk7XG4gICAgICB9IGVsc2UgaWYgKG1hdGNoSGVhZCkge1xuICAgICAgICBpZiAobWF0Y2hTdWIobWF0Y2hIZWFkLmVsLCBtYXRjaEhlYWQubWF0Y2gpKSB7XG4gICAgICAgICAgcmV0LnB1c2goc2VlZCk7XG4gICAgICAgIH1cbiAgICAgIH1cbiAgICB9XG4gIH1cblxuICBpZiAoZ3JvdXBMZW4gPiAxKSB7XG4gICAgcmV0ID0gdXRpbC51bmlxdWUocmV0KTtcbiAgfVxuXG4gIHJldHVybiByZXQ7XG59XG5cbm1vZHVsZS5leHBvcnRzID0gc2VsZWN0O1xuXG5zZWxlY3QucGFyc2UgPSBmdW5jdGlvbiAoc3RyKSB7XG4gIHJldHVybiBwYXJzZXIucGFyc2Uoc3RyKTtcbn07XG5cbnNlbGVjdC5tYXRjaGVzID0gbWF0Y2hlcztcblxuc2VsZWN0LnV0aWwgPSB1dGlsO1xuXG5zZWxlY3QudmVyc2lvbiA9ICdAVkVSU0lPTkAnO1xuLyoqXG4gKiBAaWdub3JlXG4gKiBub3RlIDIwMTMtMDMtMjhcbiAqICAtIHVzZSByZWN1cnNpdmUgY2FsbCB0byByZXBsYWNlIGJhY2t0cmFja2luZyBhbGdvcml0aG1cbiAqXG4gKiByZWZlclxuICogIC0gaHR0cDovL3d3dy53My5vcmcvVFIvc2VsZWN0b3JzL1xuICogIC0gaHR0cDovL3d3dy5pbXByZXNzaXZld2Vicy5jb20vYnJvd3Nlci1zdXBwb3J0LWNzczMtc2VsZWN0b3JzL1xuICogIC0gaHR0cDovL2Jsb2dzLm1zZG4uY29tL2llL2FyY2hpdmUvMjAxMC8wNS8xMy90aGUtY3NzLWNvcm5lci1jc3MzLXNlbGVjdG9ycy5hc3B4XG4gKiAgLSBodHRwOi8vc2l6emxlanMuY29tL1xuICovIiwiLyoqXG4gKiBhdHRyIGZpeCBmb3Igb2xkIGllXG4gKiBAYXV0aG9yIHlpbWluZ2hlQGdtYWlsLmNvbVxuICovXG52YXIgUl9CT09MRUFOID0gL14oPzphdXRvZm9jdXN8YXV0b3BsYXl8YXN5bmN8Y2hlY2tlZHxjb250cm9sc3xkZWZlcnxkaXNhYmxlZHxoaWRkZW58bG9vcHxtdWx0aXBsZXxvcGVufHJlYWRvbmx5fHJlcXVpcmVkfHNjb3BlZHxzZWxlY3RlZCkkL2ksXG4gIFJfRk9DVVNBQkxFID0gL14oPzpidXR0b258aW5wdXR8b2JqZWN0fHNlbGVjdHx0ZXh0YXJlYSkkL2ksXG4gIFJfQ0xJQ0tBQkxFID0gL15hKD86cmVhKT8kL2ksXG4gIFJfSU5WQUxJRF9DSEFSID0gLzp8Xm9uLztcblxudmFyIGF0dHJGaXggPSB7fSxcbiAgcHJvcEZpeCxcbiAgYXR0ckhvb2tzID0ge1xuICAgIC8vIGh0dHA6Ly9mbHVpZHByb2plY3Qub3JnL2Jsb2cvMjAwOC8wMS8wOS9nZXR0aW5nLXNldHRpbmctYW5kLXJlbW92aW5nLXRhYmluZGV4LXZhbHVlcy13aXRoLWphdmFzY3JpcHQvXG4gICAgdGFiaW5kZXg6IHtcbiAgICAgIGdldDogZnVuY3Rpb24gKGVsKSB7XG4gICAgICAgIC8vIGVsZW0udGFiSW5kZXggZG9lc24ndCBhbHdheXMgcmV0dXJuIHRoZSBjb3JyZWN0IHZhbHVlIHdoZW4gaXQgaGFzbid0IGJlZW4gZXhwbGljaXRseSBzZXRcbiAgICAgICAgdmFyIGF0dHJpYnV0ZU5vZGUgPSBlbC5nZXRBdHRyaWJ1dGVOb2RlKCd0YWJpbmRleCcpO1xuICAgICAgICByZXR1cm4gYXR0cmlidXRlTm9kZSAmJiBhdHRyaWJ1dGVOb2RlLnNwZWNpZmllZCA/XG4gICAgICAgICAgcGFyc2VJbnQoYXR0cmlidXRlTm9kZS52YWx1ZSwgMTApIDpcbiAgICAgICAgICBSX0ZPQ1VTQUJMRS50ZXN0KGVsLm5vZGVOYW1lKSB8fFxuICAgICAgICAgIFJfQ0xJQ0tBQkxFLnRlc3QoZWwubm9kZU5hbWUpICYmIGVsLmhyZWYgP1xuICAgICAgICAgICAgMCA6XG4gICAgICAgICAgICB1bmRlZmluZWQ7XG4gICAgICB9XG4gICAgfVxuICB9LFxuICBib29sSG9vayA9IHtcbiAgICBnZXQ6IGZ1bmN0aW9uIChlbGVtLCBuYW1lKSB7XG4gICAgICAvLyDovazlj5HliLAgcHJvcCDmlrnms5VcbiAgICAgIHJldHVybiBlbGVtW3Byb3BGaXhbbmFtZV0gfHwgbmFtZV0gP1xuICAgICAgICAvLyDmoLnmja4gdzNjIGF0dHJpYnV0ZSAsIHRydWUg5pe26L+U5Zue5bGe5oCn5ZCN5a2X56ym5LiyXG4gICAgICAgIG5hbWUudG9Mb3dlckNhc2UoKSA6XG4gICAgICAgIHVuZGVmaW5lZDtcbiAgICB9XG4gIH0sXG4gIGF0dHJOb2RlSG9vayA9IHt9O1xuXG5hdHRySG9va3Muc3R5bGUgPSB7XG4gIGdldDogZnVuY3Rpb24gKGVsKSB7XG4gICAgcmV0dXJuIGVsLnN0eWxlLmNzc1RleHQ7XG4gIH1cbn07XG5cbnByb3BGaXggPSB7XG4gIGhpZGVmb2N1czogJ2hpZGVGb2N1cycsXG4gIHRhYmluZGV4OiAndGFiSW5kZXgnLFxuICByZWFkb25seTogJ3JlYWRPbmx5JyxcbiAgJ2Zvcic6ICdodG1sRm9yJyxcbiAgJ2NsYXNzJzogJ2NsYXNzTmFtZScsXG4gIG1heGxlbmd0aDogJ21heExlbmd0aCcsXG4gIGNlbGxzcGFjaW5nOiAnY2VsbFNwYWNpbmcnLFxuICBjZWxscGFkZGluZzogJ2NlbGxQYWRkaW5nJyxcbiAgcm93c3BhbjogJ3Jvd1NwYW4nLFxuICBjb2xzcGFuOiAnY29sU3BhbicsXG4gIHVzZW1hcDogJ3VzZU1hcCcsXG4gIGZyYW1lYm9yZGVyOiAnZnJhbWVCb3JkZXInLFxuICBjb250ZW50ZWRpdGFibGU6ICdjb250ZW50RWRpdGFibGUnXG59O1xuXG52YXIgdWEgPSB0eXBlb2YgbmF2aWdhdG9yICE9PSAndW5kZWZpbmVkJyA/IG5hdmlnYXRvci51c2VyQWdlbnQgOiAnJztcbnZhciBkb2MgPSB0eXBlb2YgZG9jdW1lbnQgIT09ICd1bmRlZmluZWQnID8gZG9jdW1lbnQgOiB7fTtcblxuZnVuY3Rpb24gbnVtYmVyaWZ5KHMpIHtcbiAgdmFyIGMgPSAwO1xuICAvLyBjb252ZXJ0ICcxLjIuMy40JyB0byAxLjIzNFxuICByZXR1cm4gcGFyc2VGbG9hdChzLnJlcGxhY2UoL1xcLi9nLCBmdW5jdGlvbiAoKSB7XG4gICAgcmV0dXJuIChjKysgPT09IDApID8gJy4nIDogJyc7XG4gIH0pKTtcbn1cblxuZnVuY3Rpb24gaWVWZXJzaW9uKCkge1xuICB2YXIgbSwgdjtcbiAgaWYgKChtID0gdWEubWF0Y2goL01TSUUgKFteO10qKXxUcmlkZW50Lio7IHJ2KD86XFxzfDopPyhbMC05Ll0rKS8pKSAmJlxuICAgICh2ID0gKG1bMV0gfHwgbVsyXSkpKSB7XG4gICAgcmV0dXJuIGRvYy5kb2N1bWVudE1vZGUgfHwgbnVtYmVyaWZ5KHYpO1xuICB9XG59XG5cbmZ1bmN0aW9uIG1peChzLCB0KSB7XG4gIGZvciAodmFyIHAgaW4gdCkge1xuICAgIHNbcF0gPSB0W3BdO1xuICB9XG59XG5cbmZ1bmN0aW9uIGVhY2goYXJyLCBmbikge1xuICB2YXIgaSA9IDAsIGwgPSBhcnIubGVuZ3RoO1xuICBmb3IgKDsgaSA8IGw7IGkrKykge1xuICAgIGlmIChmbihhcnJbaV0sIGkpID09PSBmYWxzZSkge1xuICAgICAgYnJlYWs7XG4gICAgfVxuICB9XG59XG52YXIgaWUgPSBpZVZlcnNpb24oKTtcblxuaWYgKGllICYmIGllIDwgOCkge1xuICBhdHRySG9va3Muc3R5bGUuc2V0ID0gZnVuY3Rpb24gKGVsLCB2YWwpIHtcbiAgICBlbC5zdHlsZS5jc3NUZXh0ID0gdmFsO1xuICB9O1xuXG4gIC8vIGdldCBhdHRyaWJ1dGUgdmFsdWUgZnJvbSBhdHRyaWJ1dGUgbm9kZSBmb3IgaWVcbiAgbWl4KGF0dHJOb2RlSG9vaywge1xuICAgIGdldDogZnVuY3Rpb24gKGVsZW0sIG5hbWUpIHtcbiAgICAgIHZhciByZXQgPSBlbGVtLmdldEF0dHJpYnV0ZU5vZGUobmFtZSk7XG4gICAgICAvLyBSZXR1cm4gdW5kZWZpbmVkIGlmIGF0dHJpYnV0ZSBub2RlIHNwZWNpZmllZCBieSB1c2VyXG4gICAgICByZXR1cm4gcmV0ICYmIChcbiAgICAgICAgLy8gZml4ICMxMDBcbiAgICAgIHJldC5zcGVjaWZpZWQgfHwgcmV0Lm5vZGVWYWx1ZSkgP1xuICAgICAgICByZXQubm9kZVZhbHVlIDpcbiAgICAgICAgdW5kZWZpbmVkO1xuICAgIH1cbiAgfSk7XG5cbiAgLy8gaWU2LDcg5LiN5Yy65YiGIGF0dHJpYnV0ZSDkuI4gcHJvcGVydHlcbiAgbWl4KGF0dHJGaXgsIHByb3BGaXgpO1xuXG4gIC8vIGh0dHA6Ly9mbHVpZHByb2plY3Qub3JnL2Jsb2cvMjAwOC8wMS8wOS9nZXR0aW5nLXNldHRpbmctYW5kLXJlbW92aW5nLXRhYmluZGV4LXZhbHVlcy13aXRoLWphdmFzY3JpcHQvXG4gIGF0dHJIb29rcy50YWJJbmRleCA9IGF0dHJIb29rcy50YWJpbmRleDtcblxuICAvLyDkuI3lhYnmmK8gaHJlZiwgc3JjLCDov5jmnIkgcm93c3BhbiDnrYnpnZ4gbWFwcGluZyDlsZ7mgKfvvIzkuZ/pnIDopoHnlKjnrKwgMiDkuKrlj4LmlbDmnaXojrflj5bljp/lp4vlgLxcbiAgLy8g5rOo5oSPIGNvbFNwYW4gcm93U3BhbiDlt7Lnu4/nlLEgcHJvcEZpeCDovazkuLrlpKflhplcbiAgZWFjaChbJ2hyZWYnLCAnc3JjJywgJ3dpZHRoJywgJ2hlaWdodCcsICdjb2xTcGFuJywgJ3Jvd1NwYW4nXSwgZnVuY3Rpb24gKG5hbWUpIHtcbiAgICBhdHRySG9va3NbbmFtZV0gPSB7XG4gICAgICBnZXQ6IGZ1bmN0aW9uIChlbGVtKSB7XG4gICAgICAgIHZhciByZXQgPSBlbGVtLmdldEF0dHJpYnV0ZShuYW1lLCAyKTtcbiAgICAgICAgcmV0dXJuIHJldCA9PT0gbnVsbCA/IHVuZGVmaW5lZCA6IHJldDtcbiAgICAgIH1cbiAgICB9O1xuICB9KTtcblxuICBhdHRySG9va3MucGxhY2Vob2xkZXIgPSB7XG4gICAgZ2V0OiBmdW5jdGlvbiAoZWxlbSwgbmFtZSkge1xuICAgICAgcmV0dXJuIGVsZW1bbmFtZV0gfHwgYXR0ck5vZGVIb29rLmdldChlbGVtLCBuYW1lKTtcbiAgICB9XG4gIH07XG59XG5cbmlmIChpZSkge1xuICB2YXIgaHJlZkZpeCA9IGF0dHJIb29rcy5ocmVmID0gYXR0ckhvb2tzLmhyZWYgfHwge307XG4gIGhyZWZGaXguc2V0ID0gZnVuY3Rpb24gKGVsLCB2YWwsIG5hbWUpIHtcbiAgICB2YXIgY2hpbGROb2RlcyA9IGVsLmNoaWxkTm9kZXMsXG4gICAgICBiLFxuICAgICAgbGVuID0gY2hpbGROb2Rlcy5sZW5ndGgsXG4gICAgICBhbGxUZXh0ID0gbGVuID4gMDtcbiAgICBmb3IgKGxlbiA9IGxlbiAtIDE7IGxlbiA+PSAwOyBsZW4tLSkge1xuICAgICAgaWYgKGNoaWxkTm9kZXNbbGVuXS5ub2RlVHlwZSAhPT0gMykge1xuICAgICAgICBhbGxUZXh0ID0gMDtcbiAgICAgIH1cbiAgICB9XG4gICAgaWYgKGFsbFRleHQpIHtcbiAgICAgIGIgPSBlbC5vd25lckRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoJ2InKTtcbiAgICAgIGIuc3R5bGUuZGlzcGxheSA9ICdub25lJztcbiAgICAgIGVsLmFwcGVuZENoaWxkKGIpO1xuICAgIH1cbiAgICBlbC5zZXRBdHRyaWJ1dGUobmFtZSwgJycgKyB2YWwpO1xuICAgIGlmIChiKSB7XG4gICAgICBlbC5yZW1vdmVDaGlsZChiKTtcbiAgICB9XG4gIH07XG59XG5cbnZhciBSRV9UUklNID0gL15bXFxzXFx4YTBdK3xbXFxzXFx4YTBdKyQvZyxcbiAgdHJpbSA9IFN0cmluZy5wcm90b3R5cGUudHJpbTtcbnZhciBTUEFDRSA9ICcgJztcblxudmFyIGdldEVsZW1lbnRzQnlUYWdOYW1lO1xuZ2V0RWxlbWVudHNCeVRhZ05hbWUgPSBmdW5jdGlvbiAobmFtZSwgY29udGV4dCkge1xuICByZXR1cm4gY29udGV4dC5nZXRFbGVtZW50c0J5VGFnTmFtZShuYW1lKTtcbn07XG5cbmlmIChkb2MuY3JlYXRlRWxlbWVudCkge1xuICB2YXIgZGl2ID0gZG9jLmNyZWF0ZUVsZW1lbnQoJ2RpdicpO1xuICBkaXYuYXBwZW5kQ2hpbGQoZG9jdW1lbnQuY3JlYXRlQ29tbWVudCgnJykpO1xuICBpZiAoZGl2LmdldEVsZW1lbnRzQnlUYWdOYW1lKCcqJykubGVuZ3RoKSB7XG4gICAgZ2V0RWxlbWVudHNCeVRhZ05hbWUgPSBmdW5jdGlvbiAobmFtZSwgY29udGV4dCkge1xuICAgICAgdmFyIG5vZGVzID0gY29udGV4dC5nZXRFbGVtZW50c0J5VGFnTmFtZShuYW1lKSxcbiAgICAgICAgbmVlZHNGaWx0ZXIgPSBuYW1lID09PSAnKic7XG4gICAgICAvLyA8aW5wdXQgaWQ9J2xlbmd0aCc+XG4gICAgICBpZiAobmVlZHNGaWx0ZXIgfHwgdHlwZW9mIG5vZGVzLmxlbmd0aCAhPT0gJ251bWJlcicpIHtcbiAgICAgICAgdmFyIHJldCA9IFtdLFxuICAgICAgICAgIGkgPSAwLFxuICAgICAgICAgIGVsO1xuICAgICAgICB3aGlsZSAoKGVsID0gbm9kZXNbaSsrXSkpIHtcbiAgICAgICAgICBpZiAoIW5lZWRzRmlsdGVyIHx8IGVsLm5vZGVUeXBlID09PSAxKSB7XG4gICAgICAgICAgICByZXQucHVzaChlbCk7XG4gICAgICAgICAgfVxuICAgICAgICB9XG4gICAgICAgIHJldHVybiByZXQ7XG4gICAgICB9IGVsc2Uge1xuICAgICAgICByZXR1cm4gbm9kZXM7XG4gICAgICB9XG4gICAgfTtcbiAgfVxufVxuXG52YXIgY29tcGFyZU5vZGVPcmRlciA9ICgnc291cmNlSW5kZXgnIGluIChkb2MgJiYgZG9jLmRvY3VtZW50RWxlbWVudCB8fCB7fSkpID8gZnVuY3Rpb24gKGEsIGIpIHtcbiAgcmV0dXJuIGEuc291cmNlSW5kZXggLSBiLnNvdXJjZUluZGV4O1xufSA6IGZ1bmN0aW9uIChhLCBiKSB7XG4gIGlmICghYS5jb21wYXJlRG9jdW1lbnRQb3NpdGlvbiB8fCAhYi5jb21wYXJlRG9jdW1lbnRQb3NpdGlvbikge1xuICAgIHJldHVybiBhLmNvbXBhcmVEb2N1bWVudFBvc2l0aW9uID8gLTEgOiAxO1xuICB9XG4gIHZhciBiaXQgPSBhLmNvbXBhcmVEb2N1bWVudFBvc2l0aW9uKGIpICYgNDtcbiAgcmV0dXJuIGJpdCA/IC0xIDogMTtcbn07XG5cbnZhciB1dGlsID0gbW9kdWxlLmV4cG9ydHMgPSB7XG4gIGllOiBpZSxcblxuICB1bmlxdWU6IChmdW5jdGlvbiAoKSB7XG4gICAgdmFyIGhhc0R1cGxpY2F0ZSxcbiAgICAgIGJhc2VIYXNEdXBsaWNhdGUgPSB0cnVlO1xuXG4gICAgLy8gSGVyZSB3ZSBjaGVjayBpZiB0aGUgSmF2YVNjcmlwdCBlbmdpbmUgaXMgdXNpbmcgc29tZSBzb3J0IG9mXG4gICAgLy8gb3B0aW1pemF0aW9uIHdoZXJlIGl0IGRvZXMgbm90IGFsd2F5cyBjYWxsIG91ciBjb21wYXJpc29uXG4gICAgLy8gZnVuY3Rpb24uIElmIHRoYXQgaXMgdGhlIGNhc2UsIGRpc2NhcmQgdGhlIGhhc0R1cGxpY2F0ZSB2YWx1ZS5cbiAgICAvLyBUaHVzIGZhciB0aGF0IGluY2x1ZGVzIEdvb2dsZSBDaHJvbWUuXG4gICAgWzAsIDBdLnNvcnQoZnVuY3Rpb24gKCkge1xuICAgICAgYmFzZUhhc0R1cGxpY2F0ZSA9IGZhbHNlO1xuICAgICAgcmV0dXJuIDA7XG4gICAgfSk7XG5cbiAgICBmdW5jdGlvbiBzb3J0T3JkZXIoYSwgYikge1xuICAgICAgaWYgKGEgPT09IGIpIHtcbiAgICAgICAgaGFzRHVwbGljYXRlID0gdHJ1ZTtcbiAgICAgICAgcmV0dXJuIDA7XG4gICAgICB9XG5cbiAgICAgIHJldHVybiBjb21wYXJlTm9kZU9yZGVyKGEsIGIpO1xuICAgIH1cblxuICAgIC8vIOaOkuW6j+WOu+mHjVxuICAgIHJldHVybiBmdW5jdGlvbiAoZWxlbWVudHMpIHtcbiAgICAgIGhhc0R1cGxpY2F0ZSA9IGJhc2VIYXNEdXBsaWNhdGU7XG4gICAgICBlbGVtZW50cy5zb3J0KHNvcnRPcmRlcik7XG5cbiAgICAgIGlmIChoYXNEdXBsaWNhdGUpIHtcbiAgICAgICAgdmFyIGkgPSAxLCBsZW4gPSBlbGVtZW50cy5sZW5ndGg7XG4gICAgICAgIHdoaWxlIChpIDwgbGVuKSB7XG4gICAgICAgICAgaWYgKGVsZW1lbnRzW2ldID09PSBlbGVtZW50c1tpIC0gMV0pIHtcbiAgICAgICAgICAgIGVsZW1lbnRzLnNwbGljZShpLCAxKTtcbiAgICAgICAgICAgIC0tbGVuO1xuICAgICAgICAgIH0gZWxzZSB7XG4gICAgICAgICAgICBpKys7XG4gICAgICAgICAgfVxuICAgICAgICB9XG4gICAgICB9XG4gICAgICByZXR1cm4gZWxlbWVudHM7XG4gICAgfTtcbiAgfSkoKSxcblxuICBnZXRFbGVtZW50c0J5VGFnTmFtZTogZ2V0RWxlbWVudHNCeVRhZ05hbWUsXG5cbiAgZ2V0U2ltcGxlQXR0cjogZnVuY3Rpb24gKGVsLCBuYW1lKSB7XG4gICAgdmFyIHJldCA9IGVsICYmIGVsLmdldEF0dHJpYnV0ZU5vZGUobmFtZSk7XG4gICAgaWYgKHJldCAmJiByZXQuc3BlY2lmaWVkKSB7XG4gICAgICByZXR1cm4gJ3ZhbHVlJyBpbiByZXQgPyByZXQudmFsdWUgOiByZXQubm9kZVZhbHVlO1xuICAgIH1cbiAgICByZXR1cm4gdW5kZWZpbmVkO1xuICB9LFxuXG4gIGNvbnRhaW5zOiBpZSA/IGZ1bmN0aW9uIChhLCBiKSB7XG4gICAgaWYgKGEubm9kZVR5cGUgPT09IDkpIHtcbiAgICAgIGEgPSBhLmRvY3VtZW50RWxlbWVudDtcbiAgICB9XG4gICAgLy8gIWEuY29udGFpbnMgPT4gYT09PWRvY3VtZW50IHx8IHRleHRcbiAgICAvLyDms6jmhI/ljp/nlJ8gY29udGFpbnMg5Yik5pat5pe2IGE9PT1iIOS5n+i/lOWbniB0cnVlXG4gICAgYiA9IGIucGFyZW50Tm9kZTtcblxuICAgIGlmIChhID09PSBiKSB7XG4gICAgICByZXR1cm4gdHJ1ZTtcbiAgICB9XG5cbiAgICAvLyB3aGVuIGIgaXMgZG9jdW1lbnQsIGEuY29udGFpbnMoYikg5LiN5pSv5oyB55qE5o6l5Y+jIGluIGllXG4gICAgaWYgKGIgJiYgYi5ub2RlVHlwZSA9PT0gMSkge1xuICAgICAgcmV0dXJuIGEuY29udGFpbnMgJiYgYS5jb250YWlucyhiKTtcbiAgICB9IGVsc2Uge1xuICAgICAgcmV0dXJuIGZhbHNlO1xuICAgIH1cbiAgfSA6IGZ1bmN0aW9uIChhLCBiKSB7XG4gICAgcmV0dXJuICEhKGEuY29tcGFyZURvY3VtZW50UG9zaXRpb24oYikgJiAxNik7XG4gIH0sXG5cbiAgaXNUYWc6IGZ1bmN0aW9uIChlbCwgdmFsdWUpIHtcbiAgICByZXR1cm4gdmFsdWUgPT09ICcqJyB8fCBlbC5ub2RlTmFtZS50b0xvd2VyQ2FzZSgpID09PSB2YWx1ZS50b0xvd2VyQ2FzZSgpO1xuICB9LFxuXG4gIGhhc1NpbmdsZUNsYXNzOiBmdW5jdGlvbiAoZWwsIGNscykge1xuICAgIC8vIGNvbnNpZGVyIHhtbFxuICAgIC8vIGh0dHBzOi8vZ2l0aHViLmNvbS9raXNzeXRlYW0va2lzc3kvaXNzdWVzLzUzMlxuICAgIHZhciBjbGFzc05hbWUgPSBlbCAmJiB1dGlsLmdldFNpbXBsZUF0dHIoZWwsICdjbGFzcycpO1xuICAgIHJldHVybiBjbGFzc05hbWUgJiYgKGNsYXNzTmFtZSA9IGNsYXNzTmFtZS5yZXBsYWNlKC9bXFxyXFx0XFxuXS9nLCBTUEFDRSkpICYmXG4gICAgICAoU1BBQ0UgKyBjbGFzc05hbWUgKyBTUEFDRSkuaW5kZXhPZihTUEFDRSArIGNscyArIFNQQUNFKSA+IC0xO1xuICB9LFxuXG4gIHN0YXJ0c1dpdGg6IGZ1bmN0aW9uIChzdHIsIHByZWZpeCkge1xuICAgIHJldHVybiBzdHIubGFzdEluZGV4T2YocHJlZml4LCAwKSA9PT0gMDtcbiAgfSxcblxuICBlbmRzV2l0aDogZnVuY3Rpb24gKHN0ciwgc3VmZml4KSB7XG4gICAgdmFyIGluZCA9IHN0ci5sZW5ndGggLSBzdWZmaXgubGVuZ3RoO1xuICAgIHJldHVybiBpbmQgPj0gMCAmJiBzdHIuaW5kZXhPZihzdWZmaXgsIGluZCkgPT09IGluZDtcbiAgfSxcblxuICB0cmltOiB0cmltID9cbiAgICBmdW5jdGlvbiAoc3RyKSB7XG4gICAgICByZXR1cm4gc3RyID09IG51bGwgPyAnJyA6IHRyaW0uY2FsbChzdHIpO1xuICAgIH0gOlxuICAgIGZ1bmN0aW9uIChzdHIpIHtcbiAgICAgIHJldHVybiBzdHIgPT0gbnVsbCA/ICcnIDogKHN0ciArICcnKS5yZXBsYWNlKFJFX1RSSU0sICcnKTtcbiAgICB9LFxuXG4gIGF0dHI6IGZ1bmN0aW9uIChlbCwgbmFtZSkge1xuICAgIHZhciBhdHRyTm9ybWFsaXplciwgcmV0O1xuICAgIC8vIHNjcm9sbExlZnRcbiAgICBuYW1lID0gbmFtZS50b0xvd2VyQ2FzZSgpO1xuICAgIC8vIGN1c3RvbSBhdHRyc1xuICAgIG5hbWUgPSBhdHRyRml4W25hbWVdIHx8IG5hbWU7XG4gICAgaWYgKFJfQk9PTEVBTi50ZXN0KG5hbWUpKSB7XG4gICAgICBhdHRyTm9ybWFsaXplciA9IGJvb2xIb29rO1xuICAgIH0gZWxzZSBpZiAoUl9JTlZBTElEX0NIQVIudGVzdChuYW1lKSkge1xuICAgICAgLy8gb25seSBvbGQgaWU/XG4gICAgICBhdHRyTm9ybWFsaXplciA9IGF0dHJOb2RlSG9vaztcbiAgICB9IGVsc2Uge1xuICAgICAgYXR0ck5vcm1hbGl6ZXIgPSBhdHRySG9va3NbbmFtZV07XG4gICAgfVxuICAgIGlmIChlbCAmJiBlbC5ub2RlVHlwZSA9PT0gMSkge1xuICAgICAgLy8gYnJvd3NlcnMgaW5kZXggZWxlbWVudHMgYnkgaWQvbmFtZSBvbiBmb3JtcywgZ2l2ZSBwcmlvcml0eSB0byBhdHRyaWJ1dGVzLlxuICAgICAgaWYgKGVsLm5vZGVOYW1lLnRvTG93ZXJDYXNlKCkgPT09ICdmb3JtJykge1xuICAgICAgICBhdHRyTm9ybWFsaXplciA9IGF0dHJOb2RlSG9vaztcbiAgICAgIH1cbiAgICAgIGlmIChhdHRyTm9ybWFsaXplciAmJiBhdHRyTm9ybWFsaXplci5nZXQpIHtcbiAgICAgICAgcmV0dXJuIGF0dHJOb3JtYWxpemVyLmdldChlbCwgbmFtZSk7XG4gICAgICB9XG4gICAgICByZXQgPSBlbC5nZXRBdHRyaWJ1dGUobmFtZSk7XG4gICAgICBpZiAocmV0ID09PSAnJykge1xuICAgICAgICB2YXIgYXR0ck5vZGUgPSBlbC5nZXRBdHRyaWJ1dGVOb2RlKG5hbWUpO1xuICAgICAgICBpZiAoIWF0dHJOb2RlIHx8ICFhdHRyTm9kZS5zcGVjaWZpZWQpIHtcbiAgICAgICAgICByZXR1cm4gdW5kZWZpbmVkO1xuICAgICAgICB9XG4gICAgICB9XG4gICAgICAvLyBzdGFuZGFyZCBicm93c2VyIG5vbi1leGlzdGluZyBhdHRyaWJ1dGUgcmV0dXJuIG51bGxcbiAgICAgIC8vIGllPDggd2lsbCByZXR1cm4gdW5kZWZpbmVkICwgYmVjYXVzZSBpdCByZXR1cm4gcHJvcGVydHlcbiAgICAgIC8vIHNvIG5vcm0gdG8gdW5kZWZpbmVkXG4gICAgICByZXR1cm4gcmV0ID09PSBudWxsID8gdW5kZWZpbmVkIDogcmV0O1xuICAgIH1cbiAgfVxufTsiLCIvKlxuICBHZW5lcmF0ZWQgYnkga2lzb24uKi9cbnZhciBwYXJzZXIgPSAoZnVuY3Rpb24gKHVuZGVmaW5lZCkge1xuICAgIC8qanNoaW50IHF1b3RtYXJrOmZhbHNlLCBsb29wZnVuYzp0cnVlLCBpbmRlbnQ6ZmFsc2UsIHVudXNlZDpmYWxzZSwgYXNpOnRydWUsIGJvc3M6dHJ1ZSovXG4gICAgLyogR2VuZXJhdGVkIGJ5IGtpc29uICovXG4gICAgdmFyIHBhcnNlciA9IHt9LFxuICAgICAgICBHcmFtbWFyQ29uc3QgPSB7XG4gICAgICAgICAgICAnU0hJRlRfVFlQRSc6IDEsXG4gICAgICAgICAgICAnUkVEVUNFX1RZUEUnOiAyLFxuICAgICAgICAgICAgJ0FDQ0VQVF9UWVBFJzogMCxcbiAgICAgICAgICAgICdUWVBFX0lOREVYJzogMCxcbiAgICAgICAgICAgICdQUk9EVUNUSU9OX0lOREVYJzogMSxcbiAgICAgICAgICAgICdUT19JTkRFWCc6IDJcbiAgICAgICAgfTtcbiAgICAvKmpzbGludCBxdW90bWFyazogZmFsc2UqL1xuICAgIGZ1bmN0aW9uIG1peCh0bywgZnJvbSkge1xuICAgICAgICBmb3IgKHZhciBmIGluIGZyb20pIHtcbiAgICAgICAgICAgIHRvW2ZdID0gZnJvbVtmXTtcbiAgICAgICAgfVxuICAgIH1cblxuICAgIGZ1bmN0aW9uIGlzQXJyYXkob2JqKSB7XG4gICAgICAgIHJldHVybiAnW29iamVjdCBBcnJheV0nID09PSBPYmplY3QucHJvdG90eXBlLnRvU3RyaW5nLmNhbGwob2JqKTtcbiAgICB9XG5cbiAgICBmdW5jdGlvbiBlYWNoKG9iamVjdCwgZm4sIGNvbnRleHQpIHtcbiAgICAgICAgaWYgKG9iamVjdCkge1xuICAgICAgICAgICAgdmFyIGtleSxcbiAgICAgICAgICAgICAgICB2YWwsXG4gICAgICAgICAgICAgICAgbGVuZ3RoLFxuICAgICAgICAgICAgICAgIGkgPSAwO1xuXG4gICAgICAgICAgICBjb250ZXh0ID0gY29udGV4dCB8fCBudWxsO1xuXG4gICAgICAgICAgICBpZiAoIWlzQXJyYXkob2JqZWN0KSkge1xuICAgICAgICAgICAgICAgIGZvciAoa2V5IGluIG9iamVjdCkge1xuICAgICAgICAgICAgICAgICAgICAvLyBjYW4gbm90IHVzZSBoYXNPd25Qcm9wZXJ0eVxuICAgICAgICAgICAgICAgICAgICBpZiAoZm4uY2FsbChjb250ZXh0LCBvYmplY3Rba2V5XSwga2V5LCBvYmplY3QpID09PSBmYWxzZSkge1xuICAgICAgICAgICAgICAgICAgICAgICAgYnJlYWs7XG4gICAgICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICB9IGVsc2Uge1xuICAgICAgICAgICAgICAgIGxlbmd0aCA9IG9iamVjdC5sZW5ndGg7XG4gICAgICAgICAgICAgICAgZm9yICh2YWwgPSBvYmplY3RbMF07IGkgPCBsZW5ndGg7IHZhbCA9IG9iamVjdFsrK2ldKSB7XG4gICAgICAgICAgICAgICAgICAgIGlmIChmbi5jYWxsKGNvbnRleHQsIHZhbCwgaSwgb2JqZWN0KSA9PT0gZmFsc2UpIHtcbiAgICAgICAgICAgICAgICAgICAgICAgIGJyZWFrO1xuICAgICAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgfVxuICAgICAgICB9XG4gICAgfVxuXG4gICAgZnVuY3Rpb24gaW5BcnJheShpdGVtLCBhcnIpIHtcbiAgICAgICAgZm9yICh2YXIgaSA9IDAsIGwgPSBhcnIubGVuZ3RoOyBpIDwgbDsgaSsrKSB7XG4gICAgICAgICAgICBpZiAoYXJyW2ldID09PSBpdGVtKSB7XG4gICAgICAgICAgICAgICAgcmV0dXJuIHRydWU7XG4gICAgICAgICAgICB9XG4gICAgICAgIH1cbiAgICAgICAgcmV0dXJuIGZhbHNlO1xuICAgIH1cbiAgICB2YXIgTGV4ZXIgPSBmdW5jdGlvbiBMZXhlcihjZmcpIHtcblxuICAgICAgICB2YXIgc2VsZiA9IHRoaXM7XG5cbiAgICAgICAgLypcbiAgICAgbGV4IHJ1bGVzLlxuICAgICBAdHlwZSB7T2JqZWN0W119XG4gICAgIEBleGFtcGxlXG4gICAgIFtcbiAgICAge1xuICAgICByZWdleHA6J1xcXFx3KycsXG4gICAgIHN0YXRlOlsneHgnXSxcbiAgICAgdG9rZW46J2MnLFxuICAgICAvLyB0aGlzID0+IGxleFxuICAgICBhY3Rpb246ZnVuY3Rpb24oKXt9XG4gICAgIH1cbiAgICAgXVxuICAgICAqL1xuICAgICAgICBzZWxmLnJ1bGVzID0gW107XG5cbiAgICAgICAgbWl4KHNlbGYsIGNmZyk7XG5cbiAgICAgICAgLypcbiAgICAgSW5wdXQgbGFuZ3VhZ2VzXG4gICAgIEB0eXBlIHtTdHJpbmd9XG4gICAgICovXG5cbiAgICAgICAgc2VsZi5yZXNldElucHV0KHNlbGYuaW5wdXQpO1xuICAgIH07XG4gICAgTGV4ZXIucHJvdG90eXBlID0ge1xuICAgICAgICAncmVzZXRJbnB1dCc6IGZ1bmN0aW9uIChpbnB1dCkge1xuICAgICAgICAgICAgbWl4KHRoaXMsIHtcbiAgICAgICAgICAgICAgICBpbnB1dDogaW5wdXQsXG4gICAgICAgICAgICAgICAgbWF0Y2hlZDogJycsXG4gICAgICAgICAgICAgICAgc3RhdGVTdGFjazogW0xleGVyLlNUQVRJQy5JTklUSUFMXSxcbiAgICAgICAgICAgICAgICBtYXRjaDogJycsXG4gICAgICAgICAgICAgICAgdGV4dDogJycsXG4gICAgICAgICAgICAgICAgZmlyc3RMaW5lOiAxLFxuICAgICAgICAgICAgICAgIGxpbmVOdW1iZXI6IDEsXG4gICAgICAgICAgICAgICAgbGFzdExpbmU6IDEsXG4gICAgICAgICAgICAgICAgZmlyc3RDb2x1bW46IDEsXG4gICAgICAgICAgICAgICAgbGFzdENvbHVtbjogMVxuICAgICAgICAgICAgfSk7XG4gICAgICAgIH0sXG4gICAgICAgICdnZXRDdXJyZW50UnVsZXMnOiBmdW5jdGlvbiAoKSB7XG4gICAgICAgICAgICB2YXIgc2VsZiA9IHRoaXMsXG4gICAgICAgICAgICAgICAgY3VycmVudFN0YXRlID0gc2VsZi5zdGF0ZVN0YWNrW3NlbGYuc3RhdGVTdGFjay5sZW5ndGggLSAxXSxcbiAgICAgICAgICAgICAgICBydWxlcyA9IFtdO1xuICAgICAgICAgICAgLy8jSlNDT1ZFUkFHRV9JRlxuICAgICAgICAgICAgaWYgKHNlbGYubWFwU3RhdGUpIHtcbiAgICAgICAgICAgICAgICBjdXJyZW50U3RhdGUgPSBzZWxmLm1hcFN0YXRlKGN1cnJlbnRTdGF0ZSk7XG4gICAgICAgICAgICB9XG4gICAgICAgICAgICBlYWNoKHNlbGYucnVsZXMsIGZ1bmN0aW9uIChyKSB7XG4gICAgICAgICAgICAgICAgdmFyIHN0YXRlID0gci5zdGF0ZSB8fCByWzNdO1xuICAgICAgICAgICAgICAgIGlmICghc3RhdGUpIHtcbiAgICAgICAgICAgICAgICAgICAgaWYgKGN1cnJlbnRTdGF0ZSA9PT0gTGV4ZXIuU1RBVElDLklOSVRJQUwpIHtcbiAgICAgICAgICAgICAgICAgICAgICAgIHJ1bGVzLnB1c2gocik7XG4gICAgICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICB9IGVsc2UgaWYgKGluQXJyYXkoY3VycmVudFN0YXRlLCBzdGF0ZSkpIHtcbiAgICAgICAgICAgICAgICAgICAgcnVsZXMucHVzaChyKTtcbiAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICB9KTtcbiAgICAgICAgICAgIHJldHVybiBydWxlcztcbiAgICAgICAgfSxcbiAgICAgICAgJ3B1c2hTdGF0ZSc6IGZ1bmN0aW9uIChzdGF0ZSkge1xuICAgICAgICAgICAgdGhpcy5zdGF0ZVN0YWNrLnB1c2goc3RhdGUpO1xuICAgICAgICB9LFxuICAgICAgICAncG9wU3RhdGUnOiBmdW5jdGlvbiAobnVtKSB7XG4gICAgICAgICAgICBudW0gPSBudW0gfHwgMTtcbiAgICAgICAgICAgIHZhciByZXQ7XG4gICAgICAgICAgICB3aGlsZSAobnVtLS0pIHtcbiAgICAgICAgICAgICAgICByZXQgPSB0aGlzLnN0YXRlU3RhY2sucG9wKCk7XG4gICAgICAgICAgICB9XG4gICAgICAgICAgICByZXR1cm4gcmV0O1xuICAgICAgICB9LFxuICAgICAgICAnc2hvd0RlYnVnSW5mbyc6IGZ1bmN0aW9uICgpIHtcbiAgICAgICAgICAgIHZhciBzZWxmID0gdGhpcyxcbiAgICAgICAgICAgICAgICBERUJVR19DT05URVhUX0xJTUlUID0gTGV4ZXIuU1RBVElDLkRFQlVHX0NPTlRFWFRfTElNSVQsXG4gICAgICAgICAgICAgICAgbWF0Y2hlZCA9IHNlbGYubWF0Y2hlZCxcbiAgICAgICAgICAgICAgICBtYXRjaCA9IHNlbGYubWF0Y2gsXG4gICAgICAgICAgICAgICAgaW5wdXQgPSBzZWxmLmlucHV0O1xuICAgICAgICAgICAgbWF0Y2hlZCA9IG1hdGNoZWQuc2xpY2UoMCwgbWF0Y2hlZC5sZW5ndGggLSBtYXRjaC5sZW5ndGgpO1xuICAgICAgICAgICAgLy8jSlNDT1ZFUkFHRV9JRiAwXG4gICAgICAgICAgICB2YXIgcGFzdCA9IChtYXRjaGVkLmxlbmd0aCA+IERFQlVHX0NPTlRFWFRfTElNSVQgPyAnLi4uJyA6ICcnKSArXG4gICAgICAgICAgICAgICAgbWF0Y2hlZC5zbGljZSgwIC0gREVCVUdfQ09OVEVYVF9MSU1JVCkucmVwbGFjZSgvXFxuLywgJyAnKSxcbiAgICAgICAgICAgICAgICBuZXh0ID0gbWF0Y2ggKyBpbnB1dDtcbiAgICAgICAgICAgIC8vI0pTQ09WRVJBR0VfRU5ESUZcbiAgICAgICAgICAgIG5leHQgPSBuZXh0LnNsaWNlKDAsIERFQlVHX0NPTlRFWFRfTElNSVQpICtcbiAgICAgICAgICAgICAgICAobmV4dC5sZW5ndGggPiBERUJVR19DT05URVhUX0xJTUlUID8gJy4uLicgOiAnJyk7XG4gICAgICAgICAgICByZXR1cm4gcGFzdCArIG5leHQgKyAnXFxuJyArIG5ldyBBcnJheShwYXN0Lmxlbmd0aCArIDEpLmpvaW4oJy0nKSArICdeJztcbiAgICAgICAgfSxcbiAgICAgICAgJ21hcFN5bWJvbCc6IGZ1bmN0aW9uIG1hcFN5bWJvbEZvckNvZGVHZW4odCkge1xuICAgICAgICAgICAgcmV0dXJuIHRoaXMuc3ltYm9sTWFwW3RdO1xuICAgICAgICB9LFxuICAgICAgICAnbWFwUmV2ZXJzZVN5bWJvbCc6IGZ1bmN0aW9uIChycykge1xuICAgICAgICAgICAgdmFyIHNlbGYgPSB0aGlzLFxuICAgICAgICAgICAgICAgIHN5bWJvbE1hcCA9IHNlbGYuc3ltYm9sTWFwLFxuICAgICAgICAgICAgICAgIGksXG4gICAgICAgICAgICAgICAgcmV2ZXJzZVN5bWJvbE1hcCA9IHNlbGYucmV2ZXJzZVN5bWJvbE1hcDtcbiAgICAgICAgICAgIGlmICghcmV2ZXJzZVN5bWJvbE1hcCAmJiBzeW1ib2xNYXApIHtcbiAgICAgICAgICAgICAgICByZXZlcnNlU3ltYm9sTWFwID0gc2VsZi5yZXZlcnNlU3ltYm9sTWFwID0ge307XG4gICAgICAgICAgICAgICAgZm9yIChpIGluIHN5bWJvbE1hcCkge1xuICAgICAgICAgICAgICAgICAgICByZXZlcnNlU3ltYm9sTWFwW3N5bWJvbE1hcFtpXV0gPSBpO1xuICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgIH1cbiAgICAgICAgICAgIC8vI0pTQ09WRVJBR0VfSUZcbiAgICAgICAgICAgIGlmIChyZXZlcnNlU3ltYm9sTWFwKSB7XG4gICAgICAgICAgICAgICAgcmV0dXJuIHJldmVyc2VTeW1ib2xNYXBbcnNdO1xuICAgICAgICAgICAgfSBlbHNlIHtcbiAgICAgICAgICAgICAgICByZXR1cm4gcnM7XG4gICAgICAgICAgICB9XG4gICAgICAgIH0sXG4gICAgICAgICdsZXgnOiBmdW5jdGlvbiAoKSB7XG4gICAgICAgICAgICB2YXIgc2VsZiA9IHRoaXMsXG4gICAgICAgICAgICAgICAgaW5wdXQgPSBzZWxmLmlucHV0LFxuICAgICAgICAgICAgICAgIGksXG4gICAgICAgICAgICAgICAgcnVsZSxcbiAgICAgICAgICAgICAgICBtLFxuICAgICAgICAgICAgICAgIHJldCxcbiAgICAgICAgICAgICAgICBsaW5lcyxcbiAgICAgICAgICAgICAgICBydWxlcyA9IHNlbGYuZ2V0Q3VycmVudFJ1bGVzKCk7XG5cbiAgICAgICAgICAgIHNlbGYubWF0Y2ggPSBzZWxmLnRleHQgPSAnJztcblxuICAgICAgICAgICAgaWYgKCFpbnB1dCkge1xuICAgICAgICAgICAgICAgIHJldHVybiBzZWxmLm1hcFN5bWJvbChMZXhlci5TVEFUSUMuRU5EX1RBRyk7XG4gICAgICAgICAgICB9XG5cbiAgICAgICAgICAgIGZvciAoaSA9IDA7IGkgPCBydWxlcy5sZW5ndGg7IGkrKykge1xuICAgICAgICAgICAgICAgIHJ1bGUgPSBydWxlc1tpXTtcbiAgICAgICAgICAgICAgICAvLyNKU0NPVkVSQUdFX0lGIDBcbiAgICAgICAgICAgICAgICB2YXIgcmVnZXhwID0gcnVsZS5yZWdleHAgfHwgcnVsZVsxXSxcbiAgICAgICAgICAgICAgICAgICAgdG9rZW4gPSBydWxlLnRva2VuIHx8IHJ1bGVbMF0sXG4gICAgICAgICAgICAgICAgICAgIGFjdGlvbiA9IHJ1bGUuYWN0aW9uIHx8IHJ1bGVbMl0gfHwgdW5kZWZpbmVkO1xuICAgICAgICAgICAgICAgIC8vI0pTQ09WRVJBR0VfRU5ESUZcbiAgICAgICAgICAgICAgICBpZiAoKG0gPSBpbnB1dC5tYXRjaChyZWdleHApKSkge1xuICAgICAgICAgICAgICAgICAgICBsaW5lcyA9IG1bMF0ubWF0Y2goL1xcbi4qL2cpO1xuICAgICAgICAgICAgICAgICAgICBpZiAobGluZXMpIHtcbiAgICAgICAgICAgICAgICAgICAgICAgIHNlbGYubGluZU51bWJlciArPSBsaW5lcy5sZW5ndGg7XG4gICAgICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICAgICAgbWl4KHNlbGYsIHtcbiAgICAgICAgICAgICAgICAgICAgICAgIGZpcnN0TGluZTogc2VsZi5sYXN0TGluZSxcbiAgICAgICAgICAgICAgICAgICAgICAgIGxhc3RMaW5lOiBzZWxmLmxpbmVOdW1iZXIgKyAxLFxuICAgICAgICAgICAgICAgICAgICAgICAgZmlyc3RDb2x1bW46IHNlbGYubGFzdENvbHVtbixcbiAgICAgICAgICAgICAgICAgICAgICAgIGxhc3RDb2x1bW46IGxpbmVzID9cbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBsaW5lc1tsaW5lcy5sZW5ndGggLSAxXS5sZW5ndGggLSAxIDogc2VsZi5sYXN0Q29sdW1uICsgbVswXS5sZW5ndGhcbiAgICAgICAgICAgICAgICAgICAgfSk7XG4gICAgICAgICAgICAgICAgICAgIHZhciBtYXRjaDtcbiAgICAgICAgICAgICAgICAgICAgLy8gZm9yIGVycm9yIHJlcG9ydFxuICAgICAgICAgICAgICAgICAgICBtYXRjaCA9IHNlbGYubWF0Y2ggPSBtWzBdO1xuXG4gICAgICAgICAgICAgICAgICAgIC8vIGFsbCBtYXRjaGVzXG4gICAgICAgICAgICAgICAgICAgIHNlbGYubWF0Y2hlcyA9IG07XG4gICAgICAgICAgICAgICAgICAgIC8vIG1heSBjaGFuZ2UgYnkgdXNlclxuICAgICAgICAgICAgICAgICAgICBzZWxmLnRleHQgPSBtYXRjaDtcbiAgICAgICAgICAgICAgICAgICAgLy8gbWF0Y2hlZCBjb250ZW50IHV0aWxzIG5vd1xuICAgICAgICAgICAgICAgICAgICBzZWxmLm1hdGNoZWQgKz0gbWF0Y2g7XG4gICAgICAgICAgICAgICAgICAgIHJldCA9IGFjdGlvbiAmJiBhY3Rpb24uY2FsbChzZWxmKTtcbiAgICAgICAgICAgICAgICAgICAgaWYgKHJldCA9PT0gdW5kZWZpbmVkKSB7XG4gICAgICAgICAgICAgICAgICAgICAgICByZXQgPSB0b2tlbjtcbiAgICAgICAgICAgICAgICAgICAgfSBlbHNlIHtcbiAgICAgICAgICAgICAgICAgICAgICAgIHJldCA9IHNlbGYubWFwU3ltYm9sKHJldCk7XG4gICAgICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICAgICAgaW5wdXQgPSBpbnB1dC5zbGljZShtYXRjaC5sZW5ndGgpO1xuICAgICAgICAgICAgICAgICAgICBzZWxmLmlucHV0ID0gaW5wdXQ7XG5cbiAgICAgICAgICAgICAgICAgICAgaWYgKHJldCkge1xuICAgICAgICAgICAgICAgICAgICAgICAgcmV0dXJuIHJldDtcbiAgICAgICAgICAgICAgICAgICAgfSBlbHNlIHtcbiAgICAgICAgICAgICAgICAgICAgICAgIC8vIGlnbm9yZVxuICAgICAgICAgICAgICAgICAgICAgICAgcmV0dXJuIHNlbGYubGV4KCk7XG4gICAgICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICB9XG4gICAgICAgIH1cbiAgICB9O1xuICAgIExleGVyLlNUQVRJQyA9IHtcbiAgICAgICAgJ0lOSVRJQUwnOiAnSScsXG4gICAgICAgICdERUJVR19DT05URVhUX0xJTUlUJzogMjAsXG4gICAgICAgICdFTkRfVEFHJzogJyRFT0YnXG4gICAgfTtcbiAgICB2YXIgbGV4ZXIgPSBuZXcgTGV4ZXIoe1xuICAgICAgICAncnVsZXMnOiBbXG4gICAgICAgICAgICBbJ2InLCAvXlxcWyg/OltcXHRcXHJcXG5cXGZcXHgyMF0qKS8sXG4gICAgICAgICAgICAgICAgZnVuY3Rpb24gKCkge1xuICAgICAgICAgICAgICAgICAgICB0aGlzLnRleHQgPSB0aGlzLnl5LnRyaW0odGhpcy50ZXh0KTtcbiAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICBdLFxuICAgICAgICAgICAgWydjJywgL14oPzpbXFx0XFxyXFxuXFxmXFx4MjBdKilcXF0vLFxuICAgICAgICAgICAgICAgIGZ1bmN0aW9uICgpIHtcbiAgICAgICAgICAgICAgICAgICAgdGhpcy50ZXh0ID0gdGhpcy55eS50cmltKHRoaXMudGV4dCk7XG4gICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgXSxcbiAgICAgICAgICAgIFsnZCcsIC9eKD86W1xcdFxcclxcblxcZlxceDIwXSopfj0oPzpbXFx0XFxyXFxuXFxmXFx4MjBdKikvLFxuICAgICAgICAgICAgICAgIGZ1bmN0aW9uICgpIHtcbiAgICAgICAgICAgICAgICAgICAgdGhpcy50ZXh0ID0gdGhpcy55eS50cmltKHRoaXMudGV4dCk7XG4gICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgXSxcbiAgICAgICAgICAgIFsnZScsIC9eKD86W1xcdFxcclxcblxcZlxceDIwXSopXFx8PSg/OltcXHRcXHJcXG5cXGZcXHgyMF0qKS8sXG4gICAgICAgICAgICAgICAgZnVuY3Rpb24gKCkge1xuICAgICAgICAgICAgICAgICAgICB0aGlzLnRleHQgPSB0aGlzLnl5LnRyaW0odGhpcy50ZXh0KTtcbiAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICBdLFxuICAgICAgICAgICAgWydmJywgL14oPzpbXFx0XFxyXFxuXFxmXFx4MjBdKilcXF49KD86W1xcdFxcclxcblxcZlxceDIwXSopLyxcbiAgICAgICAgICAgICAgICBmdW5jdGlvbiAoKSB7XG4gICAgICAgICAgICAgICAgICAgIHRoaXMudGV4dCA9IHRoaXMueXkudHJpbSh0aGlzLnRleHQpO1xuICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgIF0sXG4gICAgICAgICAgICBbJ2cnLCAvXig/OltcXHRcXHJcXG5cXGZcXHgyMF0qKVxcJD0oPzpbXFx0XFxyXFxuXFxmXFx4MjBdKikvLFxuICAgICAgICAgICAgICAgIGZ1bmN0aW9uICgpIHtcbiAgICAgICAgICAgICAgICAgICAgdGhpcy50ZXh0ID0gdGhpcy55eS50cmltKHRoaXMudGV4dCk7XG4gICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgXSxcbiAgICAgICAgICAgIFsnaCcsIC9eKD86W1xcdFxcclxcblxcZlxceDIwXSopXFwqPSg/OltcXHRcXHJcXG5cXGZcXHgyMF0qKS8sXG4gICAgICAgICAgICAgICAgZnVuY3Rpb24gKCkge1xuICAgICAgICAgICAgICAgICAgICB0aGlzLnRleHQgPSB0aGlzLnl5LnRyaW0odGhpcy50ZXh0KTtcbiAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICBdLFxuICAgICAgICAgICAgWydpJywgL14oPzpbXFx0XFxyXFxuXFxmXFx4MjBdKilcXD0oPzpbXFx0XFxyXFxuXFxmXFx4MjBdKikvLFxuICAgICAgICAgICAgICAgIGZ1bmN0aW9uICgpIHtcbiAgICAgICAgICAgICAgICAgICAgdGhpcy50ZXh0ID0gdGhpcy55eS50cmltKHRoaXMudGV4dCk7XG4gICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgXSxcbiAgICAgICAgICAgIFsnaicsIC9eKD86KD86W1xcd118W15cXHgwMC1cXHhhMF18KD86XFxcXFteXFxuXFxyXFxmMC05YS1mXSkpKD86W1xcd1xcZC1dfFteXFx4MDAtXFx4YTBdfCg/OlxcXFxbXlxcblxcclxcZjAtOWEtZl0pKSopXFwoLyxcbiAgICAgICAgICAgICAgICBmdW5jdGlvbiAoKSB7XG4gICAgICAgICAgICAgICAgICAgIHRoaXMudGV4dCA9IHRoaXMueXkudHJpbSh0aGlzLnRleHQpLnNsaWNlKDAsIC0xKTtcbiAgICAgICAgICAgICAgICAgICAgdGhpcy5wdXNoU3RhdGUoJ2ZuJyk7XG4gICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgXSxcbiAgICAgICAgICAgIFsnaycsIC9eW15cXCldKi8sXG4gICAgICAgICAgICAgICAgZnVuY3Rpb24gKCkge1xuICAgICAgICAgICAgICAgICAgICB0aGlzLnBvcFN0YXRlKCk7XG4gICAgICAgICAgICAgICAgfSxcbiAgICAgICAgICAgICAgICBbJ2ZuJ11cbiAgICAgICAgICAgIF0sXG4gICAgICAgICAgICBbJ2wnLCAvXig/OltcXHRcXHJcXG5cXGZcXHgyMF0qKVxcKS8sXG4gICAgICAgICAgICAgICAgZnVuY3Rpb24gKCkge1xuICAgICAgICAgICAgICAgICAgICB0aGlzLnRleHQgPSB0aGlzLnl5LnRyaW0odGhpcy50ZXh0KTtcbiAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICBdLFxuICAgICAgICAgICAgWydtJywgL146bm90XFwoKD86W1xcdFxcclxcblxcZlxceDIwXSopL2ksXG4gICAgICAgICAgICAgICAgZnVuY3Rpb24gKCkge1xuICAgICAgICAgICAgICAgICAgICB0aGlzLnRleHQgPSB0aGlzLnl5LnRyaW0odGhpcy50ZXh0KTtcbiAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICBdLFxuICAgICAgICAgICAgWyduJywgL14oPzooPzpbXFx3XXxbXlxceDAwLVxceGEwXXwoPzpcXFxcW15cXG5cXHJcXGYwLTlhLWZdKSkoPzpbXFx3XFxkLV18W15cXHgwMC1cXHhhMF18KD86XFxcXFteXFxuXFxyXFxmMC05YS1mXSkpKikvLFxuICAgICAgICAgICAgICAgIGZ1bmN0aW9uICgpIHtcbiAgICAgICAgICAgICAgICAgICAgdGhpcy50ZXh0ID0gdGhpcy55eS51bkVzY2FwZSh0aGlzLnRleHQpO1xuICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgIF0sXG4gICAgICAgICAgICBbJ28nLCAvXlwiKFxcXFxcInxbXlwiXSkqXCIvLFxuICAgICAgICAgICAgICAgIGZ1bmN0aW9uICgpIHtcbiAgICAgICAgICAgICAgICAgICAgdGhpcy50ZXh0ID0gdGhpcy55eS51bkVzY2FwZVN0cih0aGlzLnRleHQpO1xuICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgIF0sXG4gICAgICAgICAgICBbJ28nLCAvXicoXFxcXCd8W14nXSkqJy8sXG4gICAgICAgICAgICAgICAgZnVuY3Rpb24gKCkge1xuICAgICAgICAgICAgICAgICAgICB0aGlzLnRleHQgPSB0aGlzLnl5LnVuRXNjYXBlU3RyKHRoaXMudGV4dCk7XG4gICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgXSxcbiAgICAgICAgICAgIFsncCcsIC9eIyg/Oig/OltcXHdcXGQtXXxbXlxceDAwLVxceGEwXXwoPzpcXFxcW15cXG5cXHJcXGYwLTlhLWZdKSkrKS8sXG4gICAgICAgICAgICAgICAgZnVuY3Rpb24gKCkge1xuICAgICAgICAgICAgICAgICAgICB0aGlzLnRleHQgPSB0aGlzLnl5LnVuRXNjYXBlKHRoaXMudGV4dC5zbGljZSgxKSk7XG4gICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgXSxcbiAgICAgICAgICAgIFsncScsIC9eXFwuKD86KD86W1xcd118W15cXHgwMC1cXHhhMF18KD86XFxcXFteXFxuXFxyXFxmMC05YS1mXSkpKD86W1xcd1xcZC1dfFteXFx4MDAtXFx4YTBdfCg/OlxcXFxbXlxcblxcclxcZjAtOWEtZl0pKSopLyxcbiAgICAgICAgICAgICAgICBmdW5jdGlvbiAoKSB7XG4gICAgICAgICAgICAgICAgICAgIHRoaXMudGV4dCA9IHRoaXMueXkudW5Fc2NhcGUodGhpcy50ZXh0LnNsaWNlKDEpKTtcbiAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICBdLFxuICAgICAgICAgICAgWydyJywgL14oPzpbXFx0XFxyXFxuXFxmXFx4MjBdKiksKD86W1xcdFxcclxcblxcZlxceDIwXSopLyxcbiAgICAgICAgICAgICAgICBmdW5jdGlvbiAoKSB7XG4gICAgICAgICAgICAgICAgICAgIHRoaXMudGV4dCA9IHRoaXMueXkudHJpbSh0aGlzLnRleHQpO1xuICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgIF0sXG4gICAgICAgICAgICBbJ3MnLCAvXjo6Py8sIDBdLFxuICAgICAgICAgICAgWyd0JywgL14oPzpbXFx0XFxyXFxuXFxmXFx4MjBdKilcXCsoPzpbXFx0XFxyXFxuXFxmXFx4MjBdKikvLFxuICAgICAgICAgICAgICAgIGZ1bmN0aW9uICgpIHtcbiAgICAgICAgICAgICAgICAgICAgdGhpcy50ZXh0ID0gdGhpcy55eS50cmltKHRoaXMudGV4dCk7XG4gICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgXSxcbiAgICAgICAgICAgIFsndScsIC9eKD86W1xcdFxcclxcblxcZlxceDIwXSopPig/OltcXHRcXHJcXG5cXGZcXHgyMF0qKS8sXG4gICAgICAgICAgICAgICAgZnVuY3Rpb24gKCkge1xuICAgICAgICAgICAgICAgICAgICB0aGlzLnRleHQgPSB0aGlzLnl5LnRyaW0odGhpcy50ZXh0KTtcbiAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICBdLFxuICAgICAgICAgICAgWyd2JywgL14oPzpbXFx0XFxyXFxuXFxmXFx4MjBdKil+KD86W1xcdFxcclxcblxcZlxceDIwXSopLyxcbiAgICAgICAgICAgICAgICBmdW5jdGlvbiAoKSB7XG4gICAgICAgICAgICAgICAgICAgIHRoaXMudGV4dCA9IHRoaXMueXkudHJpbSh0aGlzLnRleHQpO1xuICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgIF0sXG4gICAgICAgICAgICBbJ3cnLCAvXlxcKi8sIDBdLFxuICAgICAgICAgICAgWyd4JywgL14oPzpbXFx0XFxyXFxuXFxmXFx4MjBdKykvLCAwXSxcbiAgICAgICAgICAgIFsneScsIC9eLi8sIDBdXG4gICAgICAgIF1cbiAgICB9KTtcbiAgICBwYXJzZXIubGV4ZXIgPSBsZXhlcjtcbiAgICBsZXhlci5zeW1ib2xNYXAgPSB7XG4gICAgICAgICckRU9GJzogJ2EnLFxuICAgICAgICAnTEVGVF9CUkFDS0VUJzogJ2InLFxuICAgICAgICAnUklHSFRfQlJBQ0tFVCc6ICdjJyxcbiAgICAgICAgJ0lOQ0xVREVTJzogJ2QnLFxuICAgICAgICAnREFTSF9NQVRDSCc6ICdlJyxcbiAgICAgICAgJ1BSRUZJWF9NQVRDSCc6ICdmJyxcbiAgICAgICAgJ1NVRkZJWF9NQVRDSCc6ICdnJyxcbiAgICAgICAgJ1NVQlNUUklOR19NQVRDSCc6ICdoJyxcbiAgICAgICAgJ0FMTF9NQVRDSCc6ICdpJyxcbiAgICAgICAgJ0ZVTkNUSU9OJzogJ2onLFxuICAgICAgICAnUEFSQU1FVEVSJzogJ2snLFxuICAgICAgICAnUklHSFRfUEFSRU5USEVTRVMnOiAnbCcsXG4gICAgICAgICdOT1QnOiAnbScsXG4gICAgICAgICdJREVOVCc6ICduJyxcbiAgICAgICAgJ1NUUklORyc6ICdvJyxcbiAgICAgICAgJ0hBU0gnOiAncCcsXG4gICAgICAgICdDTEFTUyc6ICdxJyxcbiAgICAgICAgJ0NPTU1BJzogJ3InLFxuICAgICAgICAnQ09MT04nOiAncycsXG4gICAgICAgICdQTFVTJzogJ3QnLFxuICAgICAgICAnR1JFQVRFUic6ICd1JyxcbiAgICAgICAgJ1RJTERFJzogJ3YnLFxuICAgICAgICAnVU5JVkVSU0FMJzogJ3cnLFxuICAgICAgICAnUyc6ICd4JyxcbiAgICAgICAgJ0lOVkFMSUQnOiAneScsXG4gICAgICAgICckU1RBUlQnOiAneicsXG4gICAgICAgICdzZWxlY3RvcnNfZ3JvdXAnOiAnYWEnLFxuICAgICAgICAnc2VsZWN0b3InOiAnYWInLFxuICAgICAgICAnc2ltcGxlX3NlbGVjdG9yX3NlcXVlbmNlJzogJ2FjJyxcbiAgICAgICAgJ2NvbWJpbmF0b3InOiAnYWQnLFxuICAgICAgICAndHlwZV9zZWxlY3Rvcic6ICdhZScsXG4gICAgICAgICdpZF9zZWxlY3Rvcic6ICdhZicsXG4gICAgICAgICdjbGFzc19zZWxlY3Rvcic6ICdhZycsXG4gICAgICAgICdhdHRyaWJfbWF0Y2gnOiAnYWgnLFxuICAgICAgICAnYXR0cmliJzogJ2FpJyxcbiAgICAgICAgJ2F0dHJpYl92YWwnOiAnYWonLFxuICAgICAgICAncHNldWRvJzogJ2FrJyxcbiAgICAgICAgJ25lZ2F0aW9uJzogJ2FsJyxcbiAgICAgICAgJ25lZ2F0aW9uX2FyZyc6ICdhbScsXG4gICAgICAgICdzdWZmaXhfc2VsZWN0b3InOiAnYW4nLFxuICAgICAgICAnc3VmZml4X3NlbGVjdG9ycyc6ICdhbydcbiAgICB9O1xuICAgIHBhcnNlci5wcm9kdWN0aW9ucyA9IFtcbiAgICAgICAgWyd6JywgWydhYSddXSxcbiAgICAgICAgWydhYScsIFsnYWInXSxcbiAgICAgICAgICAgIGZ1bmN0aW9uICgpIHtcbiAgICAgICAgICAgICAgICByZXR1cm4gW3RoaXMuJDFdO1xuICAgICAgICAgICAgfVxuICAgICAgICBdLFxuICAgICAgICBbJ2FhJywgWydhYScsICdyJywgJ2FiJ10sXG4gICAgICAgICAgICBmdW5jdGlvbiAoKSB7XG4gICAgICAgICAgICAgICAgdGhpcy4kMS5wdXNoKHRoaXMuJDMpO1xuICAgICAgICAgICAgfVxuICAgICAgICBdLFxuICAgICAgICBbJ2FiJywgWydhYyddXSxcbiAgICAgICAgWydhYicsIFsnYWInLCAnYWQnLCAnYWMnXSxcbiAgICAgICAgICAgIGZ1bmN0aW9uICgpIHtcbiAgICAgICAgICAgICAgICAvLyBMaW5rZWRMaXN0XG5cbiAgICAgICAgICAgICAgICB0aGlzLiQxLm5leHRDb21iaW5hdG9yID0gdGhpcy4kMy5wcmV2Q29tYmluYXRvciA9IHRoaXMuJDI7XG4gICAgICAgICAgICAgICAgdmFyIG9yZGVyO1xuICAgICAgICAgICAgICAgIG9yZGVyID0gdGhpcy4kMS5vcmRlciA9IHRoaXMuJDEub3JkZXIgfHwgMDtcbiAgICAgICAgICAgICAgICB0aGlzLiQzLm9yZGVyID0gb3JkZXIgKyAxO1xuICAgICAgICAgICAgICAgIHRoaXMuJDMucHJldiA9IHRoaXMuJDE7XG4gICAgICAgICAgICAgICAgdGhpcy4kMS5uZXh0ID0gdGhpcy4kMztcbiAgICAgICAgICAgICAgICByZXR1cm4gdGhpcy4kMztcbiAgICAgICAgICAgIH1cbiAgICAgICAgXSxcbiAgICAgICAgWydhZCcsIFsndCddXSxcbiAgICAgICAgWydhZCcsIFsndSddXSxcbiAgICAgICAgWydhZCcsIFsndiddXSxcbiAgICAgICAgWydhZCcsIFsneCddLFxuICAgICAgICAgICAgZnVuY3Rpb24gKCkge1xuICAgICAgICAgICAgICAgIHJldHVybiAnICc7XG4gICAgICAgICAgICB9XG4gICAgICAgIF0sXG4gICAgICAgIFsnYWUnLCBbJ24nXSxcbiAgICAgICAgICAgIGZ1bmN0aW9uICgpIHtcbiAgICAgICAgICAgICAgICByZXR1cm4ge1xuICAgICAgICAgICAgICAgICAgICB0OiAndGFnJyxcbiAgICAgICAgICAgICAgICAgICAgdmFsdWU6IHRoaXMuJDFcbiAgICAgICAgICAgICAgICB9O1xuICAgICAgICAgICAgfVxuICAgICAgICBdLFxuICAgICAgICBbJ2FlJywgWyd3J10sXG4gICAgICAgICAgICBmdW5jdGlvbiAoKSB7XG4gICAgICAgICAgICAgICAgcmV0dXJuIHtcbiAgICAgICAgICAgICAgICAgICAgdDogJ3RhZycsXG4gICAgICAgICAgICAgICAgICAgIHZhbHVlOiB0aGlzLiQxXG4gICAgICAgICAgICAgICAgfTtcbiAgICAgICAgICAgIH1cbiAgICAgICAgXSxcbiAgICAgICAgWydhZicsIFsncCddLFxuICAgICAgICAgICAgZnVuY3Rpb24gKCkge1xuICAgICAgICAgICAgICAgIHJldHVybiB7XG4gICAgICAgICAgICAgICAgICAgIHQ6ICdpZCcsXG4gICAgICAgICAgICAgICAgICAgIHZhbHVlOiB0aGlzLiQxXG4gICAgICAgICAgICAgICAgfTtcbiAgICAgICAgICAgIH1cbiAgICAgICAgXSxcbiAgICAgICAgWydhZycsIFsncSddLFxuICAgICAgICAgICAgZnVuY3Rpb24gKCkge1xuICAgICAgICAgICAgICAgIHJldHVybiB7XG4gICAgICAgICAgICAgICAgICAgIHQ6ICdjbHMnLFxuICAgICAgICAgICAgICAgICAgICB2YWx1ZTogdGhpcy4kMVxuICAgICAgICAgICAgICAgIH07XG4gICAgICAgICAgICB9XG4gICAgICAgIF0sXG4gICAgICAgIFsnYWgnLCBbJ2YnXV0sXG4gICAgICAgIFsnYWgnLCBbJ2cnXV0sXG4gICAgICAgIFsnYWgnLCBbJ2gnXV0sXG4gICAgICAgIFsnYWgnLCBbJ2knXV0sXG4gICAgICAgIFsnYWgnLCBbJ2QnXV0sXG4gICAgICAgIFsnYWgnLCBbJ2UnXV0sXG4gICAgICAgIFsnYWknLCBbJ2InLCAnbicsICdjJ10sXG4gICAgICAgICAgICBmdW5jdGlvbiAoKSB7XG4gICAgICAgICAgICAgICAgcmV0dXJuIHtcbiAgICAgICAgICAgICAgICAgICAgdDogJ2F0dHJpYicsXG4gICAgICAgICAgICAgICAgICAgIHZhbHVlOiB7XG4gICAgICAgICAgICAgICAgICAgICAgICBpZGVudDogdGhpcy4kMlxuICAgICAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgfTtcbiAgICAgICAgICAgIH1cbiAgICAgICAgXSxcbiAgICAgICAgWydhaicsIFsnbiddXSxcbiAgICAgICAgWydhaicsIFsnbyddXSxcbiAgICAgICAgWydhaScsIFsnYicsICduJywgJ2FoJywgJ2FqJywgJ2MnXSxcbiAgICAgICAgICAgIGZ1bmN0aW9uICgpIHtcbiAgICAgICAgICAgICAgICByZXR1cm4ge1xuICAgICAgICAgICAgICAgICAgICB0OiAnYXR0cmliJyxcbiAgICAgICAgICAgICAgICAgICAgdmFsdWU6IHtcbiAgICAgICAgICAgICAgICAgICAgICAgIGlkZW50OiB0aGlzLiQyLFxuICAgICAgICAgICAgICAgICAgICAgICAgbWF0Y2g6IHRoaXMuJDMsXG4gICAgICAgICAgICAgICAgICAgICAgICB2YWx1ZTogdGhpcy4kNFxuICAgICAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgfTtcbiAgICAgICAgICAgIH1cbiAgICAgICAgXSxcbiAgICAgICAgWydhaycsIFsncycsICdqJywgJ2snLCAnbCddLFxuICAgICAgICAgICAgZnVuY3Rpb24gKCkge1xuICAgICAgICAgICAgICAgIHJldHVybiB7XG4gICAgICAgICAgICAgICAgICAgIHQ6ICdwc2V1ZG8nLFxuICAgICAgICAgICAgICAgICAgICB2YWx1ZToge1xuICAgICAgICAgICAgICAgICAgICAgICAgZm46IHRoaXMuJDIudG9Mb3dlckNhc2UoKSxcbiAgICAgICAgICAgICAgICAgICAgICAgIHBhcmFtOiB0aGlzLiQzXG4gICAgICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICB9O1xuICAgICAgICAgICAgfVxuICAgICAgICBdLFxuICAgICAgICBbJ2FrJywgWydzJywgJ24nXSxcbiAgICAgICAgICAgIGZ1bmN0aW9uICgpIHtcbiAgICAgICAgICAgICAgICByZXR1cm4ge1xuICAgICAgICAgICAgICAgICAgICB0OiAncHNldWRvJyxcbiAgICAgICAgICAgICAgICAgICAgdmFsdWU6IHtcbiAgICAgICAgICAgICAgICAgICAgICAgIGlkZW50OiB0aGlzLiQyLnRvTG93ZXJDYXNlKClcbiAgICAgICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgIH07XG4gICAgICAgICAgICB9XG4gICAgICAgIF0sXG4gICAgICAgIFsnYWwnLCBbJ20nLCAnYW0nLCAnbCddLFxuICAgICAgICAgICAgZnVuY3Rpb24gKCkge1xuICAgICAgICAgICAgICAgIHJldHVybiB7XG4gICAgICAgICAgICAgICAgICAgIHQ6ICdwc2V1ZG8nLFxuICAgICAgICAgICAgICAgICAgICB2YWx1ZToge1xuICAgICAgICAgICAgICAgICAgICAgICAgZm46ICdub3QnLFxuICAgICAgICAgICAgICAgICAgICAgICAgcGFyYW06IHRoaXMuJDJcbiAgICAgICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgIH07XG4gICAgICAgICAgICB9XG4gICAgICAgIF0sXG4gICAgICAgIFsnYW0nLCBbJ2FlJ11dLFxuICAgICAgICBbJ2FtJywgWydhZiddXSxcbiAgICAgICAgWydhbScsIFsnYWcnXV0sXG4gICAgICAgIFsnYW0nLCBbJ2FpJ11dLFxuICAgICAgICBbJ2FtJywgWydhayddXSxcbiAgICAgICAgWydhbicsIFsnYWYnXV0sXG4gICAgICAgIFsnYW4nLCBbJ2FnJ11dLFxuICAgICAgICBbJ2FuJywgWydhaSddXSxcbiAgICAgICAgWydhbicsIFsnYWsnXV0sXG4gICAgICAgIFsnYW4nLCBbJ2FsJ11dLFxuICAgICAgICBbJ2FvJywgWydhbiddLFxuICAgICAgICAgICAgZnVuY3Rpb24gKCkge1xuICAgICAgICAgICAgICAgIHJldHVybiBbdGhpcy4kMV07XG4gICAgICAgICAgICB9XG4gICAgICAgIF0sXG4gICAgICAgIFsnYW8nLCBbJ2FvJywgJ2FuJ10sXG4gICAgICAgICAgICBmdW5jdGlvbiAoKSB7XG4gICAgICAgICAgICAgICAgdGhpcy4kMS5wdXNoKHRoaXMuJDIpO1xuICAgICAgICAgICAgfVxuICAgICAgICBdLFxuICAgICAgICBbJ2FjJywgWydhZSddXSxcbiAgICAgICAgWydhYycsIFsnYW8nXSxcbiAgICAgICAgICAgIGZ1bmN0aW9uICgpIHtcbiAgICAgICAgICAgICAgICByZXR1cm4ge1xuICAgICAgICAgICAgICAgICAgICBzdWZmaXg6IHRoaXMuJDFcbiAgICAgICAgICAgICAgICB9O1xuICAgICAgICAgICAgfVxuICAgICAgICBdLFxuICAgICAgICBbJ2FjJywgWydhZScsICdhbyddLFxuICAgICAgICAgICAgZnVuY3Rpb24gKCkge1xuICAgICAgICAgICAgICAgIHJldHVybiB7XG4gICAgICAgICAgICAgICAgICAgIHQ6ICd0YWcnLFxuICAgICAgICAgICAgICAgICAgICB2YWx1ZTogdGhpcy4kMS52YWx1ZSxcbiAgICAgICAgICAgICAgICAgICAgc3VmZml4OiB0aGlzLiQyXG4gICAgICAgICAgICAgICAgfTtcbiAgICAgICAgICAgIH1cbiAgICAgICAgXVxuICAgIF07XG4gICAgcGFyc2VyLnRhYmxlID0ge1xuICAgICAgICAnZ290b3MnOiB7XG4gICAgICAgICAgICAnMCc6IHtcbiAgICAgICAgICAgICAgICAnYWEnOiA4LFxuICAgICAgICAgICAgICAgICdhYic6IDksXG4gICAgICAgICAgICAgICAgJ2FlJzogMTAsXG4gICAgICAgICAgICAgICAgJ2FmJzogMTEsXG4gICAgICAgICAgICAgICAgJ2FnJzogMTIsXG4gICAgICAgICAgICAgICAgJ2FpJzogMTMsXG4gICAgICAgICAgICAgICAgJ2FrJzogMTQsXG4gICAgICAgICAgICAgICAgJ2FsJzogMTUsXG4gICAgICAgICAgICAgICAgJ2FuJzogMTYsXG4gICAgICAgICAgICAgICAgJ2FvJzogMTcsXG4gICAgICAgICAgICAgICAgJ2FjJzogMThcbiAgICAgICAgICAgIH0sXG4gICAgICAgICAgICAnMic6IHtcbiAgICAgICAgICAgICAgICAnYWUnOiAyMCxcbiAgICAgICAgICAgICAgICAnYWYnOiAyMSxcbiAgICAgICAgICAgICAgICAnYWcnOiAyMixcbiAgICAgICAgICAgICAgICAnYWknOiAyMyxcbiAgICAgICAgICAgICAgICAnYWsnOiAyNCxcbiAgICAgICAgICAgICAgICAnYW0nOiAyNVxuICAgICAgICAgICAgfSxcbiAgICAgICAgICAgICc5Jzoge1xuICAgICAgICAgICAgICAgICdhZCc6IDMzXG4gICAgICAgICAgICB9LFxuICAgICAgICAgICAgJzEwJzoge1xuICAgICAgICAgICAgICAgICdhZic6IDExLFxuICAgICAgICAgICAgICAgICdhZyc6IDEyLFxuICAgICAgICAgICAgICAgICdhaSc6IDEzLFxuICAgICAgICAgICAgICAgICdhayc6IDE0LFxuICAgICAgICAgICAgICAgICdhbCc6IDE1LFxuICAgICAgICAgICAgICAgICdhbic6IDE2LFxuICAgICAgICAgICAgICAgICdhbyc6IDM0XG4gICAgICAgICAgICB9LFxuICAgICAgICAgICAgJzE3Jzoge1xuICAgICAgICAgICAgICAgICdhZic6IDExLFxuICAgICAgICAgICAgICAgICdhZyc6IDEyLFxuICAgICAgICAgICAgICAgICdhaSc6IDEzLFxuICAgICAgICAgICAgICAgICdhayc6IDE0LFxuICAgICAgICAgICAgICAgICdhbCc6IDE1LFxuICAgICAgICAgICAgICAgICdhbic6IDM1XG4gICAgICAgICAgICB9LFxuICAgICAgICAgICAgJzE5Jzoge1xuICAgICAgICAgICAgICAgICdhaCc6IDQzXG4gICAgICAgICAgICB9LFxuICAgICAgICAgICAgJzI4Jzoge1xuICAgICAgICAgICAgICAgICdhYic6IDQ2LFxuICAgICAgICAgICAgICAgICdhZSc6IDEwLFxuICAgICAgICAgICAgICAgICdhZic6IDExLFxuICAgICAgICAgICAgICAgICdhZyc6IDEyLFxuICAgICAgICAgICAgICAgICdhaSc6IDEzLFxuICAgICAgICAgICAgICAgICdhayc6IDE0LFxuICAgICAgICAgICAgICAgICdhbCc6IDE1LFxuICAgICAgICAgICAgICAgICdhbic6IDE2LFxuICAgICAgICAgICAgICAgICdhbyc6IDE3LFxuICAgICAgICAgICAgICAgICdhYyc6IDE4XG4gICAgICAgICAgICB9LFxuICAgICAgICAgICAgJzMzJzoge1xuICAgICAgICAgICAgICAgICdhZSc6IDEwLFxuICAgICAgICAgICAgICAgICdhZic6IDExLFxuICAgICAgICAgICAgICAgICdhZyc6IDEyLFxuICAgICAgICAgICAgICAgICdhaSc6IDEzLFxuICAgICAgICAgICAgICAgICdhayc6IDE0LFxuICAgICAgICAgICAgICAgICdhbCc6IDE1LFxuICAgICAgICAgICAgICAgICdhbic6IDE2LFxuICAgICAgICAgICAgICAgICdhbyc6IDE3LFxuICAgICAgICAgICAgICAgICdhYyc6IDQ3XG4gICAgICAgICAgICB9LFxuICAgICAgICAgICAgJzM0Jzoge1xuICAgICAgICAgICAgICAgICdhZic6IDExLFxuICAgICAgICAgICAgICAgICdhZyc6IDEyLFxuICAgICAgICAgICAgICAgICdhaSc6IDEzLFxuICAgICAgICAgICAgICAgICdhayc6IDE0LFxuICAgICAgICAgICAgICAgICdhbCc6IDE1LFxuICAgICAgICAgICAgICAgICdhbic6IDM1XG4gICAgICAgICAgICB9LFxuICAgICAgICAgICAgJzQzJzoge1xuICAgICAgICAgICAgICAgICdhaic6IDUwXG4gICAgICAgICAgICB9LFxuICAgICAgICAgICAgJzQ2Jzoge1xuICAgICAgICAgICAgICAgICdhZCc6IDMzXG4gICAgICAgICAgICB9XG4gICAgICAgIH0sXG4gICAgICAgICdhY3Rpb24nOiB7XG4gICAgICAgICAgICAnMCc6IHtcbiAgICAgICAgICAgICAgICAnYic6IFsxLCB1bmRlZmluZWQsIDFdLFxuICAgICAgICAgICAgICAgICdtJzogWzEsIHVuZGVmaW5lZCwgMl0sXG4gICAgICAgICAgICAgICAgJ24nOiBbMSwgdW5kZWZpbmVkLCAzXSxcbiAgICAgICAgICAgICAgICAncCc6IFsxLCB1bmRlZmluZWQsIDRdLFxuICAgICAgICAgICAgICAgICdxJzogWzEsIHVuZGVmaW5lZCwgNV0sXG4gICAgICAgICAgICAgICAgJ3MnOiBbMSwgdW5kZWZpbmVkLCA2XSxcbiAgICAgICAgICAgICAgICAndyc6IFsxLCB1bmRlZmluZWQsIDddXG4gICAgICAgICAgICB9LFxuICAgICAgICAgICAgJzEnOiB7XG4gICAgICAgICAgICAgICAgJ24nOiBbMSwgdW5kZWZpbmVkLCAxOV1cbiAgICAgICAgICAgIH0sXG4gICAgICAgICAgICAnMic6IHtcbiAgICAgICAgICAgICAgICAnYic6IFsxLCB1bmRlZmluZWQsIDFdLFxuICAgICAgICAgICAgICAgICduJzogWzEsIHVuZGVmaW5lZCwgM10sXG4gICAgICAgICAgICAgICAgJ3AnOiBbMSwgdW5kZWZpbmVkLCA0XSxcbiAgICAgICAgICAgICAgICAncSc6IFsxLCB1bmRlZmluZWQsIDVdLFxuICAgICAgICAgICAgICAgICdzJzogWzEsIHVuZGVmaW5lZCwgNl0sXG4gICAgICAgICAgICAgICAgJ3cnOiBbMSwgdW5kZWZpbmVkLCA3XVxuICAgICAgICAgICAgfSxcbiAgICAgICAgICAgICczJzoge1xuICAgICAgICAgICAgICAgICdhJzogWzIsIDldLFxuICAgICAgICAgICAgICAgICdyJzogWzIsIDldLFxuICAgICAgICAgICAgICAgICd0JzogWzIsIDldLFxuICAgICAgICAgICAgICAgICd1JzogWzIsIDldLFxuICAgICAgICAgICAgICAgICd2JzogWzIsIDldLFxuICAgICAgICAgICAgICAgICd4JzogWzIsIDldLFxuICAgICAgICAgICAgICAgICdwJzogWzIsIDldLFxuICAgICAgICAgICAgICAgICdxJzogWzIsIDldLFxuICAgICAgICAgICAgICAgICdiJzogWzIsIDldLFxuICAgICAgICAgICAgICAgICdzJzogWzIsIDldLFxuICAgICAgICAgICAgICAgICdtJzogWzIsIDldLFxuICAgICAgICAgICAgICAgICdsJzogWzIsIDldXG4gICAgICAgICAgICB9LFxuICAgICAgICAgICAgJzQnOiB7XG4gICAgICAgICAgICAgICAgJ2EnOiBbMiwgMTFdLFxuICAgICAgICAgICAgICAgICdyJzogWzIsIDExXSxcbiAgICAgICAgICAgICAgICAndCc6IFsyLCAxMV0sXG4gICAgICAgICAgICAgICAgJ3UnOiBbMiwgMTFdLFxuICAgICAgICAgICAgICAgICd2JzogWzIsIDExXSxcbiAgICAgICAgICAgICAgICAneCc6IFsyLCAxMV0sXG4gICAgICAgICAgICAgICAgJ3AnOiBbMiwgMTFdLFxuICAgICAgICAgICAgICAgICdxJzogWzIsIDExXSxcbiAgICAgICAgICAgICAgICAnYic6IFsyLCAxMV0sXG4gICAgICAgICAgICAgICAgJ3MnOiBbMiwgMTFdLFxuICAgICAgICAgICAgICAgICdtJzogWzIsIDExXSxcbiAgICAgICAgICAgICAgICAnbCc6IFsyLCAxMV1cbiAgICAgICAgICAgIH0sXG4gICAgICAgICAgICAnNSc6IHtcbiAgICAgICAgICAgICAgICAnYSc6IFsyLCAxMl0sXG4gICAgICAgICAgICAgICAgJ3InOiBbMiwgMTJdLFxuICAgICAgICAgICAgICAgICd0JzogWzIsIDEyXSxcbiAgICAgICAgICAgICAgICAndSc6IFsyLCAxMl0sXG4gICAgICAgICAgICAgICAgJ3YnOiBbMiwgMTJdLFxuICAgICAgICAgICAgICAgICd4JzogWzIsIDEyXSxcbiAgICAgICAgICAgICAgICAncCc6IFsyLCAxMl0sXG4gICAgICAgICAgICAgICAgJ3EnOiBbMiwgMTJdLFxuICAgICAgICAgICAgICAgICdiJzogWzIsIDEyXSxcbiAgICAgICAgICAgICAgICAncyc6IFsyLCAxMl0sXG4gICAgICAgICAgICAgICAgJ20nOiBbMiwgMTJdLFxuICAgICAgICAgICAgICAgICdsJzogWzIsIDEyXVxuICAgICAgICAgICAgfSxcbiAgICAgICAgICAgICc2Jzoge1xuICAgICAgICAgICAgICAgICdqJzogWzEsIHVuZGVmaW5lZCwgMjZdLFxuICAgICAgICAgICAgICAgICduJzogWzEsIHVuZGVmaW5lZCwgMjddXG4gICAgICAgICAgICB9LFxuICAgICAgICAgICAgJzcnOiB7XG4gICAgICAgICAgICAgICAgJ2EnOiBbMiwgMTBdLFxuICAgICAgICAgICAgICAgICdyJzogWzIsIDEwXSxcbiAgICAgICAgICAgICAgICAndCc6IFsyLCAxMF0sXG4gICAgICAgICAgICAgICAgJ3UnOiBbMiwgMTBdLFxuICAgICAgICAgICAgICAgICd2JzogWzIsIDEwXSxcbiAgICAgICAgICAgICAgICAneCc6IFsyLCAxMF0sXG4gICAgICAgICAgICAgICAgJ3AnOiBbMiwgMTBdLFxuICAgICAgICAgICAgICAgICdxJzogWzIsIDEwXSxcbiAgICAgICAgICAgICAgICAnYic6IFsyLCAxMF0sXG4gICAgICAgICAgICAgICAgJ3MnOiBbMiwgMTBdLFxuICAgICAgICAgICAgICAgICdtJzogWzIsIDEwXSxcbiAgICAgICAgICAgICAgICAnbCc6IFsyLCAxMF1cbiAgICAgICAgICAgIH0sXG4gICAgICAgICAgICAnOCc6IHtcbiAgICAgICAgICAgICAgICAnYSc6IFswXSxcbiAgICAgICAgICAgICAgICAncic6IFsxLCB1bmRlZmluZWQsIDI4XVxuICAgICAgICAgICAgfSxcbiAgICAgICAgICAgICc5Jzoge1xuICAgICAgICAgICAgICAgICdhJzogWzIsIDFdLFxuICAgICAgICAgICAgICAgICdyJzogWzIsIDFdLFxuICAgICAgICAgICAgICAgICd0JzogWzEsIHVuZGVmaW5lZCwgMjldLFxuICAgICAgICAgICAgICAgICd1JzogWzEsIHVuZGVmaW5lZCwgMzBdLFxuICAgICAgICAgICAgICAgICd2JzogWzEsIHVuZGVmaW5lZCwgMzFdLFxuICAgICAgICAgICAgICAgICd4JzogWzEsIHVuZGVmaW5lZCwgMzJdXG4gICAgICAgICAgICB9LFxuICAgICAgICAgICAgJzEwJzoge1xuICAgICAgICAgICAgICAgICdhJzogWzIsIDM4XSxcbiAgICAgICAgICAgICAgICAncic6IFsyLCAzOF0sXG4gICAgICAgICAgICAgICAgJ3QnOiBbMiwgMzhdLFxuICAgICAgICAgICAgICAgICd1JzogWzIsIDM4XSxcbiAgICAgICAgICAgICAgICAndic6IFsyLCAzOF0sXG4gICAgICAgICAgICAgICAgJ3gnOiBbMiwgMzhdLFxuICAgICAgICAgICAgICAgICdiJzogWzEsIHVuZGVmaW5lZCwgMV0sXG4gICAgICAgICAgICAgICAgJ20nOiBbMSwgdW5kZWZpbmVkLCAyXSxcbiAgICAgICAgICAgICAgICAncCc6IFsxLCB1bmRlZmluZWQsIDRdLFxuICAgICAgICAgICAgICAgICdxJzogWzEsIHVuZGVmaW5lZCwgNV0sXG4gICAgICAgICAgICAgICAgJ3MnOiBbMSwgdW5kZWZpbmVkLCA2XVxuICAgICAgICAgICAgfSxcbiAgICAgICAgICAgICcxMSc6IHtcbiAgICAgICAgICAgICAgICAnYSc6IFsyLCAzMV0sXG4gICAgICAgICAgICAgICAgJ3InOiBbMiwgMzFdLFxuICAgICAgICAgICAgICAgICd0JzogWzIsIDMxXSxcbiAgICAgICAgICAgICAgICAndSc6IFsyLCAzMV0sXG4gICAgICAgICAgICAgICAgJ3YnOiBbMiwgMzFdLFxuICAgICAgICAgICAgICAgICd4JzogWzIsIDMxXSxcbiAgICAgICAgICAgICAgICAncCc6IFsyLCAzMV0sXG4gICAgICAgICAgICAgICAgJ3EnOiBbMiwgMzFdLFxuICAgICAgICAgICAgICAgICdiJzogWzIsIDMxXSxcbiAgICAgICAgICAgICAgICAncyc6IFsyLCAzMV0sXG4gICAgICAgICAgICAgICAgJ20nOiBbMiwgMzFdXG4gICAgICAgICAgICB9LFxuICAgICAgICAgICAgJzEyJzoge1xuICAgICAgICAgICAgICAgICdhJzogWzIsIDMyXSxcbiAgICAgICAgICAgICAgICAncic6IFsyLCAzMl0sXG4gICAgICAgICAgICAgICAgJ3QnOiBbMiwgMzJdLFxuICAgICAgICAgICAgICAgICd1JzogWzIsIDMyXSxcbiAgICAgICAgICAgICAgICAndic6IFsyLCAzMl0sXG4gICAgICAgICAgICAgICAgJ3gnOiBbMiwgMzJdLFxuICAgICAgICAgICAgICAgICdwJzogWzIsIDMyXSxcbiAgICAgICAgICAgICAgICAncSc6IFsyLCAzMl0sXG4gICAgICAgICAgICAgICAgJ2InOiBbMiwgMzJdLFxuICAgICAgICAgICAgICAgICdzJzogWzIsIDMyXSxcbiAgICAgICAgICAgICAgICAnbSc6IFsyLCAzMl1cbiAgICAgICAgICAgIH0sXG4gICAgICAgICAgICAnMTMnOiB7XG4gICAgICAgICAgICAgICAgJ2EnOiBbMiwgMzNdLFxuICAgICAgICAgICAgICAgICdyJzogWzIsIDMzXSxcbiAgICAgICAgICAgICAgICAndCc6IFsyLCAzM10sXG4gICAgICAgICAgICAgICAgJ3UnOiBbMiwgMzNdLFxuICAgICAgICAgICAgICAgICd2JzogWzIsIDMzXSxcbiAgICAgICAgICAgICAgICAneCc6IFsyLCAzM10sXG4gICAgICAgICAgICAgICAgJ3AnOiBbMiwgMzNdLFxuICAgICAgICAgICAgICAgICdxJzogWzIsIDMzXSxcbiAgICAgICAgICAgICAgICAnYic6IFsyLCAzM10sXG4gICAgICAgICAgICAgICAgJ3MnOiBbMiwgMzNdLFxuICAgICAgICAgICAgICAgICdtJzogWzIsIDMzXVxuICAgICAgICAgICAgfSxcbiAgICAgICAgICAgICcxNCc6IHtcbiAgICAgICAgICAgICAgICAnYSc6IFsyLCAzNF0sXG4gICAgICAgICAgICAgICAgJ3InOiBbMiwgMzRdLFxuICAgICAgICAgICAgICAgICd0JzogWzIsIDM0XSxcbiAgICAgICAgICAgICAgICAndSc6IFsyLCAzNF0sXG4gICAgICAgICAgICAgICAgJ3YnOiBbMiwgMzRdLFxuICAgICAgICAgICAgICAgICd4JzogWzIsIDM0XSxcbiAgICAgICAgICAgICAgICAncCc6IFsyLCAzNF0sXG4gICAgICAgICAgICAgICAgJ3EnOiBbMiwgMzRdLFxuICAgICAgICAgICAgICAgICdiJzogWzIsIDM0XSxcbiAgICAgICAgICAgICAgICAncyc6IFsyLCAzNF0sXG4gICAgICAgICAgICAgICAgJ20nOiBbMiwgMzRdXG4gICAgICAgICAgICB9LFxuICAgICAgICAgICAgJzE1Jzoge1xuICAgICAgICAgICAgICAgICdhJzogWzIsIDM1XSxcbiAgICAgICAgICAgICAgICAncic6IFsyLCAzNV0sXG4gICAgICAgICAgICAgICAgJ3QnOiBbMiwgMzVdLFxuICAgICAgICAgICAgICAgICd1JzogWzIsIDM1XSxcbiAgICAgICAgICAgICAgICAndic6IFsyLCAzNV0sXG4gICAgICAgICAgICAgICAgJ3gnOiBbMiwgMzVdLFxuICAgICAgICAgICAgICAgICdwJzogWzIsIDM1XSxcbiAgICAgICAgICAgICAgICAncSc6IFsyLCAzNV0sXG4gICAgICAgICAgICAgICAgJ2InOiBbMiwgMzVdLFxuICAgICAgICAgICAgICAgICdzJzogWzIsIDM1XSxcbiAgICAgICAgICAgICAgICAnbSc6IFsyLCAzNV1cbiAgICAgICAgICAgIH0sXG4gICAgICAgICAgICAnMTYnOiB7XG4gICAgICAgICAgICAgICAgJ2EnOiBbMiwgMzZdLFxuICAgICAgICAgICAgICAgICdyJzogWzIsIDM2XSxcbiAgICAgICAgICAgICAgICAndCc6IFsyLCAzNl0sXG4gICAgICAgICAgICAgICAgJ3UnOiBbMiwgMzZdLFxuICAgICAgICAgICAgICAgICd2JzogWzIsIDM2XSxcbiAgICAgICAgICAgICAgICAneCc6IFsyLCAzNl0sXG4gICAgICAgICAgICAgICAgJ3AnOiBbMiwgMzZdLFxuICAgICAgICAgICAgICAgICdxJzogWzIsIDM2XSxcbiAgICAgICAgICAgICAgICAnYic6IFsyLCAzNl0sXG4gICAgICAgICAgICAgICAgJ3MnOiBbMiwgMzZdLFxuICAgICAgICAgICAgICAgICdtJzogWzIsIDM2XVxuICAgICAgICAgICAgfSxcbiAgICAgICAgICAgICcxNyc6IHtcbiAgICAgICAgICAgICAgICAnYSc6IFsyLCAzOV0sXG4gICAgICAgICAgICAgICAgJ3InOiBbMiwgMzldLFxuICAgICAgICAgICAgICAgICd0JzogWzIsIDM5XSxcbiAgICAgICAgICAgICAgICAndSc6IFsyLCAzOV0sXG4gICAgICAgICAgICAgICAgJ3YnOiBbMiwgMzldLFxuICAgICAgICAgICAgICAgICd4JzogWzIsIDM5XSxcbiAgICAgICAgICAgICAgICAnYic6IFsxLCB1bmRlZmluZWQsIDFdLFxuICAgICAgICAgICAgICAgICdtJzogWzEsIHVuZGVmaW5lZCwgMl0sXG4gICAgICAgICAgICAgICAgJ3AnOiBbMSwgdW5kZWZpbmVkLCA0XSxcbiAgICAgICAgICAgICAgICAncSc6IFsxLCB1bmRlZmluZWQsIDVdLFxuICAgICAgICAgICAgICAgICdzJzogWzEsIHVuZGVmaW5lZCwgNl1cbiAgICAgICAgICAgIH0sXG4gICAgICAgICAgICAnMTgnOiB7XG4gICAgICAgICAgICAgICAgJ2EnOiBbMiwgM10sXG4gICAgICAgICAgICAgICAgJ3InOiBbMiwgM10sXG4gICAgICAgICAgICAgICAgJ3QnOiBbMiwgM10sXG4gICAgICAgICAgICAgICAgJ3UnOiBbMiwgM10sXG4gICAgICAgICAgICAgICAgJ3YnOiBbMiwgM10sXG4gICAgICAgICAgICAgICAgJ3gnOiBbMiwgM11cbiAgICAgICAgICAgIH0sXG4gICAgICAgICAgICAnMTknOiB7XG4gICAgICAgICAgICAgICAgJ2MnOiBbMSwgdW5kZWZpbmVkLCAzNl0sXG4gICAgICAgICAgICAgICAgJ2QnOiBbMSwgdW5kZWZpbmVkLCAzN10sXG4gICAgICAgICAgICAgICAgJ2UnOiBbMSwgdW5kZWZpbmVkLCAzOF0sXG4gICAgICAgICAgICAgICAgJ2YnOiBbMSwgdW5kZWZpbmVkLCAzOV0sXG4gICAgICAgICAgICAgICAgJ2cnOiBbMSwgdW5kZWZpbmVkLCA0MF0sXG4gICAgICAgICAgICAgICAgJ2gnOiBbMSwgdW5kZWZpbmVkLCA0MV0sXG4gICAgICAgICAgICAgICAgJ2knOiBbMSwgdW5kZWZpbmVkLCA0Ml1cbiAgICAgICAgICAgIH0sXG4gICAgICAgICAgICAnMjAnOiB7XG4gICAgICAgICAgICAgICAgJ2wnOiBbMiwgMjZdXG4gICAgICAgICAgICB9LFxuICAgICAgICAgICAgJzIxJzoge1xuICAgICAgICAgICAgICAgICdsJzogWzIsIDI3XVxuICAgICAgICAgICAgfSxcbiAgICAgICAgICAgICcyMic6IHtcbiAgICAgICAgICAgICAgICAnbCc6IFsyLCAyOF1cbiAgICAgICAgICAgIH0sXG4gICAgICAgICAgICAnMjMnOiB7XG4gICAgICAgICAgICAgICAgJ2wnOiBbMiwgMjldXG4gICAgICAgICAgICB9LFxuICAgICAgICAgICAgJzI0Jzoge1xuICAgICAgICAgICAgICAgICdsJzogWzIsIDMwXVxuICAgICAgICAgICAgfSxcbiAgICAgICAgICAgICcyNSc6IHtcbiAgICAgICAgICAgICAgICAnbCc6IFsxLCB1bmRlZmluZWQsIDQ0XVxuICAgICAgICAgICAgfSxcbiAgICAgICAgICAgICcyNic6IHtcbiAgICAgICAgICAgICAgICAnayc6IFsxLCB1bmRlZmluZWQsIDQ1XVxuICAgICAgICAgICAgfSxcbiAgICAgICAgICAgICcyNyc6IHtcbiAgICAgICAgICAgICAgICAnYSc6IFsyLCAyNF0sXG4gICAgICAgICAgICAgICAgJ3InOiBbMiwgMjRdLFxuICAgICAgICAgICAgICAgICd0JzogWzIsIDI0XSxcbiAgICAgICAgICAgICAgICAndSc6IFsyLCAyNF0sXG4gICAgICAgICAgICAgICAgJ3YnOiBbMiwgMjRdLFxuICAgICAgICAgICAgICAgICd4JzogWzIsIDI0XSxcbiAgICAgICAgICAgICAgICAncCc6IFsyLCAyNF0sXG4gICAgICAgICAgICAgICAgJ3EnOiBbMiwgMjRdLFxuICAgICAgICAgICAgICAgICdiJzogWzIsIDI0XSxcbiAgICAgICAgICAgICAgICAncyc6IFsyLCAyNF0sXG4gICAgICAgICAgICAgICAgJ20nOiBbMiwgMjRdLFxuICAgICAgICAgICAgICAgICdsJzogWzIsIDI0XVxuICAgICAgICAgICAgfSxcbiAgICAgICAgICAgICcyOCc6IHtcbiAgICAgICAgICAgICAgICAnYic6IFsxLCB1bmRlZmluZWQsIDFdLFxuICAgICAgICAgICAgICAgICdtJzogWzEsIHVuZGVmaW5lZCwgMl0sXG4gICAgICAgICAgICAgICAgJ24nOiBbMSwgdW5kZWZpbmVkLCAzXSxcbiAgICAgICAgICAgICAgICAncCc6IFsxLCB1bmRlZmluZWQsIDRdLFxuICAgICAgICAgICAgICAgICdxJzogWzEsIHVuZGVmaW5lZCwgNV0sXG4gICAgICAgICAgICAgICAgJ3MnOiBbMSwgdW5kZWZpbmVkLCA2XSxcbiAgICAgICAgICAgICAgICAndyc6IFsxLCB1bmRlZmluZWQsIDddXG4gICAgICAgICAgICB9LFxuICAgICAgICAgICAgJzI5Jzoge1xuICAgICAgICAgICAgICAgICduJzogWzIsIDVdLFxuICAgICAgICAgICAgICAgICd3JzogWzIsIDVdLFxuICAgICAgICAgICAgICAgICdwJzogWzIsIDVdLFxuICAgICAgICAgICAgICAgICdxJzogWzIsIDVdLFxuICAgICAgICAgICAgICAgICdiJzogWzIsIDVdLFxuICAgICAgICAgICAgICAgICdzJzogWzIsIDVdLFxuICAgICAgICAgICAgICAgICdtJzogWzIsIDVdXG4gICAgICAgICAgICB9LFxuICAgICAgICAgICAgJzMwJzoge1xuICAgICAgICAgICAgICAgICduJzogWzIsIDZdLFxuICAgICAgICAgICAgICAgICd3JzogWzIsIDZdLFxuICAgICAgICAgICAgICAgICdwJzogWzIsIDZdLFxuICAgICAgICAgICAgICAgICdxJzogWzIsIDZdLFxuICAgICAgICAgICAgICAgICdiJzogWzIsIDZdLFxuICAgICAgICAgICAgICAgICdzJzogWzIsIDZdLFxuICAgICAgICAgICAgICAgICdtJzogWzIsIDZdXG4gICAgICAgICAgICB9LFxuICAgICAgICAgICAgJzMxJzoge1xuICAgICAgICAgICAgICAgICduJzogWzIsIDddLFxuICAgICAgICAgICAgICAgICd3JzogWzIsIDddLFxuICAgICAgICAgICAgICAgICdwJzogWzIsIDddLFxuICAgICAgICAgICAgICAgICdxJzogWzIsIDddLFxuICAgICAgICAgICAgICAgICdiJzogWzIsIDddLFxuICAgICAgICAgICAgICAgICdzJzogWzIsIDddLFxuICAgICAgICAgICAgICAgICdtJzogWzIsIDddXG4gICAgICAgICAgICB9LFxuICAgICAgICAgICAgJzMyJzoge1xuICAgICAgICAgICAgICAgICduJzogWzIsIDhdLFxuICAgICAgICAgICAgICAgICd3JzogWzIsIDhdLFxuICAgICAgICAgICAgICAgICdwJzogWzIsIDhdLFxuICAgICAgICAgICAgICAgICdxJzogWzIsIDhdLFxuICAgICAgICAgICAgICAgICdiJzogWzIsIDhdLFxuICAgICAgICAgICAgICAgICdzJzogWzIsIDhdLFxuICAgICAgICAgICAgICAgICdtJzogWzIsIDhdXG4gICAgICAgICAgICB9LFxuICAgICAgICAgICAgJzMzJzoge1xuICAgICAgICAgICAgICAgICdiJzogWzEsIHVuZGVmaW5lZCwgMV0sXG4gICAgICAgICAgICAgICAgJ20nOiBbMSwgdW5kZWZpbmVkLCAyXSxcbiAgICAgICAgICAgICAgICAnbic6IFsxLCB1bmRlZmluZWQsIDNdLFxuICAgICAgICAgICAgICAgICdwJzogWzEsIHVuZGVmaW5lZCwgNF0sXG4gICAgICAgICAgICAgICAgJ3EnOiBbMSwgdW5kZWZpbmVkLCA1XSxcbiAgICAgICAgICAgICAgICAncyc6IFsxLCB1bmRlZmluZWQsIDZdLFxuICAgICAgICAgICAgICAgICd3JzogWzEsIHVuZGVmaW5lZCwgN11cbiAgICAgICAgICAgIH0sXG4gICAgICAgICAgICAnMzQnOiB7XG4gICAgICAgICAgICAgICAgJ2EnOiBbMiwgNDBdLFxuICAgICAgICAgICAgICAgICdyJzogWzIsIDQwXSxcbiAgICAgICAgICAgICAgICAndCc6IFsyLCA0MF0sXG4gICAgICAgICAgICAgICAgJ3UnOiBbMiwgNDBdLFxuICAgICAgICAgICAgICAgICd2JzogWzIsIDQwXSxcbiAgICAgICAgICAgICAgICAneCc6IFsyLCA0MF0sXG4gICAgICAgICAgICAgICAgJ2InOiBbMSwgdW5kZWZpbmVkLCAxXSxcbiAgICAgICAgICAgICAgICAnbSc6IFsxLCB1bmRlZmluZWQsIDJdLFxuICAgICAgICAgICAgICAgICdwJzogWzEsIHVuZGVmaW5lZCwgNF0sXG4gICAgICAgICAgICAgICAgJ3EnOiBbMSwgdW5kZWZpbmVkLCA1XSxcbiAgICAgICAgICAgICAgICAncyc6IFsxLCB1bmRlZmluZWQsIDZdXG4gICAgICAgICAgICB9LFxuICAgICAgICAgICAgJzM1Jzoge1xuICAgICAgICAgICAgICAgICdhJzogWzIsIDM3XSxcbiAgICAgICAgICAgICAgICAncic6IFsyLCAzN10sXG4gICAgICAgICAgICAgICAgJ3QnOiBbMiwgMzddLFxuICAgICAgICAgICAgICAgICd1JzogWzIsIDM3XSxcbiAgICAgICAgICAgICAgICAndic6IFsyLCAzN10sXG4gICAgICAgICAgICAgICAgJ3gnOiBbMiwgMzddLFxuICAgICAgICAgICAgICAgICdwJzogWzIsIDM3XSxcbiAgICAgICAgICAgICAgICAncSc6IFsyLCAzN10sXG4gICAgICAgICAgICAgICAgJ2InOiBbMiwgMzddLFxuICAgICAgICAgICAgICAgICdzJzogWzIsIDM3XSxcbiAgICAgICAgICAgICAgICAnbSc6IFsyLCAzN11cbiAgICAgICAgICAgIH0sXG4gICAgICAgICAgICAnMzYnOiB7XG4gICAgICAgICAgICAgICAgJ2EnOiBbMiwgMTldLFxuICAgICAgICAgICAgICAgICdyJzogWzIsIDE5XSxcbiAgICAgICAgICAgICAgICAndCc6IFsyLCAxOV0sXG4gICAgICAgICAgICAgICAgJ3UnOiBbMiwgMTldLFxuICAgICAgICAgICAgICAgICd2JzogWzIsIDE5XSxcbiAgICAgICAgICAgICAgICAneCc6IFsyLCAxOV0sXG4gICAgICAgICAgICAgICAgJ3AnOiBbMiwgMTldLFxuICAgICAgICAgICAgICAgICdxJzogWzIsIDE5XSxcbiAgICAgICAgICAgICAgICAnYic6IFsyLCAxOV0sXG4gICAgICAgICAgICAgICAgJ3MnOiBbMiwgMTldLFxuICAgICAgICAgICAgICAgICdtJzogWzIsIDE5XSxcbiAgICAgICAgICAgICAgICAnbCc6IFsyLCAxOV1cbiAgICAgICAgICAgIH0sXG4gICAgICAgICAgICAnMzcnOiB7XG4gICAgICAgICAgICAgICAgJ24nOiBbMiwgMTddLFxuICAgICAgICAgICAgICAgICdvJzogWzIsIDE3XVxuICAgICAgICAgICAgfSxcbiAgICAgICAgICAgICczOCc6IHtcbiAgICAgICAgICAgICAgICAnbic6IFsyLCAxOF0sXG4gICAgICAgICAgICAgICAgJ28nOiBbMiwgMThdXG4gICAgICAgICAgICB9LFxuICAgICAgICAgICAgJzM5Jzoge1xuICAgICAgICAgICAgICAgICduJzogWzIsIDEzXSxcbiAgICAgICAgICAgICAgICAnbyc6IFsyLCAxM11cbiAgICAgICAgICAgIH0sXG4gICAgICAgICAgICAnNDAnOiB7XG4gICAgICAgICAgICAgICAgJ24nOiBbMiwgMTRdLFxuICAgICAgICAgICAgICAgICdvJzogWzIsIDE0XVxuICAgICAgICAgICAgfSxcbiAgICAgICAgICAgICc0MSc6IHtcbiAgICAgICAgICAgICAgICAnbic6IFsyLCAxNV0sXG4gICAgICAgICAgICAgICAgJ28nOiBbMiwgMTVdXG4gICAgICAgICAgICB9LFxuICAgICAgICAgICAgJzQyJzoge1xuICAgICAgICAgICAgICAgICduJzogWzIsIDE2XSxcbiAgICAgICAgICAgICAgICAnbyc6IFsyLCAxNl1cbiAgICAgICAgICAgIH0sXG4gICAgICAgICAgICAnNDMnOiB7XG4gICAgICAgICAgICAgICAgJ24nOiBbMSwgdW5kZWZpbmVkLCA0OF0sXG4gICAgICAgICAgICAgICAgJ28nOiBbMSwgdW5kZWZpbmVkLCA0OV1cbiAgICAgICAgICAgIH0sXG4gICAgICAgICAgICAnNDQnOiB7XG4gICAgICAgICAgICAgICAgJ2EnOiBbMiwgMjVdLFxuICAgICAgICAgICAgICAgICdyJzogWzIsIDI1XSxcbiAgICAgICAgICAgICAgICAndCc6IFsyLCAyNV0sXG4gICAgICAgICAgICAgICAgJ3UnOiBbMiwgMjVdLFxuICAgICAgICAgICAgICAgICd2JzogWzIsIDI1XSxcbiAgICAgICAgICAgICAgICAneCc6IFsyLCAyNV0sXG4gICAgICAgICAgICAgICAgJ3AnOiBbMiwgMjVdLFxuICAgICAgICAgICAgICAgICdxJzogWzIsIDI1XSxcbiAgICAgICAgICAgICAgICAnYic6IFsyLCAyNV0sXG4gICAgICAgICAgICAgICAgJ3MnOiBbMiwgMjVdLFxuICAgICAgICAgICAgICAgICdtJzogWzIsIDI1XVxuICAgICAgICAgICAgfSxcbiAgICAgICAgICAgICc0NSc6IHtcbiAgICAgICAgICAgICAgICAnbCc6IFsxLCB1bmRlZmluZWQsIDUxXVxuICAgICAgICAgICAgfSxcbiAgICAgICAgICAgICc0Nic6IHtcbiAgICAgICAgICAgICAgICAnYSc6IFsyLCAyXSxcbiAgICAgICAgICAgICAgICAncic6IFsyLCAyXSxcbiAgICAgICAgICAgICAgICAndCc6IFsxLCB1bmRlZmluZWQsIDI5XSxcbiAgICAgICAgICAgICAgICAndSc6IFsxLCB1bmRlZmluZWQsIDMwXSxcbiAgICAgICAgICAgICAgICAndic6IFsxLCB1bmRlZmluZWQsIDMxXSxcbiAgICAgICAgICAgICAgICAneCc6IFsxLCB1bmRlZmluZWQsIDMyXVxuICAgICAgICAgICAgfSxcbiAgICAgICAgICAgICc0Nyc6IHtcbiAgICAgICAgICAgICAgICAnYSc6IFsyLCA0XSxcbiAgICAgICAgICAgICAgICAncic6IFsyLCA0XSxcbiAgICAgICAgICAgICAgICAndCc6IFsyLCA0XSxcbiAgICAgICAgICAgICAgICAndSc6IFsyLCA0XSxcbiAgICAgICAgICAgICAgICAndic6IFsyLCA0XSxcbiAgICAgICAgICAgICAgICAneCc6IFsyLCA0XVxuICAgICAgICAgICAgfSxcbiAgICAgICAgICAgICc0OCc6IHtcbiAgICAgICAgICAgICAgICAnYyc6IFsyLCAyMF1cbiAgICAgICAgICAgIH0sXG4gICAgICAgICAgICAnNDknOiB7XG4gICAgICAgICAgICAgICAgJ2MnOiBbMiwgMjFdXG4gICAgICAgICAgICB9LFxuICAgICAgICAgICAgJzUwJzoge1xuICAgICAgICAgICAgICAgICdjJzogWzEsIHVuZGVmaW5lZCwgNTJdXG4gICAgICAgICAgICB9LFxuICAgICAgICAgICAgJzUxJzoge1xuICAgICAgICAgICAgICAgICdhJzogWzIsIDIzXSxcbiAgICAgICAgICAgICAgICAncic6IFsyLCAyM10sXG4gICAgICAgICAgICAgICAgJ3QnOiBbMiwgMjNdLFxuICAgICAgICAgICAgICAgICd1JzogWzIsIDIzXSxcbiAgICAgICAgICAgICAgICAndic6IFsyLCAyM10sXG4gICAgICAgICAgICAgICAgJ3gnOiBbMiwgMjNdLFxuICAgICAgICAgICAgICAgICdwJzogWzIsIDIzXSxcbiAgICAgICAgICAgICAgICAncSc6IFsyLCAyM10sXG4gICAgICAgICAgICAgICAgJ2InOiBbMiwgMjNdLFxuICAgICAgICAgICAgICAgICdzJzogWzIsIDIzXSxcbiAgICAgICAgICAgICAgICAnbSc6IFsyLCAyM10sXG4gICAgICAgICAgICAgICAgJ2wnOiBbMiwgMjNdXG4gICAgICAgICAgICB9LFxuICAgICAgICAgICAgJzUyJzoge1xuICAgICAgICAgICAgICAgICdhJzogWzIsIDIyXSxcbiAgICAgICAgICAgICAgICAncic6IFsyLCAyMl0sXG4gICAgICAgICAgICAgICAgJ3QnOiBbMiwgMjJdLFxuICAgICAgICAgICAgICAgICd1JzogWzIsIDIyXSxcbiAgICAgICAgICAgICAgICAndic6IFsyLCAyMl0sXG4gICAgICAgICAgICAgICAgJ3gnOiBbMiwgMjJdLFxuICAgICAgICAgICAgICAgICdwJzogWzIsIDIyXSxcbiAgICAgICAgICAgICAgICAncSc6IFsyLCAyMl0sXG4gICAgICAgICAgICAgICAgJ2InOiBbMiwgMjJdLFxuICAgICAgICAgICAgICAgICdzJzogWzIsIDIyXSxcbiAgICAgICAgICAgICAgICAnbSc6IFsyLCAyMl0sXG4gICAgICAgICAgICAgICAgJ2wnOiBbMiwgMjJdXG4gICAgICAgICAgICB9XG4gICAgICAgIH1cbiAgICB9O1xuICAgIHBhcnNlci5wYXJzZSA9IGZ1bmN0aW9uIHBhcnNlKGlucHV0LCBmaWxlbmFtZSkge1xuICAgICAgICB2YXIgc2VsZiA9IHRoaXMsXG4gICAgICAgICAgICBsZXhlciA9IHNlbGYubGV4ZXIsXG4gICAgICAgICAgICBzdGF0ZSxcbiAgICAgICAgICAgIHN5bWJvbCxcbiAgICAgICAgICAgIGFjdGlvbixcbiAgICAgICAgICAgIHRhYmxlID0gc2VsZi50YWJsZSxcbiAgICAgICAgICAgIGdvdG9zID0gdGFibGUuZ290b3MsXG4gICAgICAgICAgICB0YWJsZUFjdGlvbiA9IHRhYmxlLmFjdGlvbixcbiAgICAgICAgICAgIHByb2R1Y3Rpb25zID0gc2VsZi5wcm9kdWN0aW9ucyxcbiAgICAgICAgICAgIHZhbHVlU3RhY2sgPSBbbnVsbF0sXG4gICAgICAgICAgICAvLyBmb3IgZGVidWcgaW5mb1xuICAgICAgICAgICAgcHJlZml4ID0gZmlsZW5hbWUgPyAoJ2luIGZpbGU6ICcgKyBmaWxlbmFtZSArICcgJykgOiAnJyxcbiAgICAgICAgICAgIHN0YWNrID0gWzBdO1xuXG4gICAgICAgIGxleGVyLnJlc2V0SW5wdXQoaW5wdXQpO1xuXG4gICAgICAgIHdoaWxlICgxKSB7XG4gICAgICAgICAgICAvLyByZXRyaWV2ZSBzdGF0ZSBudW1iZXIgZnJvbSB0b3Agb2Ygc3RhY2tcbiAgICAgICAgICAgIHN0YXRlID0gc3RhY2tbc3RhY2subGVuZ3RoIC0gMV07XG5cbiAgICAgICAgICAgIGlmICghc3ltYm9sKSB7XG4gICAgICAgICAgICAgICAgc3ltYm9sID0gbGV4ZXIubGV4KCk7XG4gICAgICAgICAgICB9XG5cbiAgICAgICAgICAgIGlmIChzeW1ib2wpIHtcbiAgICAgICAgICAgICAgICAvLyByZWFkIGFjdGlvbiBmb3IgY3VycmVudCBzdGF0ZSBhbmQgZmlyc3QgaW5wdXRcbiAgICAgICAgICAgICAgICBhY3Rpb24gPSB0YWJsZUFjdGlvbltzdGF0ZV0gJiYgdGFibGVBY3Rpb25bc3RhdGVdW3N5bWJvbF07XG4gICAgICAgICAgICB9IGVsc2Uge1xuICAgICAgICAgICAgICAgIGFjdGlvbiA9IG51bGw7XG4gICAgICAgICAgICB9XG5cbiAgICAgICAgICAgIGlmICghYWN0aW9uKSB7XG4gICAgICAgICAgICAgICAgdmFyIGV4cGVjdGVkID0gW10sXG4gICAgICAgICAgICAgICAgICAgIGVycm9yO1xuICAgICAgICAgICAgICAgIC8vI0pTQ09WRVJBR0VfSUZcbiAgICAgICAgICAgICAgICBpZiAodGFibGVBY3Rpb25bc3RhdGVdKSB7XG4gICAgICAgICAgICAgICAgICAgIGZvciAodmFyIHN5bWJvbEZvclN0YXRlIGluIHRhYmxlQWN0aW9uW3N0YXRlXSkge1xuICAgICAgICAgICAgICAgICAgICAgICAgZXhwZWN0ZWQucHVzaChzZWxmLmxleGVyLm1hcFJldmVyc2VTeW1ib2woc3ltYm9sRm9yU3RhdGUpKTtcbiAgICAgICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICBlcnJvciA9IHByZWZpeCArICdzeW50YXggZXJyb3IgYXQgbGluZSAnICsgbGV4ZXIubGluZU51bWJlciArXG4gICAgICAgICAgICAgICAgICAgICc6XFxuJyArIGxleGVyLnNob3dEZWJ1Z0luZm8oKSArXG4gICAgICAgICAgICAgICAgICAgICdcXG4nICsgJ2V4cGVjdCAnICsgZXhwZWN0ZWQuam9pbignLCAnKTtcbiAgICAgICAgICAgICAgICB0aHJvdyBuZXcgRXJyb3IoZXJyb3IpO1xuICAgICAgICAgICAgfVxuXG4gICAgICAgICAgICBzd2l0Y2ggKGFjdGlvbltHcmFtbWFyQ29uc3QuVFlQRV9JTkRFWF0pIHtcbiAgICAgICAgICAgIGNhc2UgR3JhbW1hckNvbnN0LlNISUZUX1RZUEU6XG4gICAgICAgICAgICAgICAgc3RhY2sucHVzaChzeW1ib2wpO1xuXG4gICAgICAgICAgICAgICAgdmFsdWVTdGFjay5wdXNoKGxleGVyLnRleHQpO1xuXG4gICAgICAgICAgICAgICAgLy8gcHVzaCBzdGF0ZVxuICAgICAgICAgICAgICAgIHN0YWNrLnB1c2goYWN0aW9uW0dyYW1tYXJDb25zdC5UT19JTkRFWF0pO1xuXG4gICAgICAgICAgICAgICAgLy8gYWxsb3cgdG8gcmVhZCBtb3JlXG4gICAgICAgICAgICAgICAgc3ltYm9sID0gbnVsbDtcblxuICAgICAgICAgICAgICAgIGJyZWFrO1xuXG4gICAgICAgICAgICBjYXNlIEdyYW1tYXJDb25zdC5SRURVQ0VfVFlQRTpcbiAgICAgICAgICAgICAgICB2YXIgcHJvZHVjdGlvbiA9IHByb2R1Y3Rpb25zW2FjdGlvbltHcmFtbWFyQ29uc3QuUFJPRFVDVElPTl9JTkRFWF1dLFxuICAgICAgICAgICAgICAgICAgICByZWR1Y2VkU3ltYm9sID0gcHJvZHVjdGlvbi5zeW1ib2wgfHwgcHJvZHVjdGlvblswXSxcbiAgICAgICAgICAgICAgICAgICAgcmVkdWNlZEFjdGlvbiA9IHByb2R1Y3Rpb24uYWN0aW9uIHx8IHByb2R1Y3Rpb25bMl0sXG4gICAgICAgICAgICAgICAgICAgIHJlZHVjZWRSaHMgPSBwcm9kdWN0aW9uLnJocyB8fCBwcm9kdWN0aW9uWzFdLFxuICAgICAgICAgICAgICAgICAgICBsZW4gPSByZWR1Y2VkUmhzLmxlbmd0aCxcbiAgICAgICAgICAgICAgICAgICAgaSA9IDAsXG4gICAgICAgICAgICAgICAgICAgIHJldCxcbiAgICAgICAgICAgICAgICAgICAgJCQgPSB2YWx1ZVN0YWNrW3ZhbHVlU3RhY2subGVuZ3RoIC0gbGVuXTsgLy8gZGVmYXVsdCB0byAkJCA9ICQxXG5cbiAgICAgICAgICAgICAgICByZXQgPSB1bmRlZmluZWQ7XG5cbiAgICAgICAgICAgICAgICBzZWxmLiQkID0gJCQ7XG5cbiAgICAgICAgICAgICAgICBmb3IgKDsgaSA8IGxlbjsgaSsrKSB7XG4gICAgICAgICAgICAgICAgICAgIHNlbGZbJyQnICsgKGxlbiAtIGkpXSA9IHZhbHVlU3RhY2tbdmFsdWVTdGFjay5sZW5ndGggLSAxIC0gaV07XG4gICAgICAgICAgICAgICAgfVxuXG4gICAgICAgICAgICAgICAgaWYgKHJlZHVjZWRBY3Rpb24pIHtcbiAgICAgICAgICAgICAgICAgICAgcmV0ID0gcmVkdWNlZEFjdGlvbi5jYWxsKHNlbGYpO1xuICAgICAgICAgICAgICAgIH1cblxuICAgICAgICAgICAgICAgIGlmIChyZXQgIT09IHVuZGVmaW5lZCkge1xuICAgICAgICAgICAgICAgICAgICAkJCA9IHJldDtcbiAgICAgICAgICAgICAgICB9IGVsc2Uge1xuICAgICAgICAgICAgICAgICAgICAkJCA9IHNlbGYuJCQ7XG4gICAgICAgICAgICAgICAgfVxuXG4gICAgICAgICAgICAgICAgc3RhY2sgPSBzdGFjay5zbGljZSgwLCAtMSAqIGxlbiAqIDIpO1xuICAgICAgICAgICAgICAgIHZhbHVlU3RhY2sgPSB2YWx1ZVN0YWNrLnNsaWNlKDAsIC0xICogbGVuKTtcblxuICAgICAgICAgICAgICAgIHN0YWNrLnB1c2gocmVkdWNlZFN5bWJvbCk7XG5cbiAgICAgICAgICAgICAgICB2YWx1ZVN0YWNrLnB1c2goJCQpO1xuXG4gICAgICAgICAgICAgICAgdmFyIG5ld1N0YXRlID0gZ290b3Nbc3RhY2tbc3RhY2subGVuZ3RoIC0gMl1dW3N0YWNrW3N0YWNrLmxlbmd0aCAtIDFdXTtcblxuICAgICAgICAgICAgICAgIHN0YWNrLnB1c2gobmV3U3RhdGUpO1xuXG4gICAgICAgICAgICAgICAgYnJlYWs7XG5cbiAgICAgICAgICAgIGNhc2UgR3JhbW1hckNvbnN0LkFDQ0VQVF9UWVBFOlxuICAgICAgICAgICAgICAgIHJldHVybiAkJDtcbiAgICAgICAgICAgIH1cbiAgICAgICAgfVxuICAgIH07XG4gICAgcmV0dXJuIHBhcnNlcjtcbn0pKCk7XG5pZiAodHlwZW9mIG1vZHVsZSAhPT0gJ3VuZGVmaW5lZCcpIHtcbiAgICBtb2R1bGUuZXhwb3J0cyA9IHBhcnNlcjtcbn0iLCJmdW5jdGlvbiBpc1N0cmluZyAodmFsdWUpIHtcbiAgcmV0dXJuIHR5cGVvZiB2YWx1ZSA9PT0gJ3N0cmluZydcbn1cblxubW9kdWxlLmV4cG9ydHMgPSBpc1N0cmluZ1xuIiwiZnVuY3Rpb24gaXNVbmRlZmluZWQgKHZhbHVlKSB7XG4gIHJldHVybiB0eXBlb2YgdmFsdWUgPT09ICd1bmRlZmluZWQnXG59XG5cbm1vZHVsZS5leHBvcnRzID0gaXNVbmRlZmluZWRcbiIsImZ1bmN0aW9uIGFzc2lnbiAoZGVzdCkge1xuICB2YXIgYXJncyA9IGFyZ3VtZW50c1xuICB2YXIgc291cmNlXG5cbiAgZm9yICh2YXIgaSA9IDE7IGkgPCBhcmdzLmxlbmd0aDsgaSsrKSB7XG4gICAgc291cmNlID0gYXJnc1tpXVxuXG4gICAgZm9yICh2YXIga2V5IGluIHNvdXJjZSkge1xuICAgICAgZGVzdFtrZXldID0gc291cmNlW2tleV1cbiAgICB9XG4gIH1cblxuICByZXR1cm4gZGVzdFxufVxuXG5tb2R1bGUuZXhwb3J0cyA9IGFzc2lnblxuIiwidmFyIGNhbWVsQ2FzZSA9IHJlcXVpcmUoJy4vY2FtZWxDYXNlJylcblxuZnVuY3Rpb24gc3R5bGVDYW1lbENhc2UgKG5hbWUpIHtcbiAgdmFyIGNhbWVsID0gY2FtZWxDYXNlKG5hbWUpXG5cbiAgLy8gRGV0ZWN0IGlmIHRoZSBzdHlsZSBwcm9wZXJ0eSBpcyBhbHJlYWR5IGNhbWVsQ2FzZWRcbiAgLy8gVG8gbm90IGNvbnZlcnQgV2Via2l0KiwgTW96KiBhbmQgTyogdG8gbG93ZXJjYXNlXG4gIGlmIChjYW1lbC5jaGFyQXQoMCkudG9VcHBlckNhc2UoKSA9PT0gbmFtZS5jaGFyQXQoMCkpIHtcbiAgICByZXR1cm4gbmFtZS5jaGFyQXQoMCkgKyBjYW1lbC5zbGljZSgxKVxuICB9XG5cbiAgaWYgKG5hbWUuY2hhckF0KDApID09PSAnLScpIHtcbiAgICByZXR1cm4gY2FtZWwuaW5kZXhPZignbXMnKSA9PT0gMCA/IGNhbWVsXG4gICAgICA6IGNhbWVsLmNoYXJBdCgwKS50b1VwcGVyQ2FzZSgpICsgY2FtZWwuc2xpY2UoMSlcbiAgfSBlbHNlIHtcbiAgICByZXR1cm4gY2FtZWxcbiAgfVxufVxuXG5tb2R1bGUuZXhwb3J0cyA9IHN0eWxlQ2FtZWxDYXNlXG4iLCJmdW5jdGlvbiB3aW5kb3cgKCkge1xuICB2YXIgV2luZG93ID0ge1xuICAgIGdldENvbXB1dGVkU3R5bGU6IGZ1bmN0aW9uIChub2RlKSB7XG4gICAgICByZXR1cm4ge1xuICAgICAgICBnZXRQcm9wZXJ0eVZhbHVlOiBub2RlLnN0eWxlLmdldFByb3BlcnR5XG4gICAgICB9XG4gICAgfVxuICB9XG5cbiAgcmV0dXJuIFdpbmRvd1xufVxuXG5tb2R1bGUuZXhwb3J0cyA9IHdpbmRvd1xuIiwidmFyIFJlYWN0ID0gcmVxdWlyZSgncmVhY3QnKVxudmFyIGNyZWF0ZVJlYWN0Q2xhc3MgPSByZXF1aXJlKCdjcmVhdGUtcmVhY3QtY2xhc3MnKVxudmFyIG1hcFZhbHVlcyA9IHJlcXVpcmUoJy4vdXRpbHMvbWFwVmFsdWVzJylcbnZhciBob2lzdE5vblJlYWN0U3RhdGljcyA9IHJlcXVpcmUoJ2hvaXN0LW5vbi1yZWFjdC1zdGF0aWNzJylcblxuZnVuY3Rpb24gd2l0aEZhdXhET01GYWN0b3J5IChFbGVtZW50KSB7XG4gIGZ1bmN0aW9uIHdpdGhGYXV4RE9NIChXcmFwcGVkQ29tcG9uZW50KSB7XG4gICAgdmFyIFdpdGhGYXV4RE9NID0gY3JlYXRlUmVhY3RDbGFzcyh7XG4gICAgICBjb21wb25lbnRXaWxsTW91bnQ6IGZ1bmN0aW9uICgpIHtcbiAgICAgICAgdGhpcy5jb25uZWN0ZWRGYXV4RE9NID0ge31cbiAgICAgICAgdGhpcy5hbmltYXRlRmF1eERPTVVudGlsID0gMFxuICAgICAgfSxcbiAgICAgIGNvbXBvbmVudFdpbGxVbm1vdW50OiBmdW5jdGlvbiAoKSB7XG4gICAgICAgIHRoaXMuc3RvcEFuaW1hdGluZ0ZhdXhET00oKVxuICAgICAgICB0aGlzLnN0b3BEcmF3RmF1eERPTSgpXG4gICAgICB9LFxuICAgICAgY29ubmVjdEZhdXhET006IGZ1bmN0aW9uIChub2RlLCBuYW1lLCBkaXNjYXJkTm9kZSkge1xuICAgICAgICBpZiAoIXRoaXMuY29ubmVjdGVkRmF1eERPTVtuYW1lXSB8fCBkaXNjYXJkTm9kZSkge1xuICAgICAgICAgIHRoaXMuY29ubmVjdGVkRmF1eERPTVtuYW1lXSA9IHR5cGVvZiBub2RlICE9PSAnc3RyaW5nJyA/IG5vZGUgOiBuZXcgRWxlbWVudChub2RlKVxuICAgICAgICAgIHRoaXMuZHJhd0ZhdXhET01UaW1lb3V0ID0gc2V0VGltZW91dCh0aGlzLmRyYXdGYXV4RE9NKVxuICAgICAgICB9XG4gICAgICAgIHJldHVybiB0aGlzLmNvbm5lY3RlZEZhdXhET01bbmFtZV1cbiAgICAgIH0sXG4gICAgICBkcmF3RmF1eERPTTogZnVuY3Rpb24gKCkge1xuICAgICAgICB2YXIgdmlydHVhbERPTSA9IG1hcFZhbHVlcyh0aGlzLmNvbm5lY3RlZEZhdXhET00sIGZ1bmN0aW9uIChuKSB7XG4gICAgICAgICAgcmV0dXJuIG4udG9SZWFjdCgpXG4gICAgICAgIH0pXG4gICAgICAgIHRoaXMuc2V0U3RhdGUodmlydHVhbERPTSlcbiAgICAgIH0sXG4gICAgICBhbmltYXRlRmF1eERPTTogZnVuY3Rpb24gKGR1cmF0aW9uKSB7XG4gICAgICAgIHRoaXMuYW5pbWF0ZUZhdXhET01VbnRpbCA9IE1hdGgubWF4KERhdGUubm93KCkgKyBkdXJhdGlvbiwgdGhpcy5hbmltYXRlRmF1eERPTVVudGlsKVxuICAgICAgICBpZiAoIXRoaXMuZmF1eERPTUFuaW1hdGlvbkludGVydmFsKSB7XG4gICAgICAgICAgdGhpcy5mYXV4RE9NQW5pbWF0aW9uSW50ZXJ2YWwgPSBzZXRJbnRlcnZhbChmdW5jdGlvbiAoKSB7XG4gICAgICAgICAgICBpZiAoRGF0ZS5ub3coKSA8IHRoaXMuYW5pbWF0ZUZhdXhET01VbnRpbCkge1xuICAgICAgICAgICAgICB0aGlzLmRyYXdGYXV4RE9NKClcbiAgICAgICAgICAgIH0gZWxzZSB7XG4gICAgICAgICAgICAgIHRoaXMuc3RvcEFuaW1hdGluZ0ZhdXhET00oKVxuICAgICAgICAgICAgfVxuICAgICAgICAgIH0uYmluZCh0aGlzKSwgMTYpXG4gICAgICAgIH1cbiAgICAgIH0sXG4gICAgICBzdG9wQW5pbWF0aW5nRmF1eERPTTogZnVuY3Rpb24gKCkge1xuICAgICAgICB0aGlzLmZhdXhET01BbmltYXRpb25JbnRlcnZhbCA9IGNsZWFySW50ZXJ2YWwodGhpcy5mYXV4RE9NQW5pbWF0aW9uSW50ZXJ2YWwpXG4gICAgICAgIHRoaXMuYW5pbWF0ZUZhdXhET01VbnRpbCA9IDBcbiAgICAgIH0sXG4gICAgICBzdG9wRHJhd0ZhdXhET006IGZ1bmN0aW9uICgpIHtcbiAgICAgICAgdGhpcy5kcmF3RmF1eERPTVRpbWVvdXQgPSBjbGVhclRpbWVvdXQodGhpcy5kcmF3RmF1eERPTVRpbWVvdXQpXG4gICAgICB9LFxuICAgICAgaXNBbmltYXRpbmdGYXV4RE9NOiBmdW5jdGlvbiAoKSB7XG4gICAgICAgIHJldHVybiAhIXRoaXMuZmF1eERPTUFuaW1hdGlvbkludGVydmFsXG4gICAgICB9LFxuICAgICAgcmVuZGVyOiBmdW5jdGlvbiAoKSB7XG4gICAgICAgIHZhciBwcm9wcyA9IE9iamVjdC5hc3NpZ24oe30sIHRoaXMucHJvcHMsIHRoaXMuc3RhdGUsIHtcbiAgICAgICAgICBjb25uZWN0RmF1eERPTTogdGhpcy5jb25uZWN0RmF1eERPTSxcbiAgICAgICAgICBkcmF3RmF1eERPTTogdGhpcy5kcmF3RmF1eERPTSxcbiAgICAgICAgICBhbmltYXRlRmF1eERPTTogdGhpcy5hbmltYXRlRmF1eERPTSxcbiAgICAgICAgICBzdG9wQW5pbWF0aW5nRmF1eERPTTogdGhpcy5zdG9wQW5pbWF0aW5nRmF1eERPTSxcbiAgICAgICAgICBpc0FuaW1hdGluZ0ZhdXhET006IHRoaXMuaXNBbmltYXRpbmdGYXV4RE9NXG4gICAgICAgIH0pXG4gICAgICAgIHJldHVybiBSZWFjdC5jcmVhdGVFbGVtZW50KFdyYXBwZWRDb21wb25lbnQsIHByb3BzKVxuICAgICAgfVxuICAgIH0pXG4gICAgV2l0aEZhdXhET00uZGlzcGxheU5hbWUgPSAnV2l0aEZhdXhET00oJyArIGdldERpc3BsYXlOYW1lKFdyYXBwZWRDb21wb25lbnQpICsgJyknXG4gICAgaG9pc3ROb25SZWFjdFN0YXRpY3MoV2l0aEZhdXhET00sIFdyYXBwZWRDb21wb25lbnQpXG4gICAgcmV0dXJuIFdpdGhGYXV4RE9NXG4gIH1cblxuICByZXR1cm4gd2l0aEZhdXhET01cbn1cblxuZnVuY3Rpb24gZ2V0RGlzcGxheU5hbWUgKFdyYXBwZWRDb21wb25lbnQpIHtcbiAgcmV0dXJuIFdyYXBwZWRDb21wb25lbnQuZGlzcGxheU5hbWUgfHwgV3JhcHBlZENvbXBvbmVudC5uYW1lIHx8ICdDb21wb25lbnQnXG59XG5cbm1vZHVsZS5leHBvcnRzID0gd2l0aEZhdXhET01GYWN0b3J5XG4iLCIvKipcbiAqIENvcHlyaWdodCAoYykgMjAxMy1wcmVzZW50LCBGYWNlYm9vaywgSW5jLlxuICpcbiAqIFRoaXMgc291cmNlIGNvZGUgaXMgbGljZW5zZWQgdW5kZXIgdGhlIE1JVCBsaWNlbnNlIGZvdW5kIGluIHRoZVxuICogTElDRU5TRSBmaWxlIGluIHRoZSByb290IGRpcmVjdG9yeSBvZiB0aGlzIHNvdXJjZSB0cmVlLlxuICpcbiAqL1xuXG4ndXNlIHN0cmljdCc7XG5cbnZhciBSZWFjdCA9IHJlcXVpcmUoJ3JlYWN0Jyk7XG52YXIgZmFjdG9yeSA9IHJlcXVpcmUoJy4vZmFjdG9yeScpO1xuXG5pZiAodHlwZW9mIFJlYWN0ID09PSAndW5kZWZpbmVkJykge1xuICB0aHJvdyBFcnJvcihcbiAgICAnY3JlYXRlLXJlYWN0LWNsYXNzIGNvdWxkIG5vdCBmaW5kIHRoZSBSZWFjdCBvYmplY3QuIElmIHlvdSBhcmUgdXNpbmcgc2NyaXB0IHRhZ3MsICcgK1xuICAgICAgJ21ha2Ugc3VyZSB0aGF0IFJlYWN0IGlzIGJlaW5nIGxvYWRlZCBiZWZvcmUgY3JlYXRlLXJlYWN0LWNsYXNzLidcbiAgKTtcbn1cblxuLy8gSGFjayB0byBncmFiIE5vb3BVcGRhdGVRdWV1ZSBmcm9tIGlzb21vcnBoaWMgUmVhY3RcbnZhciBSZWFjdE5vb3BVcGRhdGVRdWV1ZSA9IG5ldyBSZWFjdC5Db21wb25lbnQoKS51cGRhdGVyO1xuXG5tb2R1bGUuZXhwb3J0cyA9IGZhY3RvcnkoXG4gIFJlYWN0LkNvbXBvbmVudCxcbiAgUmVhY3QuaXNWYWxpZEVsZW1lbnQsXG4gIFJlYWN0Tm9vcFVwZGF0ZVF1ZXVlXG4pO1xuIiwiLyoqXG4gKiBDb3B5cmlnaHQgKGMpIDIwMTMtcHJlc2VudCwgRmFjZWJvb2ssIEluYy5cbiAqXG4gKiBUaGlzIHNvdXJjZSBjb2RlIGlzIGxpY2Vuc2VkIHVuZGVyIHRoZSBNSVQgbGljZW5zZSBmb3VuZCBpbiB0aGVcbiAqIExJQ0VOU0UgZmlsZSBpbiB0aGUgcm9vdCBkaXJlY3Rvcnkgb2YgdGhpcyBzb3VyY2UgdHJlZS5cbiAqXG4gKi9cblxuJ3VzZSBzdHJpY3QnO1xuXG52YXIgX2Fzc2lnbiA9IHJlcXVpcmUoJ29iamVjdC1hc3NpZ24nKTtcblxudmFyIGVtcHR5T2JqZWN0ID0gcmVxdWlyZSgnZmJqcy9saWIvZW1wdHlPYmplY3QnKTtcbnZhciBfaW52YXJpYW50ID0gcmVxdWlyZSgnZmJqcy9saWIvaW52YXJpYW50Jyk7XG5cbmlmIChwcm9jZXNzLmVudi5OT0RFX0VOViAhPT0gJ3Byb2R1Y3Rpb24nKSB7XG4gIHZhciB3YXJuaW5nID0gcmVxdWlyZSgnZmJqcy9saWIvd2FybmluZycpO1xufVxuXG52YXIgTUlYSU5TX0tFWSA9ICdtaXhpbnMnO1xuXG4vLyBIZWxwZXIgZnVuY3Rpb24gdG8gYWxsb3cgdGhlIGNyZWF0aW9uIG9mIGFub255bW91cyBmdW5jdGlvbnMgd2hpY2ggZG8gbm90XG4vLyBoYXZlIC5uYW1lIHNldCB0byB0aGUgbmFtZSBvZiB0aGUgdmFyaWFibGUgYmVpbmcgYXNzaWduZWQgdG8uXG5mdW5jdGlvbiBpZGVudGl0eShmbikge1xuICByZXR1cm4gZm47XG59XG5cbnZhciBSZWFjdFByb3BUeXBlTG9jYXRpb25OYW1lcztcbmlmIChwcm9jZXNzLmVudi5OT0RFX0VOViAhPT0gJ3Byb2R1Y3Rpb24nKSB7XG4gIFJlYWN0UHJvcFR5cGVMb2NhdGlvbk5hbWVzID0ge1xuICAgIHByb3A6ICdwcm9wJyxcbiAgICBjb250ZXh0OiAnY29udGV4dCcsXG4gICAgY2hpbGRDb250ZXh0OiAnY2hpbGQgY29udGV4dCdcbiAgfTtcbn0gZWxzZSB7XG4gIFJlYWN0UHJvcFR5cGVMb2NhdGlvbk5hbWVzID0ge307XG59XG5cbmZ1bmN0aW9uIGZhY3RvcnkoUmVhY3RDb21wb25lbnQsIGlzVmFsaWRFbGVtZW50LCBSZWFjdE5vb3BVcGRhdGVRdWV1ZSkge1xuICAvKipcbiAgICogUG9saWNpZXMgdGhhdCBkZXNjcmliZSBtZXRob2RzIGluIGBSZWFjdENsYXNzSW50ZXJmYWNlYC5cbiAgICovXG5cbiAgdmFyIGluamVjdGVkTWl4aW5zID0gW107XG5cbiAgLyoqXG4gICAqIENvbXBvc2l0ZSBjb21wb25lbnRzIGFyZSBoaWdoZXItbGV2ZWwgY29tcG9uZW50cyB0aGF0IGNvbXBvc2Ugb3RoZXIgY29tcG9zaXRlXG4gICAqIG9yIGhvc3QgY29tcG9uZW50cy5cbiAgICpcbiAgICogVG8gY3JlYXRlIGEgbmV3IHR5cGUgb2YgYFJlYWN0Q2xhc3NgLCBwYXNzIGEgc3BlY2lmaWNhdGlvbiBvZlxuICAgKiB5b3VyIG5ldyBjbGFzcyB0byBgUmVhY3QuY3JlYXRlQ2xhc3NgLiBUaGUgb25seSByZXF1aXJlbWVudCBvZiB5b3VyIGNsYXNzXG4gICAqIHNwZWNpZmljYXRpb24gaXMgdGhhdCB5b3UgaW1wbGVtZW50IGEgYHJlbmRlcmAgbWV0aG9kLlxuICAgKlxuICAgKiAgIHZhciBNeUNvbXBvbmVudCA9IFJlYWN0LmNyZWF0ZUNsYXNzKHtcbiAgICogICAgIHJlbmRlcjogZnVuY3Rpb24oKSB7XG4gICAqICAgICAgIHJldHVybiA8ZGl2PkhlbGxvIFdvcmxkPC9kaXY+O1xuICAgKiAgICAgfVxuICAgKiAgIH0pO1xuICAgKlxuICAgKiBUaGUgY2xhc3Mgc3BlY2lmaWNhdGlvbiBzdXBwb3J0cyBhIHNwZWNpZmljIHByb3RvY29sIG9mIG1ldGhvZHMgdGhhdCBoYXZlXG4gICAqIHNwZWNpYWwgbWVhbmluZyAoZS5nLiBgcmVuZGVyYCkuIFNlZSBgUmVhY3RDbGFzc0ludGVyZmFjZWAgZm9yXG4gICAqIG1vcmUgdGhlIGNvbXByZWhlbnNpdmUgcHJvdG9jb2wuIEFueSBvdGhlciBwcm9wZXJ0aWVzIGFuZCBtZXRob2RzIGluIHRoZVxuICAgKiBjbGFzcyBzcGVjaWZpY2F0aW9uIHdpbGwgYmUgYXZhaWxhYmxlIG9uIHRoZSBwcm90b3R5cGUuXG4gICAqXG4gICAqIEBpbnRlcmZhY2UgUmVhY3RDbGFzc0ludGVyZmFjZVxuICAgKiBAaW50ZXJuYWxcbiAgICovXG4gIHZhciBSZWFjdENsYXNzSW50ZXJmYWNlID0ge1xuICAgIC8qKlxuICAgICAqIEFuIGFycmF5IG9mIE1peGluIG9iamVjdHMgdG8gaW5jbHVkZSB3aGVuIGRlZmluaW5nIHlvdXIgY29tcG9uZW50LlxuICAgICAqXG4gICAgICogQHR5cGUge2FycmF5fVxuICAgICAqIEBvcHRpb25hbFxuICAgICAqL1xuICAgIG1peGluczogJ0RFRklORV9NQU5ZJyxcblxuICAgIC8qKlxuICAgICAqIEFuIG9iamVjdCBjb250YWluaW5nIHByb3BlcnRpZXMgYW5kIG1ldGhvZHMgdGhhdCBzaG91bGQgYmUgZGVmaW5lZCBvblxuICAgICAqIHRoZSBjb21wb25lbnQncyBjb25zdHJ1Y3RvciBpbnN0ZWFkIG9mIGl0cyBwcm90b3R5cGUgKHN0YXRpYyBtZXRob2RzKS5cbiAgICAgKlxuICAgICAqIEB0eXBlIHtvYmplY3R9XG4gICAgICogQG9wdGlvbmFsXG4gICAgICovXG4gICAgc3RhdGljczogJ0RFRklORV9NQU5ZJyxcblxuICAgIC8qKlxuICAgICAqIERlZmluaXRpb24gb2YgcHJvcCB0eXBlcyBmb3IgdGhpcyBjb21wb25lbnQuXG4gICAgICpcbiAgICAgKiBAdHlwZSB7b2JqZWN0fVxuICAgICAqIEBvcHRpb25hbFxuICAgICAqL1xuICAgIHByb3BUeXBlczogJ0RFRklORV9NQU5ZJyxcblxuICAgIC8qKlxuICAgICAqIERlZmluaXRpb24gb2YgY29udGV4dCB0eXBlcyBmb3IgdGhpcyBjb21wb25lbnQuXG4gICAgICpcbiAgICAgKiBAdHlwZSB7b2JqZWN0fVxuICAgICAqIEBvcHRpb25hbFxuICAgICAqL1xuICAgIGNvbnRleHRUeXBlczogJ0RFRklORV9NQU5ZJyxcblxuICAgIC8qKlxuICAgICAqIERlZmluaXRpb24gb2YgY29udGV4dCB0eXBlcyB0aGlzIGNvbXBvbmVudCBzZXRzIGZvciBpdHMgY2hpbGRyZW4uXG4gICAgICpcbiAgICAgKiBAdHlwZSB7b2JqZWN0fVxuICAgICAqIEBvcHRpb25hbFxuICAgICAqL1xuICAgIGNoaWxkQ29udGV4dFR5cGVzOiAnREVGSU5FX01BTlknLFxuXG4gICAgLy8gPT09PSBEZWZpbml0aW9uIG1ldGhvZHMgPT09PVxuXG4gICAgLyoqXG4gICAgICogSW52b2tlZCB3aGVuIHRoZSBjb21wb25lbnQgaXMgbW91bnRlZC4gVmFsdWVzIGluIHRoZSBtYXBwaW5nIHdpbGwgYmUgc2V0IG9uXG4gICAgICogYHRoaXMucHJvcHNgIGlmIHRoYXQgcHJvcCBpcyBub3Qgc3BlY2lmaWVkIChpLmUuIHVzaW5nIGFuIGBpbmAgY2hlY2spLlxuICAgICAqXG4gICAgICogVGhpcyBtZXRob2QgaXMgaW52b2tlZCBiZWZvcmUgYGdldEluaXRpYWxTdGF0ZWAgYW5kIHRoZXJlZm9yZSBjYW5ub3QgcmVseVxuICAgICAqIG9uIGB0aGlzLnN0YXRlYCBvciB1c2UgYHRoaXMuc2V0U3RhdGVgLlxuICAgICAqXG4gICAgICogQHJldHVybiB7b2JqZWN0fVxuICAgICAqIEBvcHRpb25hbFxuICAgICAqL1xuICAgIGdldERlZmF1bHRQcm9wczogJ0RFRklORV9NQU5ZX01FUkdFRCcsXG5cbiAgICAvKipcbiAgICAgKiBJbnZva2VkIG9uY2UgYmVmb3JlIHRoZSBjb21wb25lbnQgaXMgbW91bnRlZC4gVGhlIHJldHVybiB2YWx1ZSB3aWxsIGJlIHVzZWRcbiAgICAgKiBhcyB0aGUgaW5pdGlhbCB2YWx1ZSBvZiBgdGhpcy5zdGF0ZWAuXG4gICAgICpcbiAgICAgKiAgIGdldEluaXRpYWxTdGF0ZTogZnVuY3Rpb24oKSB7XG4gICAgICogICAgIHJldHVybiB7XG4gICAgICogICAgICAgaXNPbjogZmFsc2UsXG4gICAgICogICAgICAgZm9vQmF6OiBuZXcgQmF6Rm9vKClcbiAgICAgKiAgICAgfVxuICAgICAqICAgfVxuICAgICAqXG4gICAgICogQHJldHVybiB7b2JqZWN0fVxuICAgICAqIEBvcHRpb25hbFxuICAgICAqL1xuICAgIGdldEluaXRpYWxTdGF0ZTogJ0RFRklORV9NQU5ZX01FUkdFRCcsXG5cbiAgICAvKipcbiAgICAgKiBAcmV0dXJuIHtvYmplY3R9XG4gICAgICogQG9wdGlvbmFsXG4gICAgICovXG4gICAgZ2V0Q2hpbGRDb250ZXh0OiAnREVGSU5FX01BTllfTUVSR0VEJyxcblxuICAgIC8qKlxuICAgICAqIFVzZXMgcHJvcHMgZnJvbSBgdGhpcy5wcm9wc2AgYW5kIHN0YXRlIGZyb20gYHRoaXMuc3RhdGVgIHRvIHJlbmRlciB0aGVcbiAgICAgKiBzdHJ1Y3R1cmUgb2YgdGhlIGNvbXBvbmVudC5cbiAgICAgKlxuICAgICAqIE5vIGd1YXJhbnRlZXMgYXJlIG1hZGUgYWJvdXQgd2hlbiBvciBob3cgb2Z0ZW4gdGhpcyBtZXRob2QgaXMgaW52b2tlZCwgc29cbiAgICAgKiBpdCBtdXN0IG5vdCBoYXZlIHNpZGUgZWZmZWN0cy5cbiAgICAgKlxuICAgICAqICAgcmVuZGVyOiBmdW5jdGlvbigpIHtcbiAgICAgKiAgICAgdmFyIG5hbWUgPSB0aGlzLnByb3BzLm5hbWU7XG4gICAgICogICAgIHJldHVybiA8ZGl2PkhlbGxvLCB7bmFtZX0hPC9kaXY+O1xuICAgICAqICAgfVxuICAgICAqXG4gICAgICogQHJldHVybiB7UmVhY3RDb21wb25lbnR9XG4gICAgICogQHJlcXVpcmVkXG4gICAgICovXG4gICAgcmVuZGVyOiAnREVGSU5FX09OQ0UnLFxuXG4gICAgLy8gPT09PSBEZWxlZ2F0ZSBtZXRob2RzID09PT1cblxuICAgIC8qKlxuICAgICAqIEludm9rZWQgd2hlbiB0aGUgY29tcG9uZW50IGlzIGluaXRpYWxseSBjcmVhdGVkIGFuZCBhYm91dCB0byBiZSBtb3VudGVkLlxuICAgICAqIFRoaXMgbWF5IGhhdmUgc2lkZSBlZmZlY3RzLCBidXQgYW55IGV4dGVybmFsIHN1YnNjcmlwdGlvbnMgb3IgZGF0YSBjcmVhdGVkXG4gICAgICogYnkgdGhpcyBtZXRob2QgbXVzdCBiZSBjbGVhbmVkIHVwIGluIGBjb21wb25lbnRXaWxsVW5tb3VudGAuXG4gICAgICpcbiAgICAgKiBAb3B0aW9uYWxcbiAgICAgKi9cbiAgICBjb21wb25lbnRXaWxsTW91bnQ6ICdERUZJTkVfTUFOWScsXG5cbiAgICAvKipcbiAgICAgKiBJbnZva2VkIHdoZW4gdGhlIGNvbXBvbmVudCBoYXMgYmVlbiBtb3VudGVkIGFuZCBoYXMgYSBET00gcmVwcmVzZW50YXRpb24uXG4gICAgICogSG93ZXZlciwgdGhlcmUgaXMgbm8gZ3VhcmFudGVlIHRoYXQgdGhlIERPTSBub2RlIGlzIGluIHRoZSBkb2N1bWVudC5cbiAgICAgKlxuICAgICAqIFVzZSB0aGlzIGFzIGFuIG9wcG9ydHVuaXR5IHRvIG9wZXJhdGUgb24gdGhlIERPTSB3aGVuIHRoZSBjb21wb25lbnQgaGFzXG4gICAgICogYmVlbiBtb3VudGVkIChpbml0aWFsaXplZCBhbmQgcmVuZGVyZWQpIGZvciB0aGUgZmlyc3QgdGltZS5cbiAgICAgKlxuICAgICAqIEBwYXJhbSB7RE9NRWxlbWVudH0gcm9vdE5vZGUgRE9NIGVsZW1lbnQgcmVwcmVzZW50aW5nIHRoZSBjb21wb25lbnQuXG4gICAgICogQG9wdGlvbmFsXG4gICAgICovXG4gICAgY29tcG9uZW50RGlkTW91bnQ6ICdERUZJTkVfTUFOWScsXG5cbiAgICAvKipcbiAgICAgKiBJbnZva2VkIGJlZm9yZSB0aGUgY29tcG9uZW50IHJlY2VpdmVzIG5ldyBwcm9wcy5cbiAgICAgKlxuICAgICAqIFVzZSB0aGlzIGFzIGFuIG9wcG9ydHVuaXR5IHRvIHJlYWN0IHRvIGEgcHJvcCB0cmFuc2l0aW9uIGJ5IHVwZGF0aW5nIHRoZVxuICAgICAqIHN0YXRlIHVzaW5nIGB0aGlzLnNldFN0YXRlYC4gQ3VycmVudCBwcm9wcyBhcmUgYWNjZXNzZWQgdmlhIGB0aGlzLnByb3BzYC5cbiAgICAgKlxuICAgICAqICAgY29tcG9uZW50V2lsbFJlY2VpdmVQcm9wczogZnVuY3Rpb24obmV4dFByb3BzLCBuZXh0Q29udGV4dCkge1xuICAgICAqICAgICB0aGlzLnNldFN0YXRlKHtcbiAgICAgKiAgICAgICBsaWtlc0luY3JlYXNpbmc6IG5leHRQcm9wcy5saWtlQ291bnQgPiB0aGlzLnByb3BzLmxpa2VDb3VudFxuICAgICAqICAgICB9KTtcbiAgICAgKiAgIH1cbiAgICAgKlxuICAgICAqIE5PVEU6IFRoZXJlIGlzIG5vIGVxdWl2YWxlbnQgYGNvbXBvbmVudFdpbGxSZWNlaXZlU3RhdGVgLiBBbiBpbmNvbWluZyBwcm9wXG4gICAgICogdHJhbnNpdGlvbiBtYXkgY2F1c2UgYSBzdGF0ZSBjaGFuZ2UsIGJ1dCB0aGUgb3Bwb3NpdGUgaXMgbm90IHRydWUuIElmIHlvdVxuICAgICAqIG5lZWQgaXQsIHlvdSBhcmUgcHJvYmFibHkgbG9va2luZyBmb3IgYGNvbXBvbmVudFdpbGxVcGRhdGVgLlxuICAgICAqXG4gICAgICogQHBhcmFtIHtvYmplY3R9IG5leHRQcm9wc1xuICAgICAqIEBvcHRpb25hbFxuICAgICAqL1xuICAgIGNvbXBvbmVudFdpbGxSZWNlaXZlUHJvcHM6ICdERUZJTkVfTUFOWScsXG5cbiAgICAvKipcbiAgICAgKiBJbnZva2VkIHdoaWxlIGRlY2lkaW5nIGlmIHRoZSBjb21wb25lbnQgc2hvdWxkIGJlIHVwZGF0ZWQgYXMgYSByZXN1bHQgb2ZcbiAgICAgKiByZWNlaXZpbmcgbmV3IHByb3BzLCBzdGF0ZSBhbmQvb3IgY29udGV4dC5cbiAgICAgKlxuICAgICAqIFVzZSB0aGlzIGFzIGFuIG9wcG9ydHVuaXR5IHRvIGByZXR1cm4gZmFsc2VgIHdoZW4geW91J3JlIGNlcnRhaW4gdGhhdCB0aGVcbiAgICAgKiB0cmFuc2l0aW9uIHRvIHRoZSBuZXcgcHJvcHMvc3RhdGUvY29udGV4dCB3aWxsIG5vdCByZXF1aXJlIGEgY29tcG9uZW50XG4gICAgICogdXBkYXRlLlxuICAgICAqXG4gICAgICogICBzaG91bGRDb21wb25lbnRVcGRhdGU6IGZ1bmN0aW9uKG5leHRQcm9wcywgbmV4dFN0YXRlLCBuZXh0Q29udGV4dCkge1xuICAgICAqICAgICByZXR1cm4gIWVxdWFsKG5leHRQcm9wcywgdGhpcy5wcm9wcykgfHxcbiAgICAgKiAgICAgICAhZXF1YWwobmV4dFN0YXRlLCB0aGlzLnN0YXRlKSB8fFxuICAgICAqICAgICAgICFlcXVhbChuZXh0Q29udGV4dCwgdGhpcy5jb250ZXh0KTtcbiAgICAgKiAgIH1cbiAgICAgKlxuICAgICAqIEBwYXJhbSB7b2JqZWN0fSBuZXh0UHJvcHNcbiAgICAgKiBAcGFyYW0gez9vYmplY3R9IG5leHRTdGF0ZVxuICAgICAqIEBwYXJhbSB7P29iamVjdH0gbmV4dENvbnRleHRcbiAgICAgKiBAcmV0dXJuIHtib29sZWFufSBUcnVlIGlmIHRoZSBjb21wb25lbnQgc2hvdWxkIHVwZGF0ZS5cbiAgICAgKiBAb3B0aW9uYWxcbiAgICAgKi9cbiAgICBzaG91bGRDb21wb25lbnRVcGRhdGU6ICdERUZJTkVfT05DRScsXG5cbiAgICAvKipcbiAgICAgKiBJbnZva2VkIHdoZW4gdGhlIGNvbXBvbmVudCBpcyBhYm91dCB0byB1cGRhdGUgZHVlIHRvIGEgdHJhbnNpdGlvbiBmcm9tXG4gICAgICogYHRoaXMucHJvcHNgLCBgdGhpcy5zdGF0ZWAgYW5kIGB0aGlzLmNvbnRleHRgIHRvIGBuZXh0UHJvcHNgLCBgbmV4dFN0YXRlYFxuICAgICAqIGFuZCBgbmV4dENvbnRleHRgLlxuICAgICAqXG4gICAgICogVXNlIHRoaXMgYXMgYW4gb3Bwb3J0dW5pdHkgdG8gcGVyZm9ybSBwcmVwYXJhdGlvbiBiZWZvcmUgYW4gdXBkYXRlIG9jY3Vycy5cbiAgICAgKlxuICAgICAqIE5PVEU6IFlvdSAqKmNhbm5vdCoqIHVzZSBgdGhpcy5zZXRTdGF0ZSgpYCBpbiB0aGlzIG1ldGhvZC5cbiAgICAgKlxuICAgICAqIEBwYXJhbSB7b2JqZWN0fSBuZXh0UHJvcHNcbiAgICAgKiBAcGFyYW0gez9vYmplY3R9IG5leHRTdGF0ZVxuICAgICAqIEBwYXJhbSB7P29iamVjdH0gbmV4dENvbnRleHRcbiAgICAgKiBAcGFyYW0ge1JlYWN0UmVjb25jaWxlVHJhbnNhY3Rpb259IHRyYW5zYWN0aW9uXG4gICAgICogQG9wdGlvbmFsXG4gICAgICovXG4gICAgY29tcG9uZW50V2lsbFVwZGF0ZTogJ0RFRklORV9NQU5ZJyxcblxuICAgIC8qKlxuICAgICAqIEludm9rZWQgd2hlbiB0aGUgY29tcG9uZW50J3MgRE9NIHJlcHJlc2VudGF0aW9uIGhhcyBiZWVuIHVwZGF0ZWQuXG4gICAgICpcbiAgICAgKiBVc2UgdGhpcyBhcyBhbiBvcHBvcnR1bml0eSB0byBvcGVyYXRlIG9uIHRoZSBET00gd2hlbiB0aGUgY29tcG9uZW50IGhhc1xuICAgICAqIGJlZW4gdXBkYXRlZC5cbiAgICAgKlxuICAgICAqIEBwYXJhbSB7b2JqZWN0fSBwcmV2UHJvcHNcbiAgICAgKiBAcGFyYW0gez9vYmplY3R9IHByZXZTdGF0ZVxuICAgICAqIEBwYXJhbSB7P29iamVjdH0gcHJldkNvbnRleHRcbiAgICAgKiBAcGFyYW0ge0RPTUVsZW1lbnR9IHJvb3ROb2RlIERPTSBlbGVtZW50IHJlcHJlc2VudGluZyB0aGUgY29tcG9uZW50LlxuICAgICAqIEBvcHRpb25hbFxuICAgICAqL1xuICAgIGNvbXBvbmVudERpZFVwZGF0ZTogJ0RFRklORV9NQU5ZJyxcblxuICAgIC8qKlxuICAgICAqIEludm9rZWQgd2hlbiB0aGUgY29tcG9uZW50IGlzIGFib3V0IHRvIGJlIHJlbW92ZWQgZnJvbSBpdHMgcGFyZW50IGFuZCBoYXZlXG4gICAgICogaXRzIERPTSByZXByZXNlbnRhdGlvbiBkZXN0cm95ZWQuXG4gICAgICpcbiAgICAgKiBVc2UgdGhpcyBhcyBhbiBvcHBvcnR1bml0eSB0byBkZWFsbG9jYXRlIGFueSBleHRlcm5hbCByZXNvdXJjZXMuXG4gICAgICpcbiAgICAgKiBOT1RFOiBUaGVyZSBpcyBubyBgY29tcG9uZW50RGlkVW5tb3VudGAgc2luY2UgeW91ciBjb21wb25lbnQgd2lsbCBoYXZlIGJlZW5cbiAgICAgKiBkZXN0cm95ZWQgYnkgdGhhdCBwb2ludC5cbiAgICAgKlxuICAgICAqIEBvcHRpb25hbFxuICAgICAqL1xuICAgIGNvbXBvbmVudFdpbGxVbm1vdW50OiAnREVGSU5FX01BTlknLFxuXG4gICAgLyoqXG4gICAgICogUmVwbGFjZW1lbnQgZm9yIChkZXByZWNhdGVkKSBgY29tcG9uZW50V2lsbE1vdW50YC5cbiAgICAgKlxuICAgICAqIEBvcHRpb25hbFxuICAgICAqL1xuICAgIFVOU0FGRV9jb21wb25lbnRXaWxsTW91bnQ6ICdERUZJTkVfTUFOWScsXG5cbiAgICAvKipcbiAgICAgKiBSZXBsYWNlbWVudCBmb3IgKGRlcHJlY2F0ZWQpIGBjb21wb25lbnRXaWxsUmVjZWl2ZVByb3BzYC5cbiAgICAgKlxuICAgICAqIEBvcHRpb25hbFxuICAgICAqL1xuICAgIFVOU0FGRV9jb21wb25lbnRXaWxsUmVjZWl2ZVByb3BzOiAnREVGSU5FX01BTlknLFxuXG4gICAgLyoqXG4gICAgICogUmVwbGFjZW1lbnQgZm9yIChkZXByZWNhdGVkKSBgY29tcG9uZW50V2lsbFVwZGF0ZWAuXG4gICAgICpcbiAgICAgKiBAb3B0aW9uYWxcbiAgICAgKi9cbiAgICBVTlNBRkVfY29tcG9uZW50V2lsbFVwZGF0ZTogJ0RFRklORV9NQU5ZJyxcblxuICAgIC8vID09PT0gQWR2YW5jZWQgbWV0aG9kcyA9PT09XG5cbiAgICAvKipcbiAgICAgKiBVcGRhdGVzIHRoZSBjb21wb25lbnQncyBjdXJyZW50bHkgbW91bnRlZCBET00gcmVwcmVzZW50YXRpb24uXG4gICAgICpcbiAgICAgKiBCeSBkZWZhdWx0LCB0aGlzIGltcGxlbWVudHMgUmVhY3QncyByZW5kZXJpbmcgYW5kIHJlY29uY2lsaWF0aW9uIGFsZ29yaXRobS5cbiAgICAgKiBTb3BoaXN0aWNhdGVkIGNsaWVudHMgbWF5IHdpc2ggdG8gb3ZlcnJpZGUgdGhpcy5cbiAgICAgKlxuICAgICAqIEBwYXJhbSB7UmVhY3RSZWNvbmNpbGVUcmFuc2FjdGlvbn0gdHJhbnNhY3Rpb25cbiAgICAgKiBAaW50ZXJuYWxcbiAgICAgKiBAb3ZlcnJpZGFibGVcbiAgICAgKi9cbiAgICB1cGRhdGVDb21wb25lbnQ6ICdPVkVSUklERV9CQVNFJ1xuICB9O1xuXG4gIC8qKlxuICAgKiBTaW1pbGFyIHRvIFJlYWN0Q2xhc3NJbnRlcmZhY2UgYnV0IGZvciBzdGF0aWMgbWV0aG9kcy5cbiAgICovXG4gIHZhciBSZWFjdENsYXNzU3RhdGljSW50ZXJmYWNlID0ge1xuICAgIC8qKlxuICAgICAqIFRoaXMgbWV0aG9kIGlzIGludm9rZWQgYWZ0ZXIgYSBjb21wb25lbnQgaXMgaW5zdGFudGlhdGVkIGFuZCB3aGVuIGl0XG4gICAgICogcmVjZWl2ZXMgbmV3IHByb3BzLiBSZXR1cm4gYW4gb2JqZWN0IHRvIHVwZGF0ZSBzdGF0ZSBpbiByZXNwb25zZSB0b1xuICAgICAqIHByb3AgY2hhbmdlcy4gUmV0dXJuIG51bGwgdG8gaW5kaWNhdGUgbm8gY2hhbmdlIHRvIHN0YXRlLlxuICAgICAqXG4gICAgICogSWYgYW4gb2JqZWN0IGlzIHJldHVybmVkLCBpdHMga2V5cyB3aWxsIGJlIG1lcmdlZCBpbnRvIHRoZSBleGlzdGluZyBzdGF0ZS5cbiAgICAgKlxuICAgICAqIEByZXR1cm4ge29iamVjdCB8fCBudWxsfVxuICAgICAqIEBvcHRpb25hbFxuICAgICAqL1xuICAgIGdldERlcml2ZWRTdGF0ZUZyb21Qcm9wczogJ0RFRklORV9NQU5ZX01FUkdFRCdcbiAgfTtcblxuICAvKipcbiAgICogTWFwcGluZyBmcm9tIGNsYXNzIHNwZWNpZmljYXRpb24ga2V5cyB0byBzcGVjaWFsIHByb2Nlc3NpbmcgZnVuY3Rpb25zLlxuICAgKlxuICAgKiBBbHRob3VnaCB0aGVzZSBhcmUgZGVjbGFyZWQgbGlrZSBpbnN0YW5jZSBwcm9wZXJ0aWVzIGluIHRoZSBzcGVjaWZpY2F0aW9uXG4gICAqIHdoZW4gZGVmaW5pbmcgY2xhc3NlcyB1c2luZyBgUmVhY3QuY3JlYXRlQ2xhc3NgLCB0aGV5IGFyZSBhY3R1YWxseSBzdGF0aWNcbiAgICogYW5kIGFyZSBhY2Nlc3NpYmxlIG9uIHRoZSBjb25zdHJ1Y3RvciBpbnN0ZWFkIG9mIHRoZSBwcm90b3R5cGUuIERlc3BpdGVcbiAgICogYmVpbmcgc3RhdGljLCB0aGV5IG11c3QgYmUgZGVmaW5lZCBvdXRzaWRlIG9mIHRoZSBcInN0YXRpY3NcIiBrZXkgdW5kZXJcbiAgICogd2hpY2ggYWxsIG90aGVyIHN0YXRpYyBtZXRob2RzIGFyZSBkZWZpbmVkLlxuICAgKi9cbiAgdmFyIFJFU0VSVkVEX1NQRUNfS0VZUyA9IHtcbiAgICBkaXNwbGF5TmFtZTogZnVuY3Rpb24oQ29uc3RydWN0b3IsIGRpc3BsYXlOYW1lKSB7XG4gICAgICBDb25zdHJ1Y3Rvci5kaXNwbGF5TmFtZSA9IGRpc3BsYXlOYW1lO1xuICAgIH0sXG4gICAgbWl4aW5zOiBmdW5jdGlvbihDb25zdHJ1Y3RvciwgbWl4aW5zKSB7XG4gICAgICBpZiAobWl4aW5zKSB7XG4gICAgICAgIGZvciAodmFyIGkgPSAwOyBpIDwgbWl4aW5zLmxlbmd0aDsgaSsrKSB7XG4gICAgICAgICAgbWl4U3BlY0ludG9Db21wb25lbnQoQ29uc3RydWN0b3IsIG1peGluc1tpXSk7XG4gICAgICAgIH1cbiAgICAgIH1cbiAgICB9LFxuICAgIGNoaWxkQ29udGV4dFR5cGVzOiBmdW5jdGlvbihDb25zdHJ1Y3RvciwgY2hpbGRDb250ZXh0VHlwZXMpIHtcbiAgICAgIGlmIChwcm9jZXNzLmVudi5OT0RFX0VOViAhPT0gJ3Byb2R1Y3Rpb24nKSB7XG4gICAgICAgIHZhbGlkYXRlVHlwZURlZihDb25zdHJ1Y3RvciwgY2hpbGRDb250ZXh0VHlwZXMsICdjaGlsZENvbnRleHQnKTtcbiAgICAgIH1cbiAgICAgIENvbnN0cnVjdG9yLmNoaWxkQ29udGV4dFR5cGVzID0gX2Fzc2lnbihcbiAgICAgICAge30sXG4gICAgICAgIENvbnN0cnVjdG9yLmNoaWxkQ29udGV4dFR5cGVzLFxuICAgICAgICBjaGlsZENvbnRleHRUeXBlc1xuICAgICAgKTtcbiAgICB9LFxuICAgIGNvbnRleHRUeXBlczogZnVuY3Rpb24oQ29uc3RydWN0b3IsIGNvbnRleHRUeXBlcykge1xuICAgICAgaWYgKHByb2Nlc3MuZW52Lk5PREVfRU5WICE9PSAncHJvZHVjdGlvbicpIHtcbiAgICAgICAgdmFsaWRhdGVUeXBlRGVmKENvbnN0cnVjdG9yLCBjb250ZXh0VHlwZXMsICdjb250ZXh0Jyk7XG4gICAgICB9XG4gICAgICBDb25zdHJ1Y3Rvci5jb250ZXh0VHlwZXMgPSBfYXNzaWduKFxuICAgICAgICB7fSxcbiAgICAgICAgQ29uc3RydWN0b3IuY29udGV4dFR5cGVzLFxuICAgICAgICBjb250ZXh0VHlwZXNcbiAgICAgICk7XG4gICAgfSxcbiAgICAvKipcbiAgICAgKiBTcGVjaWFsIGNhc2UgZ2V0RGVmYXVsdFByb3BzIHdoaWNoIHNob3VsZCBtb3ZlIGludG8gc3RhdGljcyBidXQgcmVxdWlyZXNcbiAgICAgKiBhdXRvbWF0aWMgbWVyZ2luZy5cbiAgICAgKi9cbiAgICBnZXREZWZhdWx0UHJvcHM6IGZ1bmN0aW9uKENvbnN0cnVjdG9yLCBnZXREZWZhdWx0UHJvcHMpIHtcbiAgICAgIGlmIChDb25zdHJ1Y3Rvci5nZXREZWZhdWx0UHJvcHMpIHtcbiAgICAgICAgQ29uc3RydWN0b3IuZ2V0RGVmYXVsdFByb3BzID0gY3JlYXRlTWVyZ2VkUmVzdWx0RnVuY3Rpb24oXG4gICAgICAgICAgQ29uc3RydWN0b3IuZ2V0RGVmYXVsdFByb3BzLFxuICAgICAgICAgIGdldERlZmF1bHRQcm9wc1xuICAgICAgICApO1xuICAgICAgfSBlbHNlIHtcbiAgICAgICAgQ29uc3RydWN0b3IuZ2V0RGVmYXVsdFByb3BzID0gZ2V0RGVmYXVsdFByb3BzO1xuICAgICAgfVxuICAgIH0sXG4gICAgcHJvcFR5cGVzOiBmdW5jdGlvbihDb25zdHJ1Y3RvciwgcHJvcFR5cGVzKSB7XG4gICAgICBpZiAocHJvY2Vzcy5lbnYuTk9ERV9FTlYgIT09ICdwcm9kdWN0aW9uJykge1xuICAgICAgICB2YWxpZGF0ZVR5cGVEZWYoQ29uc3RydWN0b3IsIHByb3BUeXBlcywgJ3Byb3AnKTtcbiAgICAgIH1cbiAgICAgIENvbnN0cnVjdG9yLnByb3BUeXBlcyA9IF9hc3NpZ24oe30sIENvbnN0cnVjdG9yLnByb3BUeXBlcywgcHJvcFR5cGVzKTtcbiAgICB9LFxuICAgIHN0YXRpY3M6IGZ1bmN0aW9uKENvbnN0cnVjdG9yLCBzdGF0aWNzKSB7XG4gICAgICBtaXhTdGF0aWNTcGVjSW50b0NvbXBvbmVudChDb25zdHJ1Y3Rvciwgc3RhdGljcyk7XG4gICAgfSxcbiAgICBhdXRvYmluZDogZnVuY3Rpb24oKSB7fVxuICB9O1xuXG4gIGZ1bmN0aW9uIHZhbGlkYXRlVHlwZURlZihDb25zdHJ1Y3RvciwgdHlwZURlZiwgbG9jYXRpb24pIHtcbiAgICBmb3IgKHZhciBwcm9wTmFtZSBpbiB0eXBlRGVmKSB7XG4gICAgICBpZiAodHlwZURlZi5oYXNPd25Qcm9wZXJ0eShwcm9wTmFtZSkpIHtcbiAgICAgICAgLy8gdXNlIGEgd2FybmluZyBpbnN0ZWFkIG9mIGFuIF9pbnZhcmlhbnQgc28gY29tcG9uZW50c1xuICAgICAgICAvLyBkb24ndCBzaG93IHVwIGluIHByb2QgYnV0IG9ubHkgaW4gX19ERVZfX1xuICAgICAgICBpZiAocHJvY2Vzcy5lbnYuTk9ERV9FTlYgIT09ICdwcm9kdWN0aW9uJykge1xuICAgICAgICAgIHdhcm5pbmcoXG4gICAgICAgICAgICB0eXBlb2YgdHlwZURlZltwcm9wTmFtZV0gPT09ICdmdW5jdGlvbicsXG4gICAgICAgICAgICAnJXM6ICVzIHR5cGUgYCVzYCBpcyBpbnZhbGlkOyBpdCBtdXN0IGJlIGEgZnVuY3Rpb24sIHVzdWFsbHkgZnJvbSAnICtcbiAgICAgICAgICAgICAgJ1JlYWN0LlByb3BUeXBlcy4nLFxuICAgICAgICAgICAgQ29uc3RydWN0b3IuZGlzcGxheU5hbWUgfHwgJ1JlYWN0Q2xhc3MnLFxuICAgICAgICAgICAgUmVhY3RQcm9wVHlwZUxvY2F0aW9uTmFtZXNbbG9jYXRpb25dLFxuICAgICAgICAgICAgcHJvcE5hbWVcbiAgICAgICAgICApO1xuICAgICAgICB9XG4gICAgICB9XG4gICAgfVxuICB9XG5cbiAgZnVuY3Rpb24gdmFsaWRhdGVNZXRob2RPdmVycmlkZShpc0FscmVhZHlEZWZpbmVkLCBuYW1lKSB7XG4gICAgdmFyIHNwZWNQb2xpY3kgPSBSZWFjdENsYXNzSW50ZXJmYWNlLmhhc093blByb3BlcnR5KG5hbWUpXG4gICAgICA/IFJlYWN0Q2xhc3NJbnRlcmZhY2VbbmFtZV1cbiAgICAgIDogbnVsbDtcblxuICAgIC8vIERpc2FsbG93IG92ZXJyaWRpbmcgb2YgYmFzZSBjbGFzcyBtZXRob2RzIHVubGVzcyBleHBsaWNpdGx5IGFsbG93ZWQuXG4gICAgaWYgKFJlYWN0Q2xhc3NNaXhpbi5oYXNPd25Qcm9wZXJ0eShuYW1lKSkge1xuICAgICAgX2ludmFyaWFudChcbiAgICAgICAgc3BlY1BvbGljeSA9PT0gJ09WRVJSSURFX0JBU0UnLFxuICAgICAgICAnUmVhY3RDbGFzc0ludGVyZmFjZTogWW91IGFyZSBhdHRlbXB0aW5nIHRvIG92ZXJyaWRlICcgK1xuICAgICAgICAgICdgJXNgIGZyb20geW91ciBjbGFzcyBzcGVjaWZpY2F0aW9uLiBFbnN1cmUgdGhhdCB5b3VyIG1ldGhvZCBuYW1lcyAnICtcbiAgICAgICAgICAnZG8gbm90IG92ZXJsYXAgd2l0aCBSZWFjdCBtZXRob2RzLicsXG4gICAgICAgIG5hbWVcbiAgICAgICk7XG4gICAgfVxuXG4gICAgLy8gRGlzYWxsb3cgZGVmaW5pbmcgbWV0aG9kcyBtb3JlIHRoYW4gb25jZSB1bmxlc3MgZXhwbGljaXRseSBhbGxvd2VkLlxuICAgIGlmIChpc0FscmVhZHlEZWZpbmVkKSB7XG4gICAgICBfaW52YXJpYW50KFxuICAgICAgICBzcGVjUG9saWN5ID09PSAnREVGSU5FX01BTlknIHx8IHNwZWNQb2xpY3kgPT09ICdERUZJTkVfTUFOWV9NRVJHRUQnLFxuICAgICAgICAnUmVhY3RDbGFzc0ludGVyZmFjZTogWW91IGFyZSBhdHRlbXB0aW5nIHRvIGRlZmluZSAnICtcbiAgICAgICAgICAnYCVzYCBvbiB5b3VyIGNvbXBvbmVudCBtb3JlIHRoYW4gb25jZS4gVGhpcyBjb25mbGljdCBtYXkgYmUgZHVlICcgK1xuICAgICAgICAgICd0byBhIG1peGluLicsXG4gICAgICAgIG5hbWVcbiAgICAgICk7XG4gICAgfVxuICB9XG5cbiAgLyoqXG4gICAqIE1peGluIGhlbHBlciB3aGljaCBoYW5kbGVzIHBvbGljeSB2YWxpZGF0aW9uIGFuZCByZXNlcnZlZFxuICAgKiBzcGVjaWZpY2F0aW9uIGtleXMgd2hlbiBidWlsZGluZyBSZWFjdCBjbGFzc2VzLlxuICAgKi9cbiAgZnVuY3Rpb24gbWl4U3BlY0ludG9Db21wb25lbnQoQ29uc3RydWN0b3IsIHNwZWMpIHtcbiAgICBpZiAoIXNwZWMpIHtcbiAgICAgIGlmIChwcm9jZXNzLmVudi5OT0RFX0VOViAhPT0gJ3Byb2R1Y3Rpb24nKSB7XG4gICAgICAgIHZhciB0eXBlb2ZTcGVjID0gdHlwZW9mIHNwZWM7XG4gICAgICAgIHZhciBpc01peGluVmFsaWQgPSB0eXBlb2ZTcGVjID09PSAnb2JqZWN0JyAmJiBzcGVjICE9PSBudWxsO1xuXG4gICAgICAgIGlmIChwcm9jZXNzLmVudi5OT0RFX0VOViAhPT0gJ3Byb2R1Y3Rpb24nKSB7XG4gICAgICAgICAgd2FybmluZyhcbiAgICAgICAgICAgIGlzTWl4aW5WYWxpZCxcbiAgICAgICAgICAgIFwiJXM6IFlvdSdyZSBhdHRlbXB0aW5nIHRvIGluY2x1ZGUgYSBtaXhpbiB0aGF0IGlzIGVpdGhlciBudWxsIFwiICtcbiAgICAgICAgICAgICAgJ29yIG5vdCBhbiBvYmplY3QuIENoZWNrIHRoZSBtaXhpbnMgaW5jbHVkZWQgYnkgdGhlIGNvbXBvbmVudCwgJyArXG4gICAgICAgICAgICAgICdhcyB3ZWxsIGFzIGFueSBtaXhpbnMgdGhleSBpbmNsdWRlIHRoZW1zZWx2ZXMuICcgK1xuICAgICAgICAgICAgICAnRXhwZWN0ZWQgb2JqZWN0IGJ1dCBnb3QgJXMuJyxcbiAgICAgICAgICAgIENvbnN0cnVjdG9yLmRpc3BsYXlOYW1lIHx8ICdSZWFjdENsYXNzJyxcbiAgICAgICAgICAgIHNwZWMgPT09IG51bGwgPyBudWxsIDogdHlwZW9mU3BlY1xuICAgICAgICAgICk7XG4gICAgICAgIH1cbiAgICAgIH1cblxuICAgICAgcmV0dXJuO1xuICAgIH1cblxuICAgIF9pbnZhcmlhbnQoXG4gICAgICB0eXBlb2Ygc3BlYyAhPT0gJ2Z1bmN0aW9uJyxcbiAgICAgIFwiUmVhY3RDbGFzczogWW91J3JlIGF0dGVtcHRpbmcgdG8gXCIgK1xuICAgICAgICAndXNlIGEgY29tcG9uZW50IGNsYXNzIG9yIGZ1bmN0aW9uIGFzIGEgbWl4aW4uIEluc3RlYWQsIGp1c3QgdXNlIGEgJyArXG4gICAgICAgICdyZWd1bGFyIG9iamVjdC4nXG4gICAgKTtcbiAgICBfaW52YXJpYW50KFxuICAgICAgIWlzVmFsaWRFbGVtZW50KHNwZWMpLFxuICAgICAgXCJSZWFjdENsYXNzOiBZb3UncmUgYXR0ZW1wdGluZyB0byBcIiArXG4gICAgICAgICd1c2UgYSBjb21wb25lbnQgYXMgYSBtaXhpbi4gSW5zdGVhZCwganVzdCB1c2UgYSByZWd1bGFyIG9iamVjdC4nXG4gICAgKTtcblxuICAgIHZhciBwcm90byA9IENvbnN0cnVjdG9yLnByb3RvdHlwZTtcbiAgICB2YXIgYXV0b0JpbmRQYWlycyA9IHByb3RvLl9fcmVhY3RBdXRvQmluZFBhaXJzO1xuXG4gICAgLy8gQnkgaGFuZGxpbmcgbWl4aW5zIGJlZm9yZSBhbnkgb3RoZXIgcHJvcGVydGllcywgd2UgZW5zdXJlIHRoZSBzYW1lXG4gICAgLy8gY2hhaW5pbmcgb3JkZXIgaXMgYXBwbGllZCB0byBtZXRob2RzIHdpdGggREVGSU5FX01BTlkgcG9saWN5LCB3aGV0aGVyXG4gICAgLy8gbWl4aW5zIGFyZSBsaXN0ZWQgYmVmb3JlIG9yIGFmdGVyIHRoZXNlIG1ldGhvZHMgaW4gdGhlIHNwZWMuXG4gICAgaWYgKHNwZWMuaGFzT3duUHJvcGVydHkoTUlYSU5TX0tFWSkpIHtcbiAgICAgIFJFU0VSVkVEX1NQRUNfS0VZUy5taXhpbnMoQ29uc3RydWN0b3IsIHNwZWMubWl4aW5zKTtcbiAgICB9XG5cbiAgICBmb3IgKHZhciBuYW1lIGluIHNwZWMpIHtcbiAgICAgIGlmICghc3BlYy5oYXNPd25Qcm9wZXJ0eShuYW1lKSkge1xuICAgICAgICBjb250aW51ZTtcbiAgICAgIH1cblxuICAgICAgaWYgKG5hbWUgPT09IE1JWElOU19LRVkpIHtcbiAgICAgICAgLy8gV2UgaGF2ZSBhbHJlYWR5IGhhbmRsZWQgbWl4aW5zIGluIGEgc3BlY2lhbCBjYXNlIGFib3ZlLlxuICAgICAgICBjb250aW51ZTtcbiAgICAgIH1cblxuICAgICAgdmFyIHByb3BlcnR5ID0gc3BlY1tuYW1lXTtcbiAgICAgIHZhciBpc0FscmVhZHlEZWZpbmVkID0gcHJvdG8uaGFzT3duUHJvcGVydHkobmFtZSk7XG4gICAgICB2YWxpZGF0ZU1ldGhvZE92ZXJyaWRlKGlzQWxyZWFkeURlZmluZWQsIG5hbWUpO1xuXG4gICAgICBpZiAoUkVTRVJWRURfU1BFQ19LRVlTLmhhc093blByb3BlcnR5KG5hbWUpKSB7XG4gICAgICAgIFJFU0VSVkVEX1NQRUNfS0VZU1tuYW1lXShDb25zdHJ1Y3RvciwgcHJvcGVydHkpO1xuICAgICAgfSBlbHNlIHtcbiAgICAgICAgLy8gU2V0dXAgbWV0aG9kcyBvbiBwcm90b3R5cGU6XG4gICAgICAgIC8vIFRoZSBmb2xsb3dpbmcgbWVtYmVyIG1ldGhvZHMgc2hvdWxkIG5vdCBiZSBhdXRvbWF0aWNhbGx5IGJvdW5kOlxuICAgICAgICAvLyAxLiBFeHBlY3RlZCBSZWFjdENsYXNzIG1ldGhvZHMgKGluIHRoZSBcImludGVyZmFjZVwiKS5cbiAgICAgICAgLy8gMi4gT3ZlcnJpZGRlbiBtZXRob2RzICh0aGF0IHdlcmUgbWl4ZWQgaW4pLlxuICAgICAgICB2YXIgaXNSZWFjdENsYXNzTWV0aG9kID0gUmVhY3RDbGFzc0ludGVyZmFjZS5oYXNPd25Qcm9wZXJ0eShuYW1lKTtcbiAgICAgICAgdmFyIGlzRnVuY3Rpb24gPSB0eXBlb2YgcHJvcGVydHkgPT09ICdmdW5jdGlvbic7XG4gICAgICAgIHZhciBzaG91bGRBdXRvQmluZCA9XG4gICAgICAgICAgaXNGdW5jdGlvbiAmJlxuICAgICAgICAgICFpc1JlYWN0Q2xhc3NNZXRob2QgJiZcbiAgICAgICAgICAhaXNBbHJlYWR5RGVmaW5lZCAmJlxuICAgICAgICAgIHNwZWMuYXV0b2JpbmQgIT09IGZhbHNlO1xuXG4gICAgICAgIGlmIChzaG91bGRBdXRvQmluZCkge1xuICAgICAgICAgIGF1dG9CaW5kUGFpcnMucHVzaChuYW1lLCBwcm9wZXJ0eSk7XG4gICAgICAgICAgcHJvdG9bbmFtZV0gPSBwcm9wZXJ0eTtcbiAgICAgICAgfSBlbHNlIHtcbiAgICAgICAgICBpZiAoaXNBbHJlYWR5RGVmaW5lZCkge1xuICAgICAgICAgICAgdmFyIHNwZWNQb2xpY3kgPSBSZWFjdENsYXNzSW50ZXJmYWNlW25hbWVdO1xuXG4gICAgICAgICAgICAvLyBUaGVzZSBjYXNlcyBzaG91bGQgYWxyZWFkeSBiZSBjYXVnaHQgYnkgdmFsaWRhdGVNZXRob2RPdmVycmlkZS5cbiAgICAgICAgICAgIF9pbnZhcmlhbnQoXG4gICAgICAgICAgICAgIGlzUmVhY3RDbGFzc01ldGhvZCAmJlxuICAgICAgICAgICAgICAgIChzcGVjUG9saWN5ID09PSAnREVGSU5FX01BTllfTUVSR0VEJyB8fFxuICAgICAgICAgICAgICAgICAgc3BlY1BvbGljeSA9PT0gJ0RFRklORV9NQU5ZJyksXG4gICAgICAgICAgICAgICdSZWFjdENsYXNzOiBVbmV4cGVjdGVkIHNwZWMgcG9saWN5ICVzIGZvciBrZXkgJXMgJyArXG4gICAgICAgICAgICAgICAgJ3doZW4gbWl4aW5nIGluIGNvbXBvbmVudCBzcGVjcy4nLFxuICAgICAgICAgICAgICBzcGVjUG9saWN5LFxuICAgICAgICAgICAgICBuYW1lXG4gICAgICAgICAgICApO1xuXG4gICAgICAgICAgICAvLyBGb3IgbWV0aG9kcyB3aGljaCBhcmUgZGVmaW5lZCBtb3JlIHRoYW4gb25jZSwgY2FsbCB0aGUgZXhpc3RpbmdcbiAgICAgICAgICAgIC8vIG1ldGhvZHMgYmVmb3JlIGNhbGxpbmcgdGhlIG5ldyBwcm9wZXJ0eSwgbWVyZ2luZyBpZiBhcHByb3ByaWF0ZS5cbiAgICAgICAgICAgIGlmIChzcGVjUG9saWN5ID09PSAnREVGSU5FX01BTllfTUVSR0VEJykge1xuICAgICAgICAgICAgICBwcm90b1tuYW1lXSA9IGNyZWF0ZU1lcmdlZFJlc3VsdEZ1bmN0aW9uKHByb3RvW25hbWVdLCBwcm9wZXJ0eSk7XG4gICAgICAgICAgICB9IGVsc2UgaWYgKHNwZWNQb2xpY3kgPT09ICdERUZJTkVfTUFOWScpIHtcbiAgICAgICAgICAgICAgcHJvdG9bbmFtZV0gPSBjcmVhdGVDaGFpbmVkRnVuY3Rpb24ocHJvdG9bbmFtZV0sIHByb3BlcnR5KTtcbiAgICAgICAgICAgIH1cbiAgICAgICAgICB9IGVsc2Uge1xuICAgICAgICAgICAgcHJvdG9bbmFtZV0gPSBwcm9wZXJ0eTtcbiAgICAgICAgICAgIGlmIChwcm9jZXNzLmVudi5OT0RFX0VOViAhPT0gJ3Byb2R1Y3Rpb24nKSB7XG4gICAgICAgICAgICAgIC8vIEFkZCB2ZXJib3NlIGRpc3BsYXlOYW1lIHRvIHRoZSBmdW5jdGlvbiwgd2hpY2ggaGVscHMgd2hlbiBsb29raW5nXG4gICAgICAgICAgICAgIC8vIGF0IHByb2ZpbGluZyB0b29scy5cbiAgICAgICAgICAgICAgaWYgKHR5cGVvZiBwcm9wZXJ0eSA9PT0gJ2Z1bmN0aW9uJyAmJiBzcGVjLmRpc3BsYXlOYW1lKSB7XG4gICAgICAgICAgICAgICAgcHJvdG9bbmFtZV0uZGlzcGxheU5hbWUgPSBzcGVjLmRpc3BsYXlOYW1lICsgJ18nICsgbmFtZTtcbiAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgfVxuICAgICAgICAgIH1cbiAgICAgICAgfVxuICAgICAgfVxuICAgIH1cbiAgfVxuXG4gIGZ1bmN0aW9uIG1peFN0YXRpY1NwZWNJbnRvQ29tcG9uZW50KENvbnN0cnVjdG9yLCBzdGF0aWNzKSB7XG4gICAgaWYgKCFzdGF0aWNzKSB7XG4gICAgICByZXR1cm47XG4gICAgfVxuXG4gICAgZm9yICh2YXIgbmFtZSBpbiBzdGF0aWNzKSB7XG4gICAgICB2YXIgcHJvcGVydHkgPSBzdGF0aWNzW25hbWVdO1xuICAgICAgaWYgKCFzdGF0aWNzLmhhc093blByb3BlcnR5KG5hbWUpKSB7XG4gICAgICAgIGNvbnRpbnVlO1xuICAgICAgfVxuXG4gICAgICB2YXIgaXNSZXNlcnZlZCA9IG5hbWUgaW4gUkVTRVJWRURfU1BFQ19LRVlTO1xuICAgICAgX2ludmFyaWFudChcbiAgICAgICAgIWlzUmVzZXJ2ZWQsXG4gICAgICAgICdSZWFjdENsYXNzOiBZb3UgYXJlIGF0dGVtcHRpbmcgdG8gZGVmaW5lIGEgcmVzZXJ2ZWQgJyArXG4gICAgICAgICAgJ3Byb3BlcnR5LCBgJXNgLCB0aGF0IHNob3VsZG5cXCd0IGJlIG9uIHRoZSBcInN0YXRpY3NcIiBrZXkuIERlZmluZSBpdCAnICtcbiAgICAgICAgICAnYXMgYW4gaW5zdGFuY2UgcHJvcGVydHkgaW5zdGVhZDsgaXQgd2lsbCBzdGlsbCBiZSBhY2Nlc3NpYmxlIG9uIHRoZSAnICtcbiAgICAgICAgICAnY29uc3RydWN0b3IuJyxcbiAgICAgICAgbmFtZVxuICAgICAgKTtcblxuICAgICAgdmFyIGlzQWxyZWFkeURlZmluZWQgPSBuYW1lIGluIENvbnN0cnVjdG9yO1xuICAgICAgaWYgKGlzQWxyZWFkeURlZmluZWQpIHtcbiAgICAgICAgdmFyIHNwZWNQb2xpY3kgPSBSZWFjdENsYXNzU3RhdGljSW50ZXJmYWNlLmhhc093blByb3BlcnR5KG5hbWUpXG4gICAgICAgICAgPyBSZWFjdENsYXNzU3RhdGljSW50ZXJmYWNlW25hbWVdXG4gICAgICAgICAgOiBudWxsO1xuXG4gICAgICAgIF9pbnZhcmlhbnQoXG4gICAgICAgICAgc3BlY1BvbGljeSA9PT0gJ0RFRklORV9NQU5ZX01FUkdFRCcsXG4gICAgICAgICAgJ1JlYWN0Q2xhc3M6IFlvdSBhcmUgYXR0ZW1wdGluZyB0byBkZWZpbmUgJyArXG4gICAgICAgICAgICAnYCVzYCBvbiB5b3VyIGNvbXBvbmVudCBtb3JlIHRoYW4gb25jZS4gVGhpcyBjb25mbGljdCBtYXkgYmUgJyArXG4gICAgICAgICAgICAnZHVlIHRvIGEgbWl4aW4uJyxcbiAgICAgICAgICBuYW1lXG4gICAgICAgICk7XG5cbiAgICAgICAgQ29uc3RydWN0b3JbbmFtZV0gPSBjcmVhdGVNZXJnZWRSZXN1bHRGdW5jdGlvbihDb25zdHJ1Y3RvcltuYW1lXSwgcHJvcGVydHkpO1xuXG4gICAgICAgIHJldHVybjtcbiAgICAgIH1cblxuICAgICAgQ29uc3RydWN0b3JbbmFtZV0gPSBwcm9wZXJ0eTtcbiAgICB9XG4gIH1cblxuICAvKipcbiAgICogTWVyZ2UgdHdvIG9iamVjdHMsIGJ1dCB0aHJvdyBpZiBib3RoIGNvbnRhaW4gdGhlIHNhbWUga2V5LlxuICAgKlxuICAgKiBAcGFyYW0ge29iamVjdH0gb25lIFRoZSBmaXJzdCBvYmplY3QsIHdoaWNoIGlzIG11dGF0ZWQuXG4gICAqIEBwYXJhbSB7b2JqZWN0fSB0d28gVGhlIHNlY29uZCBvYmplY3RcbiAgICogQHJldHVybiB7b2JqZWN0fSBvbmUgYWZ0ZXIgaXQgaGFzIGJlZW4gbXV0YXRlZCB0byBjb250YWluIGV2ZXJ5dGhpbmcgaW4gdHdvLlxuICAgKi9cbiAgZnVuY3Rpb24gbWVyZ2VJbnRvV2l0aE5vRHVwbGljYXRlS2V5cyhvbmUsIHR3bykge1xuICAgIF9pbnZhcmlhbnQoXG4gICAgICBvbmUgJiYgdHdvICYmIHR5cGVvZiBvbmUgPT09ICdvYmplY3QnICYmIHR5cGVvZiB0d28gPT09ICdvYmplY3QnLFxuICAgICAgJ21lcmdlSW50b1dpdGhOb0R1cGxpY2F0ZUtleXMoKTogQ2Fubm90IG1lcmdlIG5vbi1vYmplY3RzLidcbiAgICApO1xuXG4gICAgZm9yICh2YXIga2V5IGluIHR3bykge1xuICAgICAgaWYgKHR3by5oYXNPd25Qcm9wZXJ0eShrZXkpKSB7XG4gICAgICAgIF9pbnZhcmlhbnQoXG4gICAgICAgICAgb25lW2tleV0gPT09IHVuZGVmaW5lZCxcbiAgICAgICAgICAnbWVyZ2VJbnRvV2l0aE5vRHVwbGljYXRlS2V5cygpOiAnICtcbiAgICAgICAgICAgICdUcmllZCB0byBtZXJnZSB0d28gb2JqZWN0cyB3aXRoIHRoZSBzYW1lIGtleTogYCVzYC4gVGhpcyBjb25mbGljdCAnICtcbiAgICAgICAgICAgICdtYXkgYmUgZHVlIHRvIGEgbWl4aW47IGluIHBhcnRpY3VsYXIsIHRoaXMgbWF5IGJlIGNhdXNlZCBieSB0d28gJyArXG4gICAgICAgICAgICAnZ2V0SW5pdGlhbFN0YXRlKCkgb3IgZ2V0RGVmYXVsdFByb3BzKCkgbWV0aG9kcyByZXR1cm5pbmcgb2JqZWN0cyAnICtcbiAgICAgICAgICAgICd3aXRoIGNsYXNoaW5nIGtleXMuJyxcbiAgICAgICAgICBrZXlcbiAgICAgICAgKTtcbiAgICAgICAgb25lW2tleV0gPSB0d29ba2V5XTtcbiAgICAgIH1cbiAgICB9XG4gICAgcmV0dXJuIG9uZTtcbiAgfVxuXG4gIC8qKlxuICAgKiBDcmVhdGVzIGEgZnVuY3Rpb24gdGhhdCBpbnZva2VzIHR3byBmdW5jdGlvbnMgYW5kIG1lcmdlcyB0aGVpciByZXR1cm4gdmFsdWVzLlxuICAgKlxuICAgKiBAcGFyYW0ge2Z1bmN0aW9ufSBvbmUgRnVuY3Rpb24gdG8gaW52b2tlIGZpcnN0LlxuICAgKiBAcGFyYW0ge2Z1bmN0aW9ufSB0d28gRnVuY3Rpb24gdG8gaW52b2tlIHNlY29uZC5cbiAgICogQHJldHVybiB7ZnVuY3Rpb259IEZ1bmN0aW9uIHRoYXQgaW52b2tlcyB0aGUgdHdvIGFyZ3VtZW50IGZ1bmN0aW9ucy5cbiAgICogQHByaXZhdGVcbiAgICovXG4gIGZ1bmN0aW9uIGNyZWF0ZU1lcmdlZFJlc3VsdEZ1bmN0aW9uKG9uZSwgdHdvKSB7XG4gICAgcmV0dXJuIGZ1bmN0aW9uIG1lcmdlZFJlc3VsdCgpIHtcbiAgICAgIHZhciBhID0gb25lLmFwcGx5KHRoaXMsIGFyZ3VtZW50cyk7XG4gICAgICB2YXIgYiA9IHR3by5hcHBseSh0aGlzLCBhcmd1bWVudHMpO1xuICAgICAgaWYgKGEgPT0gbnVsbCkge1xuICAgICAgICByZXR1cm4gYjtcbiAgICAgIH0gZWxzZSBpZiAoYiA9PSBudWxsKSB7XG4gICAgICAgIHJldHVybiBhO1xuICAgICAgfVxuICAgICAgdmFyIGMgPSB7fTtcbiAgICAgIG1lcmdlSW50b1dpdGhOb0R1cGxpY2F0ZUtleXMoYywgYSk7XG4gICAgICBtZXJnZUludG9XaXRoTm9EdXBsaWNhdGVLZXlzKGMsIGIpO1xuICAgICAgcmV0dXJuIGM7XG4gICAgfTtcbiAgfVxuXG4gIC8qKlxuICAgKiBDcmVhdGVzIGEgZnVuY3Rpb24gdGhhdCBpbnZva2VzIHR3byBmdW5jdGlvbnMgYW5kIGlnbm9yZXMgdGhlaXIgcmV0dXJuIHZhbGVzLlxuICAgKlxuICAgKiBAcGFyYW0ge2Z1bmN0aW9ufSBvbmUgRnVuY3Rpb24gdG8gaW52b2tlIGZpcnN0LlxuICAgKiBAcGFyYW0ge2Z1bmN0aW9ufSB0d28gRnVuY3Rpb24gdG8gaW52b2tlIHNlY29uZC5cbiAgICogQHJldHVybiB7ZnVuY3Rpb259IEZ1bmN0aW9uIHRoYXQgaW52b2tlcyB0aGUgdHdvIGFyZ3VtZW50IGZ1bmN0aW9ucy5cbiAgICogQHByaXZhdGVcbiAgICovXG4gIGZ1bmN0aW9uIGNyZWF0ZUNoYWluZWRGdW5jdGlvbihvbmUsIHR3bykge1xuICAgIHJldHVybiBmdW5jdGlvbiBjaGFpbmVkRnVuY3Rpb24oKSB7XG4gICAgICBvbmUuYXBwbHkodGhpcywgYXJndW1lbnRzKTtcbiAgICAgIHR3by5hcHBseSh0aGlzLCBhcmd1bWVudHMpO1xuICAgIH07XG4gIH1cblxuICAvKipcbiAgICogQmluZHMgYSBtZXRob2QgdG8gdGhlIGNvbXBvbmVudC5cbiAgICpcbiAgICogQHBhcmFtIHtvYmplY3R9IGNvbXBvbmVudCBDb21wb25lbnQgd2hvc2UgbWV0aG9kIGlzIGdvaW5nIHRvIGJlIGJvdW5kLlxuICAgKiBAcGFyYW0ge2Z1bmN0aW9ufSBtZXRob2QgTWV0aG9kIHRvIGJlIGJvdW5kLlxuICAgKiBAcmV0dXJuIHtmdW5jdGlvbn0gVGhlIGJvdW5kIG1ldGhvZC5cbiAgICovXG4gIGZ1bmN0aW9uIGJpbmRBdXRvQmluZE1ldGhvZChjb21wb25lbnQsIG1ldGhvZCkge1xuICAgIHZhciBib3VuZE1ldGhvZCA9IG1ldGhvZC5iaW5kKGNvbXBvbmVudCk7XG4gICAgaWYgKHByb2Nlc3MuZW52Lk5PREVfRU5WICE9PSAncHJvZHVjdGlvbicpIHtcbiAgICAgIGJvdW5kTWV0aG9kLl9fcmVhY3RCb3VuZENvbnRleHQgPSBjb21wb25lbnQ7XG4gICAgICBib3VuZE1ldGhvZC5fX3JlYWN0Qm91bmRNZXRob2QgPSBtZXRob2Q7XG4gICAgICBib3VuZE1ldGhvZC5fX3JlYWN0Qm91bmRBcmd1bWVudHMgPSBudWxsO1xuICAgICAgdmFyIGNvbXBvbmVudE5hbWUgPSBjb21wb25lbnQuY29uc3RydWN0b3IuZGlzcGxheU5hbWU7XG4gICAgICB2YXIgX2JpbmQgPSBib3VuZE1ldGhvZC5iaW5kO1xuICAgICAgYm91bmRNZXRob2QuYmluZCA9IGZ1bmN0aW9uKG5ld1RoaXMpIHtcbiAgICAgICAgZm9yIChcbiAgICAgICAgICB2YXIgX2xlbiA9IGFyZ3VtZW50cy5sZW5ndGgsXG4gICAgICAgICAgICBhcmdzID0gQXJyYXkoX2xlbiA+IDEgPyBfbGVuIC0gMSA6IDApLFxuICAgICAgICAgICAgX2tleSA9IDE7XG4gICAgICAgICAgX2tleSA8IF9sZW47XG4gICAgICAgICAgX2tleSsrXG4gICAgICAgICkge1xuICAgICAgICAgIGFyZ3NbX2tleSAtIDFdID0gYXJndW1lbnRzW19rZXldO1xuICAgICAgICB9XG5cbiAgICAgICAgLy8gVXNlciBpcyB0cnlpbmcgdG8gYmluZCgpIGFuIGF1dG9ib3VuZCBtZXRob2Q7IHdlIGVmZmVjdGl2ZWx5IHdpbGxcbiAgICAgICAgLy8gaWdub3JlIHRoZSB2YWx1ZSBvZiBcInRoaXNcIiB0aGF0IHRoZSB1c2VyIGlzIHRyeWluZyB0byB1c2UsIHNvXG4gICAgICAgIC8vIGxldCdzIHdhcm4uXG4gICAgICAgIGlmIChuZXdUaGlzICE9PSBjb21wb25lbnQgJiYgbmV3VGhpcyAhPT0gbnVsbCkge1xuICAgICAgICAgIGlmIChwcm9jZXNzLmVudi5OT0RFX0VOViAhPT0gJ3Byb2R1Y3Rpb24nKSB7XG4gICAgICAgICAgICB3YXJuaW5nKFxuICAgICAgICAgICAgICBmYWxzZSxcbiAgICAgICAgICAgICAgJ2JpbmQoKTogUmVhY3QgY29tcG9uZW50IG1ldGhvZHMgbWF5IG9ubHkgYmUgYm91bmQgdG8gdGhlICcgK1xuICAgICAgICAgICAgICAgICdjb21wb25lbnQgaW5zdGFuY2UuIFNlZSAlcycsXG4gICAgICAgICAgICAgIGNvbXBvbmVudE5hbWVcbiAgICAgICAgICAgICk7XG4gICAgICAgICAgfVxuICAgICAgICB9IGVsc2UgaWYgKCFhcmdzLmxlbmd0aCkge1xuICAgICAgICAgIGlmIChwcm9jZXNzLmVudi5OT0RFX0VOViAhPT0gJ3Byb2R1Y3Rpb24nKSB7XG4gICAgICAgICAgICB3YXJuaW5nKFxuICAgICAgICAgICAgICBmYWxzZSxcbiAgICAgICAgICAgICAgJ2JpbmQoKTogWW91IGFyZSBiaW5kaW5nIGEgY29tcG9uZW50IG1ldGhvZCB0byB0aGUgY29tcG9uZW50LiAnICtcbiAgICAgICAgICAgICAgICAnUmVhY3QgZG9lcyB0aGlzIGZvciB5b3UgYXV0b21hdGljYWxseSBpbiBhIGhpZ2gtcGVyZm9ybWFuY2UgJyArXG4gICAgICAgICAgICAgICAgJ3dheSwgc28geW91IGNhbiBzYWZlbHkgcmVtb3ZlIHRoaXMgY2FsbC4gU2VlICVzJyxcbiAgICAgICAgICAgICAgY29tcG9uZW50TmFtZVxuICAgICAgICAgICAgKTtcbiAgICAgICAgICB9XG4gICAgICAgICAgcmV0dXJuIGJvdW5kTWV0aG9kO1xuICAgICAgICB9XG4gICAgICAgIHZhciByZWJvdW5kTWV0aG9kID0gX2JpbmQuYXBwbHkoYm91bmRNZXRob2QsIGFyZ3VtZW50cyk7XG4gICAgICAgIHJlYm91bmRNZXRob2QuX19yZWFjdEJvdW5kQ29udGV4dCA9IGNvbXBvbmVudDtcbiAgICAgICAgcmVib3VuZE1ldGhvZC5fX3JlYWN0Qm91bmRNZXRob2QgPSBtZXRob2Q7XG4gICAgICAgIHJlYm91bmRNZXRob2QuX19yZWFjdEJvdW5kQXJndW1lbnRzID0gYXJncztcbiAgICAgICAgcmV0dXJuIHJlYm91bmRNZXRob2Q7XG4gICAgICB9O1xuICAgIH1cbiAgICByZXR1cm4gYm91bmRNZXRob2Q7XG4gIH1cblxuICAvKipcbiAgICogQmluZHMgYWxsIGF1dG8tYm91bmQgbWV0aG9kcyBpbiBhIGNvbXBvbmVudC5cbiAgICpcbiAgICogQHBhcmFtIHtvYmplY3R9IGNvbXBvbmVudCBDb21wb25lbnQgd2hvc2UgbWV0aG9kIGlzIGdvaW5nIHRvIGJlIGJvdW5kLlxuICAgKi9cbiAgZnVuY3Rpb24gYmluZEF1dG9CaW5kTWV0aG9kcyhjb21wb25lbnQpIHtcbiAgICB2YXIgcGFpcnMgPSBjb21wb25lbnQuX19yZWFjdEF1dG9CaW5kUGFpcnM7XG4gICAgZm9yICh2YXIgaSA9IDA7IGkgPCBwYWlycy5sZW5ndGg7IGkgKz0gMikge1xuICAgICAgdmFyIGF1dG9CaW5kS2V5ID0gcGFpcnNbaV07XG4gICAgICB2YXIgbWV0aG9kID0gcGFpcnNbaSArIDFdO1xuICAgICAgY29tcG9uZW50W2F1dG9CaW5kS2V5XSA9IGJpbmRBdXRvQmluZE1ldGhvZChjb21wb25lbnQsIG1ldGhvZCk7XG4gICAgfVxuICB9XG5cbiAgdmFyIElzTW91bnRlZFByZU1peGluID0ge1xuICAgIGNvbXBvbmVudERpZE1vdW50OiBmdW5jdGlvbigpIHtcbiAgICAgIHRoaXMuX19pc01vdW50ZWQgPSB0cnVlO1xuICAgIH1cbiAgfTtcblxuICB2YXIgSXNNb3VudGVkUG9zdE1peGluID0ge1xuICAgIGNvbXBvbmVudFdpbGxVbm1vdW50OiBmdW5jdGlvbigpIHtcbiAgICAgIHRoaXMuX19pc01vdW50ZWQgPSBmYWxzZTtcbiAgICB9XG4gIH07XG5cbiAgLyoqXG4gICAqIEFkZCBtb3JlIHRvIHRoZSBSZWFjdENsYXNzIGJhc2UgY2xhc3MuIFRoZXNlIGFyZSBhbGwgbGVnYWN5IGZlYXR1cmVzIGFuZFxuICAgKiB0aGVyZWZvcmUgbm90IGFscmVhZHkgcGFydCBvZiB0aGUgbW9kZXJuIFJlYWN0Q29tcG9uZW50LlxuICAgKi9cbiAgdmFyIFJlYWN0Q2xhc3NNaXhpbiA9IHtcbiAgICAvKipcbiAgICAgKiBUT0RPOiBUaGlzIHdpbGwgYmUgZGVwcmVjYXRlZCBiZWNhdXNlIHN0YXRlIHNob3VsZCBhbHdheXMga2VlcCBhIGNvbnNpc3RlbnRcbiAgICAgKiB0eXBlIHNpZ25hdHVyZSBhbmQgdGhlIG9ubHkgdXNlIGNhc2UgZm9yIHRoaXMsIGlzIHRvIGF2b2lkIHRoYXQuXG4gICAgICovXG4gICAgcmVwbGFjZVN0YXRlOiBmdW5jdGlvbihuZXdTdGF0ZSwgY2FsbGJhY2spIHtcbiAgICAgIHRoaXMudXBkYXRlci5lbnF1ZXVlUmVwbGFjZVN0YXRlKHRoaXMsIG5ld1N0YXRlLCBjYWxsYmFjayk7XG4gICAgfSxcblxuICAgIC8qKlxuICAgICAqIENoZWNrcyB3aGV0aGVyIG9yIG5vdCB0aGlzIGNvbXBvc2l0ZSBjb21wb25lbnQgaXMgbW91bnRlZC5cbiAgICAgKiBAcmV0dXJuIHtib29sZWFufSBUcnVlIGlmIG1vdW50ZWQsIGZhbHNlIG90aGVyd2lzZS5cbiAgICAgKiBAcHJvdGVjdGVkXG4gICAgICogQGZpbmFsXG4gICAgICovXG4gICAgaXNNb3VudGVkOiBmdW5jdGlvbigpIHtcbiAgICAgIGlmIChwcm9jZXNzLmVudi5OT0RFX0VOViAhPT0gJ3Byb2R1Y3Rpb24nKSB7XG4gICAgICAgIHdhcm5pbmcoXG4gICAgICAgICAgdGhpcy5fX2RpZFdhcm5Jc01vdW50ZWQsXG4gICAgICAgICAgJyVzOiBpc01vdW50ZWQgaXMgZGVwcmVjYXRlZC4gSW5zdGVhZCwgbWFrZSBzdXJlIHRvIGNsZWFuIHVwICcgK1xuICAgICAgICAgICAgJ3N1YnNjcmlwdGlvbnMgYW5kIHBlbmRpbmcgcmVxdWVzdHMgaW4gY29tcG9uZW50V2lsbFVubW91bnQgdG8gJyArXG4gICAgICAgICAgICAncHJldmVudCBtZW1vcnkgbGVha3MuJyxcbiAgICAgICAgICAodGhpcy5jb25zdHJ1Y3RvciAmJiB0aGlzLmNvbnN0cnVjdG9yLmRpc3BsYXlOYW1lKSB8fFxuICAgICAgICAgICAgdGhpcy5uYW1lIHx8XG4gICAgICAgICAgICAnQ29tcG9uZW50J1xuICAgICAgICApO1xuICAgICAgICB0aGlzLl9fZGlkV2FybklzTW91bnRlZCA9IHRydWU7XG4gICAgICB9XG4gICAgICByZXR1cm4gISF0aGlzLl9faXNNb3VudGVkO1xuICAgIH1cbiAgfTtcblxuICB2YXIgUmVhY3RDbGFzc0NvbXBvbmVudCA9IGZ1bmN0aW9uKCkge307XG4gIF9hc3NpZ24oXG4gICAgUmVhY3RDbGFzc0NvbXBvbmVudC5wcm90b3R5cGUsXG4gICAgUmVhY3RDb21wb25lbnQucHJvdG90eXBlLFxuICAgIFJlYWN0Q2xhc3NNaXhpblxuICApO1xuXG4gIC8qKlxuICAgKiBDcmVhdGVzIGEgY29tcG9zaXRlIGNvbXBvbmVudCBjbGFzcyBnaXZlbiBhIGNsYXNzIHNwZWNpZmljYXRpb24uXG4gICAqIFNlZSBodHRwczovL2ZhY2Vib29rLmdpdGh1Yi5pby9yZWFjdC9kb2NzL3RvcC1sZXZlbC1hcGkuaHRtbCNyZWFjdC5jcmVhdGVjbGFzc1xuICAgKlxuICAgKiBAcGFyYW0ge29iamVjdH0gc3BlYyBDbGFzcyBzcGVjaWZpY2F0aW9uICh3aGljaCBtdXN0IGRlZmluZSBgcmVuZGVyYCkuXG4gICAqIEByZXR1cm4ge2Z1bmN0aW9ufSBDb21wb25lbnQgY29uc3RydWN0b3IgZnVuY3Rpb24uXG4gICAqIEBwdWJsaWNcbiAgICovXG4gIGZ1bmN0aW9uIGNyZWF0ZUNsYXNzKHNwZWMpIHtcbiAgICAvLyBUbyBrZWVwIG91ciB3YXJuaW5ncyBtb3JlIHVuZGVyc3RhbmRhYmxlLCB3ZSdsbCB1c2UgYSBsaXR0bGUgaGFjayBoZXJlIHRvXG4gICAgLy8gZW5zdXJlIHRoYXQgQ29uc3RydWN0b3IubmFtZSAhPT0gJ0NvbnN0cnVjdG9yJy4gVGhpcyBtYWtlcyBzdXJlIHdlIGRvbid0XG4gICAgLy8gdW5uZWNlc3NhcmlseSBpZGVudGlmeSBhIGNsYXNzIHdpdGhvdXQgZGlzcGxheU5hbWUgYXMgJ0NvbnN0cnVjdG9yJy5cbiAgICB2YXIgQ29uc3RydWN0b3IgPSBpZGVudGl0eShmdW5jdGlvbihwcm9wcywgY29udGV4dCwgdXBkYXRlcikge1xuICAgICAgLy8gVGhpcyBjb25zdHJ1Y3RvciBnZXRzIG92ZXJyaWRkZW4gYnkgbW9ja3MuIFRoZSBhcmd1bWVudCBpcyB1c2VkXG4gICAgICAvLyBieSBtb2NrcyB0byBhc3NlcnQgb24gd2hhdCBnZXRzIG1vdW50ZWQuXG5cbiAgICAgIGlmIChwcm9jZXNzLmVudi5OT0RFX0VOViAhPT0gJ3Byb2R1Y3Rpb24nKSB7XG4gICAgICAgIHdhcm5pbmcoXG4gICAgICAgICAgdGhpcyBpbnN0YW5jZW9mIENvbnN0cnVjdG9yLFxuICAgICAgICAgICdTb21ldGhpbmcgaXMgY2FsbGluZyBhIFJlYWN0IGNvbXBvbmVudCBkaXJlY3RseS4gVXNlIGEgZmFjdG9yeSBvciAnICtcbiAgICAgICAgICAgICdKU1ggaW5zdGVhZC4gU2VlOiBodHRwczovL2ZiLm1lL3JlYWN0LWxlZ2FjeWZhY3RvcnknXG4gICAgICAgICk7XG4gICAgICB9XG5cbiAgICAgIC8vIFdpcmUgdXAgYXV0by1iaW5kaW5nXG4gICAgICBpZiAodGhpcy5fX3JlYWN0QXV0b0JpbmRQYWlycy5sZW5ndGgpIHtcbiAgICAgICAgYmluZEF1dG9CaW5kTWV0aG9kcyh0aGlzKTtcbiAgICAgIH1cblxuICAgICAgdGhpcy5wcm9wcyA9IHByb3BzO1xuICAgICAgdGhpcy5jb250ZXh0ID0gY29udGV4dDtcbiAgICAgIHRoaXMucmVmcyA9IGVtcHR5T2JqZWN0O1xuICAgICAgdGhpcy51cGRhdGVyID0gdXBkYXRlciB8fCBSZWFjdE5vb3BVcGRhdGVRdWV1ZTtcblxuICAgICAgdGhpcy5zdGF0ZSA9IG51bGw7XG5cbiAgICAgIC8vIFJlYWN0Q2xhc3NlcyBkb2Vzbid0IGhhdmUgY29uc3RydWN0b3JzLiBJbnN0ZWFkLCB0aGV5IHVzZSB0aGVcbiAgICAgIC8vIGdldEluaXRpYWxTdGF0ZSBhbmQgY29tcG9uZW50V2lsbE1vdW50IG1ldGhvZHMgZm9yIGluaXRpYWxpemF0aW9uLlxuXG4gICAgICB2YXIgaW5pdGlhbFN0YXRlID0gdGhpcy5nZXRJbml0aWFsU3RhdGUgPyB0aGlzLmdldEluaXRpYWxTdGF0ZSgpIDogbnVsbDtcbiAgICAgIGlmIChwcm9jZXNzLmVudi5OT0RFX0VOViAhPT0gJ3Byb2R1Y3Rpb24nKSB7XG4gICAgICAgIC8vIFdlIGFsbG93IGF1dG8tbW9ja3MgdG8gcHJvY2VlZCBhcyBpZiB0aGV5J3JlIHJldHVybmluZyBudWxsLlxuICAgICAgICBpZiAoXG4gICAgICAgICAgaW5pdGlhbFN0YXRlID09PSB1bmRlZmluZWQgJiZcbiAgICAgICAgICB0aGlzLmdldEluaXRpYWxTdGF0ZS5faXNNb2NrRnVuY3Rpb25cbiAgICAgICAgKSB7XG4gICAgICAgICAgLy8gVGhpcyBpcyBwcm9iYWJseSBiYWQgcHJhY3RpY2UuIENvbnNpZGVyIHdhcm5pbmcgaGVyZSBhbmRcbiAgICAgICAgICAvLyBkZXByZWNhdGluZyB0aGlzIGNvbnZlbmllbmNlLlxuICAgICAgICAgIGluaXRpYWxTdGF0ZSA9IG51bGw7XG4gICAgICAgIH1cbiAgICAgIH1cbiAgICAgIF9pbnZhcmlhbnQoXG4gICAgICAgIHR5cGVvZiBpbml0aWFsU3RhdGUgPT09ICdvYmplY3QnICYmICFBcnJheS5pc0FycmF5KGluaXRpYWxTdGF0ZSksXG4gICAgICAgICclcy5nZXRJbml0aWFsU3RhdGUoKTogbXVzdCByZXR1cm4gYW4gb2JqZWN0IG9yIG51bGwnLFxuICAgICAgICBDb25zdHJ1Y3Rvci5kaXNwbGF5TmFtZSB8fCAnUmVhY3RDb21wb3NpdGVDb21wb25lbnQnXG4gICAgICApO1xuXG4gICAgICB0aGlzLnN0YXRlID0gaW5pdGlhbFN0YXRlO1xuICAgIH0pO1xuICAgIENvbnN0cnVjdG9yLnByb3RvdHlwZSA9IG5ldyBSZWFjdENsYXNzQ29tcG9uZW50KCk7XG4gICAgQ29uc3RydWN0b3IucHJvdG90eXBlLmNvbnN0cnVjdG9yID0gQ29uc3RydWN0b3I7XG4gICAgQ29uc3RydWN0b3IucHJvdG90eXBlLl9fcmVhY3RBdXRvQmluZFBhaXJzID0gW107XG5cbiAgICBpbmplY3RlZE1peGlucy5mb3JFYWNoKG1peFNwZWNJbnRvQ29tcG9uZW50LmJpbmQobnVsbCwgQ29uc3RydWN0b3IpKTtcblxuICAgIG1peFNwZWNJbnRvQ29tcG9uZW50KENvbnN0cnVjdG9yLCBJc01vdW50ZWRQcmVNaXhpbik7XG4gICAgbWl4U3BlY0ludG9Db21wb25lbnQoQ29uc3RydWN0b3IsIHNwZWMpO1xuICAgIG1peFNwZWNJbnRvQ29tcG9uZW50KENvbnN0cnVjdG9yLCBJc01vdW50ZWRQb3N0TWl4aW4pO1xuXG4gICAgLy8gSW5pdGlhbGl6ZSB0aGUgZGVmYXVsdFByb3BzIHByb3BlcnR5IGFmdGVyIGFsbCBtaXhpbnMgaGF2ZSBiZWVuIG1lcmdlZC5cbiAgICBpZiAoQ29uc3RydWN0b3IuZ2V0RGVmYXVsdFByb3BzKSB7XG4gICAgICBDb25zdHJ1Y3Rvci5kZWZhdWx0UHJvcHMgPSBDb25zdHJ1Y3Rvci5nZXREZWZhdWx0UHJvcHMoKTtcbiAgICB9XG5cbiAgICBpZiAocHJvY2Vzcy5lbnYuTk9ERV9FTlYgIT09ICdwcm9kdWN0aW9uJykge1xuICAgICAgLy8gVGhpcyBpcyBhIHRhZyB0byBpbmRpY2F0ZSB0aGF0IHRoZSB1c2Ugb2YgdGhlc2UgbWV0aG9kIG5hbWVzIGlzIG9rLFxuICAgICAgLy8gc2luY2UgaXQncyB1c2VkIHdpdGggY3JlYXRlQ2xhc3MuIElmIGl0J3Mgbm90LCB0aGVuIGl0J3MgbGlrZWx5IGFcbiAgICAgIC8vIG1pc3Rha2Ugc28gd2UnbGwgd2FybiB5b3UgdG8gdXNlIHRoZSBzdGF0aWMgcHJvcGVydHksIHByb3BlcnR5XG4gICAgICAvLyBpbml0aWFsaXplciBvciBjb25zdHJ1Y3RvciByZXNwZWN0aXZlbHkuXG4gICAgICBpZiAoQ29uc3RydWN0b3IuZ2V0RGVmYXVsdFByb3BzKSB7XG4gICAgICAgIENvbnN0cnVjdG9yLmdldERlZmF1bHRQcm9wcy5pc1JlYWN0Q2xhc3NBcHByb3ZlZCA9IHt9O1xuICAgICAgfVxuICAgICAgaWYgKENvbnN0cnVjdG9yLnByb3RvdHlwZS5nZXRJbml0aWFsU3RhdGUpIHtcbiAgICAgICAgQ29uc3RydWN0b3IucHJvdG90eXBlLmdldEluaXRpYWxTdGF0ZS5pc1JlYWN0Q2xhc3NBcHByb3ZlZCA9IHt9O1xuICAgICAgfVxuICAgIH1cblxuICAgIF9pbnZhcmlhbnQoXG4gICAgICBDb25zdHJ1Y3Rvci5wcm90b3R5cGUucmVuZGVyLFxuICAgICAgJ2NyZWF0ZUNsYXNzKC4uLik6IENsYXNzIHNwZWNpZmljYXRpb24gbXVzdCBpbXBsZW1lbnQgYSBgcmVuZGVyYCBtZXRob2QuJ1xuICAgICk7XG5cbiAgICBpZiAocHJvY2Vzcy5lbnYuTk9ERV9FTlYgIT09ICdwcm9kdWN0aW9uJykge1xuICAgICAgd2FybmluZyhcbiAgICAgICAgIUNvbnN0cnVjdG9yLnByb3RvdHlwZS5jb21wb25lbnRTaG91bGRVcGRhdGUsXG4gICAgICAgICclcyBoYXMgYSBtZXRob2QgY2FsbGVkICcgK1xuICAgICAgICAgICdjb21wb25lbnRTaG91bGRVcGRhdGUoKS4gRGlkIHlvdSBtZWFuIHNob3VsZENvbXBvbmVudFVwZGF0ZSgpPyAnICtcbiAgICAgICAgICAnVGhlIG5hbWUgaXMgcGhyYXNlZCBhcyBhIHF1ZXN0aW9uIGJlY2F1c2UgdGhlIGZ1bmN0aW9uIGlzICcgK1xuICAgICAgICAgICdleHBlY3RlZCB0byByZXR1cm4gYSB2YWx1ZS4nLFxuICAgICAgICBzcGVjLmRpc3BsYXlOYW1lIHx8ICdBIGNvbXBvbmVudCdcbiAgICAgICk7XG4gICAgICB3YXJuaW5nKFxuICAgICAgICAhQ29uc3RydWN0b3IucHJvdG90eXBlLmNvbXBvbmVudFdpbGxSZWNpZXZlUHJvcHMsXG4gICAgICAgICclcyBoYXMgYSBtZXRob2QgY2FsbGVkICcgK1xuICAgICAgICAgICdjb21wb25lbnRXaWxsUmVjaWV2ZVByb3BzKCkuIERpZCB5b3UgbWVhbiBjb21wb25lbnRXaWxsUmVjZWl2ZVByb3BzKCk/JyxcbiAgICAgICAgc3BlYy5kaXNwbGF5TmFtZSB8fCAnQSBjb21wb25lbnQnXG4gICAgICApO1xuICAgICAgd2FybmluZyhcbiAgICAgICAgIUNvbnN0cnVjdG9yLnByb3RvdHlwZS5VTlNBRkVfY29tcG9uZW50V2lsbFJlY2lldmVQcm9wcyxcbiAgICAgICAgJyVzIGhhcyBhIG1ldGhvZCBjYWxsZWQgVU5TQUZFX2NvbXBvbmVudFdpbGxSZWNpZXZlUHJvcHMoKS4gJyArXG4gICAgICAgICAgJ0RpZCB5b3UgbWVhbiBVTlNBRkVfY29tcG9uZW50V2lsbFJlY2VpdmVQcm9wcygpPycsXG4gICAgICAgIHNwZWMuZGlzcGxheU5hbWUgfHwgJ0EgY29tcG9uZW50J1xuICAgICAgKTtcbiAgICB9XG5cbiAgICAvLyBSZWR1Y2UgdGltZSBzcGVudCBkb2luZyBsb29rdXBzIGJ5IHNldHRpbmcgdGhlc2Ugb24gdGhlIHByb3RvdHlwZS5cbiAgICBmb3IgKHZhciBtZXRob2ROYW1lIGluIFJlYWN0Q2xhc3NJbnRlcmZhY2UpIHtcbiAgICAgIGlmICghQ29uc3RydWN0b3IucHJvdG90eXBlW21ldGhvZE5hbWVdKSB7XG4gICAgICAgIENvbnN0cnVjdG9yLnByb3RvdHlwZVttZXRob2ROYW1lXSA9IG51bGw7XG4gICAgICB9XG4gICAgfVxuXG4gICAgcmV0dXJuIENvbnN0cnVjdG9yO1xuICB9XG5cbiAgcmV0dXJuIGNyZWF0ZUNsYXNzO1xufVxuXG5tb2R1bGUuZXhwb3J0cyA9IGZhY3Rvcnk7XG4iLCIvKipcbiAqIENvcHlyaWdodCAoYykgMjAxMy1wcmVzZW50LCBGYWNlYm9vaywgSW5jLlxuICpcbiAqIFRoaXMgc291cmNlIGNvZGUgaXMgbGljZW5zZWQgdW5kZXIgdGhlIE1JVCBsaWNlbnNlIGZvdW5kIGluIHRoZVxuICogTElDRU5TRSBmaWxlIGluIHRoZSByb290IGRpcmVjdG9yeSBvZiB0aGlzIHNvdXJjZSB0cmVlLlxuICpcbiAqL1xuXG4ndXNlIHN0cmljdCc7XG5cbnZhciBlbXB0eU9iamVjdCA9IHt9O1xuXG5pZiAocHJvY2Vzcy5lbnYuTk9ERV9FTlYgIT09ICdwcm9kdWN0aW9uJykge1xuICBPYmplY3QuZnJlZXplKGVtcHR5T2JqZWN0KTtcbn1cblxubW9kdWxlLmV4cG9ydHMgPSBlbXB0eU9iamVjdDsiLCIvKipcbiAqIENvcHlyaWdodCAoYykgMjAxMy1wcmVzZW50LCBGYWNlYm9vaywgSW5jLlxuICpcbiAqIFRoaXMgc291cmNlIGNvZGUgaXMgbGljZW5zZWQgdW5kZXIgdGhlIE1JVCBsaWNlbnNlIGZvdW5kIGluIHRoZVxuICogTElDRU5TRSBmaWxlIGluIHRoZSByb290IGRpcmVjdG9yeSBvZiB0aGlzIHNvdXJjZSB0cmVlLlxuICpcbiAqL1xuXG4ndXNlIHN0cmljdCc7XG5cbi8qKlxuICogVXNlIGludmFyaWFudCgpIHRvIGFzc2VydCBzdGF0ZSB3aGljaCB5b3VyIHByb2dyYW0gYXNzdW1lcyB0byBiZSB0cnVlLlxuICpcbiAqIFByb3ZpZGUgc3ByaW50Zi1zdHlsZSBmb3JtYXQgKG9ubHkgJXMgaXMgc3VwcG9ydGVkKSBhbmQgYXJndW1lbnRzXG4gKiB0byBwcm92aWRlIGluZm9ybWF0aW9uIGFib3V0IHdoYXQgYnJva2UgYW5kIHdoYXQgeW91IHdlcmVcbiAqIGV4cGVjdGluZy5cbiAqXG4gKiBUaGUgaW52YXJpYW50IG1lc3NhZ2Ugd2lsbCBiZSBzdHJpcHBlZCBpbiBwcm9kdWN0aW9uLCBidXQgdGhlIGludmFyaWFudFxuICogd2lsbCByZW1haW4gdG8gZW5zdXJlIGxvZ2ljIGRvZXMgbm90IGRpZmZlciBpbiBwcm9kdWN0aW9uLlxuICovXG5cbnZhciB2YWxpZGF0ZUZvcm1hdCA9IGZ1bmN0aW9uIHZhbGlkYXRlRm9ybWF0KGZvcm1hdCkge307XG5cbmlmIChwcm9jZXNzLmVudi5OT0RFX0VOViAhPT0gJ3Byb2R1Y3Rpb24nKSB7XG4gIHZhbGlkYXRlRm9ybWF0ID0gZnVuY3Rpb24gdmFsaWRhdGVGb3JtYXQoZm9ybWF0KSB7XG4gICAgaWYgKGZvcm1hdCA9PT0gdW5kZWZpbmVkKSB7XG4gICAgICB0aHJvdyBuZXcgRXJyb3IoJ2ludmFyaWFudCByZXF1aXJlcyBhbiBlcnJvciBtZXNzYWdlIGFyZ3VtZW50Jyk7XG4gICAgfVxuICB9O1xufVxuXG5mdW5jdGlvbiBpbnZhcmlhbnQoY29uZGl0aW9uLCBmb3JtYXQsIGEsIGIsIGMsIGQsIGUsIGYpIHtcbiAgdmFsaWRhdGVGb3JtYXQoZm9ybWF0KTtcblxuICBpZiAoIWNvbmRpdGlvbikge1xuICAgIHZhciBlcnJvcjtcbiAgICBpZiAoZm9ybWF0ID09PSB1bmRlZmluZWQpIHtcbiAgICAgIGVycm9yID0gbmV3IEVycm9yKCdNaW5pZmllZCBleGNlcHRpb24gb2NjdXJyZWQ7IHVzZSB0aGUgbm9uLW1pbmlmaWVkIGRldiBlbnZpcm9ubWVudCAnICsgJ2ZvciB0aGUgZnVsbCBlcnJvciBtZXNzYWdlIGFuZCBhZGRpdGlvbmFsIGhlbHBmdWwgd2FybmluZ3MuJyk7XG4gICAgfSBlbHNlIHtcbiAgICAgIHZhciBhcmdzID0gW2EsIGIsIGMsIGQsIGUsIGZdO1xuICAgICAgdmFyIGFyZ0luZGV4ID0gMDtcbiAgICAgIGVycm9yID0gbmV3IEVycm9yKGZvcm1hdC5yZXBsYWNlKC8lcy9nLCBmdW5jdGlvbiAoKSB7XG4gICAgICAgIHJldHVybiBhcmdzW2FyZ0luZGV4KytdO1xuICAgICAgfSkpO1xuICAgICAgZXJyb3IubmFtZSA9ICdJbnZhcmlhbnQgVmlvbGF0aW9uJztcbiAgICB9XG5cbiAgICBlcnJvci5mcmFtZXNUb1BvcCA9IDE7IC8vIHdlIGRvbid0IGNhcmUgYWJvdXQgaW52YXJpYW50J3Mgb3duIGZyYW1lXG4gICAgdGhyb3cgZXJyb3I7XG4gIH1cbn1cblxubW9kdWxlLmV4cG9ydHMgPSBpbnZhcmlhbnQ7IiwiJ3VzZSBzdHJpY3QnO1xuXG52YXIgcmVhY3RJcyA9IHJlcXVpcmUoJ3JlYWN0LWlzJyk7XG5cbi8qKlxuICogQ29weXJpZ2h0IDIwMTUsIFlhaG9vISBJbmMuXG4gKiBDb3B5cmlnaHRzIGxpY2Vuc2VkIHVuZGVyIHRoZSBOZXcgQlNEIExpY2Vuc2UuIFNlZSB0aGUgYWNjb21wYW55aW5nIExJQ0VOU0UgZmlsZSBmb3IgdGVybXMuXG4gKi9cbnZhciBSRUFDVF9TVEFUSUNTID0ge1xuICBjaGlsZENvbnRleHRUeXBlczogdHJ1ZSxcbiAgY29udGV4dFR5cGU6IHRydWUsXG4gIGNvbnRleHRUeXBlczogdHJ1ZSxcbiAgZGVmYXVsdFByb3BzOiB0cnVlLFxuICBkaXNwbGF5TmFtZTogdHJ1ZSxcbiAgZ2V0RGVmYXVsdFByb3BzOiB0cnVlLFxuICBnZXREZXJpdmVkU3RhdGVGcm9tRXJyb3I6IHRydWUsXG4gIGdldERlcml2ZWRTdGF0ZUZyb21Qcm9wczogdHJ1ZSxcbiAgbWl4aW5zOiB0cnVlLFxuICBwcm9wVHlwZXM6IHRydWUsXG4gIHR5cGU6IHRydWVcbn07XG52YXIgS05PV05fU1RBVElDUyA9IHtcbiAgbmFtZTogdHJ1ZSxcbiAgbGVuZ3RoOiB0cnVlLFxuICBwcm90b3R5cGU6IHRydWUsXG4gIGNhbGxlcjogdHJ1ZSxcbiAgY2FsbGVlOiB0cnVlLFxuICBhcmd1bWVudHM6IHRydWUsXG4gIGFyaXR5OiB0cnVlXG59O1xudmFyIEZPUldBUkRfUkVGX1NUQVRJQ1MgPSB7XG4gICckJHR5cGVvZic6IHRydWUsXG4gIHJlbmRlcjogdHJ1ZSxcbiAgZGVmYXVsdFByb3BzOiB0cnVlLFxuICBkaXNwbGF5TmFtZTogdHJ1ZSxcbiAgcHJvcFR5cGVzOiB0cnVlXG59O1xudmFyIE1FTU9fU1RBVElDUyA9IHtcbiAgJyQkdHlwZW9mJzogdHJ1ZSxcbiAgY29tcGFyZTogdHJ1ZSxcbiAgZGVmYXVsdFByb3BzOiB0cnVlLFxuICBkaXNwbGF5TmFtZTogdHJ1ZSxcbiAgcHJvcFR5cGVzOiB0cnVlLFxuICB0eXBlOiB0cnVlXG59O1xudmFyIFRZUEVfU1RBVElDUyA9IHt9O1xuVFlQRV9TVEFUSUNTW3JlYWN0SXMuRm9yd2FyZFJlZl0gPSBGT1JXQVJEX1JFRl9TVEFUSUNTO1xuVFlQRV9TVEFUSUNTW3JlYWN0SXMuTWVtb10gPSBNRU1PX1NUQVRJQ1M7XG5cbmZ1bmN0aW9uIGdldFN0YXRpY3MoY29tcG9uZW50KSB7XG4gIC8vIFJlYWN0IHYxNi4xMSBhbmQgYmVsb3dcbiAgaWYgKHJlYWN0SXMuaXNNZW1vKGNvbXBvbmVudCkpIHtcbiAgICByZXR1cm4gTUVNT19TVEFUSUNTO1xuICB9IC8vIFJlYWN0IHYxNi4xMiBhbmQgYWJvdmVcblxuXG4gIHJldHVybiBUWVBFX1NUQVRJQ1NbY29tcG9uZW50WyckJHR5cGVvZiddXSB8fCBSRUFDVF9TVEFUSUNTO1xufVxuXG52YXIgZGVmaW5lUHJvcGVydHkgPSBPYmplY3QuZGVmaW5lUHJvcGVydHk7XG52YXIgZ2V0T3duUHJvcGVydHlOYW1lcyA9IE9iamVjdC5nZXRPd25Qcm9wZXJ0eU5hbWVzO1xudmFyIGdldE93blByb3BlcnR5U3ltYm9scyA9IE9iamVjdC5nZXRPd25Qcm9wZXJ0eVN5bWJvbHM7XG52YXIgZ2V0T3duUHJvcGVydHlEZXNjcmlwdG9yID0gT2JqZWN0LmdldE93blByb3BlcnR5RGVzY3JpcHRvcjtcbnZhciBnZXRQcm90b3R5cGVPZiA9IE9iamVjdC5nZXRQcm90b3R5cGVPZjtcbnZhciBvYmplY3RQcm90b3R5cGUgPSBPYmplY3QucHJvdG90eXBlO1xuZnVuY3Rpb24gaG9pc3ROb25SZWFjdFN0YXRpY3ModGFyZ2V0Q29tcG9uZW50LCBzb3VyY2VDb21wb25lbnQsIGJsYWNrbGlzdCkge1xuICBpZiAodHlwZW9mIHNvdXJjZUNvbXBvbmVudCAhPT0gJ3N0cmluZycpIHtcbiAgICAvLyBkb24ndCBob2lzdCBvdmVyIHN0cmluZyAoaHRtbCkgY29tcG9uZW50c1xuICAgIGlmIChvYmplY3RQcm90b3R5cGUpIHtcbiAgICAgIHZhciBpbmhlcml0ZWRDb21wb25lbnQgPSBnZXRQcm90b3R5cGVPZihzb3VyY2VDb21wb25lbnQpO1xuXG4gICAgICBpZiAoaW5oZXJpdGVkQ29tcG9uZW50ICYmIGluaGVyaXRlZENvbXBvbmVudCAhPT0gb2JqZWN0UHJvdG90eXBlKSB7XG4gICAgICAgIGhvaXN0Tm9uUmVhY3RTdGF0aWNzKHRhcmdldENvbXBvbmVudCwgaW5oZXJpdGVkQ29tcG9uZW50LCBibGFja2xpc3QpO1xuICAgICAgfVxuICAgIH1cblxuICAgIHZhciBrZXlzID0gZ2V0T3duUHJvcGVydHlOYW1lcyhzb3VyY2VDb21wb25lbnQpO1xuXG4gICAgaWYgKGdldE93blByb3BlcnR5U3ltYm9scykge1xuICAgICAga2V5cyA9IGtleXMuY29uY2F0KGdldE93blByb3BlcnR5U3ltYm9scyhzb3VyY2VDb21wb25lbnQpKTtcbiAgICB9XG5cbiAgICB2YXIgdGFyZ2V0U3RhdGljcyA9IGdldFN0YXRpY3ModGFyZ2V0Q29tcG9uZW50KTtcbiAgICB2YXIgc291cmNlU3RhdGljcyA9IGdldFN0YXRpY3Moc291cmNlQ29tcG9uZW50KTtcblxuICAgIGZvciAodmFyIGkgPSAwOyBpIDwga2V5cy5sZW5ndGg7ICsraSkge1xuICAgICAgdmFyIGtleSA9IGtleXNbaV07XG5cbiAgICAgIGlmICghS05PV05fU1RBVElDU1trZXldICYmICEoYmxhY2tsaXN0ICYmIGJsYWNrbGlzdFtrZXldKSAmJiAhKHNvdXJjZVN0YXRpY3MgJiYgc291cmNlU3RhdGljc1trZXldKSAmJiAhKHRhcmdldFN0YXRpY3MgJiYgdGFyZ2V0U3RhdGljc1trZXldKSkge1xuICAgICAgICB2YXIgZGVzY3JpcHRvciA9IGdldE93blByb3BlcnR5RGVzY3JpcHRvcihzb3VyY2VDb21wb25lbnQsIGtleSk7XG5cbiAgICAgICAgdHJ5IHtcbiAgICAgICAgICAvLyBBdm9pZCBmYWlsdXJlcyBmcm9tIHJlYWQtb25seSBwcm9wZXJ0aWVzXG4gICAgICAgICAgZGVmaW5lUHJvcGVydHkodGFyZ2V0Q29tcG9uZW50LCBrZXksIGRlc2NyaXB0b3IpO1xuICAgICAgICB9IGNhdGNoIChlKSB7fVxuICAgICAgfVxuICAgIH1cbiAgfVxuXG4gIHJldHVybiB0YXJnZXRDb21wb25lbnQ7XG59XG5cbm1vZHVsZS5leHBvcnRzID0gaG9pc3ROb25SZWFjdFN0YXRpY3M7XG4iLCIndXNlIHN0cmljdCc7XG5cbmlmIChwcm9jZXNzLmVudi5OT0RFX0VOViA9PT0gJ3Byb2R1Y3Rpb24nKSB7XG4gIG1vZHVsZS5leHBvcnRzID0gcmVxdWlyZSgnLi9janMvcmVhY3QtaXMucHJvZHVjdGlvbi5taW4uanMnKTtcbn0gZWxzZSB7XG4gIG1vZHVsZS5leHBvcnRzID0gcmVxdWlyZSgnLi9janMvcmVhY3QtaXMuZGV2ZWxvcG1lbnQuanMnKTtcbn1cbiIsIi8qKiBAbGljZW5zZSBSZWFjdCB2MTYuMTMuMVxuICogcmVhY3QtaXMucHJvZHVjdGlvbi5taW4uanNcbiAqXG4gKiBDb3B5cmlnaHQgKGMpIEZhY2Vib29rLCBJbmMuIGFuZCBpdHMgYWZmaWxpYXRlcy5cbiAqXG4gKiBUaGlzIHNvdXJjZSBjb2RlIGlzIGxpY2Vuc2VkIHVuZGVyIHRoZSBNSVQgbGljZW5zZSBmb3VuZCBpbiB0aGVcbiAqIExJQ0VOU0UgZmlsZSBpbiB0aGUgcm9vdCBkaXJlY3Rvcnkgb2YgdGhpcyBzb3VyY2UgdHJlZS5cbiAqL1xuXG4ndXNlIHN0cmljdCc7dmFyIGI9XCJmdW5jdGlvblwiPT09dHlwZW9mIFN5bWJvbCYmU3ltYm9sLmZvcixjPWI/U3ltYm9sLmZvcihcInJlYWN0LmVsZW1lbnRcIik6NjAxMDMsZD1iP1N5bWJvbC5mb3IoXCJyZWFjdC5wb3J0YWxcIik6NjAxMDYsZT1iP1N5bWJvbC5mb3IoXCJyZWFjdC5mcmFnbWVudFwiKTo2MDEwNyxmPWI/U3ltYm9sLmZvcihcInJlYWN0LnN0cmljdF9tb2RlXCIpOjYwMTA4LGc9Yj9TeW1ib2wuZm9yKFwicmVhY3QucHJvZmlsZXJcIik6NjAxMTQsaD1iP1N5bWJvbC5mb3IoXCJyZWFjdC5wcm92aWRlclwiKTo2MDEwOSxrPWI/U3ltYm9sLmZvcihcInJlYWN0LmNvbnRleHRcIik6NjAxMTAsbD1iP1N5bWJvbC5mb3IoXCJyZWFjdC5hc3luY19tb2RlXCIpOjYwMTExLG09Yj9TeW1ib2wuZm9yKFwicmVhY3QuY29uY3VycmVudF9tb2RlXCIpOjYwMTExLG49Yj9TeW1ib2wuZm9yKFwicmVhY3QuZm9yd2FyZF9yZWZcIik6NjAxMTIscD1iP1N5bWJvbC5mb3IoXCJyZWFjdC5zdXNwZW5zZVwiKTo2MDExMyxxPWI/XG5TeW1ib2wuZm9yKFwicmVhY3Quc3VzcGVuc2VfbGlzdFwiKTo2MDEyMCxyPWI/U3ltYm9sLmZvcihcInJlYWN0Lm1lbW9cIik6NjAxMTUsdD1iP1N5bWJvbC5mb3IoXCJyZWFjdC5sYXp5XCIpOjYwMTE2LHY9Yj9TeW1ib2wuZm9yKFwicmVhY3QuYmxvY2tcIik6NjAxMjEsdz1iP1N5bWJvbC5mb3IoXCJyZWFjdC5mdW5kYW1lbnRhbFwiKTo2MDExNyx4PWI/U3ltYm9sLmZvcihcInJlYWN0LnJlc3BvbmRlclwiKTo2MDExOCx5PWI/U3ltYm9sLmZvcihcInJlYWN0LnNjb3BlXCIpOjYwMTE5O1xuZnVuY3Rpb24geihhKXtpZihcIm9iamVjdFwiPT09dHlwZW9mIGEmJm51bGwhPT1hKXt2YXIgdT1hLiQkdHlwZW9mO3N3aXRjaCh1KXtjYXNlIGM6c3dpdGNoKGE9YS50eXBlLGEpe2Nhc2UgbDpjYXNlIG06Y2FzZSBlOmNhc2UgZzpjYXNlIGY6Y2FzZSBwOnJldHVybiBhO2RlZmF1bHQ6c3dpdGNoKGE9YSYmYS4kJHR5cGVvZixhKXtjYXNlIGs6Y2FzZSBuOmNhc2UgdDpjYXNlIHI6Y2FzZSBoOnJldHVybiBhO2RlZmF1bHQ6cmV0dXJuIHV9fWNhc2UgZDpyZXR1cm4gdX19fWZ1bmN0aW9uIEEoYSl7cmV0dXJuIHooYSk9PT1tfWV4cG9ydHMuQXN5bmNNb2RlPWw7ZXhwb3J0cy5Db25jdXJyZW50TW9kZT1tO2V4cG9ydHMuQ29udGV4dENvbnN1bWVyPWs7ZXhwb3J0cy5Db250ZXh0UHJvdmlkZXI9aDtleHBvcnRzLkVsZW1lbnQ9YztleHBvcnRzLkZvcndhcmRSZWY9bjtleHBvcnRzLkZyYWdtZW50PWU7ZXhwb3J0cy5MYXp5PXQ7ZXhwb3J0cy5NZW1vPXI7ZXhwb3J0cy5Qb3J0YWw9ZDtcbmV4cG9ydHMuUHJvZmlsZXI9ZztleHBvcnRzLlN0cmljdE1vZGU9ZjtleHBvcnRzLlN1c3BlbnNlPXA7ZXhwb3J0cy5pc0FzeW5jTW9kZT1mdW5jdGlvbihhKXtyZXR1cm4gQShhKXx8eihhKT09PWx9O2V4cG9ydHMuaXNDb25jdXJyZW50TW9kZT1BO2V4cG9ydHMuaXNDb250ZXh0Q29uc3VtZXI9ZnVuY3Rpb24oYSl7cmV0dXJuIHooYSk9PT1rfTtleHBvcnRzLmlzQ29udGV4dFByb3ZpZGVyPWZ1bmN0aW9uKGEpe3JldHVybiB6KGEpPT09aH07ZXhwb3J0cy5pc0VsZW1lbnQ9ZnVuY3Rpb24oYSl7cmV0dXJuXCJvYmplY3RcIj09PXR5cGVvZiBhJiZudWxsIT09YSYmYS4kJHR5cGVvZj09PWN9O2V4cG9ydHMuaXNGb3J3YXJkUmVmPWZ1bmN0aW9uKGEpe3JldHVybiB6KGEpPT09bn07ZXhwb3J0cy5pc0ZyYWdtZW50PWZ1bmN0aW9uKGEpe3JldHVybiB6KGEpPT09ZX07ZXhwb3J0cy5pc0xhenk9ZnVuY3Rpb24oYSl7cmV0dXJuIHooYSk9PT10fTtcbmV4cG9ydHMuaXNNZW1vPWZ1bmN0aW9uKGEpe3JldHVybiB6KGEpPT09cn07ZXhwb3J0cy5pc1BvcnRhbD1mdW5jdGlvbihhKXtyZXR1cm4geihhKT09PWR9O2V4cG9ydHMuaXNQcm9maWxlcj1mdW5jdGlvbihhKXtyZXR1cm4geihhKT09PWd9O2V4cG9ydHMuaXNTdHJpY3RNb2RlPWZ1bmN0aW9uKGEpe3JldHVybiB6KGEpPT09Zn07ZXhwb3J0cy5pc1N1c3BlbnNlPWZ1bmN0aW9uKGEpe3JldHVybiB6KGEpPT09cH07XG5leHBvcnRzLmlzVmFsaWRFbGVtZW50VHlwZT1mdW5jdGlvbihhKXtyZXR1cm5cInN0cmluZ1wiPT09dHlwZW9mIGF8fFwiZnVuY3Rpb25cIj09PXR5cGVvZiBhfHxhPT09ZXx8YT09PW18fGE9PT1nfHxhPT09Znx8YT09PXB8fGE9PT1xfHxcIm9iamVjdFwiPT09dHlwZW9mIGEmJm51bGwhPT1hJiYoYS4kJHR5cGVvZj09PXR8fGEuJCR0eXBlb2Y9PT1yfHxhLiQkdHlwZW9mPT09aHx8YS4kJHR5cGVvZj09PWt8fGEuJCR0eXBlb2Y9PT1ufHxhLiQkdHlwZW9mPT09d3x8YS4kJHR5cGVvZj09PXh8fGEuJCR0eXBlb2Y9PT15fHxhLiQkdHlwZW9mPT09dil9O2V4cG9ydHMudHlwZU9mPXo7XG4iLCIhZnVuY3Rpb24oKSB7XG4gIHZhciBkMyA9IHtcbiAgICB2ZXJzaW9uOiBcIjMuNS4xN1wiXG4gIH07XG4gIHZhciBkM19hcnJheVNsaWNlID0gW10uc2xpY2UsIGQzX2FycmF5ID0gZnVuY3Rpb24obGlzdCkge1xuICAgIHJldHVybiBkM19hcnJheVNsaWNlLmNhbGwobGlzdCk7XG4gIH07XG4gIHZhciBkM19kb2N1bWVudCA9IHRoaXMuZG9jdW1lbnQ7XG4gIGZ1bmN0aW9uIGQzX2RvY3VtZW50RWxlbWVudChub2RlKSB7XG4gICAgcmV0dXJuIG5vZGUgJiYgKG5vZGUub3duZXJEb2N1bWVudCB8fCBub2RlLmRvY3VtZW50IHx8IG5vZGUpLmRvY3VtZW50RWxlbWVudDtcbiAgfVxuICBmdW5jdGlvbiBkM193aW5kb3cobm9kZSkge1xuICAgIHJldHVybiBub2RlICYmIChub2RlLm93bmVyRG9jdW1lbnQgJiYgbm9kZS5vd25lckRvY3VtZW50LmRlZmF1bHRWaWV3IHx8IG5vZGUuZG9jdW1lbnQgJiYgbm9kZSB8fCBub2RlLmRlZmF1bHRWaWV3KTtcbiAgfVxuICBpZiAoZDNfZG9jdW1lbnQpIHtcbiAgICB0cnkge1xuICAgICAgZDNfYXJyYXkoZDNfZG9jdW1lbnQuZG9jdW1lbnRFbGVtZW50LmNoaWxkTm9kZXMpWzBdLm5vZGVUeXBlO1xuICAgIH0gY2F0Y2ggKGUpIHtcbiAgICAgIGQzX2FycmF5ID0gZnVuY3Rpb24obGlzdCkge1xuICAgICAgICB2YXIgaSA9IGxpc3QubGVuZ3RoLCBhcnJheSA9IG5ldyBBcnJheShpKTtcbiAgICAgICAgd2hpbGUgKGktLSkgYXJyYXlbaV0gPSBsaXN0W2ldO1xuICAgICAgICByZXR1cm4gYXJyYXk7XG4gICAgICB9O1xuICAgIH1cbiAgfVxuICBpZiAoIURhdGUubm93KSBEYXRlLm5vdyA9IGZ1bmN0aW9uKCkge1xuICAgIHJldHVybiArbmV3IERhdGUoKTtcbiAgfTtcbiAgaWYgKGQzX2RvY3VtZW50KSB7XG4gICAgdHJ5IHtcbiAgICAgIGQzX2RvY3VtZW50LmNyZWF0ZUVsZW1lbnQoXCJESVZcIikuc3R5bGUuc2V0UHJvcGVydHkoXCJvcGFjaXR5XCIsIDAsIFwiXCIpO1xuICAgIH0gY2F0Y2ggKGVycm9yKSB7XG4gICAgICB2YXIgZDNfZWxlbWVudF9wcm90b3R5cGUgPSB0aGlzLkVsZW1lbnQucHJvdG90eXBlLCBkM19lbGVtZW50X3NldEF0dHJpYnV0ZSA9IGQzX2VsZW1lbnRfcHJvdG90eXBlLnNldEF0dHJpYnV0ZSwgZDNfZWxlbWVudF9zZXRBdHRyaWJ1dGVOUyA9IGQzX2VsZW1lbnRfcHJvdG90eXBlLnNldEF0dHJpYnV0ZU5TLCBkM19zdHlsZV9wcm90b3R5cGUgPSB0aGlzLkNTU1N0eWxlRGVjbGFyYXRpb24ucHJvdG90eXBlLCBkM19zdHlsZV9zZXRQcm9wZXJ0eSA9IGQzX3N0eWxlX3Byb3RvdHlwZS5zZXRQcm9wZXJ0eTtcbiAgICAgIGQzX2VsZW1lbnRfcHJvdG90eXBlLnNldEF0dHJpYnV0ZSA9IGZ1bmN0aW9uKG5hbWUsIHZhbHVlKSB7XG4gICAgICAgIGQzX2VsZW1lbnRfc2V0QXR0cmlidXRlLmNhbGwodGhpcywgbmFtZSwgdmFsdWUgKyBcIlwiKTtcbiAgICAgIH07XG4gICAgICBkM19lbGVtZW50X3Byb3RvdHlwZS5zZXRBdHRyaWJ1dGVOUyA9IGZ1bmN0aW9uKHNwYWNlLCBsb2NhbCwgdmFsdWUpIHtcbiAgICAgICAgZDNfZWxlbWVudF9zZXRBdHRyaWJ1dGVOUy5jYWxsKHRoaXMsIHNwYWNlLCBsb2NhbCwgdmFsdWUgKyBcIlwiKTtcbiAgICAgIH07XG4gICAgICBkM19zdHlsZV9wcm90b3R5cGUuc2V0UHJvcGVydHkgPSBmdW5jdGlvbihuYW1lLCB2YWx1ZSwgcHJpb3JpdHkpIHtcbiAgICAgICAgZDNfc3R5bGVfc2V0UHJvcGVydHkuY2FsbCh0aGlzLCBuYW1lLCB2YWx1ZSArIFwiXCIsIHByaW9yaXR5KTtcbiAgICAgIH07XG4gICAgfVxuICB9XG4gIGQzLmFzY2VuZGluZyA9IGQzX2FzY2VuZGluZztcbiAgZnVuY3Rpb24gZDNfYXNjZW5kaW5nKGEsIGIpIHtcbiAgICByZXR1cm4gYSA8IGIgPyAtMSA6IGEgPiBiID8gMSA6IGEgPj0gYiA/IDAgOiBOYU47XG4gIH1cbiAgZDMuZGVzY2VuZGluZyA9IGZ1bmN0aW9uKGEsIGIpIHtcbiAgICByZXR1cm4gYiA8IGEgPyAtMSA6IGIgPiBhID8gMSA6IGIgPj0gYSA/IDAgOiBOYU47XG4gIH07XG4gIGQzLm1pbiA9IGZ1bmN0aW9uKGFycmF5LCBmKSB7XG4gICAgdmFyIGkgPSAtMSwgbiA9IGFycmF5Lmxlbmd0aCwgYSwgYjtcbiAgICBpZiAoYXJndW1lbnRzLmxlbmd0aCA9PT0gMSkge1xuICAgICAgd2hpbGUgKCsraSA8IG4pIGlmICgoYiA9IGFycmF5W2ldKSAhPSBudWxsICYmIGIgPj0gYikge1xuICAgICAgICBhID0gYjtcbiAgICAgICAgYnJlYWs7XG4gICAgICB9XG4gICAgICB3aGlsZSAoKytpIDwgbikgaWYgKChiID0gYXJyYXlbaV0pICE9IG51bGwgJiYgYSA+IGIpIGEgPSBiO1xuICAgIH0gZWxzZSB7XG4gICAgICB3aGlsZSAoKytpIDwgbikgaWYgKChiID0gZi5jYWxsKGFycmF5LCBhcnJheVtpXSwgaSkpICE9IG51bGwgJiYgYiA+PSBiKSB7XG4gICAgICAgIGEgPSBiO1xuICAgICAgICBicmVhaztcbiAgICAgIH1cbiAgICAgIHdoaWxlICgrK2kgPCBuKSBpZiAoKGIgPSBmLmNhbGwoYXJyYXksIGFycmF5W2ldLCBpKSkgIT0gbnVsbCAmJiBhID4gYikgYSA9IGI7XG4gICAgfVxuICAgIHJldHVybiBhO1xuICB9O1xuICBkMy5tYXggPSBmdW5jdGlvbihhcnJheSwgZikge1xuICAgIHZhciBpID0gLTEsIG4gPSBhcnJheS5sZW5ndGgsIGEsIGI7XG4gICAgaWYgKGFyZ3VtZW50cy5sZW5ndGggPT09IDEpIHtcbiAgICAgIHdoaWxlICgrK2kgPCBuKSBpZiAoKGIgPSBhcnJheVtpXSkgIT0gbnVsbCAmJiBiID49IGIpIHtcbiAgICAgICAgYSA9IGI7XG4gICAgICAgIGJyZWFrO1xuICAgICAgfVxuICAgICAgd2hpbGUgKCsraSA8IG4pIGlmICgoYiA9IGFycmF5W2ldKSAhPSBudWxsICYmIGIgPiBhKSBhID0gYjtcbiAgICB9IGVsc2Uge1xuICAgICAgd2hpbGUgKCsraSA8IG4pIGlmICgoYiA9IGYuY2FsbChhcnJheSwgYXJyYXlbaV0sIGkpKSAhPSBudWxsICYmIGIgPj0gYikge1xuICAgICAgICBhID0gYjtcbiAgICAgICAgYnJlYWs7XG4gICAgICB9XG4gICAgICB3aGlsZSAoKytpIDwgbikgaWYgKChiID0gZi5jYWxsKGFycmF5LCBhcnJheVtpXSwgaSkpICE9IG51bGwgJiYgYiA+IGEpIGEgPSBiO1xuICAgIH1cbiAgICByZXR1cm4gYTtcbiAgfTtcbiAgZDMuZXh0ZW50ID0gZnVuY3Rpb24oYXJyYXksIGYpIHtcbiAgICB2YXIgaSA9IC0xLCBuID0gYXJyYXkubGVuZ3RoLCBhLCBiLCBjO1xuICAgIGlmIChhcmd1bWVudHMubGVuZ3RoID09PSAxKSB7XG4gICAgICB3aGlsZSAoKytpIDwgbikgaWYgKChiID0gYXJyYXlbaV0pICE9IG51bGwgJiYgYiA+PSBiKSB7XG4gICAgICAgIGEgPSBjID0gYjtcbiAgICAgICAgYnJlYWs7XG4gICAgICB9XG4gICAgICB3aGlsZSAoKytpIDwgbikgaWYgKChiID0gYXJyYXlbaV0pICE9IG51bGwpIHtcbiAgICAgICAgaWYgKGEgPiBiKSBhID0gYjtcbiAgICAgICAgaWYgKGMgPCBiKSBjID0gYjtcbiAgICAgIH1cbiAgICB9IGVsc2Uge1xuICAgICAgd2hpbGUgKCsraSA8IG4pIGlmICgoYiA9IGYuY2FsbChhcnJheSwgYXJyYXlbaV0sIGkpKSAhPSBudWxsICYmIGIgPj0gYikge1xuICAgICAgICBhID0gYyA9IGI7XG4gICAgICAgIGJyZWFrO1xuICAgICAgfVxuICAgICAgd2hpbGUgKCsraSA8IG4pIGlmICgoYiA9IGYuY2FsbChhcnJheSwgYXJyYXlbaV0sIGkpKSAhPSBudWxsKSB7XG4gICAgICAgIGlmIChhID4gYikgYSA9IGI7XG4gICAgICAgIGlmIChjIDwgYikgYyA9IGI7XG4gICAgICB9XG4gICAgfVxuICAgIHJldHVybiBbIGEsIGMgXTtcbiAgfTtcbiAgZnVuY3Rpb24gZDNfbnVtYmVyKHgpIHtcbiAgICByZXR1cm4geCA9PT0gbnVsbCA/IE5hTiA6ICt4O1xuICB9XG4gIGZ1bmN0aW9uIGQzX251bWVyaWMoeCkge1xuICAgIHJldHVybiAhaXNOYU4oeCk7XG4gIH1cbiAgZDMuc3VtID0gZnVuY3Rpb24oYXJyYXksIGYpIHtcbiAgICB2YXIgcyA9IDAsIG4gPSBhcnJheS5sZW5ndGgsIGEsIGkgPSAtMTtcbiAgICBpZiAoYXJndW1lbnRzLmxlbmd0aCA9PT0gMSkge1xuICAgICAgd2hpbGUgKCsraSA8IG4pIGlmIChkM19udW1lcmljKGEgPSArYXJyYXlbaV0pKSBzICs9IGE7XG4gICAgfSBlbHNlIHtcbiAgICAgIHdoaWxlICgrK2kgPCBuKSBpZiAoZDNfbnVtZXJpYyhhID0gK2YuY2FsbChhcnJheSwgYXJyYXlbaV0sIGkpKSkgcyArPSBhO1xuICAgIH1cbiAgICByZXR1cm4gcztcbiAgfTtcbiAgZDMubWVhbiA9IGZ1bmN0aW9uKGFycmF5LCBmKSB7XG4gICAgdmFyIHMgPSAwLCBuID0gYXJyYXkubGVuZ3RoLCBhLCBpID0gLTEsIGogPSBuO1xuICAgIGlmIChhcmd1bWVudHMubGVuZ3RoID09PSAxKSB7XG4gICAgICB3aGlsZSAoKytpIDwgbikgaWYgKGQzX251bWVyaWMoYSA9IGQzX251bWJlcihhcnJheVtpXSkpKSBzICs9IGE7IGVsc2UgLS1qO1xuICAgIH0gZWxzZSB7XG4gICAgICB3aGlsZSAoKytpIDwgbikgaWYgKGQzX251bWVyaWMoYSA9IGQzX251bWJlcihmLmNhbGwoYXJyYXksIGFycmF5W2ldLCBpKSkpKSBzICs9IGE7IGVsc2UgLS1qO1xuICAgIH1cbiAgICBpZiAoaikgcmV0dXJuIHMgLyBqO1xuICB9O1xuICBkMy5xdWFudGlsZSA9IGZ1bmN0aW9uKHZhbHVlcywgcCkge1xuICAgIHZhciBIID0gKHZhbHVlcy5sZW5ndGggLSAxKSAqIHAgKyAxLCBoID0gTWF0aC5mbG9vcihIKSwgdiA9ICt2YWx1ZXNbaCAtIDFdLCBlID0gSCAtIGg7XG4gICAgcmV0dXJuIGUgPyB2ICsgZSAqICh2YWx1ZXNbaF0gLSB2KSA6IHY7XG4gIH07XG4gIGQzLm1lZGlhbiA9IGZ1bmN0aW9uKGFycmF5LCBmKSB7XG4gICAgdmFyIG51bWJlcnMgPSBbXSwgbiA9IGFycmF5Lmxlbmd0aCwgYSwgaSA9IC0xO1xuICAgIGlmIChhcmd1bWVudHMubGVuZ3RoID09PSAxKSB7XG4gICAgICB3aGlsZSAoKytpIDwgbikgaWYgKGQzX251bWVyaWMoYSA9IGQzX251bWJlcihhcnJheVtpXSkpKSBudW1iZXJzLnB1c2goYSk7XG4gICAgfSBlbHNlIHtcbiAgICAgIHdoaWxlICgrK2kgPCBuKSBpZiAoZDNfbnVtZXJpYyhhID0gZDNfbnVtYmVyKGYuY2FsbChhcnJheSwgYXJyYXlbaV0sIGkpKSkpIG51bWJlcnMucHVzaChhKTtcbiAgICB9XG4gICAgaWYgKG51bWJlcnMubGVuZ3RoKSByZXR1cm4gZDMucXVhbnRpbGUobnVtYmVycy5zb3J0KGQzX2FzY2VuZGluZyksIC41KTtcbiAgfTtcbiAgZDMudmFyaWFuY2UgPSBmdW5jdGlvbihhcnJheSwgZikge1xuICAgIHZhciBuID0gYXJyYXkubGVuZ3RoLCBtID0gMCwgYSwgZCwgcyA9IDAsIGkgPSAtMSwgaiA9IDA7XG4gICAgaWYgKGFyZ3VtZW50cy5sZW5ndGggPT09IDEpIHtcbiAgICAgIHdoaWxlICgrK2kgPCBuKSB7XG4gICAgICAgIGlmIChkM19udW1lcmljKGEgPSBkM19udW1iZXIoYXJyYXlbaV0pKSkge1xuICAgICAgICAgIGQgPSBhIC0gbTtcbiAgICAgICAgICBtICs9IGQgLyArK2o7XG4gICAgICAgICAgcyArPSBkICogKGEgLSBtKTtcbiAgICAgICAgfVxuICAgICAgfVxuICAgIH0gZWxzZSB7XG4gICAgICB3aGlsZSAoKytpIDwgbikge1xuICAgICAgICBpZiAoZDNfbnVtZXJpYyhhID0gZDNfbnVtYmVyKGYuY2FsbChhcnJheSwgYXJyYXlbaV0sIGkpKSkpIHtcbiAgICAgICAgICBkID0gYSAtIG07XG4gICAgICAgICAgbSArPSBkIC8gKytqO1xuICAgICAgICAgIHMgKz0gZCAqIChhIC0gbSk7XG4gICAgICAgIH1cbiAgICAgIH1cbiAgICB9XG4gICAgaWYgKGogPiAxKSByZXR1cm4gcyAvIChqIC0gMSk7XG4gIH07XG4gIGQzLmRldmlhdGlvbiA9IGZ1bmN0aW9uKCkge1xuICAgIHZhciB2ID0gZDMudmFyaWFuY2UuYXBwbHkodGhpcywgYXJndW1lbnRzKTtcbiAgICByZXR1cm4gdiA/IE1hdGguc3FydCh2KSA6IHY7XG4gIH07XG4gIGZ1bmN0aW9uIGQzX2Jpc2VjdG9yKGNvbXBhcmUpIHtcbiAgICByZXR1cm4ge1xuICAgICAgbGVmdDogZnVuY3Rpb24oYSwgeCwgbG8sIGhpKSB7XG4gICAgICAgIGlmIChhcmd1bWVudHMubGVuZ3RoIDwgMykgbG8gPSAwO1xuICAgICAgICBpZiAoYXJndW1lbnRzLmxlbmd0aCA8IDQpIGhpID0gYS5sZW5ndGg7XG4gICAgICAgIHdoaWxlIChsbyA8IGhpKSB7XG4gICAgICAgICAgdmFyIG1pZCA9IGxvICsgaGkgPj4+IDE7XG4gICAgICAgICAgaWYgKGNvbXBhcmUoYVttaWRdLCB4KSA8IDApIGxvID0gbWlkICsgMTsgZWxzZSBoaSA9IG1pZDtcbiAgICAgICAgfVxuICAgICAgICByZXR1cm4gbG87XG4gICAgICB9LFxuICAgICAgcmlnaHQ6IGZ1bmN0aW9uKGEsIHgsIGxvLCBoaSkge1xuICAgICAgICBpZiAoYXJndW1lbnRzLmxlbmd0aCA8IDMpIGxvID0gMDtcbiAgICAgICAgaWYgKGFyZ3VtZW50cy5sZW5ndGggPCA0KSBoaSA9IGEubGVuZ3RoO1xuICAgICAgICB3aGlsZSAobG8gPCBoaSkge1xuICAgICAgICAgIHZhciBtaWQgPSBsbyArIGhpID4+PiAxO1xuICAgICAgICAgIGlmIChjb21wYXJlKGFbbWlkXSwgeCkgPiAwKSBoaSA9IG1pZDsgZWxzZSBsbyA9IG1pZCArIDE7XG4gICAgICAgIH1cbiAgICAgICAgcmV0dXJuIGxvO1xuICAgICAgfVxuICAgIH07XG4gIH1cbiAgdmFyIGQzX2Jpc2VjdCA9IGQzX2Jpc2VjdG9yKGQzX2FzY2VuZGluZyk7XG4gIGQzLmJpc2VjdExlZnQgPSBkM19iaXNlY3QubGVmdDtcbiAgZDMuYmlzZWN0ID0gZDMuYmlzZWN0UmlnaHQgPSBkM19iaXNlY3QucmlnaHQ7XG4gIGQzLmJpc2VjdG9yID0gZnVuY3Rpb24oZikge1xuICAgIHJldHVybiBkM19iaXNlY3RvcihmLmxlbmd0aCA9PT0gMSA/IGZ1bmN0aW9uKGQsIHgpIHtcbiAgICAgIHJldHVybiBkM19hc2NlbmRpbmcoZihkKSwgeCk7XG4gICAgfSA6IGYpO1xuICB9O1xuICBkMy5zaHVmZmxlID0gZnVuY3Rpb24oYXJyYXksIGkwLCBpMSkge1xuICAgIGlmICgobSA9IGFyZ3VtZW50cy5sZW5ndGgpIDwgMykge1xuICAgICAgaTEgPSBhcnJheS5sZW5ndGg7XG4gICAgICBpZiAobSA8IDIpIGkwID0gMDtcbiAgICB9XG4gICAgdmFyIG0gPSBpMSAtIGkwLCB0LCBpO1xuICAgIHdoaWxlIChtKSB7XG4gICAgICBpID0gTWF0aC5yYW5kb20oKSAqIG0tLSB8IDA7XG4gICAgICB0ID0gYXJyYXlbbSArIGkwXSwgYXJyYXlbbSArIGkwXSA9IGFycmF5W2kgKyBpMF0sIGFycmF5W2kgKyBpMF0gPSB0O1xuICAgIH1cbiAgICByZXR1cm4gYXJyYXk7XG4gIH07XG4gIGQzLnBlcm11dGUgPSBmdW5jdGlvbihhcnJheSwgaW5kZXhlcykge1xuICAgIHZhciBpID0gaW5kZXhlcy5sZW5ndGgsIHBlcm11dGVzID0gbmV3IEFycmF5KGkpO1xuICAgIHdoaWxlIChpLS0pIHBlcm11dGVzW2ldID0gYXJyYXlbaW5kZXhlc1tpXV07XG4gICAgcmV0dXJuIHBlcm11dGVzO1xuICB9O1xuICBkMy5wYWlycyA9IGZ1bmN0aW9uKGFycmF5KSB7XG4gICAgdmFyIGkgPSAwLCBuID0gYXJyYXkubGVuZ3RoIC0gMSwgcDAsIHAxID0gYXJyYXlbMF0sIHBhaXJzID0gbmV3IEFycmF5KG4gPCAwID8gMCA6IG4pO1xuICAgIHdoaWxlIChpIDwgbikgcGFpcnNbaV0gPSBbIHAwID0gcDEsIHAxID0gYXJyYXlbKytpXSBdO1xuICAgIHJldHVybiBwYWlycztcbiAgfTtcbiAgZDMudHJhbnNwb3NlID0gZnVuY3Rpb24obWF0cml4KSB7XG4gICAgaWYgKCEobiA9IG1hdHJpeC5sZW5ndGgpKSByZXR1cm4gW107XG4gICAgZm9yICh2YXIgaSA9IC0xLCBtID0gZDMubWluKG1hdHJpeCwgZDNfdHJhbnNwb3NlTGVuZ3RoKSwgdHJhbnNwb3NlID0gbmV3IEFycmF5KG0pOyArK2kgPCBtOyApIHtcbiAgICAgIGZvciAodmFyIGogPSAtMSwgbiwgcm93ID0gdHJhbnNwb3NlW2ldID0gbmV3IEFycmF5KG4pOyArK2ogPCBuOyApIHtcbiAgICAgICAgcm93W2pdID0gbWF0cml4W2pdW2ldO1xuICAgICAgfVxuICAgIH1cbiAgICByZXR1cm4gdHJhbnNwb3NlO1xuICB9O1xuICBmdW5jdGlvbiBkM190cmFuc3Bvc2VMZW5ndGgoZCkge1xuICAgIHJldHVybiBkLmxlbmd0aDtcbiAgfVxuICBkMy56aXAgPSBmdW5jdGlvbigpIHtcbiAgICByZXR1cm4gZDMudHJhbnNwb3NlKGFyZ3VtZW50cyk7XG4gIH07XG4gIGQzLmtleXMgPSBmdW5jdGlvbihtYXApIHtcbiAgICB2YXIga2V5cyA9IFtdO1xuICAgIGZvciAodmFyIGtleSBpbiBtYXApIGtleXMucHVzaChrZXkpO1xuICAgIHJldHVybiBrZXlzO1xuICB9O1xuICBkMy52YWx1ZXMgPSBmdW5jdGlvbihtYXApIHtcbiAgICB2YXIgdmFsdWVzID0gW107XG4gICAgZm9yICh2YXIga2V5IGluIG1hcCkgdmFsdWVzLnB1c2gobWFwW2tleV0pO1xuICAgIHJldHVybiB2YWx1ZXM7XG4gIH07XG4gIGQzLmVudHJpZXMgPSBmdW5jdGlvbihtYXApIHtcbiAgICB2YXIgZW50cmllcyA9IFtdO1xuICAgIGZvciAodmFyIGtleSBpbiBtYXApIGVudHJpZXMucHVzaCh7XG4gICAgICBrZXk6IGtleSxcbiAgICAgIHZhbHVlOiBtYXBba2V5XVxuICAgIH0pO1xuICAgIHJldHVybiBlbnRyaWVzO1xuICB9O1xuICBkMy5tZXJnZSA9IGZ1bmN0aW9uKGFycmF5cykge1xuICAgIHZhciBuID0gYXJyYXlzLmxlbmd0aCwgbSwgaSA9IC0xLCBqID0gMCwgbWVyZ2VkLCBhcnJheTtcbiAgICB3aGlsZSAoKytpIDwgbikgaiArPSBhcnJheXNbaV0ubGVuZ3RoO1xuICAgIG1lcmdlZCA9IG5ldyBBcnJheShqKTtcbiAgICB3aGlsZSAoLS1uID49IDApIHtcbiAgICAgIGFycmF5ID0gYXJyYXlzW25dO1xuICAgICAgbSA9IGFycmF5Lmxlbmd0aDtcbiAgICAgIHdoaWxlICgtLW0gPj0gMCkge1xuICAgICAgICBtZXJnZWRbLS1qXSA9IGFycmF5W21dO1xuICAgICAgfVxuICAgIH1cbiAgICByZXR1cm4gbWVyZ2VkO1xuICB9O1xuICB2YXIgYWJzID0gTWF0aC5hYnM7XG4gIGQzLnJhbmdlID0gZnVuY3Rpb24oc3RhcnQsIHN0b3AsIHN0ZXApIHtcbiAgICBpZiAoYXJndW1lbnRzLmxlbmd0aCA8IDMpIHtcbiAgICAgIHN0ZXAgPSAxO1xuICAgICAgaWYgKGFyZ3VtZW50cy5sZW5ndGggPCAyKSB7XG4gICAgICAgIHN0b3AgPSBzdGFydDtcbiAgICAgICAgc3RhcnQgPSAwO1xuICAgICAgfVxuICAgIH1cbiAgICBpZiAoKHN0b3AgLSBzdGFydCkgLyBzdGVwID09PSBJbmZpbml0eSkgdGhyb3cgbmV3IEVycm9yKFwiaW5maW5pdGUgcmFuZ2VcIik7XG4gICAgdmFyIHJhbmdlID0gW10sIGsgPSBkM19yYW5nZV9pbnRlZ2VyU2NhbGUoYWJzKHN0ZXApKSwgaSA9IC0xLCBqO1xuICAgIHN0YXJ0ICo9IGssIHN0b3AgKj0gaywgc3RlcCAqPSBrO1xuICAgIGlmIChzdGVwIDwgMCkgd2hpbGUgKChqID0gc3RhcnQgKyBzdGVwICogKytpKSA+IHN0b3ApIHJhbmdlLnB1c2goaiAvIGspOyBlbHNlIHdoaWxlICgoaiA9IHN0YXJ0ICsgc3RlcCAqICsraSkgPCBzdG9wKSByYW5nZS5wdXNoKGogLyBrKTtcbiAgICByZXR1cm4gcmFuZ2U7XG4gIH07XG4gIGZ1bmN0aW9uIGQzX3JhbmdlX2ludGVnZXJTY2FsZSh4KSB7XG4gICAgdmFyIGsgPSAxO1xuICAgIHdoaWxlICh4ICogayAlIDEpIGsgKj0gMTA7XG4gICAgcmV0dXJuIGs7XG4gIH1cbiAgZnVuY3Rpb24gZDNfY2xhc3MoY3RvciwgcHJvcGVydGllcykge1xuICAgIGZvciAodmFyIGtleSBpbiBwcm9wZXJ0aWVzKSB7XG4gICAgICBPYmplY3QuZGVmaW5lUHJvcGVydHkoY3Rvci5wcm90b3R5cGUsIGtleSwge1xuICAgICAgICB2YWx1ZTogcHJvcGVydGllc1trZXldLFxuICAgICAgICBlbnVtZXJhYmxlOiBmYWxzZVxuICAgICAgfSk7XG4gICAgfVxuICB9XG4gIGQzLm1hcCA9IGZ1bmN0aW9uKG9iamVjdCwgZikge1xuICAgIHZhciBtYXAgPSBuZXcgZDNfTWFwKCk7XG4gICAgaWYgKG9iamVjdCBpbnN0YW5jZW9mIGQzX01hcCkge1xuICAgICAgb2JqZWN0LmZvckVhY2goZnVuY3Rpb24oa2V5LCB2YWx1ZSkge1xuICAgICAgICBtYXAuc2V0KGtleSwgdmFsdWUpO1xuICAgICAgfSk7XG4gICAgfSBlbHNlIGlmIChBcnJheS5pc0FycmF5KG9iamVjdCkpIHtcbiAgICAgIHZhciBpID0gLTEsIG4gPSBvYmplY3QubGVuZ3RoLCBvO1xuICAgICAgaWYgKGFyZ3VtZW50cy5sZW5ndGggPT09IDEpIHdoaWxlICgrK2kgPCBuKSBtYXAuc2V0KGksIG9iamVjdFtpXSk7IGVsc2Ugd2hpbGUgKCsraSA8IG4pIG1hcC5zZXQoZi5jYWxsKG9iamVjdCwgbyA9IG9iamVjdFtpXSwgaSksIG8pO1xuICAgIH0gZWxzZSB7XG4gICAgICBmb3IgKHZhciBrZXkgaW4gb2JqZWN0KSBtYXAuc2V0KGtleSwgb2JqZWN0W2tleV0pO1xuICAgIH1cbiAgICByZXR1cm4gbWFwO1xuICB9O1xuICBmdW5jdGlvbiBkM19NYXAoKSB7XG4gICAgdGhpcy5fID0gT2JqZWN0LmNyZWF0ZShudWxsKTtcbiAgfVxuICB2YXIgZDNfbWFwX3Byb3RvID0gXCJfX3Byb3RvX19cIiwgZDNfbWFwX3plcm8gPSBcIlxceDAwXCI7XG4gIGQzX2NsYXNzKGQzX01hcCwge1xuICAgIGhhczogZDNfbWFwX2hhcyxcbiAgICBnZXQ6IGZ1bmN0aW9uKGtleSkge1xuICAgICAgcmV0dXJuIHRoaXMuX1tkM19tYXBfZXNjYXBlKGtleSldO1xuICAgIH0sXG4gICAgc2V0OiBmdW5jdGlvbihrZXksIHZhbHVlKSB7XG4gICAgICByZXR1cm4gdGhpcy5fW2QzX21hcF9lc2NhcGUoa2V5KV0gPSB2YWx1ZTtcbiAgICB9LFxuICAgIHJlbW92ZTogZDNfbWFwX3JlbW92ZSxcbiAgICBrZXlzOiBkM19tYXBfa2V5cyxcbiAgICB2YWx1ZXM6IGZ1bmN0aW9uKCkge1xuICAgICAgdmFyIHZhbHVlcyA9IFtdO1xuICAgICAgZm9yICh2YXIga2V5IGluIHRoaXMuXykgdmFsdWVzLnB1c2godGhpcy5fW2tleV0pO1xuICAgICAgcmV0dXJuIHZhbHVlcztcbiAgICB9LFxuICAgIGVudHJpZXM6IGZ1bmN0aW9uKCkge1xuICAgICAgdmFyIGVudHJpZXMgPSBbXTtcbiAgICAgIGZvciAodmFyIGtleSBpbiB0aGlzLl8pIGVudHJpZXMucHVzaCh7XG4gICAgICAgIGtleTogZDNfbWFwX3VuZXNjYXBlKGtleSksXG4gICAgICAgIHZhbHVlOiB0aGlzLl9ba2V5XVxuICAgICAgfSk7XG4gICAgICByZXR1cm4gZW50cmllcztcbiAgICB9LFxuICAgIHNpemU6IGQzX21hcF9zaXplLFxuICAgIGVtcHR5OiBkM19tYXBfZW1wdHksXG4gICAgZm9yRWFjaDogZnVuY3Rpb24oZikge1xuICAgICAgZm9yICh2YXIga2V5IGluIHRoaXMuXykgZi5jYWxsKHRoaXMsIGQzX21hcF91bmVzY2FwZShrZXkpLCB0aGlzLl9ba2V5XSk7XG4gICAgfVxuICB9KTtcbiAgZnVuY3Rpb24gZDNfbWFwX2VzY2FwZShrZXkpIHtcbiAgICByZXR1cm4gKGtleSArPSBcIlwiKSA9PT0gZDNfbWFwX3Byb3RvIHx8IGtleVswXSA9PT0gZDNfbWFwX3plcm8gPyBkM19tYXBfemVybyArIGtleSA6IGtleTtcbiAgfVxuICBmdW5jdGlvbiBkM19tYXBfdW5lc2NhcGUoa2V5KSB7XG4gICAgcmV0dXJuIChrZXkgKz0gXCJcIilbMF0gPT09IGQzX21hcF96ZXJvID8ga2V5LnNsaWNlKDEpIDoga2V5O1xuICB9XG4gIGZ1bmN0aW9uIGQzX21hcF9oYXMoa2V5KSB7XG4gICAgcmV0dXJuIGQzX21hcF9lc2NhcGUoa2V5KSBpbiB0aGlzLl87XG4gIH1cbiAgZnVuY3Rpb24gZDNfbWFwX3JlbW92ZShrZXkpIHtcbiAgICByZXR1cm4gKGtleSA9IGQzX21hcF9lc2NhcGUoa2V5KSkgaW4gdGhpcy5fICYmIGRlbGV0ZSB0aGlzLl9ba2V5XTtcbiAgfVxuICBmdW5jdGlvbiBkM19tYXBfa2V5cygpIHtcbiAgICB2YXIga2V5cyA9IFtdO1xuICAgIGZvciAodmFyIGtleSBpbiB0aGlzLl8pIGtleXMucHVzaChkM19tYXBfdW5lc2NhcGUoa2V5KSk7XG4gICAgcmV0dXJuIGtleXM7XG4gIH1cbiAgZnVuY3Rpb24gZDNfbWFwX3NpemUoKSB7XG4gICAgdmFyIHNpemUgPSAwO1xuICAgIGZvciAodmFyIGtleSBpbiB0aGlzLl8pICsrc2l6ZTtcbiAgICByZXR1cm4gc2l6ZTtcbiAgfVxuICBmdW5jdGlvbiBkM19tYXBfZW1wdHkoKSB7XG4gICAgZm9yICh2YXIga2V5IGluIHRoaXMuXykgcmV0dXJuIGZhbHNlO1xuICAgIHJldHVybiB0cnVlO1xuICB9XG4gIGQzLm5lc3QgPSBmdW5jdGlvbigpIHtcbiAgICB2YXIgbmVzdCA9IHt9LCBrZXlzID0gW10sIHNvcnRLZXlzID0gW10sIHNvcnRWYWx1ZXMsIHJvbGx1cDtcbiAgICBmdW5jdGlvbiBtYXAobWFwVHlwZSwgYXJyYXksIGRlcHRoKSB7XG4gICAgICBpZiAoZGVwdGggPj0ga2V5cy5sZW5ndGgpIHJldHVybiByb2xsdXAgPyByb2xsdXAuY2FsbChuZXN0LCBhcnJheSkgOiBzb3J0VmFsdWVzID8gYXJyYXkuc29ydChzb3J0VmFsdWVzKSA6IGFycmF5O1xuICAgICAgdmFyIGkgPSAtMSwgbiA9IGFycmF5Lmxlbmd0aCwga2V5ID0ga2V5c1tkZXB0aCsrXSwga2V5VmFsdWUsIG9iamVjdCwgc2V0dGVyLCB2YWx1ZXNCeUtleSA9IG5ldyBkM19NYXAoKSwgdmFsdWVzO1xuICAgICAgd2hpbGUgKCsraSA8IG4pIHtcbiAgICAgICAgaWYgKHZhbHVlcyA9IHZhbHVlc0J5S2V5LmdldChrZXlWYWx1ZSA9IGtleShvYmplY3QgPSBhcnJheVtpXSkpKSB7XG4gICAgICAgICAgdmFsdWVzLnB1c2gob2JqZWN0KTtcbiAgICAgICAgfSBlbHNlIHtcbiAgICAgICAgICB2YWx1ZXNCeUtleS5zZXQoa2V5VmFsdWUsIFsgb2JqZWN0IF0pO1xuICAgICAgICB9XG4gICAgICB9XG4gICAgICBpZiAobWFwVHlwZSkge1xuICAgICAgICBvYmplY3QgPSBtYXBUeXBlKCk7XG4gICAgICAgIHNldHRlciA9IGZ1bmN0aW9uKGtleVZhbHVlLCB2YWx1ZXMpIHtcbiAgICAgICAgICBvYmplY3Quc2V0KGtleVZhbHVlLCBtYXAobWFwVHlwZSwgdmFsdWVzLCBkZXB0aCkpO1xuICAgICAgICB9O1xuICAgICAgfSBlbHNlIHtcbiAgICAgICAgb2JqZWN0ID0ge307XG4gICAgICAgIHNldHRlciA9IGZ1bmN0aW9uKGtleVZhbHVlLCB2YWx1ZXMpIHtcbiAgICAgICAgICBvYmplY3Rba2V5VmFsdWVdID0gbWFwKG1hcFR5cGUsIHZhbHVlcywgZGVwdGgpO1xuICAgICAgICB9O1xuICAgICAgfVxuICAgICAgdmFsdWVzQnlLZXkuZm9yRWFjaChzZXR0ZXIpO1xuICAgICAgcmV0dXJuIG9iamVjdDtcbiAgICB9XG4gICAgZnVuY3Rpb24gZW50cmllcyhtYXAsIGRlcHRoKSB7XG4gICAgICBpZiAoZGVwdGggPj0ga2V5cy5sZW5ndGgpIHJldHVybiBtYXA7XG4gICAgICB2YXIgYXJyYXkgPSBbXSwgc29ydEtleSA9IHNvcnRLZXlzW2RlcHRoKytdO1xuICAgICAgbWFwLmZvckVhY2goZnVuY3Rpb24oa2V5LCBrZXlNYXApIHtcbiAgICAgICAgYXJyYXkucHVzaCh7XG4gICAgICAgICAga2V5OiBrZXksXG4gICAgICAgICAgdmFsdWVzOiBlbnRyaWVzKGtleU1hcCwgZGVwdGgpXG4gICAgICAgIH0pO1xuICAgICAgfSk7XG4gICAgICByZXR1cm4gc29ydEtleSA/IGFycmF5LnNvcnQoZnVuY3Rpb24oYSwgYikge1xuICAgICAgICByZXR1cm4gc29ydEtleShhLmtleSwgYi5rZXkpO1xuICAgICAgfSkgOiBhcnJheTtcbiAgICB9XG4gICAgbmVzdC5tYXAgPSBmdW5jdGlvbihhcnJheSwgbWFwVHlwZSkge1xuICAgICAgcmV0dXJuIG1hcChtYXBUeXBlLCBhcnJheSwgMCk7XG4gICAgfTtcbiAgICBuZXN0LmVudHJpZXMgPSBmdW5jdGlvbihhcnJheSkge1xuICAgICAgcmV0dXJuIGVudHJpZXMobWFwKGQzLm1hcCwgYXJyYXksIDApLCAwKTtcbiAgICB9O1xuICAgIG5lc3Qua2V5ID0gZnVuY3Rpb24oZCkge1xuICAgICAga2V5cy5wdXNoKGQpO1xuICAgICAgcmV0dXJuIG5lc3Q7XG4gICAgfTtcbiAgICBuZXN0LnNvcnRLZXlzID0gZnVuY3Rpb24ob3JkZXIpIHtcbiAgICAgIHNvcnRLZXlzW2tleXMubGVuZ3RoIC0gMV0gPSBvcmRlcjtcbiAgICAgIHJldHVybiBuZXN0O1xuICAgIH07XG4gICAgbmVzdC5zb3J0VmFsdWVzID0gZnVuY3Rpb24ob3JkZXIpIHtcbiAgICAgIHNvcnRWYWx1ZXMgPSBvcmRlcjtcbiAgICAgIHJldHVybiBuZXN0O1xuICAgIH07XG4gICAgbmVzdC5yb2xsdXAgPSBmdW5jdGlvbihmKSB7XG4gICAgICByb2xsdXAgPSBmO1xuICAgICAgcmV0dXJuIG5lc3Q7XG4gICAgfTtcbiAgICByZXR1cm4gbmVzdDtcbiAgfTtcbiAgZDMuc2V0ID0gZnVuY3Rpb24oYXJyYXkpIHtcbiAgICB2YXIgc2V0ID0gbmV3IGQzX1NldCgpO1xuICAgIGlmIChhcnJheSkgZm9yICh2YXIgaSA9IDAsIG4gPSBhcnJheS5sZW5ndGg7IGkgPCBuOyArK2kpIHNldC5hZGQoYXJyYXlbaV0pO1xuICAgIHJldHVybiBzZXQ7XG4gIH07XG4gIGZ1bmN0aW9uIGQzX1NldCgpIHtcbiAgICB0aGlzLl8gPSBPYmplY3QuY3JlYXRlKG51bGwpO1xuICB9XG4gIGQzX2NsYXNzKGQzX1NldCwge1xuICAgIGhhczogZDNfbWFwX2hhcyxcbiAgICBhZGQ6IGZ1bmN0aW9uKGtleSkge1xuICAgICAgdGhpcy5fW2QzX21hcF9lc2NhcGUoa2V5ICs9IFwiXCIpXSA9IHRydWU7XG4gICAgICByZXR1cm4ga2V5O1xuICAgIH0sXG4gICAgcmVtb3ZlOiBkM19tYXBfcmVtb3ZlLFxuICAgIHZhbHVlczogZDNfbWFwX2tleXMsXG4gICAgc2l6ZTogZDNfbWFwX3NpemUsXG4gICAgZW1wdHk6IGQzX21hcF9lbXB0eSxcbiAgICBmb3JFYWNoOiBmdW5jdGlvbihmKSB7XG4gICAgICBmb3IgKHZhciBrZXkgaW4gdGhpcy5fKSBmLmNhbGwodGhpcywgZDNfbWFwX3VuZXNjYXBlKGtleSkpO1xuICAgIH1cbiAgfSk7XG4gIGQzLmJlaGF2aW9yID0ge307XG4gIGZ1bmN0aW9uIGQzX2lkZW50aXR5KGQpIHtcbiAgICByZXR1cm4gZDtcbiAgfVxuICBkMy5yZWJpbmQgPSBmdW5jdGlvbih0YXJnZXQsIHNvdXJjZSkge1xuICAgIHZhciBpID0gMSwgbiA9IGFyZ3VtZW50cy5sZW5ndGgsIG1ldGhvZDtcbiAgICB3aGlsZSAoKytpIDwgbikgdGFyZ2V0W21ldGhvZCA9IGFyZ3VtZW50c1tpXV0gPSBkM19yZWJpbmQodGFyZ2V0LCBzb3VyY2UsIHNvdXJjZVttZXRob2RdKTtcbiAgICByZXR1cm4gdGFyZ2V0O1xuICB9O1xuICBmdW5jdGlvbiBkM19yZWJpbmQodGFyZ2V0LCBzb3VyY2UsIG1ldGhvZCkge1xuICAgIHJldHVybiBmdW5jdGlvbigpIHtcbiAgICAgIHZhciB2YWx1ZSA9IG1ldGhvZC5hcHBseShzb3VyY2UsIGFyZ3VtZW50cyk7XG4gICAgICByZXR1cm4gdmFsdWUgPT09IHNvdXJjZSA/IHRhcmdldCA6IHZhbHVlO1xuICAgIH07XG4gIH1cbiAgZnVuY3Rpb24gZDNfdmVuZG9yU3ltYm9sKG9iamVjdCwgbmFtZSkge1xuICAgIGlmIChuYW1lIGluIG9iamVjdCkgcmV0dXJuIG5hbWU7XG4gICAgbmFtZSA9IG5hbWUuY2hhckF0KDApLnRvVXBwZXJDYXNlKCkgKyBuYW1lLnNsaWNlKDEpO1xuICAgIGZvciAodmFyIGkgPSAwLCBuID0gZDNfdmVuZG9yUHJlZml4ZXMubGVuZ3RoOyBpIDwgbjsgKytpKSB7XG4gICAgICB2YXIgcHJlZml4TmFtZSA9IGQzX3ZlbmRvclByZWZpeGVzW2ldICsgbmFtZTtcbiAgICAgIGlmIChwcmVmaXhOYW1lIGluIG9iamVjdCkgcmV0dXJuIHByZWZpeE5hbWU7XG4gICAgfVxuICB9XG4gIHZhciBkM192ZW5kb3JQcmVmaXhlcyA9IFsgXCJ3ZWJraXRcIiwgXCJtc1wiLCBcIm1velwiLCBcIk1velwiLCBcIm9cIiwgXCJPXCIgXTtcbiAgZnVuY3Rpb24gZDNfbm9vcCgpIHt9XG4gIGQzLmRpc3BhdGNoID0gZnVuY3Rpb24oKSB7XG4gICAgdmFyIGRpc3BhdGNoID0gbmV3IGQzX2Rpc3BhdGNoKCksIGkgPSAtMSwgbiA9IGFyZ3VtZW50cy5sZW5ndGg7XG4gICAgd2hpbGUgKCsraSA8IG4pIGRpc3BhdGNoW2FyZ3VtZW50c1tpXV0gPSBkM19kaXNwYXRjaF9ldmVudChkaXNwYXRjaCk7XG4gICAgcmV0dXJuIGRpc3BhdGNoO1xuICB9O1xuICBmdW5jdGlvbiBkM19kaXNwYXRjaCgpIHt9XG4gIGQzX2Rpc3BhdGNoLnByb3RvdHlwZS5vbiA9IGZ1bmN0aW9uKHR5cGUsIGxpc3RlbmVyKSB7XG4gICAgdmFyIGkgPSB0eXBlLmluZGV4T2YoXCIuXCIpLCBuYW1lID0gXCJcIjtcbiAgICBpZiAoaSA+PSAwKSB7XG4gICAgICBuYW1lID0gdHlwZS5zbGljZShpICsgMSk7XG4gICAgICB0eXBlID0gdHlwZS5zbGljZSgwLCBpKTtcbiAgICB9XG4gICAgaWYgKHR5cGUpIHJldHVybiBhcmd1bWVudHMubGVuZ3RoIDwgMiA/IHRoaXNbdHlwZV0ub24obmFtZSkgOiB0aGlzW3R5cGVdLm9uKG5hbWUsIGxpc3RlbmVyKTtcbiAgICBpZiAoYXJndW1lbnRzLmxlbmd0aCA9PT0gMikge1xuICAgICAgaWYgKGxpc3RlbmVyID09IG51bGwpIGZvciAodHlwZSBpbiB0aGlzKSB7XG4gICAgICAgIGlmICh0aGlzLmhhc093blByb3BlcnR5KHR5cGUpKSB0aGlzW3R5cGVdLm9uKG5hbWUsIG51bGwpO1xuICAgICAgfVxuICAgICAgcmV0dXJuIHRoaXM7XG4gICAgfVxuICB9O1xuICBmdW5jdGlvbiBkM19kaXNwYXRjaF9ldmVudChkaXNwYXRjaCkge1xuICAgIHZhciBsaXN0ZW5lcnMgPSBbXSwgbGlzdGVuZXJCeU5hbWUgPSBuZXcgZDNfTWFwKCk7XG4gICAgZnVuY3Rpb24gZXZlbnQoKSB7XG4gICAgICB2YXIgeiA9IGxpc3RlbmVycywgaSA9IC0xLCBuID0gei5sZW5ndGgsIGw7XG4gICAgICB3aGlsZSAoKytpIDwgbikgaWYgKGwgPSB6W2ldLm9uKSBsLmFwcGx5KHRoaXMsIGFyZ3VtZW50cyk7XG4gICAgICByZXR1cm4gZGlzcGF0Y2g7XG4gICAgfVxuICAgIGV2ZW50Lm9uID0gZnVuY3Rpb24obmFtZSwgbGlzdGVuZXIpIHtcbiAgICAgIHZhciBsID0gbGlzdGVuZXJCeU5hbWUuZ2V0KG5hbWUpLCBpO1xuICAgICAgaWYgKGFyZ3VtZW50cy5sZW5ndGggPCAyKSByZXR1cm4gbCAmJiBsLm9uO1xuICAgICAgaWYgKGwpIHtcbiAgICAgICAgbC5vbiA9IG51bGw7XG4gICAgICAgIGxpc3RlbmVycyA9IGxpc3RlbmVycy5zbGljZSgwLCBpID0gbGlzdGVuZXJzLmluZGV4T2YobCkpLmNvbmNhdChsaXN0ZW5lcnMuc2xpY2UoaSArIDEpKTtcbiAgICAgICAgbGlzdGVuZXJCeU5hbWUucmVtb3ZlKG5hbWUpO1xuICAgICAgfVxuICAgICAgaWYgKGxpc3RlbmVyKSBsaXN0ZW5lcnMucHVzaChsaXN0ZW5lckJ5TmFtZS5zZXQobmFtZSwge1xuICAgICAgICBvbjogbGlzdGVuZXJcbiAgICAgIH0pKTtcbiAgICAgIHJldHVybiBkaXNwYXRjaDtcbiAgICB9O1xuICAgIHJldHVybiBldmVudDtcbiAgfVxuICBkMy5ldmVudCA9IG51bGw7XG4gIGZ1bmN0aW9uIGQzX2V2ZW50UHJldmVudERlZmF1bHQoKSB7XG4gICAgZDMuZXZlbnQucHJldmVudERlZmF1bHQoKTtcbiAgfVxuICBmdW5jdGlvbiBkM19ldmVudFNvdXJjZSgpIHtcbiAgICB2YXIgZSA9IGQzLmV2ZW50LCBzO1xuICAgIHdoaWxlIChzID0gZS5zb3VyY2VFdmVudCkgZSA9IHM7XG4gICAgcmV0dXJuIGU7XG4gIH1cbiAgZnVuY3Rpb24gZDNfZXZlbnREaXNwYXRjaCh0YXJnZXQpIHtcbiAgICB2YXIgZGlzcGF0Y2ggPSBuZXcgZDNfZGlzcGF0Y2goKSwgaSA9IDAsIG4gPSBhcmd1bWVudHMubGVuZ3RoO1xuICAgIHdoaWxlICgrK2kgPCBuKSBkaXNwYXRjaFthcmd1bWVudHNbaV1dID0gZDNfZGlzcGF0Y2hfZXZlbnQoZGlzcGF0Y2gpO1xuICAgIGRpc3BhdGNoLm9mID0gZnVuY3Rpb24odGhpeiwgYXJndW1lbnR6KSB7XG4gICAgICByZXR1cm4gZnVuY3Rpb24oZTEpIHtcbiAgICAgICAgdHJ5IHtcbiAgICAgICAgICB2YXIgZTAgPSBlMS5zb3VyY2VFdmVudCA9IGQzLmV2ZW50O1xuICAgICAgICAgIGUxLnRhcmdldCA9IHRhcmdldDtcbiAgICAgICAgICBkMy5ldmVudCA9IGUxO1xuICAgICAgICAgIGRpc3BhdGNoW2UxLnR5cGVdLmFwcGx5KHRoaXosIGFyZ3VtZW50eik7XG4gICAgICAgIH0gZmluYWxseSB7XG4gICAgICAgICAgZDMuZXZlbnQgPSBlMDtcbiAgICAgICAgfVxuICAgICAgfTtcbiAgICB9O1xuICAgIHJldHVybiBkaXNwYXRjaDtcbiAgfVxuICBkMy5yZXF1b3RlID0gZnVuY3Rpb24ocykge1xuICAgIHJldHVybiBzLnJlcGxhY2UoZDNfcmVxdW90ZV9yZSwgXCJcXFxcJCZcIik7XG4gIH07XG4gIHZhciBkM19yZXF1b3RlX3JlID0gL1tcXFxcXFxeXFwkXFwqXFwrXFw/XFx8XFxbXFxdXFwoXFwpXFwuXFx7XFx9XS9nO1xuICB2YXIgZDNfc3ViY2xhc3MgPSB7fS5fX3Byb3RvX18gPyBmdW5jdGlvbihvYmplY3QsIHByb3RvdHlwZSkge1xuICAgIG9iamVjdC5fX3Byb3RvX18gPSBwcm90b3R5cGU7XG4gIH0gOiBmdW5jdGlvbihvYmplY3QsIHByb3RvdHlwZSkge1xuICAgIGZvciAodmFyIHByb3BlcnR5IGluIHByb3RvdHlwZSkgb2JqZWN0W3Byb3BlcnR5XSA9IHByb3RvdHlwZVtwcm9wZXJ0eV07XG4gIH07XG4gIGZ1bmN0aW9uIGQzX3NlbGVjdGlvbihncm91cHMpIHtcbiAgICBkM19zdWJjbGFzcyhncm91cHMsIGQzX3NlbGVjdGlvblByb3RvdHlwZSk7XG4gICAgcmV0dXJuIGdyb3VwcztcbiAgfVxuICB2YXIgZDNfc2VsZWN0ID0gZnVuY3Rpb24ocywgbikge1xuICAgIHJldHVybiBuLnF1ZXJ5U2VsZWN0b3Iocyk7XG4gIH0sIGQzX3NlbGVjdEFsbCA9IGZ1bmN0aW9uKHMsIG4pIHtcbiAgICByZXR1cm4gbi5xdWVyeVNlbGVjdG9yQWxsKHMpO1xuICB9LCBkM19zZWxlY3RNYXRjaGVzID0gZnVuY3Rpb24obiwgcykge1xuICAgIHZhciBkM19zZWxlY3RNYXRjaGVyID0gbi5tYXRjaGVzIHx8IG5bZDNfdmVuZG9yU3ltYm9sKG4sIFwibWF0Y2hlc1NlbGVjdG9yXCIpXTtcbiAgICBkM19zZWxlY3RNYXRjaGVzID0gZnVuY3Rpb24obiwgcykge1xuICAgICAgcmV0dXJuIGQzX3NlbGVjdE1hdGNoZXIuY2FsbChuLCBzKTtcbiAgICB9O1xuICAgIHJldHVybiBkM19zZWxlY3RNYXRjaGVzKG4sIHMpO1xuICB9O1xuICBpZiAodHlwZW9mIFNpenpsZSA9PT0gXCJmdW5jdGlvblwiKSB7XG4gICAgZDNfc2VsZWN0ID0gZnVuY3Rpb24ocywgbikge1xuICAgICAgcmV0dXJuIFNpenpsZShzLCBuKVswXSB8fCBudWxsO1xuICAgIH07XG4gICAgZDNfc2VsZWN0QWxsID0gU2l6emxlO1xuICAgIGQzX3NlbGVjdE1hdGNoZXMgPSBTaXp6bGUubWF0Y2hlc1NlbGVjdG9yO1xuICB9XG4gIGQzLnNlbGVjdGlvbiA9IGZ1bmN0aW9uKCkge1xuICAgIHJldHVybiBkMy5zZWxlY3QoZDNfZG9jdW1lbnQuZG9jdW1lbnRFbGVtZW50KTtcbiAgfTtcbiAgdmFyIGQzX3NlbGVjdGlvblByb3RvdHlwZSA9IGQzLnNlbGVjdGlvbi5wcm90b3R5cGUgPSBbXTtcbiAgZDNfc2VsZWN0aW9uUHJvdG90eXBlLnNlbGVjdCA9IGZ1bmN0aW9uKHNlbGVjdG9yKSB7XG4gICAgdmFyIHN1Ymdyb3VwcyA9IFtdLCBzdWJncm91cCwgc3Vibm9kZSwgZ3JvdXAsIG5vZGU7XG4gICAgc2VsZWN0b3IgPSBkM19zZWxlY3Rpb25fc2VsZWN0b3Ioc2VsZWN0b3IpO1xuICAgIGZvciAodmFyIGogPSAtMSwgbSA9IHRoaXMubGVuZ3RoOyArK2ogPCBtOyApIHtcbiAgICAgIHN1Ymdyb3Vwcy5wdXNoKHN1Ymdyb3VwID0gW10pO1xuICAgICAgc3ViZ3JvdXAucGFyZW50Tm9kZSA9IChncm91cCA9IHRoaXNbal0pLnBhcmVudE5vZGU7XG4gICAgICBmb3IgKHZhciBpID0gLTEsIG4gPSBncm91cC5sZW5ndGg7ICsraSA8IG47ICkge1xuICAgICAgICBpZiAobm9kZSA9IGdyb3VwW2ldKSB7XG4gICAgICAgICAgc3ViZ3JvdXAucHVzaChzdWJub2RlID0gc2VsZWN0b3IuY2FsbChub2RlLCBub2RlLl9fZGF0YV9fLCBpLCBqKSk7XG4gICAgICAgICAgaWYgKHN1Ym5vZGUgJiYgXCJfX2RhdGFfX1wiIGluIG5vZGUpIHN1Ym5vZGUuX19kYXRhX18gPSBub2RlLl9fZGF0YV9fO1xuICAgICAgICB9IGVsc2Uge1xuICAgICAgICAgIHN1Ymdyb3VwLnB1c2gobnVsbCk7XG4gICAgICAgIH1cbiAgICAgIH1cbiAgICB9XG4gICAgcmV0dXJuIGQzX3NlbGVjdGlvbihzdWJncm91cHMpO1xuICB9O1xuICBmdW5jdGlvbiBkM19zZWxlY3Rpb25fc2VsZWN0b3Ioc2VsZWN0b3IpIHtcbiAgICByZXR1cm4gdHlwZW9mIHNlbGVjdG9yID09PSBcImZ1bmN0aW9uXCIgPyBzZWxlY3RvciA6IGZ1bmN0aW9uKCkge1xuICAgICAgcmV0dXJuIGQzX3NlbGVjdChzZWxlY3RvciwgdGhpcyk7XG4gICAgfTtcbiAgfVxuICBkM19zZWxlY3Rpb25Qcm90b3R5cGUuc2VsZWN0QWxsID0gZnVuY3Rpb24oc2VsZWN0b3IpIHtcbiAgICB2YXIgc3ViZ3JvdXBzID0gW10sIHN1Ymdyb3VwLCBub2RlO1xuICAgIHNlbGVjdG9yID0gZDNfc2VsZWN0aW9uX3NlbGVjdG9yQWxsKHNlbGVjdG9yKTtcbiAgICBmb3IgKHZhciBqID0gLTEsIG0gPSB0aGlzLmxlbmd0aDsgKytqIDwgbTsgKSB7XG4gICAgICBmb3IgKHZhciBncm91cCA9IHRoaXNbal0sIGkgPSAtMSwgbiA9IGdyb3VwLmxlbmd0aDsgKytpIDwgbjsgKSB7XG4gICAgICAgIGlmIChub2RlID0gZ3JvdXBbaV0pIHtcbiAgICAgICAgICBzdWJncm91cHMucHVzaChzdWJncm91cCA9IGQzX2FycmF5KHNlbGVjdG9yLmNhbGwobm9kZSwgbm9kZS5fX2RhdGFfXywgaSwgaikpKTtcbiAgICAgICAgICBzdWJncm91cC5wYXJlbnROb2RlID0gbm9kZTtcbiAgICAgICAgfVxuICAgICAgfVxuICAgIH1cbiAgICByZXR1cm4gZDNfc2VsZWN0aW9uKHN1Ymdyb3Vwcyk7XG4gIH07XG4gIGZ1bmN0aW9uIGQzX3NlbGVjdGlvbl9zZWxlY3RvckFsbChzZWxlY3Rvcikge1xuICAgIHJldHVybiB0eXBlb2Ygc2VsZWN0b3IgPT09IFwiZnVuY3Rpb25cIiA/IHNlbGVjdG9yIDogZnVuY3Rpb24oKSB7XG4gICAgICByZXR1cm4gZDNfc2VsZWN0QWxsKHNlbGVjdG9yLCB0aGlzKTtcbiAgICB9O1xuICB9XG4gIHZhciBkM19uc1hodG1sID0gXCJodHRwOi8vd3d3LnczLm9yZy8xOTk5L3hodG1sXCI7XG4gIHZhciBkM19uc1ByZWZpeCA9IHtcbiAgICBzdmc6IFwiaHR0cDovL3d3dy53My5vcmcvMjAwMC9zdmdcIixcbiAgICB4aHRtbDogZDNfbnNYaHRtbCxcbiAgICB4bGluazogXCJodHRwOi8vd3d3LnczLm9yZy8xOTk5L3hsaW5rXCIsXG4gICAgeG1sOiBcImh0dHA6Ly93d3cudzMub3JnL1hNTC8xOTk4L25hbWVzcGFjZVwiLFxuICAgIHhtbG5zOiBcImh0dHA6Ly93d3cudzMub3JnLzIwMDAveG1sbnMvXCJcbiAgfTtcbiAgZDMubnMgPSB7XG4gICAgcHJlZml4OiBkM19uc1ByZWZpeCxcbiAgICBxdWFsaWZ5OiBmdW5jdGlvbihuYW1lKSB7XG4gICAgICB2YXIgaSA9IG5hbWUuaW5kZXhPZihcIjpcIiksIHByZWZpeCA9IG5hbWU7XG4gICAgICBpZiAoaSA+PSAwICYmIChwcmVmaXggPSBuYW1lLnNsaWNlKDAsIGkpKSAhPT0gXCJ4bWxuc1wiKSBuYW1lID0gbmFtZS5zbGljZShpICsgMSk7XG4gICAgICByZXR1cm4gZDNfbnNQcmVmaXguaGFzT3duUHJvcGVydHkocHJlZml4KSA/IHtcbiAgICAgICAgc3BhY2U6IGQzX25zUHJlZml4W3ByZWZpeF0sXG4gICAgICAgIGxvY2FsOiBuYW1lXG4gICAgICB9IDogbmFtZTtcbiAgICB9XG4gIH07XG4gIGQzX3NlbGVjdGlvblByb3RvdHlwZS5hdHRyID0gZnVuY3Rpb24obmFtZSwgdmFsdWUpIHtcbiAgICBpZiAoYXJndW1lbnRzLmxlbmd0aCA8IDIpIHtcbiAgICAgIGlmICh0eXBlb2YgbmFtZSA9PT0gXCJzdHJpbmdcIikge1xuICAgICAgICB2YXIgbm9kZSA9IHRoaXMubm9kZSgpO1xuICAgICAgICBuYW1lID0gZDMubnMucXVhbGlmeShuYW1lKTtcbiAgICAgICAgcmV0dXJuIG5hbWUubG9jYWwgPyBub2RlLmdldEF0dHJpYnV0ZU5TKG5hbWUuc3BhY2UsIG5hbWUubG9jYWwpIDogbm9kZS5nZXRBdHRyaWJ1dGUobmFtZSk7XG4gICAgICB9XG4gICAgICBmb3IgKHZhbHVlIGluIG5hbWUpIHRoaXMuZWFjaChkM19zZWxlY3Rpb25fYXR0cih2YWx1ZSwgbmFtZVt2YWx1ZV0pKTtcbiAgICAgIHJldHVybiB0aGlzO1xuICAgIH1cbiAgICByZXR1cm4gdGhpcy5lYWNoKGQzX3NlbGVjdGlvbl9hdHRyKG5hbWUsIHZhbHVlKSk7XG4gIH07XG4gIGZ1bmN0aW9uIGQzX3NlbGVjdGlvbl9hdHRyKG5hbWUsIHZhbHVlKSB7XG4gICAgbmFtZSA9IGQzLm5zLnF1YWxpZnkobmFtZSk7XG4gICAgZnVuY3Rpb24gYXR0ck51bGwoKSB7XG4gICAgICB0aGlzLnJlbW92ZUF0dHJpYnV0ZShuYW1lKTtcbiAgICB9XG4gICAgZnVuY3Rpb24gYXR0ck51bGxOUygpIHtcbiAgICAgIHRoaXMucmVtb3ZlQXR0cmlidXRlTlMobmFtZS5zcGFjZSwgbmFtZS5sb2NhbCk7XG4gICAgfVxuICAgIGZ1bmN0aW9uIGF0dHJDb25zdGFudCgpIHtcbiAgICAgIHRoaXMuc2V0QXR0cmlidXRlKG5hbWUsIHZhbHVlKTtcbiAgICB9XG4gICAgZnVuY3Rpb24gYXR0ckNvbnN0YW50TlMoKSB7XG4gICAgICB0aGlzLnNldEF0dHJpYnV0ZU5TKG5hbWUuc3BhY2UsIG5hbWUubG9jYWwsIHZhbHVlKTtcbiAgICB9XG4gICAgZnVuY3Rpb24gYXR0ckZ1bmN0aW9uKCkge1xuICAgICAgdmFyIHggPSB2YWx1ZS5hcHBseSh0aGlzLCBhcmd1bWVudHMpO1xuICAgICAgaWYgKHggPT0gbnVsbCkgdGhpcy5yZW1vdmVBdHRyaWJ1dGUobmFtZSk7IGVsc2UgdGhpcy5zZXRBdHRyaWJ1dGUobmFtZSwgeCk7XG4gICAgfVxuICAgIGZ1bmN0aW9uIGF0dHJGdW5jdGlvbk5TKCkge1xuICAgICAgdmFyIHggPSB2YWx1ZS5hcHBseSh0aGlzLCBhcmd1bWVudHMpO1xuICAgICAgaWYgKHggPT0gbnVsbCkgdGhpcy5yZW1vdmVBdHRyaWJ1dGVOUyhuYW1lLnNwYWNlLCBuYW1lLmxvY2FsKTsgZWxzZSB0aGlzLnNldEF0dHJpYnV0ZU5TKG5hbWUuc3BhY2UsIG5hbWUubG9jYWwsIHgpO1xuICAgIH1cbiAgICByZXR1cm4gdmFsdWUgPT0gbnVsbCA/IG5hbWUubG9jYWwgPyBhdHRyTnVsbE5TIDogYXR0ck51bGwgOiB0eXBlb2YgdmFsdWUgPT09IFwiZnVuY3Rpb25cIiA/IG5hbWUubG9jYWwgPyBhdHRyRnVuY3Rpb25OUyA6IGF0dHJGdW5jdGlvbiA6IG5hbWUubG9jYWwgPyBhdHRyQ29uc3RhbnROUyA6IGF0dHJDb25zdGFudDtcbiAgfVxuICBmdW5jdGlvbiBkM19jb2xsYXBzZShzKSB7XG4gICAgcmV0dXJuIHMudHJpbSgpLnJlcGxhY2UoL1xccysvZywgXCIgXCIpO1xuICB9XG4gIGQzX3NlbGVjdGlvblByb3RvdHlwZS5jbGFzc2VkID0gZnVuY3Rpb24obmFtZSwgdmFsdWUpIHtcbiAgICBpZiAoYXJndW1lbnRzLmxlbmd0aCA8IDIpIHtcbiAgICAgIGlmICh0eXBlb2YgbmFtZSA9PT0gXCJzdHJpbmdcIikge1xuICAgICAgICB2YXIgbm9kZSA9IHRoaXMubm9kZSgpLCBuID0gKG5hbWUgPSBkM19zZWxlY3Rpb25fY2xhc3NlcyhuYW1lKSkubGVuZ3RoLCBpID0gLTE7XG4gICAgICAgIGlmICh2YWx1ZSA9IG5vZGUuY2xhc3NMaXN0KSB7XG4gICAgICAgICAgd2hpbGUgKCsraSA8IG4pIGlmICghdmFsdWUuY29udGFpbnMobmFtZVtpXSkpIHJldHVybiBmYWxzZTtcbiAgICAgICAgfSBlbHNlIHtcbiAgICAgICAgICB2YWx1ZSA9IG5vZGUuZ2V0QXR0cmlidXRlKFwiY2xhc3NcIik7XG4gICAgICAgICAgd2hpbGUgKCsraSA8IG4pIGlmICghZDNfc2VsZWN0aW9uX2NsYXNzZWRSZShuYW1lW2ldKS50ZXN0KHZhbHVlKSkgcmV0dXJuIGZhbHNlO1xuICAgICAgICB9XG4gICAgICAgIHJldHVybiB0cnVlO1xuICAgICAgfVxuICAgICAgZm9yICh2YWx1ZSBpbiBuYW1lKSB0aGlzLmVhY2goZDNfc2VsZWN0aW9uX2NsYXNzZWQodmFsdWUsIG5hbWVbdmFsdWVdKSk7XG4gICAgICByZXR1cm4gdGhpcztcbiAgICB9XG4gICAgcmV0dXJuIHRoaXMuZWFjaChkM19zZWxlY3Rpb25fY2xhc3NlZChuYW1lLCB2YWx1ZSkpO1xuICB9O1xuICBmdW5jdGlvbiBkM19zZWxlY3Rpb25fY2xhc3NlZFJlKG5hbWUpIHtcbiAgICByZXR1cm4gbmV3IFJlZ0V4cChcIig/Ol58XFxcXHMrKVwiICsgZDMucmVxdW90ZShuYW1lKSArIFwiKD86XFxcXHMrfCQpXCIsIFwiZ1wiKTtcbiAgfVxuICBmdW5jdGlvbiBkM19zZWxlY3Rpb25fY2xhc3NlcyhuYW1lKSB7XG4gICAgcmV0dXJuIChuYW1lICsgXCJcIikudHJpbSgpLnNwbGl0KC9efFxccysvKTtcbiAgfVxuICBmdW5jdGlvbiBkM19zZWxlY3Rpb25fY2xhc3NlZChuYW1lLCB2YWx1ZSkge1xuICAgIG5hbWUgPSBkM19zZWxlY3Rpb25fY2xhc3NlcyhuYW1lKS5tYXAoZDNfc2VsZWN0aW9uX2NsYXNzZWROYW1lKTtcbiAgICB2YXIgbiA9IG5hbWUubGVuZ3RoO1xuICAgIGZ1bmN0aW9uIGNsYXNzZWRDb25zdGFudCgpIHtcbiAgICAgIHZhciBpID0gLTE7XG4gICAgICB3aGlsZSAoKytpIDwgbikgbmFtZVtpXSh0aGlzLCB2YWx1ZSk7XG4gICAgfVxuICAgIGZ1bmN0aW9uIGNsYXNzZWRGdW5jdGlvbigpIHtcbiAgICAgIHZhciBpID0gLTEsIHggPSB2YWx1ZS5hcHBseSh0aGlzLCBhcmd1bWVudHMpO1xuICAgICAgd2hpbGUgKCsraSA8IG4pIG5hbWVbaV0odGhpcywgeCk7XG4gICAgfVxuICAgIHJldHVybiB0eXBlb2YgdmFsdWUgPT09IFwiZnVuY3Rpb25cIiA/IGNsYXNzZWRGdW5jdGlvbiA6IGNsYXNzZWRDb25zdGFudDtcbiAgfVxuICBmdW5jdGlvbiBkM19zZWxlY3Rpb25fY2xhc3NlZE5hbWUobmFtZSkge1xuICAgIHZhciByZSA9IGQzX3NlbGVjdGlvbl9jbGFzc2VkUmUobmFtZSk7XG4gICAgcmV0dXJuIGZ1bmN0aW9uKG5vZGUsIHZhbHVlKSB7XG4gICAgICBpZiAoYyA9IG5vZGUuY2xhc3NMaXN0KSByZXR1cm4gdmFsdWUgPyBjLmFkZChuYW1lKSA6IGMucmVtb3ZlKG5hbWUpO1xuICAgICAgdmFyIGMgPSBub2RlLmdldEF0dHJpYnV0ZShcImNsYXNzXCIpIHx8IFwiXCI7XG4gICAgICBpZiAodmFsdWUpIHtcbiAgICAgICAgcmUubGFzdEluZGV4ID0gMDtcbiAgICAgICAgaWYgKCFyZS50ZXN0KGMpKSBub2RlLnNldEF0dHJpYnV0ZShcImNsYXNzXCIsIGQzX2NvbGxhcHNlKGMgKyBcIiBcIiArIG5hbWUpKTtcbiAgICAgIH0gZWxzZSB7XG4gICAgICAgIG5vZGUuc2V0QXR0cmlidXRlKFwiY2xhc3NcIiwgZDNfY29sbGFwc2UoYy5yZXBsYWNlKHJlLCBcIiBcIikpKTtcbiAgICAgIH1cbiAgICB9O1xuICB9XG4gIGQzX3NlbGVjdGlvblByb3RvdHlwZS5zdHlsZSA9IGZ1bmN0aW9uKG5hbWUsIHZhbHVlLCBwcmlvcml0eSkge1xuICAgIHZhciBuID0gYXJndW1lbnRzLmxlbmd0aDtcbiAgICBpZiAobiA8IDMpIHtcbiAgICAgIGlmICh0eXBlb2YgbmFtZSAhPT0gXCJzdHJpbmdcIikge1xuICAgICAgICBpZiAobiA8IDIpIHZhbHVlID0gXCJcIjtcbiAgICAgICAgZm9yIChwcmlvcml0eSBpbiBuYW1lKSB0aGlzLmVhY2goZDNfc2VsZWN0aW9uX3N0eWxlKHByaW9yaXR5LCBuYW1lW3ByaW9yaXR5XSwgdmFsdWUpKTtcbiAgICAgICAgcmV0dXJuIHRoaXM7XG4gICAgICB9XG4gICAgICBpZiAobiA8IDIpIHtcbiAgICAgICAgdmFyIG5vZGUgPSB0aGlzLm5vZGUoKTtcbiAgICAgICAgcmV0dXJuIGQzX3dpbmRvdyhub2RlKS5nZXRDb21wdXRlZFN0eWxlKG5vZGUsIG51bGwpLmdldFByb3BlcnR5VmFsdWUobmFtZSk7XG4gICAgICB9XG4gICAgICBwcmlvcml0eSA9IFwiXCI7XG4gICAgfVxuICAgIHJldHVybiB0aGlzLmVhY2goZDNfc2VsZWN0aW9uX3N0eWxlKG5hbWUsIHZhbHVlLCBwcmlvcml0eSkpO1xuICB9O1xuICBmdW5jdGlvbiBkM19zZWxlY3Rpb25fc3R5bGUobmFtZSwgdmFsdWUsIHByaW9yaXR5KSB7XG4gICAgZnVuY3Rpb24gc3R5bGVOdWxsKCkge1xuICAgICAgdGhpcy5zdHlsZS5yZW1vdmVQcm9wZXJ0eShuYW1lKTtcbiAgICB9XG4gICAgZnVuY3Rpb24gc3R5bGVDb25zdGFudCgpIHtcbiAgICAgIHRoaXMuc3R5bGUuc2V0UHJvcGVydHkobmFtZSwgdmFsdWUsIHByaW9yaXR5KTtcbiAgICB9XG4gICAgZnVuY3Rpb24gc3R5bGVGdW5jdGlvbigpIHtcbiAgICAgIHZhciB4ID0gdmFsdWUuYXBwbHkodGhpcywgYXJndW1lbnRzKTtcbiAgICAgIGlmICh4ID09IG51bGwpIHRoaXMuc3R5bGUucmVtb3ZlUHJvcGVydHkobmFtZSk7IGVsc2UgdGhpcy5zdHlsZS5zZXRQcm9wZXJ0eShuYW1lLCB4LCBwcmlvcml0eSk7XG4gICAgfVxuICAgIHJldHVybiB2YWx1ZSA9PSBudWxsID8gc3R5bGVOdWxsIDogdHlwZW9mIHZhbHVlID09PSBcImZ1bmN0aW9uXCIgPyBzdHlsZUZ1bmN0aW9uIDogc3R5bGVDb25zdGFudDtcbiAgfVxuICBkM19zZWxlY3Rpb25Qcm90b3R5cGUucHJvcGVydHkgPSBmdW5jdGlvbihuYW1lLCB2YWx1ZSkge1xuICAgIGlmIChhcmd1bWVudHMubGVuZ3RoIDwgMikge1xuICAgICAgaWYgKHR5cGVvZiBuYW1lID09PSBcInN0cmluZ1wiKSByZXR1cm4gdGhpcy5ub2RlKClbbmFtZV07XG4gICAgICBmb3IgKHZhbHVlIGluIG5hbWUpIHRoaXMuZWFjaChkM19zZWxlY3Rpb25fcHJvcGVydHkodmFsdWUsIG5hbWVbdmFsdWVdKSk7XG4gICAgICByZXR1cm4gdGhpcztcbiAgICB9XG4gICAgcmV0dXJuIHRoaXMuZWFjaChkM19zZWxlY3Rpb25fcHJvcGVydHkobmFtZSwgdmFsdWUpKTtcbiAgfTtcbiAgZnVuY3Rpb24gZDNfc2VsZWN0aW9uX3Byb3BlcnR5KG5hbWUsIHZhbHVlKSB7XG4gICAgZnVuY3Rpb24gcHJvcGVydHlOdWxsKCkge1xuICAgICAgZGVsZXRlIHRoaXNbbmFtZV07XG4gICAgfVxuICAgIGZ1bmN0aW9uIHByb3BlcnR5Q29uc3RhbnQoKSB7XG4gICAgICB0aGlzW25hbWVdID0gdmFsdWU7XG4gICAgfVxuICAgIGZ1bmN0aW9uIHByb3BlcnR5RnVuY3Rpb24oKSB7XG4gICAgICB2YXIgeCA9IHZhbHVlLmFwcGx5KHRoaXMsIGFyZ3VtZW50cyk7XG4gICAgICBpZiAoeCA9PSBudWxsKSBkZWxldGUgdGhpc1tuYW1lXTsgZWxzZSB0aGlzW25hbWVdID0geDtcbiAgICB9XG4gICAgcmV0dXJuIHZhbHVlID09IG51bGwgPyBwcm9wZXJ0eU51bGwgOiB0eXBlb2YgdmFsdWUgPT09IFwiZnVuY3Rpb25cIiA/IHByb3BlcnR5RnVuY3Rpb24gOiBwcm9wZXJ0eUNvbnN0YW50O1xuICB9XG4gIGQzX3NlbGVjdGlvblByb3RvdHlwZS50ZXh0ID0gZnVuY3Rpb24odmFsdWUpIHtcbiAgICByZXR1cm4gYXJndW1lbnRzLmxlbmd0aCA/IHRoaXMuZWFjaCh0eXBlb2YgdmFsdWUgPT09IFwiZnVuY3Rpb25cIiA/IGZ1bmN0aW9uKCkge1xuICAgICAgdmFyIHYgPSB2YWx1ZS5hcHBseSh0aGlzLCBhcmd1bWVudHMpO1xuICAgICAgdGhpcy50ZXh0Q29udGVudCA9IHYgPT0gbnVsbCA/IFwiXCIgOiB2O1xuICAgIH0gOiB2YWx1ZSA9PSBudWxsID8gZnVuY3Rpb24oKSB7XG4gICAgICB0aGlzLnRleHRDb250ZW50ID0gXCJcIjtcbiAgICB9IDogZnVuY3Rpb24oKSB7XG4gICAgICB0aGlzLnRleHRDb250ZW50ID0gdmFsdWU7XG4gICAgfSkgOiB0aGlzLm5vZGUoKS50ZXh0Q29udGVudDtcbiAgfTtcbiAgZDNfc2VsZWN0aW9uUHJvdG90eXBlLmh0bWwgPSBmdW5jdGlvbih2YWx1ZSkge1xuICAgIHJldHVybiBhcmd1bWVudHMubGVuZ3RoID8gdGhpcy5lYWNoKHR5cGVvZiB2YWx1ZSA9PT0gXCJmdW5jdGlvblwiID8gZnVuY3Rpb24oKSB7XG4gICAgICB2YXIgdiA9IHZhbHVlLmFwcGx5KHRoaXMsIGFyZ3VtZW50cyk7XG4gICAgICB0aGlzLmlubmVySFRNTCA9IHYgPT0gbnVsbCA/IFwiXCIgOiB2O1xuICAgIH0gOiB2YWx1ZSA9PSBudWxsID8gZnVuY3Rpb24oKSB7XG4gICAgICB0aGlzLmlubmVySFRNTCA9IFwiXCI7XG4gICAgfSA6IGZ1bmN0aW9uKCkge1xuICAgICAgdGhpcy5pbm5lckhUTUwgPSB2YWx1ZTtcbiAgICB9KSA6IHRoaXMubm9kZSgpLmlubmVySFRNTDtcbiAgfTtcbiAgZDNfc2VsZWN0aW9uUHJvdG90eXBlLmFwcGVuZCA9IGZ1bmN0aW9uKG5hbWUpIHtcbiAgICBuYW1lID0gZDNfc2VsZWN0aW9uX2NyZWF0b3IobmFtZSk7XG4gICAgcmV0dXJuIHRoaXMuc2VsZWN0KGZ1bmN0aW9uKCkge1xuICAgICAgcmV0dXJuIHRoaXMuYXBwZW5kQ2hpbGQobmFtZS5hcHBseSh0aGlzLCBhcmd1bWVudHMpKTtcbiAgICB9KTtcbiAgfTtcbiAgZnVuY3Rpb24gZDNfc2VsZWN0aW9uX2NyZWF0b3IobmFtZSkge1xuICAgIGZ1bmN0aW9uIGNyZWF0ZSgpIHtcbiAgICAgIHZhciBkb2N1bWVudCA9IHRoaXMub3duZXJEb2N1bWVudCwgbmFtZXNwYWNlID0gdGhpcy5uYW1lc3BhY2VVUkk7XG4gICAgICByZXR1cm4gbmFtZXNwYWNlID09PSBkM19uc1hodG1sICYmIGRvY3VtZW50LmRvY3VtZW50RWxlbWVudC5uYW1lc3BhY2VVUkkgPT09IGQzX25zWGh0bWwgPyBkb2N1bWVudC5jcmVhdGVFbGVtZW50KG5hbWUpIDogZG9jdW1lbnQuY3JlYXRlRWxlbWVudE5TKG5hbWVzcGFjZSwgbmFtZSk7XG4gICAgfVxuICAgIGZ1bmN0aW9uIGNyZWF0ZU5TKCkge1xuICAgICAgcmV0dXJuIHRoaXMub3duZXJEb2N1bWVudC5jcmVhdGVFbGVtZW50TlMobmFtZS5zcGFjZSwgbmFtZS5sb2NhbCk7XG4gICAgfVxuICAgIHJldHVybiB0eXBlb2YgbmFtZSA9PT0gXCJmdW5jdGlvblwiID8gbmFtZSA6IChuYW1lID0gZDMubnMucXVhbGlmeShuYW1lKSkubG9jYWwgPyBjcmVhdGVOUyA6IGNyZWF0ZTtcbiAgfVxuICBkM19zZWxlY3Rpb25Qcm90b3R5cGUuaW5zZXJ0ID0gZnVuY3Rpb24obmFtZSwgYmVmb3JlKSB7XG4gICAgbmFtZSA9IGQzX3NlbGVjdGlvbl9jcmVhdG9yKG5hbWUpO1xuICAgIGJlZm9yZSA9IGQzX3NlbGVjdGlvbl9zZWxlY3RvcihiZWZvcmUpO1xuICAgIHJldHVybiB0aGlzLnNlbGVjdChmdW5jdGlvbigpIHtcbiAgICAgIHJldHVybiB0aGlzLmluc2VydEJlZm9yZShuYW1lLmFwcGx5KHRoaXMsIGFyZ3VtZW50cyksIGJlZm9yZS5hcHBseSh0aGlzLCBhcmd1bWVudHMpIHx8IG51bGwpO1xuICAgIH0pO1xuICB9O1xuICBkM19zZWxlY3Rpb25Qcm90b3R5cGUucmVtb3ZlID0gZnVuY3Rpb24oKSB7XG4gICAgcmV0dXJuIHRoaXMuZWFjaChkM19zZWxlY3Rpb25SZW1vdmUpO1xuICB9O1xuICBmdW5jdGlvbiBkM19zZWxlY3Rpb25SZW1vdmUoKSB7XG4gICAgdmFyIHBhcmVudCA9IHRoaXMucGFyZW50Tm9kZTtcbiAgICBpZiAocGFyZW50KSBwYXJlbnQucmVtb3ZlQ2hpbGQodGhpcyk7XG4gIH1cbiAgZDNfc2VsZWN0aW9uUHJvdG90eXBlLmRhdGEgPSBmdW5jdGlvbih2YWx1ZSwga2V5KSB7XG4gICAgdmFyIGkgPSAtMSwgbiA9IHRoaXMubGVuZ3RoLCBncm91cCwgbm9kZTtcbiAgICBpZiAoIWFyZ3VtZW50cy5sZW5ndGgpIHtcbiAgICAgIHZhbHVlID0gbmV3IEFycmF5KG4gPSAoZ3JvdXAgPSB0aGlzWzBdKS5sZW5ndGgpO1xuICAgICAgd2hpbGUgKCsraSA8IG4pIHtcbiAgICAgICAgaWYgKG5vZGUgPSBncm91cFtpXSkge1xuICAgICAgICAgIHZhbHVlW2ldID0gbm9kZS5fX2RhdGFfXztcbiAgICAgICAgfVxuICAgICAgfVxuICAgICAgcmV0dXJuIHZhbHVlO1xuICAgIH1cbiAgICBmdW5jdGlvbiBiaW5kKGdyb3VwLCBncm91cERhdGEpIHtcbiAgICAgIHZhciBpLCBuID0gZ3JvdXAubGVuZ3RoLCBtID0gZ3JvdXBEYXRhLmxlbmd0aCwgbjAgPSBNYXRoLm1pbihuLCBtKSwgdXBkYXRlTm9kZXMgPSBuZXcgQXJyYXkobSksIGVudGVyTm9kZXMgPSBuZXcgQXJyYXkobSksIGV4aXROb2RlcyA9IG5ldyBBcnJheShuKSwgbm9kZSwgbm9kZURhdGE7XG4gICAgICBpZiAoa2V5KSB7XG4gICAgICAgIHZhciBub2RlQnlLZXlWYWx1ZSA9IG5ldyBkM19NYXAoKSwga2V5VmFsdWVzID0gbmV3IEFycmF5KG4pLCBrZXlWYWx1ZTtcbiAgICAgICAgZm9yIChpID0gLTE7ICsraSA8IG47ICkge1xuICAgICAgICAgIGlmIChub2RlID0gZ3JvdXBbaV0pIHtcbiAgICAgICAgICAgIGlmIChub2RlQnlLZXlWYWx1ZS5oYXMoa2V5VmFsdWUgPSBrZXkuY2FsbChub2RlLCBub2RlLl9fZGF0YV9fLCBpKSkpIHtcbiAgICAgICAgICAgICAgZXhpdE5vZGVzW2ldID0gbm9kZTtcbiAgICAgICAgICAgIH0gZWxzZSB7XG4gICAgICAgICAgICAgIG5vZGVCeUtleVZhbHVlLnNldChrZXlWYWx1ZSwgbm9kZSk7XG4gICAgICAgICAgICB9XG4gICAgICAgICAgICBrZXlWYWx1ZXNbaV0gPSBrZXlWYWx1ZTtcbiAgICAgICAgICB9XG4gICAgICAgIH1cbiAgICAgICAgZm9yIChpID0gLTE7ICsraSA8IG07ICkge1xuICAgICAgICAgIGlmICghKG5vZGUgPSBub2RlQnlLZXlWYWx1ZS5nZXQoa2V5VmFsdWUgPSBrZXkuY2FsbChncm91cERhdGEsIG5vZGVEYXRhID0gZ3JvdXBEYXRhW2ldLCBpKSkpKSB7XG4gICAgICAgICAgICBlbnRlck5vZGVzW2ldID0gZDNfc2VsZWN0aW9uX2RhdGFOb2RlKG5vZGVEYXRhKTtcbiAgICAgICAgICB9IGVsc2UgaWYgKG5vZGUgIT09IHRydWUpIHtcbiAgICAgICAgICAgIHVwZGF0ZU5vZGVzW2ldID0gbm9kZTtcbiAgICAgICAgICAgIG5vZGUuX19kYXRhX18gPSBub2RlRGF0YTtcbiAgICAgICAgICB9XG4gICAgICAgICAgbm9kZUJ5S2V5VmFsdWUuc2V0KGtleVZhbHVlLCB0cnVlKTtcbiAgICAgICAgfVxuICAgICAgICBmb3IgKGkgPSAtMTsgKytpIDwgbjsgKSB7XG4gICAgICAgICAgaWYgKGkgaW4ga2V5VmFsdWVzICYmIG5vZGVCeUtleVZhbHVlLmdldChrZXlWYWx1ZXNbaV0pICE9PSB0cnVlKSB7XG4gICAgICAgICAgICBleGl0Tm9kZXNbaV0gPSBncm91cFtpXTtcbiAgICAgICAgICB9XG4gICAgICAgIH1cbiAgICAgIH0gZWxzZSB7XG4gICAgICAgIGZvciAoaSA9IC0xOyArK2kgPCBuMDsgKSB7XG4gICAgICAgICAgbm9kZSA9IGdyb3VwW2ldO1xuICAgICAgICAgIG5vZGVEYXRhID0gZ3JvdXBEYXRhW2ldO1xuICAgICAgICAgIGlmIChub2RlKSB7XG4gICAgICAgICAgICBub2RlLl9fZGF0YV9fID0gbm9kZURhdGE7XG4gICAgICAgICAgICB1cGRhdGVOb2Rlc1tpXSA9IG5vZGU7XG4gICAgICAgICAgfSBlbHNlIHtcbiAgICAgICAgICAgIGVudGVyTm9kZXNbaV0gPSBkM19zZWxlY3Rpb25fZGF0YU5vZGUobm9kZURhdGEpO1xuICAgICAgICAgIH1cbiAgICAgICAgfVxuICAgICAgICBmb3IgKDtpIDwgbTsgKytpKSB7XG4gICAgICAgICAgZW50ZXJOb2Rlc1tpXSA9IGQzX3NlbGVjdGlvbl9kYXRhTm9kZShncm91cERhdGFbaV0pO1xuICAgICAgICB9XG4gICAgICAgIGZvciAoO2kgPCBuOyArK2kpIHtcbiAgICAgICAgICBleGl0Tm9kZXNbaV0gPSBncm91cFtpXTtcbiAgICAgICAgfVxuICAgICAgfVxuICAgICAgZW50ZXJOb2Rlcy51cGRhdGUgPSB1cGRhdGVOb2RlcztcbiAgICAgIGVudGVyTm9kZXMucGFyZW50Tm9kZSA9IHVwZGF0ZU5vZGVzLnBhcmVudE5vZGUgPSBleGl0Tm9kZXMucGFyZW50Tm9kZSA9IGdyb3VwLnBhcmVudE5vZGU7XG4gICAgICBlbnRlci5wdXNoKGVudGVyTm9kZXMpO1xuICAgICAgdXBkYXRlLnB1c2godXBkYXRlTm9kZXMpO1xuICAgICAgZXhpdC5wdXNoKGV4aXROb2Rlcyk7XG4gICAgfVxuICAgIHZhciBlbnRlciA9IGQzX3NlbGVjdGlvbl9lbnRlcihbXSksIHVwZGF0ZSA9IGQzX3NlbGVjdGlvbihbXSksIGV4aXQgPSBkM19zZWxlY3Rpb24oW10pO1xuICAgIGlmICh0eXBlb2YgdmFsdWUgPT09IFwiZnVuY3Rpb25cIikge1xuICAgICAgd2hpbGUgKCsraSA8IG4pIHtcbiAgICAgICAgYmluZChncm91cCA9IHRoaXNbaV0sIHZhbHVlLmNhbGwoZ3JvdXAsIGdyb3VwLnBhcmVudE5vZGUuX19kYXRhX18sIGkpKTtcbiAgICAgIH1cbiAgICB9IGVsc2Uge1xuICAgICAgd2hpbGUgKCsraSA8IG4pIHtcbiAgICAgICAgYmluZChncm91cCA9IHRoaXNbaV0sIHZhbHVlKTtcbiAgICAgIH1cbiAgICB9XG4gICAgdXBkYXRlLmVudGVyID0gZnVuY3Rpb24oKSB7XG4gICAgICByZXR1cm4gZW50ZXI7XG4gICAgfTtcbiAgICB1cGRhdGUuZXhpdCA9IGZ1bmN0aW9uKCkge1xuICAgICAgcmV0dXJuIGV4aXQ7XG4gICAgfTtcbiAgICByZXR1cm4gdXBkYXRlO1xuICB9O1xuICBmdW5jdGlvbiBkM19zZWxlY3Rpb25fZGF0YU5vZGUoZGF0YSkge1xuICAgIHJldHVybiB7XG4gICAgICBfX2RhdGFfXzogZGF0YVxuICAgIH07XG4gIH1cbiAgZDNfc2VsZWN0aW9uUHJvdG90eXBlLmRhdHVtID0gZnVuY3Rpb24odmFsdWUpIHtcbiAgICByZXR1cm4gYXJndW1lbnRzLmxlbmd0aCA/IHRoaXMucHJvcGVydHkoXCJfX2RhdGFfX1wiLCB2YWx1ZSkgOiB0aGlzLnByb3BlcnR5KFwiX19kYXRhX19cIik7XG4gIH07XG4gIGQzX3NlbGVjdGlvblByb3RvdHlwZS5maWx0ZXIgPSBmdW5jdGlvbihmaWx0ZXIpIHtcbiAgICB2YXIgc3ViZ3JvdXBzID0gW10sIHN1Ymdyb3VwLCBncm91cCwgbm9kZTtcbiAgICBpZiAodHlwZW9mIGZpbHRlciAhPT0gXCJmdW5jdGlvblwiKSBmaWx0ZXIgPSBkM19zZWxlY3Rpb25fZmlsdGVyKGZpbHRlcik7XG4gICAgZm9yICh2YXIgaiA9IDAsIG0gPSB0aGlzLmxlbmd0aDsgaiA8IG07IGorKykge1xuICAgICAgc3ViZ3JvdXBzLnB1c2goc3ViZ3JvdXAgPSBbXSk7XG4gICAgICBzdWJncm91cC5wYXJlbnROb2RlID0gKGdyb3VwID0gdGhpc1tqXSkucGFyZW50Tm9kZTtcbiAgICAgIGZvciAodmFyIGkgPSAwLCBuID0gZ3JvdXAubGVuZ3RoOyBpIDwgbjsgaSsrKSB7XG4gICAgICAgIGlmICgobm9kZSA9IGdyb3VwW2ldKSAmJiBmaWx0ZXIuY2FsbChub2RlLCBub2RlLl9fZGF0YV9fLCBpLCBqKSkge1xuICAgICAgICAgIHN1Ymdyb3VwLnB1c2gobm9kZSk7XG4gICAgICAgIH1cbiAgICAgIH1cbiAgICB9XG4gICAgcmV0dXJuIGQzX3NlbGVjdGlvbihzdWJncm91cHMpO1xuICB9O1xuICBmdW5jdGlvbiBkM19zZWxlY3Rpb25fZmlsdGVyKHNlbGVjdG9yKSB7XG4gICAgcmV0dXJuIGZ1bmN0aW9uKCkge1xuICAgICAgcmV0dXJuIGQzX3NlbGVjdE1hdGNoZXModGhpcywgc2VsZWN0b3IpO1xuICAgIH07XG4gIH1cbiAgZDNfc2VsZWN0aW9uUHJvdG90eXBlLm9yZGVyID0gZnVuY3Rpb24oKSB7XG4gICAgZm9yICh2YXIgaiA9IC0xLCBtID0gdGhpcy5sZW5ndGg7ICsraiA8IG07ICkge1xuICAgICAgZm9yICh2YXIgZ3JvdXAgPSB0aGlzW2pdLCBpID0gZ3JvdXAubGVuZ3RoIC0gMSwgbmV4dCA9IGdyb3VwW2ldLCBub2RlOyAtLWkgPj0gMDsgKSB7XG4gICAgICAgIGlmIChub2RlID0gZ3JvdXBbaV0pIHtcbiAgICAgICAgICBpZiAobmV4dCAmJiBuZXh0ICE9PSBub2RlLm5leHRTaWJsaW5nKSBuZXh0LnBhcmVudE5vZGUuaW5zZXJ0QmVmb3JlKG5vZGUsIG5leHQpO1xuICAgICAgICAgIG5leHQgPSBub2RlO1xuICAgICAgICB9XG4gICAgICB9XG4gICAgfVxuICAgIHJldHVybiB0aGlzO1xuICB9O1xuICBkM19zZWxlY3Rpb25Qcm90b3R5cGUuc29ydCA9IGZ1bmN0aW9uKGNvbXBhcmF0b3IpIHtcbiAgICBjb21wYXJhdG9yID0gZDNfc2VsZWN0aW9uX3NvcnRDb21wYXJhdG9yLmFwcGx5KHRoaXMsIGFyZ3VtZW50cyk7XG4gICAgZm9yICh2YXIgaiA9IC0xLCBtID0gdGhpcy5sZW5ndGg7ICsraiA8IG07ICkgdGhpc1tqXS5zb3J0KGNvbXBhcmF0b3IpO1xuICAgIHJldHVybiB0aGlzLm9yZGVyKCk7XG4gIH07XG4gIGZ1bmN0aW9uIGQzX3NlbGVjdGlvbl9zb3J0Q29tcGFyYXRvcihjb21wYXJhdG9yKSB7XG4gICAgaWYgKCFhcmd1bWVudHMubGVuZ3RoKSBjb21wYXJhdG9yID0gZDNfYXNjZW5kaW5nO1xuICAgIHJldHVybiBmdW5jdGlvbihhLCBiKSB7XG4gICAgICByZXR1cm4gYSAmJiBiID8gY29tcGFyYXRvcihhLl9fZGF0YV9fLCBiLl9fZGF0YV9fKSA6ICFhIC0gIWI7XG4gICAgfTtcbiAgfVxuICBkM19zZWxlY3Rpb25Qcm90b3R5cGUuZWFjaCA9IGZ1bmN0aW9uKGNhbGxiYWNrKSB7XG4gICAgcmV0dXJuIGQzX3NlbGVjdGlvbl9lYWNoKHRoaXMsIGZ1bmN0aW9uKG5vZGUsIGksIGopIHtcbiAgICAgIGNhbGxiYWNrLmNhbGwobm9kZSwgbm9kZS5fX2RhdGFfXywgaSwgaik7XG4gICAgfSk7XG4gIH07XG4gIGZ1bmN0aW9uIGQzX3NlbGVjdGlvbl9lYWNoKGdyb3VwcywgY2FsbGJhY2spIHtcbiAgICBmb3IgKHZhciBqID0gMCwgbSA9IGdyb3Vwcy5sZW5ndGg7IGogPCBtOyBqKyspIHtcbiAgICAgIGZvciAodmFyIGdyb3VwID0gZ3JvdXBzW2pdLCBpID0gMCwgbiA9IGdyb3VwLmxlbmd0aCwgbm9kZTsgaSA8IG47IGkrKykge1xuICAgICAgICBpZiAobm9kZSA9IGdyb3VwW2ldKSBjYWxsYmFjayhub2RlLCBpLCBqKTtcbiAgICAgIH1cbiAgICB9XG4gICAgcmV0dXJuIGdyb3VwcztcbiAgfVxuICBkM19zZWxlY3Rpb25Qcm90b3R5cGUuY2FsbCA9IGZ1bmN0aW9uKGNhbGxiYWNrKSB7XG4gICAgdmFyIGFyZ3MgPSBkM19hcnJheShhcmd1bWVudHMpO1xuICAgIGNhbGxiYWNrLmFwcGx5KGFyZ3NbMF0gPSB0aGlzLCBhcmdzKTtcbiAgICByZXR1cm4gdGhpcztcbiAgfTtcbiAgZDNfc2VsZWN0aW9uUHJvdG90eXBlLmVtcHR5ID0gZnVuY3Rpb24oKSB7XG4gICAgcmV0dXJuICF0aGlzLm5vZGUoKTtcbiAgfTtcbiAgZDNfc2VsZWN0aW9uUHJvdG90eXBlLm5vZGUgPSBmdW5jdGlvbigpIHtcbiAgICBmb3IgKHZhciBqID0gMCwgbSA9IHRoaXMubGVuZ3RoOyBqIDwgbTsgaisrKSB7XG4gICAgICBmb3IgKHZhciBncm91cCA9IHRoaXNbal0sIGkgPSAwLCBuID0gZ3JvdXAubGVuZ3RoOyBpIDwgbjsgaSsrKSB7XG4gICAgICAgIHZhciBub2RlID0gZ3JvdXBbaV07XG4gICAgICAgIGlmIChub2RlKSByZXR1cm4gbm9kZTtcbiAgICAgIH1cbiAgICB9XG4gICAgcmV0dXJuIG51bGw7XG4gIH07XG4gIGQzX3NlbGVjdGlvblByb3RvdHlwZS5zaXplID0gZnVuY3Rpb24oKSB7XG4gICAgdmFyIG4gPSAwO1xuICAgIGQzX3NlbGVjdGlvbl9lYWNoKHRoaXMsIGZ1bmN0aW9uKCkge1xuICAgICAgKytuO1xuICAgIH0pO1xuICAgIHJldHVybiBuO1xuICB9O1xuICBmdW5jdGlvbiBkM19zZWxlY3Rpb25fZW50ZXIoc2VsZWN0aW9uKSB7XG4gICAgZDNfc3ViY2xhc3Moc2VsZWN0aW9uLCBkM19zZWxlY3Rpb25fZW50ZXJQcm90b3R5cGUpO1xuICAgIHJldHVybiBzZWxlY3Rpb247XG4gIH1cbiAgdmFyIGQzX3NlbGVjdGlvbl9lbnRlclByb3RvdHlwZSA9IFtdO1xuICBkMy5zZWxlY3Rpb24uZW50ZXIgPSBkM19zZWxlY3Rpb25fZW50ZXI7XG4gIGQzLnNlbGVjdGlvbi5lbnRlci5wcm90b3R5cGUgPSBkM19zZWxlY3Rpb25fZW50ZXJQcm90b3R5cGU7XG4gIGQzX3NlbGVjdGlvbl9lbnRlclByb3RvdHlwZS5hcHBlbmQgPSBkM19zZWxlY3Rpb25Qcm90b3R5cGUuYXBwZW5kO1xuICBkM19zZWxlY3Rpb25fZW50ZXJQcm90b3R5cGUuZW1wdHkgPSBkM19zZWxlY3Rpb25Qcm90b3R5cGUuZW1wdHk7XG4gIGQzX3NlbGVjdGlvbl9lbnRlclByb3RvdHlwZS5ub2RlID0gZDNfc2VsZWN0aW9uUHJvdG90eXBlLm5vZGU7XG4gIGQzX3NlbGVjdGlvbl9lbnRlclByb3RvdHlwZS5jYWxsID0gZDNfc2VsZWN0aW9uUHJvdG90eXBlLmNhbGw7XG4gIGQzX3NlbGVjdGlvbl9lbnRlclByb3RvdHlwZS5zaXplID0gZDNfc2VsZWN0aW9uUHJvdG90eXBlLnNpemU7XG4gIGQzX3NlbGVjdGlvbl9lbnRlclByb3RvdHlwZS5zZWxlY3QgPSBmdW5jdGlvbihzZWxlY3Rvcikge1xuICAgIHZhciBzdWJncm91cHMgPSBbXSwgc3ViZ3JvdXAsIHN1Ym5vZGUsIHVwZ3JvdXAsIGdyb3VwLCBub2RlO1xuICAgIGZvciAodmFyIGogPSAtMSwgbSA9IHRoaXMubGVuZ3RoOyArK2ogPCBtOyApIHtcbiAgICAgIHVwZ3JvdXAgPSAoZ3JvdXAgPSB0aGlzW2pdKS51cGRhdGU7XG4gICAgICBzdWJncm91cHMucHVzaChzdWJncm91cCA9IFtdKTtcbiAgICAgIHN1Ymdyb3VwLnBhcmVudE5vZGUgPSBncm91cC5wYXJlbnROb2RlO1xuICAgICAgZm9yICh2YXIgaSA9IC0xLCBuID0gZ3JvdXAubGVuZ3RoOyArK2kgPCBuOyApIHtcbiAgICAgICAgaWYgKG5vZGUgPSBncm91cFtpXSkge1xuICAgICAgICAgIHN1Ymdyb3VwLnB1c2godXBncm91cFtpXSA9IHN1Ym5vZGUgPSBzZWxlY3Rvci5jYWxsKGdyb3VwLnBhcmVudE5vZGUsIG5vZGUuX19kYXRhX18sIGksIGopKTtcbiAgICAgICAgICBzdWJub2RlLl9fZGF0YV9fID0gbm9kZS5fX2RhdGFfXztcbiAgICAgICAgfSBlbHNlIHtcbiAgICAgICAgICBzdWJncm91cC5wdXNoKG51bGwpO1xuICAgICAgICB9XG4gICAgICB9XG4gICAgfVxuICAgIHJldHVybiBkM19zZWxlY3Rpb24oc3ViZ3JvdXBzKTtcbiAgfTtcbiAgZDNfc2VsZWN0aW9uX2VudGVyUHJvdG90eXBlLmluc2VydCA9IGZ1bmN0aW9uKG5hbWUsIGJlZm9yZSkge1xuICAgIGlmIChhcmd1bWVudHMubGVuZ3RoIDwgMikgYmVmb3JlID0gZDNfc2VsZWN0aW9uX2VudGVySW5zZXJ0QmVmb3JlKHRoaXMpO1xuICAgIHJldHVybiBkM19zZWxlY3Rpb25Qcm90b3R5cGUuaW5zZXJ0LmNhbGwodGhpcywgbmFtZSwgYmVmb3JlKTtcbiAgfTtcbiAgZnVuY3Rpb24gZDNfc2VsZWN0aW9uX2VudGVySW5zZXJ0QmVmb3JlKGVudGVyKSB7XG4gICAgdmFyIGkwLCBqMDtcbiAgICByZXR1cm4gZnVuY3Rpb24oZCwgaSwgaikge1xuICAgICAgdmFyIGdyb3VwID0gZW50ZXJbal0udXBkYXRlLCBuID0gZ3JvdXAubGVuZ3RoLCBub2RlO1xuICAgICAgaWYgKGogIT0gajApIGowID0gaiwgaTAgPSAwO1xuICAgICAgaWYgKGkgPj0gaTApIGkwID0gaSArIDE7XG4gICAgICB3aGlsZSAoIShub2RlID0gZ3JvdXBbaTBdKSAmJiArK2kwIDwgbikgO1xuICAgICAgcmV0dXJuIG5vZGU7XG4gICAgfTtcbiAgfVxuICBkMy5zZWxlY3QgPSBmdW5jdGlvbihub2RlKSB7XG4gICAgdmFyIGdyb3VwO1xuICAgIGlmICh0eXBlb2Ygbm9kZSA9PT0gXCJzdHJpbmdcIikge1xuICAgICAgZ3JvdXAgPSBbIGQzX3NlbGVjdChub2RlLCBkM19kb2N1bWVudCkgXTtcbiAgICAgIGdyb3VwLnBhcmVudE5vZGUgPSBkM19kb2N1bWVudC5kb2N1bWVudEVsZW1lbnQ7XG4gICAgfSBlbHNlIHtcbiAgICAgIGdyb3VwID0gWyBub2RlIF07XG4gICAgICBncm91cC5wYXJlbnROb2RlID0gZDNfZG9jdW1lbnRFbGVtZW50KG5vZGUpO1xuICAgIH1cbiAgICByZXR1cm4gZDNfc2VsZWN0aW9uKFsgZ3JvdXAgXSk7XG4gIH07XG4gIGQzLnNlbGVjdEFsbCA9IGZ1bmN0aW9uKG5vZGVzKSB7XG4gICAgdmFyIGdyb3VwO1xuICAgIGlmICh0eXBlb2Ygbm9kZXMgPT09IFwic3RyaW5nXCIpIHtcbiAgICAgIGdyb3VwID0gZDNfYXJyYXkoZDNfc2VsZWN0QWxsKG5vZGVzLCBkM19kb2N1bWVudCkpO1xuICAgICAgZ3JvdXAucGFyZW50Tm9kZSA9IGQzX2RvY3VtZW50LmRvY3VtZW50RWxlbWVudDtcbiAgICB9IGVsc2Uge1xuICAgICAgZ3JvdXAgPSBkM19hcnJheShub2Rlcyk7XG4gICAgICBncm91cC5wYXJlbnROb2RlID0gbnVsbDtcbiAgICB9XG4gICAgcmV0dXJuIGQzX3NlbGVjdGlvbihbIGdyb3VwIF0pO1xuICB9O1xuICBkM19zZWxlY3Rpb25Qcm90b3R5cGUub24gPSBmdW5jdGlvbih0eXBlLCBsaXN0ZW5lciwgY2FwdHVyZSkge1xuICAgIHZhciBuID0gYXJndW1lbnRzLmxlbmd0aDtcbiAgICBpZiAobiA8IDMpIHtcbiAgICAgIGlmICh0eXBlb2YgdHlwZSAhPT0gXCJzdHJpbmdcIikge1xuICAgICAgICBpZiAobiA8IDIpIGxpc3RlbmVyID0gZmFsc2U7XG4gICAgICAgIGZvciAoY2FwdHVyZSBpbiB0eXBlKSB0aGlzLmVhY2goZDNfc2VsZWN0aW9uX29uKGNhcHR1cmUsIHR5cGVbY2FwdHVyZV0sIGxpc3RlbmVyKSk7XG4gICAgICAgIHJldHVybiB0aGlzO1xuICAgICAgfVxuICAgICAgaWYgKG4gPCAyKSByZXR1cm4gKG4gPSB0aGlzLm5vZGUoKVtcIl9fb25cIiArIHR5cGVdKSAmJiBuLl87XG4gICAgICBjYXB0dXJlID0gZmFsc2U7XG4gICAgfVxuICAgIHJldHVybiB0aGlzLmVhY2goZDNfc2VsZWN0aW9uX29uKHR5cGUsIGxpc3RlbmVyLCBjYXB0dXJlKSk7XG4gIH07XG4gIGZ1bmN0aW9uIGQzX3NlbGVjdGlvbl9vbih0eXBlLCBsaXN0ZW5lciwgY2FwdHVyZSkge1xuICAgIHZhciBuYW1lID0gXCJfX29uXCIgKyB0eXBlLCBpID0gdHlwZS5pbmRleE9mKFwiLlwiKSwgd3JhcCA9IGQzX3NlbGVjdGlvbl9vbkxpc3RlbmVyO1xuICAgIGlmIChpID4gMCkgdHlwZSA9IHR5cGUuc2xpY2UoMCwgaSk7XG4gICAgdmFyIGZpbHRlciA9IGQzX3NlbGVjdGlvbl9vbkZpbHRlcnMuZ2V0KHR5cGUpO1xuICAgIGlmIChmaWx0ZXIpIHR5cGUgPSBmaWx0ZXIsIHdyYXAgPSBkM19zZWxlY3Rpb25fb25GaWx0ZXI7XG4gICAgZnVuY3Rpb24gb25SZW1vdmUoKSB7XG4gICAgICB2YXIgbCA9IHRoaXNbbmFtZV07XG4gICAgICBpZiAobCkge1xuICAgICAgICB0aGlzLnJlbW92ZUV2ZW50TGlzdGVuZXIodHlwZSwgbCwgbC4kKTtcbiAgICAgICAgZGVsZXRlIHRoaXNbbmFtZV07XG4gICAgICB9XG4gICAgfVxuICAgIGZ1bmN0aW9uIG9uQWRkKCkge1xuICAgICAgdmFyIGwgPSB3cmFwKGxpc3RlbmVyLCBkM19hcnJheShhcmd1bWVudHMpKTtcbiAgICAgIG9uUmVtb3ZlLmNhbGwodGhpcyk7XG4gICAgICB0aGlzLmFkZEV2ZW50TGlzdGVuZXIodHlwZSwgdGhpc1tuYW1lXSA9IGwsIGwuJCA9IGNhcHR1cmUpO1xuICAgICAgbC5fID0gbGlzdGVuZXI7XG4gICAgfVxuICAgIGZ1bmN0aW9uIHJlbW92ZUFsbCgpIHtcbiAgICAgIHZhciByZSA9IG5ldyBSZWdFeHAoXCJeX19vbihbXi5dKylcIiArIGQzLnJlcXVvdGUodHlwZSkgKyBcIiRcIiksIG1hdGNoO1xuICAgICAgZm9yICh2YXIgbmFtZSBpbiB0aGlzKSB7XG4gICAgICAgIGlmIChtYXRjaCA9IG5hbWUubWF0Y2gocmUpKSB7XG4gICAgICAgICAgdmFyIGwgPSB0aGlzW25hbWVdO1xuICAgICAgICAgIHRoaXMucmVtb3ZlRXZlbnRMaXN0ZW5lcihtYXRjaFsxXSwgbCwgbC4kKTtcbiAgICAgICAgICBkZWxldGUgdGhpc1tuYW1lXTtcbiAgICAgICAgfVxuICAgICAgfVxuICAgIH1cbiAgICByZXR1cm4gaSA/IGxpc3RlbmVyID8gb25BZGQgOiBvblJlbW92ZSA6IGxpc3RlbmVyID8gZDNfbm9vcCA6IHJlbW92ZUFsbDtcbiAgfVxuICB2YXIgZDNfc2VsZWN0aW9uX29uRmlsdGVycyA9IGQzLm1hcCh7XG4gICAgbW91c2VlbnRlcjogXCJtb3VzZW92ZXJcIixcbiAgICBtb3VzZWxlYXZlOiBcIm1vdXNlb3V0XCJcbiAgfSk7XG4gIGlmIChkM19kb2N1bWVudCkge1xuICAgIGQzX3NlbGVjdGlvbl9vbkZpbHRlcnMuZm9yRWFjaChmdW5jdGlvbihrKSB7XG4gICAgICBpZiAoXCJvblwiICsgayBpbiBkM19kb2N1bWVudCkgZDNfc2VsZWN0aW9uX29uRmlsdGVycy5yZW1vdmUoayk7XG4gICAgfSk7XG4gIH1cbiAgZnVuY3Rpb24gZDNfc2VsZWN0aW9uX29uTGlzdGVuZXIobGlzdGVuZXIsIGFyZ3VtZW50eikge1xuICAgIHJldHVybiBmdW5jdGlvbihlKSB7XG4gICAgICB2YXIgbyA9IGQzLmV2ZW50O1xuICAgICAgZDMuZXZlbnQgPSBlO1xuICAgICAgYXJndW1lbnR6WzBdID0gdGhpcy5fX2RhdGFfXztcbiAgICAgIHRyeSB7XG4gICAgICAgIGxpc3RlbmVyLmFwcGx5KHRoaXMsIGFyZ3VtZW50eik7XG4gICAgICB9IGZpbmFsbHkge1xuICAgICAgICBkMy5ldmVudCA9IG87XG4gICAgICB9XG4gICAgfTtcbiAgfVxuICBmdW5jdGlvbiBkM19zZWxlY3Rpb25fb25GaWx0ZXIobGlzdGVuZXIsIGFyZ3VtZW50eikge1xuICAgIHZhciBsID0gZDNfc2VsZWN0aW9uX29uTGlzdGVuZXIobGlzdGVuZXIsIGFyZ3VtZW50eik7XG4gICAgcmV0dXJuIGZ1bmN0aW9uKGUpIHtcbiAgICAgIHZhciB0YXJnZXQgPSB0aGlzLCByZWxhdGVkID0gZS5yZWxhdGVkVGFyZ2V0O1xuICAgICAgaWYgKCFyZWxhdGVkIHx8IHJlbGF0ZWQgIT09IHRhcmdldCAmJiAhKHJlbGF0ZWQuY29tcGFyZURvY3VtZW50UG9zaXRpb24odGFyZ2V0KSAmIDgpKSB7XG4gICAgICAgIGwuY2FsbCh0YXJnZXQsIGUpO1xuICAgICAgfVxuICAgIH07XG4gIH1cbiAgdmFyIGQzX2V2ZW50X2RyYWdTZWxlY3QsIGQzX2V2ZW50X2RyYWdJZCA9IDA7XG4gIGZ1bmN0aW9uIGQzX2V2ZW50X2RyYWdTdXBwcmVzcyhub2RlKSB7XG4gICAgdmFyIG5hbWUgPSBcIi5kcmFnc3VwcHJlc3MtXCIgKyArK2QzX2V2ZW50X2RyYWdJZCwgY2xpY2sgPSBcImNsaWNrXCIgKyBuYW1lLCB3ID0gZDMuc2VsZWN0KGQzX3dpbmRvdyhub2RlKSkub24oXCJ0b3VjaG1vdmVcIiArIG5hbWUsIGQzX2V2ZW50UHJldmVudERlZmF1bHQpLm9uKFwiZHJhZ3N0YXJ0XCIgKyBuYW1lLCBkM19ldmVudFByZXZlbnREZWZhdWx0KS5vbihcInNlbGVjdHN0YXJ0XCIgKyBuYW1lLCBkM19ldmVudFByZXZlbnREZWZhdWx0KTtcbiAgICBpZiAoZDNfZXZlbnRfZHJhZ1NlbGVjdCA9PSBudWxsKSB7XG4gICAgICBkM19ldmVudF9kcmFnU2VsZWN0ID0gXCJvbnNlbGVjdHN0YXJ0XCIgaW4gbm9kZSA/IGZhbHNlIDogZDNfdmVuZG9yU3ltYm9sKG5vZGUuc3R5bGUsIFwidXNlclNlbGVjdFwiKTtcbiAgICB9XG4gICAgaWYgKGQzX2V2ZW50X2RyYWdTZWxlY3QpIHtcbiAgICAgIHZhciBzdHlsZSA9IGQzX2RvY3VtZW50RWxlbWVudChub2RlKS5zdHlsZSwgc2VsZWN0ID0gc3R5bGVbZDNfZXZlbnRfZHJhZ1NlbGVjdF07XG4gICAgICBzdHlsZVtkM19ldmVudF9kcmFnU2VsZWN0XSA9IFwibm9uZVwiO1xuICAgIH1cbiAgICByZXR1cm4gZnVuY3Rpb24oc3VwcHJlc3NDbGljaykge1xuICAgICAgdy5vbihuYW1lLCBudWxsKTtcbiAgICAgIGlmIChkM19ldmVudF9kcmFnU2VsZWN0KSBzdHlsZVtkM19ldmVudF9kcmFnU2VsZWN0XSA9IHNlbGVjdDtcbiAgICAgIGlmIChzdXBwcmVzc0NsaWNrKSB7XG4gICAgICAgIHZhciBvZmYgPSBmdW5jdGlvbigpIHtcbiAgICAgICAgICB3Lm9uKGNsaWNrLCBudWxsKTtcbiAgICAgICAgfTtcbiAgICAgICAgdy5vbihjbGljaywgZnVuY3Rpb24oKSB7XG4gICAgICAgICAgZDNfZXZlbnRQcmV2ZW50RGVmYXVsdCgpO1xuICAgICAgICAgIG9mZigpO1xuICAgICAgICB9LCB0cnVlKTtcbiAgICAgICAgc2V0VGltZW91dChvZmYsIDApO1xuICAgICAgfVxuICAgIH07XG4gIH1cbiAgZDMubW91c2UgPSBmdW5jdGlvbihjb250YWluZXIpIHtcbiAgICByZXR1cm4gZDNfbW91c2VQb2ludChjb250YWluZXIsIGQzX2V2ZW50U291cmNlKCkpO1xuICB9O1xuICB2YXIgZDNfbW91c2VfYnVnNDQwODMgPSB0aGlzLm5hdmlnYXRvciAmJiAvV2ViS2l0Ly50ZXN0KHRoaXMubmF2aWdhdG9yLnVzZXJBZ2VudCkgPyAtMSA6IDA7XG4gIGZ1bmN0aW9uIGQzX21vdXNlUG9pbnQoY29udGFpbmVyLCBlKSB7XG4gICAgaWYgKGUuY2hhbmdlZFRvdWNoZXMpIGUgPSBlLmNoYW5nZWRUb3VjaGVzWzBdO1xuICAgIHZhciBzdmcgPSBjb250YWluZXIub3duZXJTVkdFbGVtZW50IHx8IGNvbnRhaW5lcjtcbiAgICBpZiAoc3ZnLmNyZWF0ZVNWR1BvaW50KSB7XG4gICAgICB2YXIgcG9pbnQgPSBzdmcuY3JlYXRlU1ZHUG9pbnQoKTtcbiAgICAgIGlmIChkM19tb3VzZV9idWc0NDA4MyA8IDApIHtcbiAgICAgICAgdmFyIHdpbmRvdyA9IGQzX3dpbmRvdyhjb250YWluZXIpO1xuICAgICAgICBpZiAod2luZG93LnNjcm9sbFggfHwgd2luZG93LnNjcm9sbFkpIHtcbiAgICAgICAgICBzdmcgPSBkMy5zZWxlY3QoXCJib2R5XCIpLmFwcGVuZChcInN2Z1wiKS5zdHlsZSh7XG4gICAgICAgICAgICBwb3NpdGlvbjogXCJhYnNvbHV0ZVwiLFxuICAgICAgICAgICAgdG9wOiAwLFxuICAgICAgICAgICAgbGVmdDogMCxcbiAgICAgICAgICAgIG1hcmdpbjogMCxcbiAgICAgICAgICAgIHBhZGRpbmc6IDAsXG4gICAgICAgICAgICBib3JkZXI6IFwibm9uZVwiXG4gICAgICAgICAgfSwgXCJpbXBvcnRhbnRcIik7XG4gICAgICAgICAgdmFyIGN0bSA9IHN2Z1swXVswXS5nZXRTY3JlZW5DVE0oKTtcbiAgICAgICAgICBkM19tb3VzZV9idWc0NDA4MyA9ICEoY3RtLmYgfHwgY3RtLmUpO1xuICAgICAgICAgIHN2Zy5yZW1vdmUoKTtcbiAgICAgICAgfVxuICAgICAgfVxuICAgICAgaWYgKGQzX21vdXNlX2J1ZzQ0MDgzKSBwb2ludC54ID0gZS5wYWdlWCwgcG9pbnQueSA9IGUucGFnZVk7IGVsc2UgcG9pbnQueCA9IGUuY2xpZW50WCwgXG4gICAgICBwb2ludC55ID0gZS5jbGllbnRZO1xuICAgICAgcG9pbnQgPSBwb2ludC5tYXRyaXhUcmFuc2Zvcm0oY29udGFpbmVyLmdldFNjcmVlbkNUTSgpLmludmVyc2UoKSk7XG4gICAgICByZXR1cm4gWyBwb2ludC54LCBwb2ludC55IF07XG4gICAgfVxuICAgIHZhciByZWN0ID0gY29udGFpbmVyLmdldEJvdW5kaW5nQ2xpZW50UmVjdCgpO1xuICAgIHJldHVybiBbIGUuY2xpZW50WCAtIHJlY3QubGVmdCAtIGNvbnRhaW5lci5jbGllbnRMZWZ0LCBlLmNsaWVudFkgLSByZWN0LnRvcCAtIGNvbnRhaW5lci5jbGllbnRUb3AgXTtcbiAgfVxuICBkMy50b3VjaCA9IGZ1bmN0aW9uKGNvbnRhaW5lciwgdG91Y2hlcywgaWRlbnRpZmllcikge1xuICAgIGlmIChhcmd1bWVudHMubGVuZ3RoIDwgMykgaWRlbnRpZmllciA9IHRvdWNoZXMsIHRvdWNoZXMgPSBkM19ldmVudFNvdXJjZSgpLmNoYW5nZWRUb3VjaGVzO1xuICAgIGlmICh0b3VjaGVzKSBmb3IgKHZhciBpID0gMCwgbiA9IHRvdWNoZXMubGVuZ3RoLCB0b3VjaDsgaSA8IG47ICsraSkge1xuICAgICAgaWYgKCh0b3VjaCA9IHRvdWNoZXNbaV0pLmlkZW50aWZpZXIgPT09IGlkZW50aWZpZXIpIHtcbiAgICAgICAgcmV0dXJuIGQzX21vdXNlUG9pbnQoY29udGFpbmVyLCB0b3VjaCk7XG4gICAgICB9XG4gICAgfVxuICB9O1xuICBkMy5iZWhhdmlvci5kcmFnID0gZnVuY3Rpb24oKSB7XG4gICAgdmFyIGV2ZW50ID0gZDNfZXZlbnREaXNwYXRjaChkcmFnLCBcImRyYWdcIiwgXCJkcmFnc3RhcnRcIiwgXCJkcmFnZW5kXCIpLCBvcmlnaW4gPSBudWxsLCBtb3VzZWRvd24gPSBkcmFnc3RhcnQoZDNfbm9vcCwgZDMubW91c2UsIGQzX3dpbmRvdywgXCJtb3VzZW1vdmVcIiwgXCJtb3VzZXVwXCIpLCB0b3VjaHN0YXJ0ID0gZHJhZ3N0YXJ0KGQzX2JlaGF2aW9yX2RyYWdUb3VjaElkLCBkMy50b3VjaCwgZDNfaWRlbnRpdHksIFwidG91Y2htb3ZlXCIsIFwidG91Y2hlbmRcIik7XG4gICAgZnVuY3Rpb24gZHJhZygpIHtcbiAgICAgIHRoaXMub24oXCJtb3VzZWRvd24uZHJhZ1wiLCBtb3VzZWRvd24pLm9uKFwidG91Y2hzdGFydC5kcmFnXCIsIHRvdWNoc3RhcnQpO1xuICAgIH1cbiAgICBmdW5jdGlvbiBkcmFnc3RhcnQoaWQsIHBvc2l0aW9uLCBzdWJqZWN0LCBtb3ZlLCBlbmQpIHtcbiAgICAgIHJldHVybiBmdW5jdGlvbigpIHtcbiAgICAgICAgdmFyIHRoYXQgPSB0aGlzLCB0YXJnZXQgPSBkMy5ldmVudC50YXJnZXQuY29ycmVzcG9uZGluZ0VsZW1lbnQgfHwgZDMuZXZlbnQudGFyZ2V0LCBwYXJlbnQgPSB0aGF0LnBhcmVudE5vZGUsIGRpc3BhdGNoID0gZXZlbnQub2YodGhhdCwgYXJndW1lbnRzKSwgZHJhZ2dlZCA9IDAsIGRyYWdJZCA9IGlkKCksIGRyYWdOYW1lID0gXCIuZHJhZ1wiICsgKGRyYWdJZCA9PSBudWxsID8gXCJcIiA6IFwiLVwiICsgZHJhZ0lkKSwgZHJhZ09mZnNldCwgZHJhZ1N1YmplY3QgPSBkMy5zZWxlY3Qoc3ViamVjdCh0YXJnZXQpKS5vbihtb3ZlICsgZHJhZ05hbWUsIG1vdmVkKS5vbihlbmQgKyBkcmFnTmFtZSwgZW5kZWQpLCBkcmFnUmVzdG9yZSA9IGQzX2V2ZW50X2RyYWdTdXBwcmVzcyh0YXJnZXQpLCBwb3NpdGlvbjAgPSBwb3NpdGlvbihwYXJlbnQsIGRyYWdJZCk7XG4gICAgICAgIGlmIChvcmlnaW4pIHtcbiAgICAgICAgICBkcmFnT2Zmc2V0ID0gb3JpZ2luLmFwcGx5KHRoYXQsIGFyZ3VtZW50cyk7XG4gICAgICAgICAgZHJhZ09mZnNldCA9IFsgZHJhZ09mZnNldC54IC0gcG9zaXRpb24wWzBdLCBkcmFnT2Zmc2V0LnkgLSBwb3NpdGlvbjBbMV0gXTtcbiAgICAgICAgfSBlbHNlIHtcbiAgICAgICAgICBkcmFnT2Zmc2V0ID0gWyAwLCAwIF07XG4gICAgICAgIH1cbiAgICAgICAgZGlzcGF0Y2goe1xuICAgICAgICAgIHR5cGU6IFwiZHJhZ3N0YXJ0XCJcbiAgICAgICAgfSk7XG4gICAgICAgIGZ1bmN0aW9uIG1vdmVkKCkge1xuICAgICAgICAgIHZhciBwb3NpdGlvbjEgPSBwb3NpdGlvbihwYXJlbnQsIGRyYWdJZCksIGR4LCBkeTtcbiAgICAgICAgICBpZiAoIXBvc2l0aW9uMSkgcmV0dXJuO1xuICAgICAgICAgIGR4ID0gcG9zaXRpb24xWzBdIC0gcG9zaXRpb24wWzBdO1xuICAgICAgICAgIGR5ID0gcG9zaXRpb24xWzFdIC0gcG9zaXRpb24wWzFdO1xuICAgICAgICAgIGRyYWdnZWQgfD0gZHggfCBkeTtcbiAgICAgICAgICBwb3NpdGlvbjAgPSBwb3NpdGlvbjE7XG4gICAgICAgICAgZGlzcGF0Y2goe1xuICAgICAgICAgICAgdHlwZTogXCJkcmFnXCIsXG4gICAgICAgICAgICB4OiBwb3NpdGlvbjFbMF0gKyBkcmFnT2Zmc2V0WzBdLFxuICAgICAgICAgICAgeTogcG9zaXRpb24xWzFdICsgZHJhZ09mZnNldFsxXSxcbiAgICAgICAgICAgIGR4OiBkeCxcbiAgICAgICAgICAgIGR5OiBkeVxuICAgICAgICAgIH0pO1xuICAgICAgICB9XG4gICAgICAgIGZ1bmN0aW9uIGVuZGVkKCkge1xuICAgICAgICAgIGlmICghcG9zaXRpb24ocGFyZW50LCBkcmFnSWQpKSByZXR1cm47XG4gICAgICAgICAgZHJhZ1N1YmplY3Qub24obW92ZSArIGRyYWdOYW1lLCBudWxsKS5vbihlbmQgKyBkcmFnTmFtZSwgbnVsbCk7XG4gICAgICAgICAgZHJhZ1Jlc3RvcmUoZHJhZ2dlZCk7XG4gICAgICAgICAgZGlzcGF0Y2goe1xuICAgICAgICAgICAgdHlwZTogXCJkcmFnZW5kXCJcbiAgICAgICAgICB9KTtcbiAgICAgICAgfVxuICAgICAgfTtcbiAgICB9XG4gICAgZHJhZy5vcmlnaW4gPSBmdW5jdGlvbih4KSB7XG4gICAgICBpZiAoIWFyZ3VtZW50cy5sZW5ndGgpIHJldHVybiBvcmlnaW47XG4gICAgICBvcmlnaW4gPSB4O1xuICAgICAgcmV0dXJuIGRyYWc7XG4gICAgfTtcbiAgICByZXR1cm4gZDMucmViaW5kKGRyYWcsIGV2ZW50LCBcIm9uXCIpO1xuICB9O1xuICBmdW5jdGlvbiBkM19iZWhhdmlvcl9kcmFnVG91Y2hJZCgpIHtcbiAgICByZXR1cm4gZDMuZXZlbnQuY2hhbmdlZFRvdWNoZXNbMF0uaWRlbnRpZmllcjtcbiAgfVxuICBkMy50b3VjaGVzID0gZnVuY3Rpb24oY29udGFpbmVyLCB0b3VjaGVzKSB7XG4gICAgaWYgKGFyZ3VtZW50cy5sZW5ndGggPCAyKSB0b3VjaGVzID0gZDNfZXZlbnRTb3VyY2UoKS50b3VjaGVzO1xuICAgIHJldHVybiB0b3VjaGVzID8gZDNfYXJyYXkodG91Y2hlcykubWFwKGZ1bmN0aW9uKHRvdWNoKSB7XG4gICAgICB2YXIgcG9pbnQgPSBkM19tb3VzZVBvaW50KGNvbnRhaW5lciwgdG91Y2gpO1xuICAgICAgcG9pbnQuaWRlbnRpZmllciA9IHRvdWNoLmlkZW50aWZpZXI7XG4gICAgICByZXR1cm4gcG9pbnQ7XG4gICAgfSkgOiBbXTtcbiAgfTtcbiAgdmFyIM61ID0gMWUtNiwgzrUyID0gzrUgKiDOtSwgz4AgPSBNYXRoLlBJLCDPhCA9IDIgKiDPgCwgz4TOtSA9IM+EIC0gzrUsIGhhbGbPgCA9IM+AIC8gMiwgZDNfcmFkaWFucyA9IM+AIC8gMTgwLCBkM19kZWdyZWVzID0gMTgwIC8gz4A7XG4gIGZ1bmN0aW9uIGQzX3Nnbih4KSB7XG4gICAgcmV0dXJuIHggPiAwID8gMSA6IHggPCAwID8gLTEgOiAwO1xuICB9XG4gIGZ1bmN0aW9uIGQzX2Nyb3NzMmQoYSwgYiwgYykge1xuICAgIHJldHVybiAoYlswXSAtIGFbMF0pICogKGNbMV0gLSBhWzFdKSAtIChiWzFdIC0gYVsxXSkgKiAoY1swXSAtIGFbMF0pO1xuICB9XG4gIGZ1bmN0aW9uIGQzX2Fjb3MoeCkge1xuICAgIHJldHVybiB4ID4gMSA/IDAgOiB4IDwgLTEgPyDPgCA6IE1hdGguYWNvcyh4KTtcbiAgfVxuICBmdW5jdGlvbiBkM19hc2luKHgpIHtcbiAgICByZXR1cm4geCA+IDEgPyBoYWxmz4AgOiB4IDwgLTEgPyAtaGFsZs+AIDogTWF0aC5hc2luKHgpO1xuICB9XG4gIGZ1bmN0aW9uIGQzX3NpbmgoeCkge1xuICAgIHJldHVybiAoKHggPSBNYXRoLmV4cCh4KSkgLSAxIC8geCkgLyAyO1xuICB9XG4gIGZ1bmN0aW9uIGQzX2Nvc2goeCkge1xuICAgIHJldHVybiAoKHggPSBNYXRoLmV4cCh4KSkgKyAxIC8geCkgLyAyO1xuICB9XG4gIGZ1bmN0aW9uIGQzX3RhbmgoeCkge1xuICAgIHJldHVybiAoKHggPSBNYXRoLmV4cCgyICogeCkpIC0gMSkgLyAoeCArIDEpO1xuICB9XG4gIGZ1bmN0aW9uIGQzX2hhdmVyc2luKHgpIHtcbiAgICByZXR1cm4gKHggPSBNYXRoLnNpbih4IC8gMikpICogeDtcbiAgfVxuICB2YXIgz4EgPSBNYXRoLlNRUlQyLCDPgTIgPSAyLCDPgTQgPSA0O1xuICBkMy5pbnRlcnBvbGF0ZVpvb20gPSBmdW5jdGlvbihwMCwgcDEpIHtcbiAgICB2YXIgdXgwID0gcDBbMF0sIHV5MCA9IHAwWzFdLCB3MCA9IHAwWzJdLCB1eDEgPSBwMVswXSwgdXkxID0gcDFbMV0sIHcxID0gcDFbMl0sIGR4ID0gdXgxIC0gdXgwLCBkeSA9IHV5MSAtIHV5MCwgZDIgPSBkeCAqIGR4ICsgZHkgKiBkeSwgaSwgUztcbiAgICBpZiAoZDIgPCDOtTIpIHtcbiAgICAgIFMgPSBNYXRoLmxvZyh3MSAvIHcwKSAvIM+BO1xuICAgICAgaSA9IGZ1bmN0aW9uKHQpIHtcbiAgICAgICAgcmV0dXJuIFsgdXgwICsgdCAqIGR4LCB1eTAgKyB0ICogZHksIHcwICogTWF0aC5leHAoz4EgKiB0ICogUykgXTtcbiAgICAgIH07XG4gICAgfSBlbHNlIHtcbiAgICAgIHZhciBkMSA9IE1hdGguc3FydChkMiksIGIwID0gKHcxICogdzEgLSB3MCAqIHcwICsgz4E0ICogZDIpIC8gKDIgKiB3MCAqIM+BMiAqIGQxKSwgYjEgPSAodzEgKiB3MSAtIHcwICogdzAgLSDPgTQgKiBkMikgLyAoMiAqIHcxICogz4EyICogZDEpLCByMCA9IE1hdGgubG9nKE1hdGguc3FydChiMCAqIGIwICsgMSkgLSBiMCksIHIxID0gTWF0aC5sb2coTWF0aC5zcXJ0KGIxICogYjEgKyAxKSAtIGIxKTtcbiAgICAgIFMgPSAocjEgLSByMCkgLyDPgTtcbiAgICAgIGkgPSBmdW5jdGlvbih0KSB7XG4gICAgICAgIHZhciBzID0gdCAqIFMsIGNvc2hyMCA9IGQzX2Nvc2gocjApLCB1ID0gdzAgLyAoz4EyICogZDEpICogKGNvc2hyMCAqIGQzX3Rhbmgoz4EgKiBzICsgcjApIC0gZDNfc2luaChyMCkpO1xuICAgICAgICByZXR1cm4gWyB1eDAgKyB1ICogZHgsIHV5MCArIHUgKiBkeSwgdzAgKiBjb3NocjAgLyBkM19jb3NoKM+BICogcyArIHIwKSBdO1xuICAgICAgfTtcbiAgICB9XG4gICAgaS5kdXJhdGlvbiA9IFMgKiAxZTM7XG4gICAgcmV0dXJuIGk7XG4gIH07XG4gIGQzLmJlaGF2aW9yLnpvb20gPSBmdW5jdGlvbigpIHtcbiAgICB2YXIgdmlldyA9IHtcbiAgICAgIHg6IDAsXG4gICAgICB5OiAwLFxuICAgICAgazogMVxuICAgIH0sIHRyYW5zbGF0ZTAsIGNlbnRlcjAsIGNlbnRlciwgc2l6ZSA9IFsgOTYwLCA1MDAgXSwgc2NhbGVFeHRlbnQgPSBkM19iZWhhdmlvcl96b29tSW5maW5pdHksIGR1cmF0aW9uID0gMjUwLCB6b29taW5nID0gMCwgbW91c2Vkb3duID0gXCJtb3VzZWRvd24uem9vbVwiLCBtb3VzZW1vdmUgPSBcIm1vdXNlbW92ZS56b29tXCIsIG1vdXNldXAgPSBcIm1vdXNldXAuem9vbVwiLCBtb3VzZXdoZWVsVGltZXIsIHRvdWNoc3RhcnQgPSBcInRvdWNoc3RhcnQuem9vbVwiLCB0b3VjaHRpbWUsIGV2ZW50ID0gZDNfZXZlbnREaXNwYXRjaCh6b29tLCBcInpvb21zdGFydFwiLCBcInpvb21cIiwgXCJ6b29tZW5kXCIpLCB4MCwgeDEsIHkwLCB5MTtcbiAgICBpZiAoIWQzX2JlaGF2aW9yX3pvb21XaGVlbCkge1xuICAgICAgZDNfYmVoYXZpb3Jfem9vbVdoZWVsID0gXCJvbndoZWVsXCIgaW4gZDNfZG9jdW1lbnQgPyAoZDNfYmVoYXZpb3Jfem9vbURlbHRhID0gZnVuY3Rpb24oKSB7XG4gICAgICAgIHJldHVybiAtZDMuZXZlbnQuZGVsdGFZICogKGQzLmV2ZW50LmRlbHRhTW9kZSA/IDEyMCA6IDEpO1xuICAgICAgfSwgXCJ3aGVlbFwiKSA6IFwib25tb3VzZXdoZWVsXCIgaW4gZDNfZG9jdW1lbnQgPyAoZDNfYmVoYXZpb3Jfem9vbURlbHRhID0gZnVuY3Rpb24oKSB7XG4gICAgICAgIHJldHVybiBkMy5ldmVudC53aGVlbERlbHRhO1xuICAgICAgfSwgXCJtb3VzZXdoZWVsXCIpIDogKGQzX2JlaGF2aW9yX3pvb21EZWx0YSA9IGZ1bmN0aW9uKCkge1xuICAgICAgICByZXR1cm4gLWQzLmV2ZW50LmRldGFpbDtcbiAgICAgIH0sIFwiTW96TW91c2VQaXhlbFNjcm9sbFwiKTtcbiAgICB9XG4gICAgZnVuY3Rpb24gem9vbShnKSB7XG4gICAgICBnLm9uKG1vdXNlZG93biwgbW91c2Vkb3duZWQpLm9uKGQzX2JlaGF2aW9yX3pvb21XaGVlbCArIFwiLnpvb21cIiwgbW91c2V3aGVlbGVkKS5vbihcImRibGNsaWNrLnpvb21cIiwgZGJsY2xpY2tlZCkub24odG91Y2hzdGFydCwgdG91Y2hzdGFydGVkKTtcbiAgICB9XG4gICAgem9vbS5ldmVudCA9IGZ1bmN0aW9uKGcpIHtcbiAgICAgIGcuZWFjaChmdW5jdGlvbigpIHtcbiAgICAgICAgdmFyIGRpc3BhdGNoID0gZXZlbnQub2YodGhpcywgYXJndW1lbnRzKSwgdmlldzEgPSB2aWV3O1xuICAgICAgICBpZiAoZDNfdHJhbnNpdGlvbkluaGVyaXRJZCkge1xuICAgICAgICAgIGQzLnNlbGVjdCh0aGlzKS50cmFuc2l0aW9uKCkuZWFjaChcInN0YXJ0Lnpvb21cIiwgZnVuY3Rpb24oKSB7XG4gICAgICAgICAgICB2aWV3ID0gdGhpcy5fX2NoYXJ0X18gfHwge1xuICAgICAgICAgICAgICB4OiAwLFxuICAgICAgICAgICAgICB5OiAwLFxuICAgICAgICAgICAgICBrOiAxXG4gICAgICAgICAgICB9O1xuICAgICAgICAgICAgem9vbXN0YXJ0ZWQoZGlzcGF0Y2gpO1xuICAgICAgICAgIH0pLnR3ZWVuKFwiem9vbTp6b29tXCIsIGZ1bmN0aW9uKCkge1xuICAgICAgICAgICAgdmFyIGR4ID0gc2l6ZVswXSwgZHkgPSBzaXplWzFdLCBjeCA9IGNlbnRlcjAgPyBjZW50ZXIwWzBdIDogZHggLyAyLCBjeSA9IGNlbnRlcjAgPyBjZW50ZXIwWzFdIDogZHkgLyAyLCBpID0gZDMuaW50ZXJwb2xhdGVab29tKFsgKGN4IC0gdmlldy54KSAvIHZpZXcuaywgKGN5IC0gdmlldy55KSAvIHZpZXcuaywgZHggLyB2aWV3LmsgXSwgWyAoY3ggLSB2aWV3MS54KSAvIHZpZXcxLmssIChjeSAtIHZpZXcxLnkpIC8gdmlldzEuaywgZHggLyB2aWV3MS5rIF0pO1xuICAgICAgICAgICAgcmV0dXJuIGZ1bmN0aW9uKHQpIHtcbiAgICAgICAgICAgICAgdmFyIGwgPSBpKHQpLCBrID0gZHggLyBsWzJdO1xuICAgICAgICAgICAgICB0aGlzLl9fY2hhcnRfXyA9IHZpZXcgPSB7XG4gICAgICAgICAgICAgICAgeDogY3ggLSBsWzBdICogayxcbiAgICAgICAgICAgICAgICB5OiBjeSAtIGxbMV0gKiBrLFxuICAgICAgICAgICAgICAgIGs6IGtcbiAgICAgICAgICAgICAgfTtcbiAgICAgICAgICAgICAgem9vbWVkKGRpc3BhdGNoKTtcbiAgICAgICAgICAgIH07XG4gICAgICAgICAgfSkuZWFjaChcImludGVycnVwdC56b29tXCIsIGZ1bmN0aW9uKCkge1xuICAgICAgICAgICAgem9vbWVuZGVkKGRpc3BhdGNoKTtcbiAgICAgICAgICB9KS5lYWNoKFwiZW5kLnpvb21cIiwgZnVuY3Rpb24oKSB7XG4gICAgICAgICAgICB6b29tZW5kZWQoZGlzcGF0Y2gpO1xuICAgICAgICAgIH0pO1xuICAgICAgICB9IGVsc2Uge1xuICAgICAgICAgIHRoaXMuX19jaGFydF9fID0gdmlldztcbiAgICAgICAgICB6b29tc3RhcnRlZChkaXNwYXRjaCk7XG4gICAgICAgICAgem9vbWVkKGRpc3BhdGNoKTtcbiAgICAgICAgICB6b29tZW5kZWQoZGlzcGF0Y2gpO1xuICAgICAgICB9XG4gICAgICB9KTtcbiAgICB9O1xuICAgIHpvb20udHJhbnNsYXRlID0gZnVuY3Rpb24oXykge1xuICAgICAgaWYgKCFhcmd1bWVudHMubGVuZ3RoKSByZXR1cm4gWyB2aWV3LngsIHZpZXcueSBdO1xuICAgICAgdmlldyA9IHtcbiAgICAgICAgeDogK19bMF0sXG4gICAgICAgIHk6ICtfWzFdLFxuICAgICAgICBrOiB2aWV3LmtcbiAgICAgIH07XG4gICAgICByZXNjYWxlKCk7XG4gICAgICByZXR1cm4gem9vbTtcbiAgICB9O1xuICAgIHpvb20uc2NhbGUgPSBmdW5jdGlvbihfKSB7XG4gICAgICBpZiAoIWFyZ3VtZW50cy5sZW5ndGgpIHJldHVybiB2aWV3Lms7XG4gICAgICB2aWV3ID0ge1xuICAgICAgICB4OiB2aWV3LngsXG4gICAgICAgIHk6IHZpZXcueSxcbiAgICAgICAgazogbnVsbFxuICAgICAgfTtcbiAgICAgIHNjYWxlVG8oK18pO1xuICAgICAgcmVzY2FsZSgpO1xuICAgICAgcmV0dXJuIHpvb207XG4gICAgfTtcbiAgICB6b29tLnNjYWxlRXh0ZW50ID0gZnVuY3Rpb24oXykge1xuICAgICAgaWYgKCFhcmd1bWVudHMubGVuZ3RoKSByZXR1cm4gc2NhbGVFeHRlbnQ7XG4gICAgICBzY2FsZUV4dGVudCA9IF8gPT0gbnVsbCA/IGQzX2JlaGF2aW9yX3pvb21JbmZpbml0eSA6IFsgK19bMF0sICtfWzFdIF07XG4gICAgICByZXR1cm4gem9vbTtcbiAgICB9O1xuICAgIHpvb20uY2VudGVyID0gZnVuY3Rpb24oXykge1xuICAgICAgaWYgKCFhcmd1bWVudHMubGVuZ3RoKSByZXR1cm4gY2VudGVyO1xuICAgICAgY2VudGVyID0gXyAmJiBbICtfWzBdLCArX1sxXSBdO1xuICAgICAgcmV0dXJuIHpvb207XG4gICAgfTtcbiAgICB6b29tLnNpemUgPSBmdW5jdGlvbihfKSB7XG4gICAgICBpZiAoIWFyZ3VtZW50cy5sZW5ndGgpIHJldHVybiBzaXplO1xuICAgICAgc2l6ZSA9IF8gJiYgWyArX1swXSwgK19bMV0gXTtcbiAgICAgIHJldHVybiB6b29tO1xuICAgIH07XG4gICAgem9vbS5kdXJhdGlvbiA9IGZ1bmN0aW9uKF8pIHtcbiAgICAgIGlmICghYXJndW1lbnRzLmxlbmd0aCkgcmV0dXJuIGR1cmF0aW9uO1xuICAgICAgZHVyYXRpb24gPSArXztcbiAgICAgIHJldHVybiB6b29tO1xuICAgIH07XG4gICAgem9vbS54ID0gZnVuY3Rpb24oeikge1xuICAgICAgaWYgKCFhcmd1bWVudHMubGVuZ3RoKSByZXR1cm4geDE7XG4gICAgICB4MSA9IHo7XG4gICAgICB4MCA9IHouY29weSgpO1xuICAgICAgdmlldyA9IHtcbiAgICAgICAgeDogMCxcbiAgICAgICAgeTogMCxcbiAgICAgICAgazogMVxuICAgICAgfTtcbiAgICAgIHJldHVybiB6b29tO1xuICAgIH07XG4gICAgem9vbS55ID0gZnVuY3Rpb24oeikge1xuICAgICAgaWYgKCFhcmd1bWVudHMubGVuZ3RoKSByZXR1cm4geTE7XG4gICAgICB5MSA9IHo7XG4gICAgICB5MCA9IHouY29weSgpO1xuICAgICAgdmlldyA9IHtcbiAgICAgICAgeDogMCxcbiAgICAgICAgeTogMCxcbiAgICAgICAgazogMVxuICAgICAgfTtcbiAgICAgIHJldHVybiB6b29tO1xuICAgIH07XG4gICAgZnVuY3Rpb24gbG9jYXRpb24ocCkge1xuICAgICAgcmV0dXJuIFsgKHBbMF0gLSB2aWV3LngpIC8gdmlldy5rLCAocFsxXSAtIHZpZXcueSkgLyB2aWV3LmsgXTtcbiAgICB9XG4gICAgZnVuY3Rpb24gcG9pbnQobCkge1xuICAgICAgcmV0dXJuIFsgbFswXSAqIHZpZXcuayArIHZpZXcueCwgbFsxXSAqIHZpZXcuayArIHZpZXcueSBdO1xuICAgIH1cbiAgICBmdW5jdGlvbiBzY2FsZVRvKHMpIHtcbiAgICAgIHZpZXcuayA9IE1hdGgubWF4KHNjYWxlRXh0ZW50WzBdLCBNYXRoLm1pbihzY2FsZUV4dGVudFsxXSwgcykpO1xuICAgIH1cbiAgICBmdW5jdGlvbiB0cmFuc2xhdGVUbyhwLCBsKSB7XG4gICAgICBsID0gcG9pbnQobCk7XG4gICAgICB2aWV3LnggKz0gcFswXSAtIGxbMF07XG4gICAgICB2aWV3LnkgKz0gcFsxXSAtIGxbMV07XG4gICAgfVxuICAgIGZ1bmN0aW9uIHpvb21Ubyh0aGF0LCBwLCBsLCBrKSB7XG4gICAgICB0aGF0Ll9fY2hhcnRfXyA9IHtcbiAgICAgICAgeDogdmlldy54LFxuICAgICAgICB5OiB2aWV3LnksXG4gICAgICAgIGs6IHZpZXcua1xuICAgICAgfTtcbiAgICAgIHNjYWxlVG8oTWF0aC5wb3coMiwgaykpO1xuICAgICAgdHJhbnNsYXRlVG8oY2VudGVyMCA9IHAsIGwpO1xuICAgICAgdGhhdCA9IGQzLnNlbGVjdCh0aGF0KTtcbiAgICAgIGlmIChkdXJhdGlvbiA+IDApIHRoYXQgPSB0aGF0LnRyYW5zaXRpb24oKS5kdXJhdGlvbihkdXJhdGlvbik7XG4gICAgICB0aGF0LmNhbGwoem9vbS5ldmVudCk7XG4gICAgfVxuICAgIGZ1bmN0aW9uIHJlc2NhbGUoKSB7XG4gICAgICBpZiAoeDEpIHgxLmRvbWFpbih4MC5yYW5nZSgpLm1hcChmdW5jdGlvbih4KSB7XG4gICAgICAgIHJldHVybiAoeCAtIHZpZXcueCkgLyB2aWV3Lms7XG4gICAgICB9KS5tYXAoeDAuaW52ZXJ0KSk7XG4gICAgICBpZiAoeTEpIHkxLmRvbWFpbih5MC5yYW5nZSgpLm1hcChmdW5jdGlvbih5KSB7XG4gICAgICAgIHJldHVybiAoeSAtIHZpZXcueSkgLyB2aWV3Lms7XG4gICAgICB9KS5tYXAoeTAuaW52ZXJ0KSk7XG4gICAgfVxuICAgIGZ1bmN0aW9uIHpvb21zdGFydGVkKGRpc3BhdGNoKSB7XG4gICAgICBpZiAoIXpvb21pbmcrKykgZGlzcGF0Y2goe1xuICAgICAgICB0eXBlOiBcInpvb21zdGFydFwiXG4gICAgICB9KTtcbiAgICB9XG4gICAgZnVuY3Rpb24gem9vbWVkKGRpc3BhdGNoKSB7XG4gICAgICByZXNjYWxlKCk7XG4gICAgICBkaXNwYXRjaCh7XG4gICAgICAgIHR5cGU6IFwiem9vbVwiLFxuICAgICAgICBzY2FsZTogdmlldy5rLFxuICAgICAgICB0cmFuc2xhdGU6IFsgdmlldy54LCB2aWV3LnkgXVxuICAgICAgfSk7XG4gICAgfVxuICAgIGZ1bmN0aW9uIHpvb21lbmRlZChkaXNwYXRjaCkge1xuICAgICAgaWYgKCEtLXpvb21pbmcpIGRpc3BhdGNoKHtcbiAgICAgICAgdHlwZTogXCJ6b29tZW5kXCJcbiAgICAgIH0pLCBjZW50ZXIwID0gbnVsbDtcbiAgICB9XG4gICAgZnVuY3Rpb24gbW91c2Vkb3duZWQoKSB7XG4gICAgICB2YXIgdGhhdCA9IHRoaXMsIGRpc3BhdGNoID0gZXZlbnQub2YodGhhdCwgYXJndW1lbnRzKSwgZHJhZ2dlZCA9IDAsIHN1YmplY3QgPSBkMy5zZWxlY3QoZDNfd2luZG93KHRoYXQpKS5vbihtb3VzZW1vdmUsIG1vdmVkKS5vbihtb3VzZXVwLCBlbmRlZCksIGxvY2F0aW9uMCA9IGxvY2F0aW9uKGQzLm1vdXNlKHRoYXQpKSwgZHJhZ1Jlc3RvcmUgPSBkM19ldmVudF9kcmFnU3VwcHJlc3ModGhhdCk7XG4gICAgICBkM19zZWxlY3Rpb25faW50ZXJydXB0LmNhbGwodGhhdCk7XG4gICAgICB6b29tc3RhcnRlZChkaXNwYXRjaCk7XG4gICAgICBmdW5jdGlvbiBtb3ZlZCgpIHtcbiAgICAgICAgZHJhZ2dlZCA9IDE7XG4gICAgICAgIHRyYW5zbGF0ZVRvKGQzLm1vdXNlKHRoYXQpLCBsb2NhdGlvbjApO1xuICAgICAgICB6b29tZWQoZGlzcGF0Y2gpO1xuICAgICAgfVxuICAgICAgZnVuY3Rpb24gZW5kZWQoKSB7XG4gICAgICAgIHN1YmplY3Qub24obW91c2Vtb3ZlLCBudWxsKS5vbihtb3VzZXVwLCBudWxsKTtcbiAgICAgICAgZHJhZ1Jlc3RvcmUoZHJhZ2dlZCk7XG4gICAgICAgIHpvb21lbmRlZChkaXNwYXRjaCk7XG4gICAgICB9XG4gICAgfVxuICAgIGZ1bmN0aW9uIHRvdWNoc3RhcnRlZCgpIHtcbiAgICAgIHZhciB0aGF0ID0gdGhpcywgZGlzcGF0Y2ggPSBldmVudC5vZih0aGF0LCBhcmd1bWVudHMpLCBsb2NhdGlvbnMwID0ge30sIGRpc3RhbmNlMCA9IDAsIHNjYWxlMCwgem9vbU5hbWUgPSBcIi56b29tLVwiICsgZDMuZXZlbnQuY2hhbmdlZFRvdWNoZXNbMF0uaWRlbnRpZmllciwgdG91Y2htb3ZlID0gXCJ0b3VjaG1vdmVcIiArIHpvb21OYW1lLCB0b3VjaGVuZCA9IFwidG91Y2hlbmRcIiArIHpvb21OYW1lLCB0YXJnZXRzID0gW10sIHN1YmplY3QgPSBkMy5zZWxlY3QodGhhdCksIGRyYWdSZXN0b3JlID0gZDNfZXZlbnRfZHJhZ1N1cHByZXNzKHRoYXQpO1xuICAgICAgc3RhcnRlZCgpO1xuICAgICAgem9vbXN0YXJ0ZWQoZGlzcGF0Y2gpO1xuICAgICAgc3ViamVjdC5vbihtb3VzZWRvd24sIG51bGwpLm9uKHRvdWNoc3RhcnQsIHN0YXJ0ZWQpO1xuICAgICAgZnVuY3Rpb24gcmVsb2NhdGUoKSB7XG4gICAgICAgIHZhciB0b3VjaGVzID0gZDMudG91Y2hlcyh0aGF0KTtcbiAgICAgICAgc2NhbGUwID0gdmlldy5rO1xuICAgICAgICB0b3VjaGVzLmZvckVhY2goZnVuY3Rpb24odCkge1xuICAgICAgICAgIGlmICh0LmlkZW50aWZpZXIgaW4gbG9jYXRpb25zMCkgbG9jYXRpb25zMFt0LmlkZW50aWZpZXJdID0gbG9jYXRpb24odCk7XG4gICAgICAgIH0pO1xuICAgICAgICByZXR1cm4gdG91Y2hlcztcbiAgICAgIH1cbiAgICAgIGZ1bmN0aW9uIHN0YXJ0ZWQoKSB7XG4gICAgICAgIHZhciB0YXJnZXQgPSBkMy5ldmVudC50YXJnZXQ7XG4gICAgICAgIGQzLnNlbGVjdCh0YXJnZXQpLm9uKHRvdWNobW92ZSwgbW92ZWQpLm9uKHRvdWNoZW5kLCBlbmRlZCk7XG4gICAgICAgIHRhcmdldHMucHVzaCh0YXJnZXQpO1xuICAgICAgICB2YXIgY2hhbmdlZCA9IGQzLmV2ZW50LmNoYW5nZWRUb3VjaGVzO1xuICAgICAgICBmb3IgKHZhciBpID0gMCwgbiA9IGNoYW5nZWQubGVuZ3RoOyBpIDwgbjsgKytpKSB7XG4gICAgICAgICAgbG9jYXRpb25zMFtjaGFuZ2VkW2ldLmlkZW50aWZpZXJdID0gbnVsbDtcbiAgICAgICAgfVxuICAgICAgICB2YXIgdG91Y2hlcyA9IHJlbG9jYXRlKCksIG5vdyA9IERhdGUubm93KCk7XG4gICAgICAgIGlmICh0b3VjaGVzLmxlbmd0aCA9PT0gMSkge1xuICAgICAgICAgIGlmIChub3cgLSB0b3VjaHRpbWUgPCA1MDApIHtcbiAgICAgICAgICAgIHZhciBwID0gdG91Y2hlc1swXTtcbiAgICAgICAgICAgIHpvb21Ubyh0aGF0LCBwLCBsb2NhdGlvbnMwW3AuaWRlbnRpZmllcl0sIE1hdGguZmxvb3IoTWF0aC5sb2codmlldy5rKSAvIE1hdGguTE4yKSArIDEpO1xuICAgICAgICAgICAgZDNfZXZlbnRQcmV2ZW50RGVmYXVsdCgpO1xuICAgICAgICAgIH1cbiAgICAgICAgICB0b3VjaHRpbWUgPSBub3c7XG4gICAgICAgIH0gZWxzZSBpZiAodG91Y2hlcy5sZW5ndGggPiAxKSB7XG4gICAgICAgICAgdmFyIHAgPSB0b3VjaGVzWzBdLCBxID0gdG91Y2hlc1sxXSwgZHggPSBwWzBdIC0gcVswXSwgZHkgPSBwWzFdIC0gcVsxXTtcbiAgICAgICAgICBkaXN0YW5jZTAgPSBkeCAqIGR4ICsgZHkgKiBkeTtcbiAgICAgICAgfVxuICAgICAgfVxuICAgICAgZnVuY3Rpb24gbW92ZWQoKSB7XG4gICAgICAgIHZhciB0b3VjaGVzID0gZDMudG91Y2hlcyh0aGF0KSwgcDAsIGwwLCBwMSwgbDE7XG4gICAgICAgIGQzX3NlbGVjdGlvbl9pbnRlcnJ1cHQuY2FsbCh0aGF0KTtcbiAgICAgICAgZm9yICh2YXIgaSA9IDAsIG4gPSB0b3VjaGVzLmxlbmd0aDsgaSA8IG47ICsraSwgbDEgPSBudWxsKSB7XG4gICAgICAgICAgcDEgPSB0b3VjaGVzW2ldO1xuICAgICAgICAgIGlmIChsMSA9IGxvY2F0aW9uczBbcDEuaWRlbnRpZmllcl0pIHtcbiAgICAgICAgICAgIGlmIChsMCkgYnJlYWs7XG4gICAgICAgICAgICBwMCA9IHAxLCBsMCA9IGwxO1xuICAgICAgICAgIH1cbiAgICAgICAgfVxuICAgICAgICBpZiAobDEpIHtcbiAgICAgICAgICB2YXIgZGlzdGFuY2UxID0gKGRpc3RhbmNlMSA9IHAxWzBdIC0gcDBbMF0pICogZGlzdGFuY2UxICsgKGRpc3RhbmNlMSA9IHAxWzFdIC0gcDBbMV0pICogZGlzdGFuY2UxLCBzY2FsZTEgPSBkaXN0YW5jZTAgJiYgTWF0aC5zcXJ0KGRpc3RhbmNlMSAvIGRpc3RhbmNlMCk7XG4gICAgICAgICAgcDAgPSBbIChwMFswXSArIHAxWzBdKSAvIDIsIChwMFsxXSArIHAxWzFdKSAvIDIgXTtcbiAgICAgICAgICBsMCA9IFsgKGwwWzBdICsgbDFbMF0pIC8gMiwgKGwwWzFdICsgbDFbMV0pIC8gMiBdO1xuICAgICAgICAgIHNjYWxlVG8oc2NhbGUxICogc2NhbGUwKTtcbiAgICAgICAgfVxuICAgICAgICB0b3VjaHRpbWUgPSBudWxsO1xuICAgICAgICB0cmFuc2xhdGVUbyhwMCwgbDApO1xuICAgICAgICB6b29tZWQoZGlzcGF0Y2gpO1xuICAgICAgfVxuICAgICAgZnVuY3Rpb24gZW5kZWQoKSB7XG4gICAgICAgIGlmIChkMy5ldmVudC50b3VjaGVzLmxlbmd0aCkge1xuICAgICAgICAgIHZhciBjaGFuZ2VkID0gZDMuZXZlbnQuY2hhbmdlZFRvdWNoZXM7XG4gICAgICAgICAgZm9yICh2YXIgaSA9IDAsIG4gPSBjaGFuZ2VkLmxlbmd0aDsgaSA8IG47ICsraSkge1xuICAgICAgICAgICAgZGVsZXRlIGxvY2F0aW9uczBbY2hhbmdlZFtpXS5pZGVudGlmaWVyXTtcbiAgICAgICAgICB9XG4gICAgICAgICAgZm9yICh2YXIgaWRlbnRpZmllciBpbiBsb2NhdGlvbnMwKSB7XG4gICAgICAgICAgICByZXR1cm4gdm9pZCByZWxvY2F0ZSgpO1xuICAgICAgICAgIH1cbiAgICAgICAgfVxuICAgICAgICBkMy5zZWxlY3RBbGwodGFyZ2V0cykub24oem9vbU5hbWUsIG51bGwpO1xuICAgICAgICBzdWJqZWN0Lm9uKG1vdXNlZG93biwgbW91c2Vkb3duZWQpLm9uKHRvdWNoc3RhcnQsIHRvdWNoc3RhcnRlZCk7XG4gICAgICAgIGRyYWdSZXN0b3JlKCk7XG4gICAgICAgIHpvb21lbmRlZChkaXNwYXRjaCk7XG4gICAgICB9XG4gICAgfVxuICAgIGZ1bmN0aW9uIG1vdXNld2hlZWxlZCgpIHtcbiAgICAgIHZhciBkaXNwYXRjaCA9IGV2ZW50Lm9mKHRoaXMsIGFyZ3VtZW50cyk7XG4gICAgICBpZiAobW91c2V3aGVlbFRpbWVyKSBjbGVhclRpbWVvdXQobW91c2V3aGVlbFRpbWVyKTsgZWxzZSBkM19zZWxlY3Rpb25faW50ZXJydXB0LmNhbGwodGhpcyksIFxuICAgICAgdHJhbnNsYXRlMCA9IGxvY2F0aW9uKGNlbnRlcjAgPSBjZW50ZXIgfHwgZDMubW91c2UodGhpcykpLCB6b29tc3RhcnRlZChkaXNwYXRjaCk7XG4gICAgICBtb3VzZXdoZWVsVGltZXIgPSBzZXRUaW1lb3V0KGZ1bmN0aW9uKCkge1xuICAgICAgICBtb3VzZXdoZWVsVGltZXIgPSBudWxsO1xuICAgICAgICB6b29tZW5kZWQoZGlzcGF0Y2gpO1xuICAgICAgfSwgNTApO1xuICAgICAgZDNfZXZlbnRQcmV2ZW50RGVmYXVsdCgpO1xuICAgICAgc2NhbGVUbyhNYXRoLnBvdygyLCBkM19iZWhhdmlvcl96b29tRGVsdGEoKSAqIC4wMDIpICogdmlldy5rKTtcbiAgICAgIHRyYW5zbGF0ZVRvKGNlbnRlcjAsIHRyYW5zbGF0ZTApO1xuICAgICAgem9vbWVkKGRpc3BhdGNoKTtcbiAgICB9XG4gICAgZnVuY3Rpb24gZGJsY2xpY2tlZCgpIHtcbiAgICAgIHZhciBwID0gZDMubW91c2UodGhpcyksIGsgPSBNYXRoLmxvZyh2aWV3LmspIC8gTWF0aC5MTjI7XG4gICAgICB6b29tVG8odGhpcywgcCwgbG9jYXRpb24ocCksIGQzLmV2ZW50LnNoaWZ0S2V5ID8gTWF0aC5jZWlsKGspIC0gMSA6IE1hdGguZmxvb3IoaykgKyAxKTtcbiAgICB9XG4gICAgcmV0dXJuIGQzLnJlYmluZCh6b29tLCBldmVudCwgXCJvblwiKTtcbiAgfTtcbiAgdmFyIGQzX2JlaGF2aW9yX3pvb21JbmZpbml0eSA9IFsgMCwgSW5maW5pdHkgXSwgZDNfYmVoYXZpb3Jfem9vbURlbHRhLCBkM19iZWhhdmlvcl96b29tV2hlZWw7XG4gIGQzLmNvbG9yID0gZDNfY29sb3I7XG4gIGZ1bmN0aW9uIGQzX2NvbG9yKCkge31cbiAgZDNfY29sb3IucHJvdG90eXBlLnRvU3RyaW5nID0gZnVuY3Rpb24oKSB7XG4gICAgcmV0dXJuIHRoaXMucmdiKCkgKyBcIlwiO1xuICB9O1xuICBkMy5oc2wgPSBkM19oc2w7XG4gIGZ1bmN0aW9uIGQzX2hzbChoLCBzLCBsKSB7XG4gICAgcmV0dXJuIHRoaXMgaW5zdGFuY2VvZiBkM19oc2wgPyB2b2lkICh0aGlzLmggPSAraCwgdGhpcy5zID0gK3MsIHRoaXMubCA9ICtsKSA6IGFyZ3VtZW50cy5sZW5ndGggPCAyID8gaCBpbnN0YW5jZW9mIGQzX2hzbCA/IG5ldyBkM19oc2woaC5oLCBoLnMsIGgubCkgOiBkM19yZ2JfcGFyc2UoXCJcIiArIGgsIGQzX3JnYl9oc2wsIGQzX2hzbCkgOiBuZXcgZDNfaHNsKGgsIHMsIGwpO1xuICB9XG4gIHZhciBkM19oc2xQcm90b3R5cGUgPSBkM19oc2wucHJvdG90eXBlID0gbmV3IGQzX2NvbG9yKCk7XG4gIGQzX2hzbFByb3RvdHlwZS5icmlnaHRlciA9IGZ1bmN0aW9uKGspIHtcbiAgICBrID0gTWF0aC5wb3coLjcsIGFyZ3VtZW50cy5sZW5ndGggPyBrIDogMSk7XG4gICAgcmV0dXJuIG5ldyBkM19oc2wodGhpcy5oLCB0aGlzLnMsIHRoaXMubCAvIGspO1xuICB9O1xuICBkM19oc2xQcm90b3R5cGUuZGFya2VyID0gZnVuY3Rpb24oaykge1xuICAgIGsgPSBNYXRoLnBvdyguNywgYXJndW1lbnRzLmxlbmd0aCA/IGsgOiAxKTtcbiAgICByZXR1cm4gbmV3IGQzX2hzbCh0aGlzLmgsIHRoaXMucywgayAqIHRoaXMubCk7XG4gIH07XG4gIGQzX2hzbFByb3RvdHlwZS5yZ2IgPSBmdW5jdGlvbigpIHtcbiAgICByZXR1cm4gZDNfaHNsX3JnYih0aGlzLmgsIHRoaXMucywgdGhpcy5sKTtcbiAgfTtcbiAgZnVuY3Rpb24gZDNfaHNsX3JnYihoLCBzLCBsKSB7XG4gICAgdmFyIG0xLCBtMjtcbiAgICBoID0gaXNOYU4oaCkgPyAwIDogKGggJT0gMzYwKSA8IDAgPyBoICsgMzYwIDogaDtcbiAgICBzID0gaXNOYU4ocykgPyAwIDogcyA8IDAgPyAwIDogcyA+IDEgPyAxIDogcztcbiAgICBsID0gbCA8IDAgPyAwIDogbCA+IDEgPyAxIDogbDtcbiAgICBtMiA9IGwgPD0gLjUgPyBsICogKDEgKyBzKSA6IGwgKyBzIC0gbCAqIHM7XG4gICAgbTEgPSAyICogbCAtIG0yO1xuICAgIGZ1bmN0aW9uIHYoaCkge1xuICAgICAgaWYgKGggPiAzNjApIGggLT0gMzYwOyBlbHNlIGlmIChoIDwgMCkgaCArPSAzNjA7XG4gICAgICBpZiAoaCA8IDYwKSByZXR1cm4gbTEgKyAobTIgLSBtMSkgKiBoIC8gNjA7XG4gICAgICBpZiAoaCA8IDE4MCkgcmV0dXJuIG0yO1xuICAgICAgaWYgKGggPCAyNDApIHJldHVybiBtMSArIChtMiAtIG0xKSAqICgyNDAgLSBoKSAvIDYwO1xuICAgICAgcmV0dXJuIG0xO1xuICAgIH1cbiAgICBmdW5jdGlvbiB2dihoKSB7XG4gICAgICByZXR1cm4gTWF0aC5yb3VuZCh2KGgpICogMjU1KTtcbiAgICB9XG4gICAgcmV0dXJuIG5ldyBkM19yZ2IodnYoaCArIDEyMCksIHZ2KGgpLCB2dihoIC0gMTIwKSk7XG4gIH1cbiAgZDMuaGNsID0gZDNfaGNsO1xuICBmdW5jdGlvbiBkM19oY2woaCwgYywgbCkge1xuICAgIHJldHVybiB0aGlzIGluc3RhbmNlb2YgZDNfaGNsID8gdm9pZCAodGhpcy5oID0gK2gsIHRoaXMuYyA9ICtjLCB0aGlzLmwgPSArbCkgOiBhcmd1bWVudHMubGVuZ3RoIDwgMiA/IGggaW5zdGFuY2VvZiBkM19oY2wgPyBuZXcgZDNfaGNsKGguaCwgaC5jLCBoLmwpIDogaCBpbnN0YW5jZW9mIGQzX2xhYiA/IGQzX2xhYl9oY2woaC5sLCBoLmEsIGguYikgOiBkM19sYWJfaGNsKChoID0gZDNfcmdiX2xhYigoaCA9IGQzLnJnYihoKSkuciwgaC5nLCBoLmIpKS5sLCBoLmEsIGguYikgOiBuZXcgZDNfaGNsKGgsIGMsIGwpO1xuICB9XG4gIHZhciBkM19oY2xQcm90b3R5cGUgPSBkM19oY2wucHJvdG90eXBlID0gbmV3IGQzX2NvbG9yKCk7XG4gIGQzX2hjbFByb3RvdHlwZS5icmlnaHRlciA9IGZ1bmN0aW9uKGspIHtcbiAgICByZXR1cm4gbmV3IGQzX2hjbCh0aGlzLmgsIHRoaXMuYywgTWF0aC5taW4oMTAwLCB0aGlzLmwgKyBkM19sYWJfSyAqIChhcmd1bWVudHMubGVuZ3RoID8gayA6IDEpKSk7XG4gIH07XG4gIGQzX2hjbFByb3RvdHlwZS5kYXJrZXIgPSBmdW5jdGlvbihrKSB7XG4gICAgcmV0dXJuIG5ldyBkM19oY2wodGhpcy5oLCB0aGlzLmMsIE1hdGgubWF4KDAsIHRoaXMubCAtIGQzX2xhYl9LICogKGFyZ3VtZW50cy5sZW5ndGggPyBrIDogMSkpKTtcbiAgfTtcbiAgZDNfaGNsUHJvdG90eXBlLnJnYiA9IGZ1bmN0aW9uKCkge1xuICAgIHJldHVybiBkM19oY2xfbGFiKHRoaXMuaCwgdGhpcy5jLCB0aGlzLmwpLnJnYigpO1xuICB9O1xuICBmdW5jdGlvbiBkM19oY2xfbGFiKGgsIGMsIGwpIHtcbiAgICBpZiAoaXNOYU4oaCkpIGggPSAwO1xuICAgIGlmIChpc05hTihjKSkgYyA9IDA7XG4gICAgcmV0dXJuIG5ldyBkM19sYWIobCwgTWF0aC5jb3MoaCAqPSBkM19yYWRpYW5zKSAqIGMsIE1hdGguc2luKGgpICogYyk7XG4gIH1cbiAgZDMubGFiID0gZDNfbGFiO1xuICBmdW5jdGlvbiBkM19sYWIobCwgYSwgYikge1xuICAgIHJldHVybiB0aGlzIGluc3RhbmNlb2YgZDNfbGFiID8gdm9pZCAodGhpcy5sID0gK2wsIHRoaXMuYSA9ICthLCB0aGlzLmIgPSArYikgOiBhcmd1bWVudHMubGVuZ3RoIDwgMiA/IGwgaW5zdGFuY2VvZiBkM19sYWIgPyBuZXcgZDNfbGFiKGwubCwgbC5hLCBsLmIpIDogbCBpbnN0YW5jZW9mIGQzX2hjbCA/IGQzX2hjbF9sYWIobC5oLCBsLmMsIGwubCkgOiBkM19yZ2JfbGFiKChsID0gZDNfcmdiKGwpKS5yLCBsLmcsIGwuYikgOiBuZXcgZDNfbGFiKGwsIGEsIGIpO1xuICB9XG4gIHZhciBkM19sYWJfSyA9IDE4O1xuICB2YXIgZDNfbGFiX1ggPSAuOTUwNDcsIGQzX2xhYl9ZID0gMSwgZDNfbGFiX1ogPSAxLjA4ODgzO1xuICB2YXIgZDNfbGFiUHJvdG90eXBlID0gZDNfbGFiLnByb3RvdHlwZSA9IG5ldyBkM19jb2xvcigpO1xuICBkM19sYWJQcm90b3R5cGUuYnJpZ2h0ZXIgPSBmdW5jdGlvbihrKSB7XG4gICAgcmV0dXJuIG5ldyBkM19sYWIoTWF0aC5taW4oMTAwLCB0aGlzLmwgKyBkM19sYWJfSyAqIChhcmd1bWVudHMubGVuZ3RoID8gayA6IDEpKSwgdGhpcy5hLCB0aGlzLmIpO1xuICB9O1xuICBkM19sYWJQcm90b3R5cGUuZGFya2VyID0gZnVuY3Rpb24oaykge1xuICAgIHJldHVybiBuZXcgZDNfbGFiKE1hdGgubWF4KDAsIHRoaXMubCAtIGQzX2xhYl9LICogKGFyZ3VtZW50cy5sZW5ndGggPyBrIDogMSkpLCB0aGlzLmEsIHRoaXMuYik7XG4gIH07XG4gIGQzX2xhYlByb3RvdHlwZS5yZ2IgPSBmdW5jdGlvbigpIHtcbiAgICByZXR1cm4gZDNfbGFiX3JnYih0aGlzLmwsIHRoaXMuYSwgdGhpcy5iKTtcbiAgfTtcbiAgZnVuY3Rpb24gZDNfbGFiX3JnYihsLCBhLCBiKSB7XG4gICAgdmFyIHkgPSAobCArIDE2KSAvIDExNiwgeCA9IHkgKyBhIC8gNTAwLCB6ID0geSAtIGIgLyAyMDA7XG4gICAgeCA9IGQzX2xhYl94eXooeCkgKiBkM19sYWJfWDtcbiAgICB5ID0gZDNfbGFiX3h5eih5KSAqIGQzX2xhYl9ZO1xuICAgIHogPSBkM19sYWJfeHl6KHopICogZDNfbGFiX1o7XG4gICAgcmV0dXJuIG5ldyBkM19yZ2IoZDNfeHl6X3JnYigzLjI0MDQ1NDIgKiB4IC0gMS41MzcxMzg1ICogeSAtIC40OTg1MzE0ICogeiksIGQzX3h5el9yZ2IoLS45NjkyNjYgKiB4ICsgMS44NzYwMTA4ICogeSArIC4wNDE1NTYgKiB6KSwgZDNfeHl6X3JnYiguMDU1NjQzNCAqIHggLSAuMjA0MDI1OSAqIHkgKyAxLjA1NzIyNTIgKiB6KSk7XG4gIH1cbiAgZnVuY3Rpb24gZDNfbGFiX2hjbChsLCBhLCBiKSB7XG4gICAgcmV0dXJuIGwgPiAwID8gbmV3IGQzX2hjbChNYXRoLmF0YW4yKGIsIGEpICogZDNfZGVncmVlcywgTWF0aC5zcXJ0KGEgKiBhICsgYiAqIGIpLCBsKSA6IG5ldyBkM19oY2woTmFOLCBOYU4sIGwpO1xuICB9XG4gIGZ1bmN0aW9uIGQzX2xhYl94eXooeCkge1xuICAgIHJldHVybiB4ID4gLjIwNjg5MzAzNCA/IHggKiB4ICogeCA6ICh4IC0gNCAvIDI5KSAvIDcuNzg3MDM3O1xuICB9XG4gIGZ1bmN0aW9uIGQzX3h5el9sYWIoeCkge1xuICAgIHJldHVybiB4ID4gLjAwODg1NiA/IE1hdGgucG93KHgsIDEgLyAzKSA6IDcuNzg3MDM3ICogeCArIDQgLyAyOTtcbiAgfVxuICBmdW5jdGlvbiBkM194eXpfcmdiKHIpIHtcbiAgICByZXR1cm4gTWF0aC5yb3VuZCgyNTUgKiAociA8PSAuMDAzMDQgPyAxMi45MiAqIHIgOiAxLjA1NSAqIE1hdGgucG93KHIsIDEgLyAyLjQpIC0gLjA1NSkpO1xuICB9XG4gIGQzLnJnYiA9IGQzX3JnYjtcbiAgZnVuY3Rpb24gZDNfcmdiKHIsIGcsIGIpIHtcbiAgICByZXR1cm4gdGhpcyBpbnN0YW5jZW9mIGQzX3JnYiA/IHZvaWQgKHRoaXMuciA9IH5+ciwgdGhpcy5nID0gfn5nLCB0aGlzLmIgPSB+fmIpIDogYXJndW1lbnRzLmxlbmd0aCA8IDIgPyByIGluc3RhbmNlb2YgZDNfcmdiID8gbmV3IGQzX3JnYihyLnIsIHIuZywgci5iKSA6IGQzX3JnYl9wYXJzZShcIlwiICsgciwgZDNfcmdiLCBkM19oc2xfcmdiKSA6IG5ldyBkM19yZ2IociwgZywgYik7XG4gIH1cbiAgZnVuY3Rpb24gZDNfcmdiTnVtYmVyKHZhbHVlKSB7XG4gICAgcmV0dXJuIG5ldyBkM19yZ2IodmFsdWUgPj4gMTYsIHZhbHVlID4+IDggJiAyNTUsIHZhbHVlICYgMjU1KTtcbiAgfVxuICBmdW5jdGlvbiBkM19yZ2JTdHJpbmcodmFsdWUpIHtcbiAgICByZXR1cm4gZDNfcmdiTnVtYmVyKHZhbHVlKSArIFwiXCI7XG4gIH1cbiAgdmFyIGQzX3JnYlByb3RvdHlwZSA9IGQzX3JnYi5wcm90b3R5cGUgPSBuZXcgZDNfY29sb3IoKTtcbiAgZDNfcmdiUHJvdG90eXBlLmJyaWdodGVyID0gZnVuY3Rpb24oaykge1xuICAgIGsgPSBNYXRoLnBvdyguNywgYXJndW1lbnRzLmxlbmd0aCA/IGsgOiAxKTtcbiAgICB2YXIgciA9IHRoaXMuciwgZyA9IHRoaXMuZywgYiA9IHRoaXMuYiwgaSA9IDMwO1xuICAgIGlmICghciAmJiAhZyAmJiAhYikgcmV0dXJuIG5ldyBkM19yZ2IoaSwgaSwgaSk7XG4gICAgaWYgKHIgJiYgciA8IGkpIHIgPSBpO1xuICAgIGlmIChnICYmIGcgPCBpKSBnID0gaTtcbiAgICBpZiAoYiAmJiBiIDwgaSkgYiA9IGk7XG4gICAgcmV0dXJuIG5ldyBkM19yZ2IoTWF0aC5taW4oMjU1LCByIC8gayksIE1hdGgubWluKDI1NSwgZyAvIGspLCBNYXRoLm1pbigyNTUsIGIgLyBrKSk7XG4gIH07XG4gIGQzX3JnYlByb3RvdHlwZS5kYXJrZXIgPSBmdW5jdGlvbihrKSB7XG4gICAgayA9IE1hdGgucG93KC43LCBhcmd1bWVudHMubGVuZ3RoID8gayA6IDEpO1xuICAgIHJldHVybiBuZXcgZDNfcmdiKGsgKiB0aGlzLnIsIGsgKiB0aGlzLmcsIGsgKiB0aGlzLmIpO1xuICB9O1xuICBkM19yZ2JQcm90b3R5cGUuaHNsID0gZnVuY3Rpb24oKSB7XG4gICAgcmV0dXJuIGQzX3JnYl9oc2wodGhpcy5yLCB0aGlzLmcsIHRoaXMuYik7XG4gIH07XG4gIGQzX3JnYlByb3RvdHlwZS50b1N0cmluZyA9IGZ1bmN0aW9uKCkge1xuICAgIHJldHVybiBcIiNcIiArIGQzX3JnYl9oZXgodGhpcy5yKSArIGQzX3JnYl9oZXgodGhpcy5nKSArIGQzX3JnYl9oZXgodGhpcy5iKTtcbiAgfTtcbiAgZnVuY3Rpb24gZDNfcmdiX2hleCh2KSB7XG4gICAgcmV0dXJuIHYgPCAxNiA/IFwiMFwiICsgTWF0aC5tYXgoMCwgdikudG9TdHJpbmcoMTYpIDogTWF0aC5taW4oMjU1LCB2KS50b1N0cmluZygxNik7XG4gIH1cbiAgZnVuY3Rpb24gZDNfcmdiX3BhcnNlKGZvcm1hdCwgcmdiLCBoc2wpIHtcbiAgICB2YXIgciA9IDAsIGcgPSAwLCBiID0gMCwgbTEsIG0yLCBjb2xvcjtcbiAgICBtMSA9IC8oW2Etel0rKVxcKCguKilcXCkvLmV4ZWMoZm9ybWF0ID0gZm9ybWF0LnRvTG93ZXJDYXNlKCkpO1xuICAgIGlmIChtMSkge1xuICAgICAgbTIgPSBtMVsyXS5zcGxpdChcIixcIik7XG4gICAgICBzd2l0Y2ggKG0xWzFdKSB7XG4gICAgICAgY2FzZSBcImhzbFwiOlxuICAgICAgICB7XG4gICAgICAgICAgcmV0dXJuIGhzbChwYXJzZUZsb2F0KG0yWzBdKSwgcGFyc2VGbG9hdChtMlsxXSkgLyAxMDAsIHBhcnNlRmxvYXQobTJbMl0pIC8gMTAwKTtcbiAgICAgICAgfVxuXG4gICAgICAgY2FzZSBcInJnYlwiOlxuICAgICAgICB7XG4gICAgICAgICAgcmV0dXJuIHJnYihkM19yZ2JfcGFyc2VOdW1iZXIobTJbMF0pLCBkM19yZ2JfcGFyc2VOdW1iZXIobTJbMV0pLCBkM19yZ2JfcGFyc2VOdW1iZXIobTJbMl0pKTtcbiAgICAgICAgfVxuICAgICAgfVxuICAgIH1cbiAgICBpZiAoY29sb3IgPSBkM19yZ2JfbmFtZXMuZ2V0KGZvcm1hdCkpIHtcbiAgICAgIHJldHVybiByZ2IoY29sb3IuciwgY29sb3IuZywgY29sb3IuYik7XG4gICAgfVxuICAgIGlmIChmb3JtYXQgIT0gbnVsbCAmJiBmb3JtYXQuY2hhckF0KDApID09PSBcIiNcIiAmJiAhaXNOYU4oY29sb3IgPSBwYXJzZUludChmb3JtYXQuc2xpY2UoMSksIDE2KSkpIHtcbiAgICAgIGlmIChmb3JtYXQubGVuZ3RoID09PSA0KSB7XG4gICAgICAgIHIgPSAoY29sb3IgJiAzODQwKSA+PiA0O1xuICAgICAgICByID0gciA+PiA0IHwgcjtcbiAgICAgICAgZyA9IGNvbG9yICYgMjQwO1xuICAgICAgICBnID0gZyA+PiA0IHwgZztcbiAgICAgICAgYiA9IGNvbG9yICYgMTU7XG4gICAgICAgIGIgPSBiIDw8IDQgfCBiO1xuICAgICAgfSBlbHNlIGlmIChmb3JtYXQubGVuZ3RoID09PSA3KSB7XG4gICAgICAgIHIgPSAoY29sb3IgJiAxNjcxMTY4MCkgPj4gMTY7XG4gICAgICAgIGcgPSAoY29sb3IgJiA2NTI4MCkgPj4gODtcbiAgICAgICAgYiA9IGNvbG9yICYgMjU1O1xuICAgICAgfVxuICAgIH1cbiAgICByZXR1cm4gcmdiKHIsIGcsIGIpO1xuICB9XG4gIGZ1bmN0aW9uIGQzX3JnYl9oc2wociwgZywgYikge1xuICAgIHZhciBtaW4gPSBNYXRoLm1pbihyIC89IDI1NSwgZyAvPSAyNTUsIGIgLz0gMjU1KSwgbWF4ID0gTWF0aC5tYXgociwgZywgYiksIGQgPSBtYXggLSBtaW4sIGgsIHMsIGwgPSAobWF4ICsgbWluKSAvIDI7XG4gICAgaWYgKGQpIHtcbiAgICAgIHMgPSBsIDwgLjUgPyBkIC8gKG1heCArIG1pbikgOiBkIC8gKDIgLSBtYXggLSBtaW4pO1xuICAgICAgaWYgKHIgPT0gbWF4KSBoID0gKGcgLSBiKSAvIGQgKyAoZyA8IGIgPyA2IDogMCk7IGVsc2UgaWYgKGcgPT0gbWF4KSBoID0gKGIgLSByKSAvIGQgKyAyOyBlbHNlIGggPSAociAtIGcpIC8gZCArIDQ7XG4gICAgICBoICo9IDYwO1xuICAgIH0gZWxzZSB7XG4gICAgICBoID0gTmFOO1xuICAgICAgcyA9IGwgPiAwICYmIGwgPCAxID8gMCA6IGg7XG4gICAgfVxuICAgIHJldHVybiBuZXcgZDNfaHNsKGgsIHMsIGwpO1xuICB9XG4gIGZ1bmN0aW9uIGQzX3JnYl9sYWIociwgZywgYikge1xuICAgIHIgPSBkM19yZ2JfeHl6KHIpO1xuICAgIGcgPSBkM19yZ2JfeHl6KGcpO1xuICAgIGIgPSBkM19yZ2JfeHl6KGIpO1xuICAgIHZhciB4ID0gZDNfeHl6X2xhYigoLjQxMjQ1NjQgKiByICsgLjM1NzU3NjEgKiBnICsgLjE4MDQzNzUgKiBiKSAvIGQzX2xhYl9YKSwgeSA9IGQzX3h5el9sYWIoKC4yMTI2NzI5ICogciArIC43MTUxNTIyICogZyArIC4wNzIxNzUgKiBiKSAvIGQzX2xhYl9ZKSwgeiA9IGQzX3h5el9sYWIoKC4wMTkzMzM5ICogciArIC4xMTkxOTIgKiBnICsgLjk1MDMwNDEgKiBiKSAvIGQzX2xhYl9aKTtcbiAgICByZXR1cm4gZDNfbGFiKDExNiAqIHkgLSAxNiwgNTAwICogKHggLSB5KSwgMjAwICogKHkgLSB6KSk7XG4gIH1cbiAgZnVuY3Rpb24gZDNfcmdiX3h5eihyKSB7XG4gICAgcmV0dXJuIChyIC89IDI1NSkgPD0gLjA0MDQ1ID8gciAvIDEyLjkyIDogTWF0aC5wb3coKHIgKyAuMDU1KSAvIDEuMDU1LCAyLjQpO1xuICB9XG4gIGZ1bmN0aW9uIGQzX3JnYl9wYXJzZU51bWJlcihjKSB7XG4gICAgdmFyIGYgPSBwYXJzZUZsb2F0KGMpO1xuICAgIHJldHVybiBjLmNoYXJBdChjLmxlbmd0aCAtIDEpID09PSBcIiVcIiA/IE1hdGgucm91bmQoZiAqIDIuNTUpIDogZjtcbiAgfVxuICB2YXIgZDNfcmdiX25hbWVzID0gZDMubWFwKHtcbiAgICBhbGljZWJsdWU6IDE1NzkyMzgzLFxuICAgIGFudGlxdWV3aGl0ZTogMTY0NDQzNzUsXG4gICAgYXF1YTogNjU1MzUsXG4gICAgYXF1YW1hcmluZTogODM4ODU2NCxcbiAgICBhenVyZTogMTU3OTQxNzUsXG4gICAgYmVpZ2U6IDE2MTE5MjYwLFxuICAgIGJpc3F1ZTogMTY3NzAyNDQsXG4gICAgYmxhY2s6IDAsXG4gICAgYmxhbmNoZWRhbG1vbmQ6IDE2NzcyMDQ1LFxuICAgIGJsdWU6IDI1NSxcbiAgICBibHVldmlvbGV0OiA5MDU1MjAyLFxuICAgIGJyb3duOiAxMDgyNDIzNCxcbiAgICBidXJseXdvb2Q6IDE0NTk2MjMxLFxuICAgIGNhZGV0Ymx1ZTogNjI2NjUyOCxcbiAgICBjaGFydHJldXNlOiA4Mzg4MzUyLFxuICAgIGNob2NvbGF0ZTogMTM3ODk0NzAsXG4gICAgY29yYWw6IDE2NzQ0MjcyLFxuICAgIGNvcm5mbG93ZXJibHVlOiA2NTkxOTgxLFxuICAgIGNvcm5zaWxrOiAxNjc3NTM4OCxcbiAgICBjcmltc29uOiAxNDQyMzEwMCxcbiAgICBjeWFuOiA2NTUzNSxcbiAgICBkYXJrYmx1ZTogMTM5LFxuICAgIGRhcmtjeWFuOiAzNTcyMyxcbiAgICBkYXJrZ29sZGVucm9kOiAxMjA5MjkzOSxcbiAgICBkYXJrZ3JheTogMTExMTkwMTcsXG4gICAgZGFya2dyZWVuOiAyNTYwMCxcbiAgICBkYXJrZ3JleTogMTExMTkwMTcsXG4gICAgZGFya2toYWtpOiAxMjQzMzI1OSxcbiAgICBkYXJrbWFnZW50YTogOTEwOTY0MyxcbiAgICBkYXJrb2xpdmVncmVlbjogNTU5Nzk5OSxcbiAgICBkYXJrb3JhbmdlOiAxNjc0NzUyMCxcbiAgICBkYXJrb3JjaGlkOiAxMDA0MDAxMixcbiAgICBkYXJrcmVkOiA5MTA5NTA0LFxuICAgIGRhcmtzYWxtb246IDE1MzA4NDEwLFxuICAgIGRhcmtzZWFncmVlbjogOTQxOTkxOSxcbiAgICBkYXJrc2xhdGVibHVlOiA0NzM0MzQ3LFxuICAgIGRhcmtzbGF0ZWdyYXk6IDMxMDA0OTUsXG4gICAgZGFya3NsYXRlZ3JleTogMzEwMDQ5NSxcbiAgICBkYXJrdHVycXVvaXNlOiA1Mjk0NSxcbiAgICBkYXJrdmlvbGV0OiA5Njk5NTM5LFxuICAgIGRlZXBwaW5rOiAxNjcxNjk0NyxcbiAgICBkZWVwc2t5Ymx1ZTogNDkxNTEsXG4gICAgZGltZ3JheTogNjkwODI2NSxcbiAgICBkaW1ncmV5OiA2OTA4MjY1LFxuICAgIGRvZGdlcmJsdWU6IDIwMDMxOTksXG4gICAgZmlyZWJyaWNrOiAxMTY3NDE0NixcbiAgICBmbG9yYWx3aGl0ZTogMTY3NzU5MjAsXG4gICAgZm9yZXN0Z3JlZW46IDIyNjM4NDIsXG4gICAgZnVjaHNpYTogMTY3MTE5MzUsXG4gICAgZ2FpbnNib3JvOiAxNDQ3NDQ2MCxcbiAgICBnaG9zdHdoaXRlOiAxNjMxNjY3MSxcbiAgICBnb2xkOiAxNjc2NjcyMCxcbiAgICBnb2xkZW5yb2Q6IDE0MzI5MTIwLFxuICAgIGdyYXk6IDg0MjE1MDQsXG4gICAgZ3JlZW46IDMyNzY4LFxuICAgIGdyZWVueWVsbG93OiAxMTQwMzA1NSxcbiAgICBncmV5OiA4NDIxNTA0LFxuICAgIGhvbmV5ZGV3OiAxNTc5NDE2MCxcbiAgICBob3RwaW5rOiAxNjczODc0MCxcbiAgICBpbmRpYW5yZWQ6IDEzNDU4NTI0LFxuICAgIGluZGlnbzogNDkxNTMzMCxcbiAgICBpdm9yeTogMTY3NzcyMDAsXG4gICAga2hha2k6IDE1Nzg3NjYwLFxuICAgIGxhdmVuZGVyOiAxNTEzMjQxMCxcbiAgICBsYXZlbmRlcmJsdXNoOiAxNjc3MzM2NSxcbiAgICBsYXduZ3JlZW46IDgxOTA5NzYsXG4gICAgbGVtb25jaGlmZm9uOiAxNjc3NTg4NSxcbiAgICBsaWdodGJsdWU6IDExMzkzMjU0LFxuICAgIGxpZ2h0Y29yYWw6IDE1NzYxNTM2LFxuICAgIGxpZ2h0Y3lhbjogMTQ3NDU1OTksXG4gICAgbGlnaHRnb2xkZW5yb2R5ZWxsb3c6IDE2NDQ4MjEwLFxuICAgIGxpZ2h0Z3JheTogMTM4ODIzMjMsXG4gICAgbGlnaHRncmVlbjogOTQ5ODI1NixcbiAgICBsaWdodGdyZXk6IDEzODgyMzIzLFxuICAgIGxpZ2h0cGluazogMTY3NTg0NjUsXG4gICAgbGlnaHRzYWxtb246IDE2NzUyNzYyLFxuICAgIGxpZ2h0c2VhZ3JlZW46IDIxNDI4OTAsXG4gICAgbGlnaHRza3libHVlOiA4OTAwMzQ2LFxuICAgIGxpZ2h0c2xhdGVncmF5OiA3ODMzNzUzLFxuICAgIGxpZ2h0c2xhdGVncmV5OiA3ODMzNzUzLFxuICAgIGxpZ2h0c3RlZWxibHVlOiAxMTU4NDczNCxcbiAgICBsaWdodHllbGxvdzogMTY3NzcxODQsXG4gICAgbGltZTogNjUyODAsXG4gICAgbGltZWdyZWVuOiAzMzI5MzMwLFxuICAgIGxpbmVuOiAxNjQ0NTY3MCxcbiAgICBtYWdlbnRhOiAxNjcxMTkzNSxcbiAgICBtYXJvb246IDgzODg2MDgsXG4gICAgbWVkaXVtYXF1YW1hcmluZTogNjczNzMyMixcbiAgICBtZWRpdW1ibHVlOiAyMDUsXG4gICAgbWVkaXVtb3JjaGlkOiAxMjIxMTY2NyxcbiAgICBtZWRpdW1wdXJwbGU6IDk2NjI2ODMsXG4gICAgbWVkaXVtc2VhZ3JlZW46IDM5NzgwOTcsXG4gICAgbWVkaXVtc2xhdGVibHVlOiA4MDg3NzkwLFxuICAgIG1lZGl1bXNwcmluZ2dyZWVuOiA2NDE1NCxcbiAgICBtZWRpdW10dXJxdW9pc2U6IDQ3NzIzMDAsXG4gICAgbWVkaXVtdmlvbGV0cmVkOiAxMzA0NzE3MyxcbiAgICBtaWRuaWdodGJsdWU6IDE2NDQ5MTIsXG4gICAgbWludGNyZWFtOiAxNjEyMTg1MCxcbiAgICBtaXN0eXJvc2U6IDE2NzcwMjczLFxuICAgIG1vY2Nhc2luOiAxNjc3MDIyOSxcbiAgICBuYXZham93aGl0ZTogMTY3Njg2ODUsXG4gICAgbmF2eTogMTI4LFxuICAgIG9sZGxhY2U6IDE2NjQzNTU4LFxuICAgIG9saXZlOiA4NDIxMzc2LFxuICAgIG9saXZlZHJhYjogNzA0ODczOSxcbiAgICBvcmFuZ2U6IDE2NzUzOTIwLFxuICAgIG9yYW5nZXJlZDogMTY3MjkzNDQsXG4gICAgb3JjaGlkOiAxNDMxNTczNCxcbiAgICBwYWxlZ29sZGVucm9kOiAxNTY1NzEzMCxcbiAgICBwYWxlZ3JlZW46IDEwMDI1ODgwLFxuICAgIHBhbGV0dXJxdW9pc2U6IDExNTI5OTY2LFxuICAgIHBhbGV2aW9sZXRyZWQ6IDE0MzgxMjAzLFxuICAgIHBhcGF5YXdoaXA6IDE2NzczMDc3LFxuICAgIHBlYWNocHVmZjogMTY3Njc2NzMsXG4gICAgcGVydTogMTM0Njg5OTEsXG4gICAgcGluazogMTY3NjEwMzUsXG4gICAgcGx1bTogMTQ1MjQ2MzcsXG4gICAgcG93ZGVyYmx1ZTogMTE1OTE5MTAsXG4gICAgcHVycGxlOiA4Mzg4NzM2LFxuICAgIHJlYmVjY2FwdXJwbGU6IDY2OTc4ODEsXG4gICAgcmVkOiAxNjcxMTY4MCxcbiAgICByb3N5YnJvd246IDEyMzU3NTE5LFxuICAgIHJveWFsYmx1ZTogNDI4Njk0NSxcbiAgICBzYWRkbGVicm93bjogOTEyNzE4NyxcbiAgICBzYWxtb246IDE2NDE2ODgyLFxuICAgIHNhbmR5YnJvd246IDE2MDMyODY0LFxuICAgIHNlYWdyZWVuOiAzMDUwMzI3LFxuICAgIHNlYXNoZWxsOiAxNjc3NDYzOCxcbiAgICBzaWVubmE6IDEwNTA2Nzk3LFxuICAgIHNpbHZlcjogMTI2MzIyNTYsXG4gICAgc2t5Ymx1ZTogODkwMDMzMSxcbiAgICBzbGF0ZWJsdWU6IDY5NzAwNjEsXG4gICAgc2xhdGVncmF5OiA3MzcyOTQ0LFxuICAgIHNsYXRlZ3JleTogNzM3Mjk0NCxcbiAgICBzbm93OiAxNjc3NTkzMCxcbiAgICBzcHJpbmdncmVlbjogNjU0MDcsXG4gICAgc3RlZWxibHVlOiA0NjIwOTgwLFxuICAgIHRhbjogMTM4MDg3ODAsXG4gICAgdGVhbDogMzI4OTYsXG4gICAgdGhpc3RsZTogMTQyMDQ4ODgsXG4gICAgdG9tYXRvOiAxNjczNzA5NSxcbiAgICB0dXJxdW9pc2U6IDQyNTE4NTYsXG4gICAgdmlvbGV0OiAxNTYzMTA4NixcbiAgICB3aGVhdDogMTYxMTMzMzEsXG4gICAgd2hpdGU6IDE2Nzc3MjE1LFxuICAgIHdoaXRlc21va2U6IDE2MTE5Mjg1LFxuICAgIHllbGxvdzogMTY3NzY5NjAsXG4gICAgeWVsbG93Z3JlZW46IDEwMTQ1MDc0XG4gIH0pO1xuICBkM19yZ2JfbmFtZXMuZm9yRWFjaChmdW5jdGlvbihrZXksIHZhbHVlKSB7XG4gICAgZDNfcmdiX25hbWVzLnNldChrZXksIGQzX3JnYk51bWJlcih2YWx1ZSkpO1xuICB9KTtcbiAgZnVuY3Rpb24gZDNfZnVuY3Rvcih2KSB7XG4gICAgcmV0dXJuIHR5cGVvZiB2ID09PSBcImZ1bmN0aW9uXCIgPyB2IDogZnVuY3Rpb24oKSB7XG4gICAgICByZXR1cm4gdjtcbiAgICB9O1xuICB9XG4gIGQzLmZ1bmN0b3IgPSBkM19mdW5jdG9yO1xuICBkMy54aHIgPSBkM194aHJUeXBlKGQzX2lkZW50aXR5KTtcbiAgZnVuY3Rpb24gZDNfeGhyVHlwZShyZXNwb25zZSkge1xuICAgIHJldHVybiBmdW5jdGlvbih1cmwsIG1pbWVUeXBlLCBjYWxsYmFjaykge1xuICAgICAgaWYgKGFyZ3VtZW50cy5sZW5ndGggPT09IDIgJiYgdHlwZW9mIG1pbWVUeXBlID09PSBcImZ1bmN0aW9uXCIpIGNhbGxiYWNrID0gbWltZVR5cGUsIFxuICAgICAgbWltZVR5cGUgPSBudWxsO1xuICAgICAgcmV0dXJuIGQzX3hocih1cmwsIG1pbWVUeXBlLCByZXNwb25zZSwgY2FsbGJhY2spO1xuICAgIH07XG4gIH1cbiAgZnVuY3Rpb24gZDNfeGhyKHVybCwgbWltZVR5cGUsIHJlc3BvbnNlLCBjYWxsYmFjaykge1xuICAgIHZhciB4aHIgPSB7fSwgZGlzcGF0Y2ggPSBkMy5kaXNwYXRjaChcImJlZm9yZXNlbmRcIiwgXCJwcm9ncmVzc1wiLCBcImxvYWRcIiwgXCJlcnJvclwiKSwgaGVhZGVycyA9IHt9LCByZXF1ZXN0ID0gbmV3IFhNTEh0dHBSZXF1ZXN0KCksIHJlc3BvbnNlVHlwZSA9IG51bGw7XG4gICAgaWYgKHRoaXMuWERvbWFpblJlcXVlc3QgJiYgIShcIndpdGhDcmVkZW50aWFsc1wiIGluIHJlcXVlc3QpICYmIC9eKGh0dHAocyk/Oik/XFwvXFwvLy50ZXN0KHVybCkpIHJlcXVlc3QgPSBuZXcgWERvbWFpblJlcXVlc3QoKTtcbiAgICBcIm9ubG9hZFwiIGluIHJlcXVlc3QgPyByZXF1ZXN0Lm9ubG9hZCA9IHJlcXVlc3Qub25lcnJvciA9IHJlc3BvbmQgOiByZXF1ZXN0Lm9ucmVhZHlzdGF0ZWNoYW5nZSA9IGZ1bmN0aW9uKCkge1xuICAgICAgcmVxdWVzdC5yZWFkeVN0YXRlID4gMyAmJiByZXNwb25kKCk7XG4gICAgfTtcbiAgICBmdW5jdGlvbiByZXNwb25kKCkge1xuICAgICAgdmFyIHN0YXR1cyA9IHJlcXVlc3Quc3RhdHVzLCByZXN1bHQ7XG4gICAgICBpZiAoIXN0YXR1cyAmJiBkM194aHJIYXNSZXNwb25zZShyZXF1ZXN0KSB8fCBzdGF0dXMgPj0gMjAwICYmIHN0YXR1cyA8IDMwMCB8fCBzdGF0dXMgPT09IDMwNCkge1xuICAgICAgICB0cnkge1xuICAgICAgICAgIHJlc3VsdCA9IHJlc3BvbnNlLmNhbGwoeGhyLCByZXF1ZXN0KTtcbiAgICAgICAgfSBjYXRjaCAoZSkge1xuICAgICAgICAgIGRpc3BhdGNoLmVycm9yLmNhbGwoeGhyLCBlKTtcbiAgICAgICAgICByZXR1cm47XG4gICAgICAgIH1cbiAgICAgICAgZGlzcGF0Y2gubG9hZC5jYWxsKHhociwgcmVzdWx0KTtcbiAgICAgIH0gZWxzZSB7XG4gICAgICAgIGRpc3BhdGNoLmVycm9yLmNhbGwoeGhyLCByZXF1ZXN0KTtcbiAgICAgIH1cbiAgICB9XG4gICAgcmVxdWVzdC5vbnByb2dyZXNzID0gZnVuY3Rpb24oZXZlbnQpIHtcbiAgICAgIHZhciBvID0gZDMuZXZlbnQ7XG4gICAgICBkMy5ldmVudCA9IGV2ZW50O1xuICAgICAgdHJ5IHtcbiAgICAgICAgZGlzcGF0Y2gucHJvZ3Jlc3MuY2FsbCh4aHIsIHJlcXVlc3QpO1xuICAgICAgfSBmaW5hbGx5IHtcbiAgICAgICAgZDMuZXZlbnQgPSBvO1xuICAgICAgfVxuICAgIH07XG4gICAgeGhyLmhlYWRlciA9IGZ1bmN0aW9uKG5hbWUsIHZhbHVlKSB7XG4gICAgICBuYW1lID0gKG5hbWUgKyBcIlwiKS50b0xvd2VyQ2FzZSgpO1xuICAgICAgaWYgKGFyZ3VtZW50cy5sZW5ndGggPCAyKSByZXR1cm4gaGVhZGVyc1tuYW1lXTtcbiAgICAgIGlmICh2YWx1ZSA9PSBudWxsKSBkZWxldGUgaGVhZGVyc1tuYW1lXTsgZWxzZSBoZWFkZXJzW25hbWVdID0gdmFsdWUgKyBcIlwiO1xuICAgICAgcmV0dXJuIHhocjtcbiAgICB9O1xuICAgIHhoci5taW1lVHlwZSA9IGZ1bmN0aW9uKHZhbHVlKSB7XG4gICAgICBpZiAoIWFyZ3VtZW50cy5sZW5ndGgpIHJldHVybiBtaW1lVHlwZTtcbiAgICAgIG1pbWVUeXBlID0gdmFsdWUgPT0gbnVsbCA/IG51bGwgOiB2YWx1ZSArIFwiXCI7XG4gICAgICByZXR1cm4geGhyO1xuICAgIH07XG4gICAgeGhyLnJlc3BvbnNlVHlwZSA9IGZ1bmN0aW9uKHZhbHVlKSB7XG4gICAgICBpZiAoIWFyZ3VtZW50cy5sZW5ndGgpIHJldHVybiByZXNwb25zZVR5cGU7XG4gICAgICByZXNwb25zZVR5cGUgPSB2YWx1ZTtcbiAgICAgIHJldHVybiB4aHI7XG4gICAgfTtcbiAgICB4aHIucmVzcG9uc2UgPSBmdW5jdGlvbih2YWx1ZSkge1xuICAgICAgcmVzcG9uc2UgPSB2YWx1ZTtcbiAgICAgIHJldHVybiB4aHI7XG4gICAgfTtcbiAgICBbIFwiZ2V0XCIsIFwicG9zdFwiIF0uZm9yRWFjaChmdW5jdGlvbihtZXRob2QpIHtcbiAgICAgIHhoclttZXRob2RdID0gZnVuY3Rpb24oKSB7XG4gICAgICAgIHJldHVybiB4aHIuc2VuZC5hcHBseSh4aHIsIFsgbWV0aG9kIF0uY29uY2F0KGQzX2FycmF5KGFyZ3VtZW50cykpKTtcbiAgICAgIH07XG4gICAgfSk7XG4gICAgeGhyLnNlbmQgPSBmdW5jdGlvbihtZXRob2QsIGRhdGEsIGNhbGxiYWNrKSB7XG4gICAgICBpZiAoYXJndW1lbnRzLmxlbmd0aCA9PT0gMiAmJiB0eXBlb2YgZGF0YSA9PT0gXCJmdW5jdGlvblwiKSBjYWxsYmFjayA9IGRhdGEsIGRhdGEgPSBudWxsO1xuICAgICAgcmVxdWVzdC5vcGVuKG1ldGhvZCwgdXJsLCB0cnVlKTtcbiAgICAgIGlmIChtaW1lVHlwZSAhPSBudWxsICYmICEoXCJhY2NlcHRcIiBpbiBoZWFkZXJzKSkgaGVhZGVyc1tcImFjY2VwdFwiXSA9IG1pbWVUeXBlICsgXCIsKi8qXCI7XG4gICAgICBpZiAocmVxdWVzdC5zZXRSZXF1ZXN0SGVhZGVyKSBmb3IgKHZhciBuYW1lIGluIGhlYWRlcnMpIHJlcXVlc3Quc2V0UmVxdWVzdEhlYWRlcihuYW1lLCBoZWFkZXJzW25hbWVdKTtcbiAgICAgIGlmIChtaW1lVHlwZSAhPSBudWxsICYmIHJlcXVlc3Qub3ZlcnJpZGVNaW1lVHlwZSkgcmVxdWVzdC5vdmVycmlkZU1pbWVUeXBlKG1pbWVUeXBlKTtcbiAgICAgIGlmIChyZXNwb25zZVR5cGUgIT0gbnVsbCkgcmVxdWVzdC5yZXNwb25zZVR5cGUgPSByZXNwb25zZVR5cGU7XG4gICAgICBpZiAoY2FsbGJhY2sgIT0gbnVsbCkgeGhyLm9uKFwiZXJyb3JcIiwgY2FsbGJhY2spLm9uKFwibG9hZFwiLCBmdW5jdGlvbihyZXF1ZXN0KSB7XG4gICAgICAgIGNhbGxiYWNrKG51bGwsIHJlcXVlc3QpO1xuICAgICAgfSk7XG4gICAgICBkaXNwYXRjaC5iZWZvcmVzZW5kLmNhbGwoeGhyLCByZXF1ZXN0KTtcbiAgICAgIHJlcXVlc3Quc2VuZChkYXRhID09IG51bGwgPyBudWxsIDogZGF0YSk7XG4gICAgICByZXR1cm4geGhyO1xuICAgIH07XG4gICAgeGhyLmFib3J0ID0gZnVuY3Rpb24oKSB7XG4gICAgICByZXF1ZXN0LmFib3J0KCk7XG4gICAgICByZXR1cm4geGhyO1xuICAgIH07XG4gICAgZDMucmViaW5kKHhociwgZGlzcGF0Y2gsIFwib25cIik7XG4gICAgcmV0dXJuIGNhbGxiYWNrID09IG51bGwgPyB4aHIgOiB4aHIuZ2V0KGQzX3hocl9maXhDYWxsYmFjayhjYWxsYmFjaykpO1xuICB9XG4gIGZ1bmN0aW9uIGQzX3hocl9maXhDYWxsYmFjayhjYWxsYmFjaykge1xuICAgIHJldHVybiBjYWxsYmFjay5sZW5ndGggPT09IDEgPyBmdW5jdGlvbihlcnJvciwgcmVxdWVzdCkge1xuICAgICAgY2FsbGJhY2soZXJyb3IgPT0gbnVsbCA/IHJlcXVlc3QgOiBudWxsKTtcbiAgICB9IDogY2FsbGJhY2s7XG4gIH1cbiAgZnVuY3Rpb24gZDNfeGhySGFzUmVzcG9uc2UocmVxdWVzdCkge1xuICAgIHZhciB0eXBlID0gcmVxdWVzdC5yZXNwb25zZVR5cGU7XG4gICAgcmV0dXJuIHR5cGUgJiYgdHlwZSAhPT0gXCJ0ZXh0XCIgPyByZXF1ZXN0LnJlc3BvbnNlIDogcmVxdWVzdC5yZXNwb25zZVRleHQ7XG4gIH1cbiAgZDMuZHN2ID0gZnVuY3Rpb24oZGVsaW1pdGVyLCBtaW1lVHlwZSkge1xuICAgIHZhciByZUZvcm1hdCA9IG5ldyBSZWdFeHAoJ1tcIicgKyBkZWxpbWl0ZXIgKyBcIlxcbl1cIiksIGRlbGltaXRlckNvZGUgPSBkZWxpbWl0ZXIuY2hhckNvZGVBdCgwKTtcbiAgICBmdW5jdGlvbiBkc3YodXJsLCByb3csIGNhbGxiYWNrKSB7XG4gICAgICBpZiAoYXJndW1lbnRzLmxlbmd0aCA8IDMpIGNhbGxiYWNrID0gcm93LCByb3cgPSBudWxsO1xuICAgICAgdmFyIHhociA9IGQzX3hocih1cmwsIG1pbWVUeXBlLCByb3cgPT0gbnVsbCA/IHJlc3BvbnNlIDogdHlwZWRSZXNwb25zZShyb3cpLCBjYWxsYmFjayk7XG4gICAgICB4aHIucm93ID0gZnVuY3Rpb24oXykge1xuICAgICAgICByZXR1cm4gYXJndW1lbnRzLmxlbmd0aCA/IHhoci5yZXNwb25zZSgocm93ID0gXykgPT0gbnVsbCA/IHJlc3BvbnNlIDogdHlwZWRSZXNwb25zZShfKSkgOiByb3c7XG4gICAgICB9O1xuICAgICAgcmV0dXJuIHhocjtcbiAgICB9XG4gICAgZnVuY3Rpb24gcmVzcG9uc2UocmVxdWVzdCkge1xuICAgICAgcmV0dXJuIGRzdi5wYXJzZShyZXF1ZXN0LnJlc3BvbnNlVGV4dCk7XG4gICAgfVxuICAgIGZ1bmN0aW9uIHR5cGVkUmVzcG9uc2UoZikge1xuICAgICAgcmV0dXJuIGZ1bmN0aW9uKHJlcXVlc3QpIHtcbiAgICAgICAgcmV0dXJuIGRzdi5wYXJzZShyZXF1ZXN0LnJlc3BvbnNlVGV4dCwgZik7XG4gICAgICB9O1xuICAgIH1cbiAgICBkc3YucGFyc2UgPSBmdW5jdGlvbih0ZXh0LCBmKSB7XG4gICAgICB2YXIgbztcbiAgICAgIHJldHVybiBkc3YucGFyc2VSb3dzKHRleHQsIGZ1bmN0aW9uKHJvdywgaSkge1xuICAgICAgICBpZiAobykgcmV0dXJuIG8ocm93LCBpIC0gMSk7XG4gICAgICAgIHZhciBhID0gbmV3IEZ1bmN0aW9uKFwiZFwiLCBcInJldHVybiB7XCIgKyByb3cubWFwKGZ1bmN0aW9uKG5hbWUsIGkpIHtcbiAgICAgICAgICByZXR1cm4gSlNPTi5zdHJpbmdpZnkobmFtZSkgKyBcIjogZFtcIiArIGkgKyBcIl1cIjtcbiAgICAgICAgfSkuam9pbihcIixcIikgKyBcIn1cIik7XG4gICAgICAgIG8gPSBmID8gZnVuY3Rpb24ocm93LCBpKSB7XG4gICAgICAgICAgcmV0dXJuIGYoYShyb3cpLCBpKTtcbiAgICAgICAgfSA6IGE7XG4gICAgICB9KTtcbiAgICB9O1xuICAgIGRzdi5wYXJzZVJvd3MgPSBmdW5jdGlvbih0ZXh0LCBmKSB7XG4gICAgICB2YXIgRU9MID0ge30sIEVPRiA9IHt9LCByb3dzID0gW10sIE4gPSB0ZXh0Lmxlbmd0aCwgSSA9IDAsIG4gPSAwLCB0LCBlb2w7XG4gICAgICBmdW5jdGlvbiB0b2tlbigpIHtcbiAgICAgICAgaWYgKEkgPj0gTikgcmV0dXJuIEVPRjtcbiAgICAgICAgaWYgKGVvbCkgcmV0dXJuIGVvbCA9IGZhbHNlLCBFT0w7XG4gICAgICAgIHZhciBqID0gSTtcbiAgICAgICAgaWYgKHRleHQuY2hhckNvZGVBdChqKSA9PT0gMzQpIHtcbiAgICAgICAgICB2YXIgaSA9IGo7XG4gICAgICAgICAgd2hpbGUgKGkrKyA8IE4pIHtcbiAgICAgICAgICAgIGlmICh0ZXh0LmNoYXJDb2RlQXQoaSkgPT09IDM0KSB7XG4gICAgICAgICAgICAgIGlmICh0ZXh0LmNoYXJDb2RlQXQoaSArIDEpICE9PSAzNCkgYnJlYWs7XG4gICAgICAgICAgICAgICsraTtcbiAgICAgICAgICAgIH1cbiAgICAgICAgICB9XG4gICAgICAgICAgSSA9IGkgKyAyO1xuICAgICAgICAgIHZhciBjID0gdGV4dC5jaGFyQ29kZUF0KGkgKyAxKTtcbiAgICAgICAgICBpZiAoYyA9PT0gMTMpIHtcbiAgICAgICAgICAgIGVvbCA9IHRydWU7XG4gICAgICAgICAgICBpZiAodGV4dC5jaGFyQ29kZUF0KGkgKyAyKSA9PT0gMTApICsrSTtcbiAgICAgICAgICB9IGVsc2UgaWYgKGMgPT09IDEwKSB7XG4gICAgICAgICAgICBlb2wgPSB0cnVlO1xuICAgICAgICAgIH1cbiAgICAgICAgICByZXR1cm4gdGV4dC5zbGljZShqICsgMSwgaSkucmVwbGFjZSgvXCJcIi9nLCAnXCInKTtcbiAgICAgICAgfVxuICAgICAgICB3aGlsZSAoSSA8IE4pIHtcbiAgICAgICAgICB2YXIgYyA9IHRleHQuY2hhckNvZGVBdChJKyspLCBrID0gMTtcbiAgICAgICAgICBpZiAoYyA9PT0gMTApIGVvbCA9IHRydWU7IGVsc2UgaWYgKGMgPT09IDEzKSB7XG4gICAgICAgICAgICBlb2wgPSB0cnVlO1xuICAgICAgICAgICAgaWYgKHRleHQuY2hhckNvZGVBdChJKSA9PT0gMTApICsrSSwgKytrO1xuICAgICAgICAgIH0gZWxzZSBpZiAoYyAhPT0gZGVsaW1pdGVyQ29kZSkgY29udGludWU7XG4gICAgICAgICAgcmV0dXJuIHRleHQuc2xpY2UoaiwgSSAtIGspO1xuICAgICAgICB9XG4gICAgICAgIHJldHVybiB0ZXh0LnNsaWNlKGopO1xuICAgICAgfVxuICAgICAgd2hpbGUgKCh0ID0gdG9rZW4oKSkgIT09IEVPRikge1xuICAgICAgICB2YXIgYSA9IFtdO1xuICAgICAgICB3aGlsZSAodCAhPT0gRU9MICYmIHQgIT09IEVPRikge1xuICAgICAgICAgIGEucHVzaCh0KTtcbiAgICAgICAgICB0ID0gdG9rZW4oKTtcbiAgICAgICAgfVxuICAgICAgICBpZiAoZiAmJiAoYSA9IGYoYSwgbisrKSkgPT0gbnVsbCkgY29udGludWU7XG4gICAgICAgIHJvd3MucHVzaChhKTtcbiAgICAgIH1cbiAgICAgIHJldHVybiByb3dzO1xuICAgIH07XG4gICAgZHN2LmZvcm1hdCA9IGZ1bmN0aW9uKHJvd3MpIHtcbiAgICAgIGlmIChBcnJheS5pc0FycmF5KHJvd3NbMF0pKSByZXR1cm4gZHN2LmZvcm1hdFJvd3Mocm93cyk7XG4gICAgICB2YXIgZmllbGRTZXQgPSBuZXcgZDNfU2V0KCksIGZpZWxkcyA9IFtdO1xuICAgICAgcm93cy5mb3JFYWNoKGZ1bmN0aW9uKHJvdykge1xuICAgICAgICBmb3IgKHZhciBmaWVsZCBpbiByb3cpIHtcbiAgICAgICAgICBpZiAoIWZpZWxkU2V0LmhhcyhmaWVsZCkpIHtcbiAgICAgICAgICAgIGZpZWxkcy5wdXNoKGZpZWxkU2V0LmFkZChmaWVsZCkpO1xuICAgICAgICAgIH1cbiAgICAgICAgfVxuICAgICAgfSk7XG4gICAgICByZXR1cm4gWyBmaWVsZHMubWFwKGZvcm1hdFZhbHVlKS5qb2luKGRlbGltaXRlcikgXS5jb25jYXQocm93cy5tYXAoZnVuY3Rpb24ocm93KSB7XG4gICAgICAgIHJldHVybiBmaWVsZHMubWFwKGZ1bmN0aW9uKGZpZWxkKSB7XG4gICAgICAgICAgcmV0dXJuIGZvcm1hdFZhbHVlKHJvd1tmaWVsZF0pO1xuICAgICAgICB9KS5qb2luKGRlbGltaXRlcik7XG4gICAgICB9KSkuam9pbihcIlxcblwiKTtcbiAgICB9O1xuICAgIGRzdi5mb3JtYXRSb3dzID0gZnVuY3Rpb24ocm93cykge1xuICAgICAgcmV0dXJuIHJvd3MubWFwKGZvcm1hdFJvdykuam9pbihcIlxcblwiKTtcbiAgICB9O1xuICAgIGZ1bmN0aW9uIGZvcm1hdFJvdyhyb3cpIHtcbiAgICAgIHJldHVybiByb3cubWFwKGZvcm1hdFZhbHVlKS5qb2luKGRlbGltaXRlcik7XG4gICAgfVxuICAgIGZ1bmN0aW9uIGZvcm1hdFZhbHVlKHRleHQpIHtcbiAgICAgIHJldHVybiByZUZvcm1hdC50ZXN0KHRleHQpID8gJ1wiJyArIHRleHQucmVwbGFjZSgvXFxcIi9nLCAnXCJcIicpICsgJ1wiJyA6IHRleHQ7XG4gICAgfVxuICAgIHJldHVybiBkc3Y7XG4gIH07XG4gIGQzLmNzdiA9IGQzLmRzdihcIixcIiwgXCJ0ZXh0L2NzdlwiKTtcbiAgZDMudHN2ID0gZDMuZHN2KFwiXHRcIiwgXCJ0ZXh0L3RhYi1zZXBhcmF0ZWQtdmFsdWVzXCIpO1xuICB2YXIgZDNfdGltZXJfcXVldWVIZWFkLCBkM190aW1lcl9xdWV1ZVRhaWwsIGQzX3RpbWVyX2ludGVydmFsLCBkM190aW1lcl90aW1lb3V0LCBkM190aW1lcl9mcmFtZSA9IHRoaXNbZDNfdmVuZG9yU3ltYm9sKHRoaXMsIFwicmVxdWVzdEFuaW1hdGlvbkZyYW1lXCIpXSB8fCBmdW5jdGlvbihjYWxsYmFjaykge1xuICAgIHNldFRpbWVvdXQoY2FsbGJhY2ssIDE3KTtcbiAgfTtcbiAgZDMudGltZXIgPSBmdW5jdGlvbigpIHtcbiAgICBkM190aW1lci5hcHBseSh0aGlzLCBhcmd1bWVudHMpO1xuICB9O1xuICBmdW5jdGlvbiBkM190aW1lcihjYWxsYmFjaywgZGVsYXksIHRoZW4pIHtcbiAgICB2YXIgbiA9IGFyZ3VtZW50cy5sZW5ndGg7XG4gICAgaWYgKG4gPCAyKSBkZWxheSA9IDA7XG4gICAgaWYgKG4gPCAzKSB0aGVuID0gRGF0ZS5ub3coKTtcbiAgICB2YXIgdGltZSA9IHRoZW4gKyBkZWxheSwgdGltZXIgPSB7XG4gICAgICBjOiBjYWxsYmFjayxcbiAgICAgIHQ6IHRpbWUsXG4gICAgICBuOiBudWxsXG4gICAgfTtcbiAgICBpZiAoZDNfdGltZXJfcXVldWVUYWlsKSBkM190aW1lcl9xdWV1ZVRhaWwubiA9IHRpbWVyOyBlbHNlIGQzX3RpbWVyX3F1ZXVlSGVhZCA9IHRpbWVyO1xuICAgIGQzX3RpbWVyX3F1ZXVlVGFpbCA9IHRpbWVyO1xuICAgIGlmICghZDNfdGltZXJfaW50ZXJ2YWwpIHtcbiAgICAgIGQzX3RpbWVyX3RpbWVvdXQgPSBjbGVhclRpbWVvdXQoZDNfdGltZXJfdGltZW91dCk7XG4gICAgICBkM190aW1lcl9pbnRlcnZhbCA9IDE7XG4gICAgICBkM190aW1lcl9mcmFtZShkM190aW1lcl9zdGVwKTtcbiAgICB9XG4gICAgcmV0dXJuIHRpbWVyO1xuICB9XG4gIGZ1bmN0aW9uIGQzX3RpbWVyX3N0ZXAoKSB7XG4gICAgdmFyIG5vdyA9IGQzX3RpbWVyX21hcmsoKSwgZGVsYXkgPSBkM190aW1lcl9zd2VlcCgpIC0gbm93O1xuICAgIGlmIChkZWxheSA+IDI0KSB7XG4gICAgICBpZiAoaXNGaW5pdGUoZGVsYXkpKSB7XG4gICAgICAgIGNsZWFyVGltZW91dChkM190aW1lcl90aW1lb3V0KTtcbiAgICAgICAgZDNfdGltZXJfdGltZW91dCA9IHNldFRpbWVvdXQoZDNfdGltZXJfc3RlcCwgZGVsYXkpO1xuICAgICAgfVxuICAgICAgZDNfdGltZXJfaW50ZXJ2YWwgPSAwO1xuICAgIH0gZWxzZSB7XG4gICAgICBkM190aW1lcl9pbnRlcnZhbCA9IDE7XG4gICAgICBkM190aW1lcl9mcmFtZShkM190aW1lcl9zdGVwKTtcbiAgICB9XG4gIH1cbiAgZDMudGltZXIuZmx1c2ggPSBmdW5jdGlvbigpIHtcbiAgICBkM190aW1lcl9tYXJrKCk7XG4gICAgZDNfdGltZXJfc3dlZXAoKTtcbiAgfTtcbiAgZnVuY3Rpb24gZDNfdGltZXJfbWFyaygpIHtcbiAgICB2YXIgbm93ID0gRGF0ZS5ub3coKSwgdGltZXIgPSBkM190aW1lcl9xdWV1ZUhlYWQ7XG4gICAgd2hpbGUgKHRpbWVyKSB7XG4gICAgICBpZiAobm93ID49IHRpbWVyLnQgJiYgdGltZXIuYyhub3cgLSB0aW1lci50KSkgdGltZXIuYyA9IG51bGw7XG4gICAgICB0aW1lciA9IHRpbWVyLm47XG4gICAgfVxuICAgIHJldHVybiBub3c7XG4gIH1cbiAgZnVuY3Rpb24gZDNfdGltZXJfc3dlZXAoKSB7XG4gICAgdmFyIHQwLCB0MSA9IGQzX3RpbWVyX3F1ZXVlSGVhZCwgdGltZSA9IEluZmluaXR5O1xuICAgIHdoaWxlICh0MSkge1xuICAgICAgaWYgKHQxLmMpIHtcbiAgICAgICAgaWYgKHQxLnQgPCB0aW1lKSB0aW1lID0gdDEudDtcbiAgICAgICAgdDEgPSAodDAgPSB0MSkubjtcbiAgICAgIH0gZWxzZSB7XG4gICAgICAgIHQxID0gdDAgPyB0MC5uID0gdDEubiA6IGQzX3RpbWVyX3F1ZXVlSGVhZCA9IHQxLm47XG4gICAgICB9XG4gICAgfVxuICAgIGQzX3RpbWVyX3F1ZXVlVGFpbCA9IHQwO1xuICAgIHJldHVybiB0aW1lO1xuICB9XG4gIGZ1bmN0aW9uIGQzX2Zvcm1hdF9wcmVjaXNpb24oeCwgcCkge1xuICAgIHJldHVybiBwIC0gKHggPyBNYXRoLmNlaWwoTWF0aC5sb2coeCkgLyBNYXRoLkxOMTApIDogMSk7XG4gIH1cbiAgZDMucm91bmQgPSBmdW5jdGlvbih4LCBuKSB7XG4gICAgcmV0dXJuIG4gPyBNYXRoLnJvdW5kKHggKiAobiA9IE1hdGgucG93KDEwLCBuKSkpIC8gbiA6IE1hdGgucm91bmQoeCk7XG4gIH07XG4gIHZhciBkM19mb3JtYXRQcmVmaXhlcyA9IFsgXCJ5XCIsIFwielwiLCBcImFcIiwgXCJmXCIsIFwicFwiLCBcIm5cIiwgXCLCtVwiLCBcIm1cIiwgXCJcIiwgXCJrXCIsIFwiTVwiLCBcIkdcIiwgXCJUXCIsIFwiUFwiLCBcIkVcIiwgXCJaXCIsIFwiWVwiIF0ubWFwKGQzX2Zvcm1hdFByZWZpeCk7XG4gIGQzLmZvcm1hdFByZWZpeCA9IGZ1bmN0aW9uKHZhbHVlLCBwcmVjaXNpb24pIHtcbiAgICB2YXIgaSA9IDA7XG4gICAgaWYgKHZhbHVlID0gK3ZhbHVlKSB7XG4gICAgICBpZiAodmFsdWUgPCAwKSB2YWx1ZSAqPSAtMTtcbiAgICAgIGlmIChwcmVjaXNpb24pIHZhbHVlID0gZDMucm91bmQodmFsdWUsIGQzX2Zvcm1hdF9wcmVjaXNpb24odmFsdWUsIHByZWNpc2lvbikpO1xuICAgICAgaSA9IDEgKyBNYXRoLmZsb29yKDFlLTEyICsgTWF0aC5sb2codmFsdWUpIC8gTWF0aC5MTjEwKTtcbiAgICAgIGkgPSBNYXRoLm1heCgtMjQsIE1hdGgubWluKDI0LCBNYXRoLmZsb29yKChpIC0gMSkgLyAzKSAqIDMpKTtcbiAgICB9XG4gICAgcmV0dXJuIGQzX2Zvcm1hdFByZWZpeGVzWzggKyBpIC8gM107XG4gIH07XG4gIGZ1bmN0aW9uIGQzX2Zvcm1hdFByZWZpeChkLCBpKSB7XG4gICAgdmFyIGsgPSBNYXRoLnBvdygxMCwgYWJzKDggLSBpKSAqIDMpO1xuICAgIHJldHVybiB7XG4gICAgICBzY2FsZTogaSA+IDggPyBmdW5jdGlvbihkKSB7XG4gICAgICAgIHJldHVybiBkIC8gaztcbiAgICAgIH0gOiBmdW5jdGlvbihkKSB7XG4gICAgICAgIHJldHVybiBkICogaztcbiAgICAgIH0sXG4gICAgICBzeW1ib2w6IGRcbiAgICB9O1xuICB9XG4gIGZ1bmN0aW9uIGQzX2xvY2FsZV9udW1iZXJGb3JtYXQobG9jYWxlKSB7XG4gICAgdmFyIGxvY2FsZV9kZWNpbWFsID0gbG9jYWxlLmRlY2ltYWwsIGxvY2FsZV90aG91c2FuZHMgPSBsb2NhbGUudGhvdXNhbmRzLCBsb2NhbGVfZ3JvdXBpbmcgPSBsb2NhbGUuZ3JvdXBpbmcsIGxvY2FsZV9jdXJyZW5jeSA9IGxvY2FsZS5jdXJyZW5jeSwgZm9ybWF0R3JvdXAgPSBsb2NhbGVfZ3JvdXBpbmcgJiYgbG9jYWxlX3Rob3VzYW5kcyA/IGZ1bmN0aW9uKHZhbHVlLCB3aWR0aCkge1xuICAgICAgdmFyIGkgPSB2YWx1ZS5sZW5ndGgsIHQgPSBbXSwgaiA9IDAsIGcgPSBsb2NhbGVfZ3JvdXBpbmdbMF0sIGxlbmd0aCA9IDA7XG4gICAgICB3aGlsZSAoaSA+IDAgJiYgZyA+IDApIHtcbiAgICAgICAgaWYgKGxlbmd0aCArIGcgKyAxID4gd2lkdGgpIGcgPSBNYXRoLm1heCgxLCB3aWR0aCAtIGxlbmd0aCk7XG4gICAgICAgIHQucHVzaCh2YWx1ZS5zdWJzdHJpbmcoaSAtPSBnLCBpICsgZykpO1xuICAgICAgICBpZiAoKGxlbmd0aCArPSBnICsgMSkgPiB3aWR0aCkgYnJlYWs7XG4gICAgICAgIGcgPSBsb2NhbGVfZ3JvdXBpbmdbaiA9IChqICsgMSkgJSBsb2NhbGVfZ3JvdXBpbmcubGVuZ3RoXTtcbiAgICAgIH1cbiAgICAgIHJldHVybiB0LnJldmVyc2UoKS5qb2luKGxvY2FsZV90aG91c2FuZHMpO1xuICAgIH0gOiBkM19pZGVudGl0eTtcbiAgICByZXR1cm4gZnVuY3Rpb24oc3BlY2lmaWVyKSB7XG4gICAgICB2YXIgbWF0Y2ggPSBkM19mb3JtYXRfcmUuZXhlYyhzcGVjaWZpZXIpLCBmaWxsID0gbWF0Y2hbMV0gfHwgXCIgXCIsIGFsaWduID0gbWF0Y2hbMl0gfHwgXCI+XCIsIHNpZ24gPSBtYXRjaFszXSB8fCBcIi1cIiwgc3ltYm9sID0gbWF0Y2hbNF0gfHwgXCJcIiwgemZpbGwgPSBtYXRjaFs1XSwgd2lkdGggPSArbWF0Y2hbNl0sIGNvbW1hID0gbWF0Y2hbN10sIHByZWNpc2lvbiA9IG1hdGNoWzhdLCB0eXBlID0gbWF0Y2hbOV0sIHNjYWxlID0gMSwgcHJlZml4ID0gXCJcIiwgc3VmZml4ID0gXCJcIiwgaW50ZWdlciA9IGZhbHNlLCBleHBvbmVudCA9IHRydWU7XG4gICAgICBpZiAocHJlY2lzaW9uKSBwcmVjaXNpb24gPSArcHJlY2lzaW9uLnN1YnN0cmluZygxKTtcbiAgICAgIGlmICh6ZmlsbCB8fCBmaWxsID09PSBcIjBcIiAmJiBhbGlnbiA9PT0gXCI9XCIpIHtcbiAgICAgICAgemZpbGwgPSBmaWxsID0gXCIwXCI7XG4gICAgICAgIGFsaWduID0gXCI9XCI7XG4gICAgICB9XG4gICAgICBzd2l0Y2ggKHR5cGUpIHtcbiAgICAgICBjYXNlIFwiblwiOlxuICAgICAgICBjb21tYSA9IHRydWU7XG4gICAgICAgIHR5cGUgPSBcImdcIjtcbiAgICAgICAgYnJlYWs7XG5cbiAgICAgICBjYXNlIFwiJVwiOlxuICAgICAgICBzY2FsZSA9IDEwMDtcbiAgICAgICAgc3VmZml4ID0gXCIlXCI7XG4gICAgICAgIHR5cGUgPSBcImZcIjtcbiAgICAgICAgYnJlYWs7XG5cbiAgICAgICBjYXNlIFwicFwiOlxuICAgICAgICBzY2FsZSA9IDEwMDtcbiAgICAgICAgc3VmZml4ID0gXCIlXCI7XG4gICAgICAgIHR5cGUgPSBcInJcIjtcbiAgICAgICAgYnJlYWs7XG5cbiAgICAgICBjYXNlIFwiYlwiOlxuICAgICAgIGNhc2UgXCJvXCI6XG4gICAgICAgY2FzZSBcInhcIjpcbiAgICAgICBjYXNlIFwiWFwiOlxuICAgICAgICBpZiAoc3ltYm9sID09PSBcIiNcIikgcHJlZml4ID0gXCIwXCIgKyB0eXBlLnRvTG93ZXJDYXNlKCk7XG5cbiAgICAgICBjYXNlIFwiY1wiOlxuICAgICAgICBleHBvbmVudCA9IGZhbHNlO1xuXG4gICAgICAgY2FzZSBcImRcIjpcbiAgICAgICAgaW50ZWdlciA9IHRydWU7XG4gICAgICAgIHByZWNpc2lvbiA9IDA7XG4gICAgICAgIGJyZWFrO1xuXG4gICAgICAgY2FzZSBcInNcIjpcbiAgICAgICAgc2NhbGUgPSAtMTtcbiAgICAgICAgdHlwZSA9IFwiclwiO1xuICAgICAgICBicmVhaztcbiAgICAgIH1cbiAgICAgIGlmIChzeW1ib2wgPT09IFwiJFwiKSBwcmVmaXggPSBsb2NhbGVfY3VycmVuY3lbMF0sIHN1ZmZpeCA9IGxvY2FsZV9jdXJyZW5jeVsxXTtcbiAgICAgIGlmICh0eXBlID09IFwiclwiICYmICFwcmVjaXNpb24pIHR5cGUgPSBcImdcIjtcbiAgICAgIGlmIChwcmVjaXNpb24gIT0gbnVsbCkge1xuICAgICAgICBpZiAodHlwZSA9PSBcImdcIikgcHJlY2lzaW9uID0gTWF0aC5tYXgoMSwgTWF0aC5taW4oMjEsIHByZWNpc2lvbikpOyBlbHNlIGlmICh0eXBlID09IFwiZVwiIHx8IHR5cGUgPT0gXCJmXCIpIHByZWNpc2lvbiA9IE1hdGgubWF4KDAsIE1hdGgubWluKDIwLCBwcmVjaXNpb24pKTtcbiAgICAgIH1cbiAgICAgIHR5cGUgPSBkM19mb3JtYXRfdHlwZXMuZ2V0KHR5cGUpIHx8IGQzX2Zvcm1hdF90eXBlRGVmYXVsdDtcbiAgICAgIHZhciB6Y29tbWEgPSB6ZmlsbCAmJiBjb21tYTtcbiAgICAgIHJldHVybiBmdW5jdGlvbih2YWx1ZSkge1xuICAgICAgICB2YXIgZnVsbFN1ZmZpeCA9IHN1ZmZpeDtcbiAgICAgICAgaWYgKGludGVnZXIgJiYgdmFsdWUgJSAxKSByZXR1cm4gXCJcIjtcbiAgICAgICAgdmFyIG5lZ2F0aXZlID0gdmFsdWUgPCAwIHx8IHZhbHVlID09PSAwICYmIDEgLyB2YWx1ZSA8IDAgPyAodmFsdWUgPSAtdmFsdWUsIFwiLVwiKSA6IHNpZ24gPT09IFwiLVwiID8gXCJcIiA6IHNpZ247XG4gICAgICAgIGlmIChzY2FsZSA8IDApIHtcbiAgICAgICAgICB2YXIgdW5pdCA9IGQzLmZvcm1hdFByZWZpeCh2YWx1ZSwgcHJlY2lzaW9uKTtcbiAgICAgICAgICB2YWx1ZSA9IHVuaXQuc2NhbGUodmFsdWUpO1xuICAgICAgICAgIGZ1bGxTdWZmaXggPSB1bml0LnN5bWJvbCArIHN1ZmZpeDtcbiAgICAgICAgfSBlbHNlIHtcbiAgICAgICAgICB2YWx1ZSAqPSBzY2FsZTtcbiAgICAgICAgfVxuICAgICAgICB2YWx1ZSA9IHR5cGUodmFsdWUsIHByZWNpc2lvbik7XG4gICAgICAgIHZhciBpID0gdmFsdWUubGFzdEluZGV4T2YoXCIuXCIpLCBiZWZvcmUsIGFmdGVyO1xuICAgICAgICBpZiAoaSA8IDApIHtcbiAgICAgICAgICB2YXIgaiA9IGV4cG9uZW50ID8gdmFsdWUubGFzdEluZGV4T2YoXCJlXCIpIDogLTE7XG4gICAgICAgICAgaWYgKGogPCAwKSBiZWZvcmUgPSB2YWx1ZSwgYWZ0ZXIgPSBcIlwiOyBlbHNlIGJlZm9yZSA9IHZhbHVlLnN1YnN0cmluZygwLCBqKSwgYWZ0ZXIgPSB2YWx1ZS5zdWJzdHJpbmcoaik7XG4gICAgICAgIH0gZWxzZSB7XG4gICAgICAgICAgYmVmb3JlID0gdmFsdWUuc3Vic3RyaW5nKDAsIGkpO1xuICAgICAgICAgIGFmdGVyID0gbG9jYWxlX2RlY2ltYWwgKyB2YWx1ZS5zdWJzdHJpbmcoaSArIDEpO1xuICAgICAgICB9XG4gICAgICAgIGlmICghemZpbGwgJiYgY29tbWEpIGJlZm9yZSA9IGZvcm1hdEdyb3VwKGJlZm9yZSwgSW5maW5pdHkpO1xuICAgICAgICB2YXIgbGVuZ3RoID0gcHJlZml4Lmxlbmd0aCArIGJlZm9yZS5sZW5ndGggKyBhZnRlci5sZW5ndGggKyAoemNvbW1hID8gMCA6IG5lZ2F0aXZlLmxlbmd0aCksIHBhZGRpbmcgPSBsZW5ndGggPCB3aWR0aCA/IG5ldyBBcnJheShsZW5ndGggPSB3aWR0aCAtIGxlbmd0aCArIDEpLmpvaW4oZmlsbCkgOiBcIlwiO1xuICAgICAgICBpZiAoemNvbW1hKSBiZWZvcmUgPSBmb3JtYXRHcm91cChwYWRkaW5nICsgYmVmb3JlLCBwYWRkaW5nLmxlbmd0aCA/IHdpZHRoIC0gYWZ0ZXIubGVuZ3RoIDogSW5maW5pdHkpO1xuICAgICAgICBuZWdhdGl2ZSArPSBwcmVmaXg7XG4gICAgICAgIHZhbHVlID0gYmVmb3JlICsgYWZ0ZXI7XG4gICAgICAgIHJldHVybiAoYWxpZ24gPT09IFwiPFwiID8gbmVnYXRpdmUgKyB2YWx1ZSArIHBhZGRpbmcgOiBhbGlnbiA9PT0gXCI+XCIgPyBwYWRkaW5nICsgbmVnYXRpdmUgKyB2YWx1ZSA6IGFsaWduID09PSBcIl5cIiA/IHBhZGRpbmcuc3Vic3RyaW5nKDAsIGxlbmd0aCA+Pj0gMSkgKyBuZWdhdGl2ZSArIHZhbHVlICsgcGFkZGluZy5zdWJzdHJpbmcobGVuZ3RoKSA6IG5lZ2F0aXZlICsgKHpjb21tYSA/IHZhbHVlIDogcGFkZGluZyArIHZhbHVlKSkgKyBmdWxsU3VmZml4O1xuICAgICAgfTtcbiAgICB9O1xuICB9XG4gIHZhciBkM19mb3JtYXRfcmUgPSAvKD86KFtee10pPyhbPD49Xl0pKT8oWytcXC0gXSk/KFskI10pPygwKT8oXFxkKyk/KCwpPyhcXC4tP1xcZCspPyhbYS16JV0pPy9pO1xuICB2YXIgZDNfZm9ybWF0X3R5cGVzID0gZDMubWFwKHtcbiAgICBiOiBmdW5jdGlvbih4KSB7XG4gICAgICByZXR1cm4geC50b1N0cmluZygyKTtcbiAgICB9LFxuICAgIGM6IGZ1bmN0aW9uKHgpIHtcbiAgICAgIHJldHVybiBTdHJpbmcuZnJvbUNoYXJDb2RlKHgpO1xuICAgIH0sXG4gICAgbzogZnVuY3Rpb24oeCkge1xuICAgICAgcmV0dXJuIHgudG9TdHJpbmcoOCk7XG4gICAgfSxcbiAgICB4OiBmdW5jdGlvbih4KSB7XG4gICAgICByZXR1cm4geC50b1N0cmluZygxNik7XG4gICAgfSxcbiAgICBYOiBmdW5jdGlvbih4KSB7XG4gICAgICByZXR1cm4geC50b1N0cmluZygxNikudG9VcHBlckNhc2UoKTtcbiAgICB9LFxuICAgIGc6IGZ1bmN0aW9uKHgsIHApIHtcbiAgICAgIHJldHVybiB4LnRvUHJlY2lzaW9uKHApO1xuICAgIH0sXG4gICAgZTogZnVuY3Rpb24oeCwgcCkge1xuICAgICAgcmV0dXJuIHgudG9FeHBvbmVudGlhbChwKTtcbiAgICB9LFxuICAgIGY6IGZ1bmN0aW9uKHgsIHApIHtcbiAgICAgIHJldHVybiB4LnRvRml4ZWQocCk7XG4gICAgfSxcbiAgICByOiBmdW5jdGlvbih4LCBwKSB7XG4gICAgICByZXR1cm4gKHggPSBkMy5yb3VuZCh4LCBkM19mb3JtYXRfcHJlY2lzaW9uKHgsIHApKSkudG9GaXhlZChNYXRoLm1heCgwLCBNYXRoLm1pbigyMCwgZDNfZm9ybWF0X3ByZWNpc2lvbih4ICogKDEgKyAxZS0xNSksIHApKSkpO1xuICAgIH1cbiAgfSk7XG4gIGZ1bmN0aW9uIGQzX2Zvcm1hdF90eXBlRGVmYXVsdCh4KSB7XG4gICAgcmV0dXJuIHggKyBcIlwiO1xuICB9XG4gIHZhciBkM190aW1lID0gZDMudGltZSA9IHt9LCBkM19kYXRlID0gRGF0ZTtcbiAgZnVuY3Rpb24gZDNfZGF0ZV91dGMoKSB7XG4gICAgdGhpcy5fID0gbmV3IERhdGUoYXJndW1lbnRzLmxlbmd0aCA+IDEgPyBEYXRlLlVUQy5hcHBseSh0aGlzLCBhcmd1bWVudHMpIDogYXJndW1lbnRzWzBdKTtcbiAgfVxuICBkM19kYXRlX3V0Yy5wcm90b3R5cGUgPSB7XG4gICAgZ2V0RGF0ZTogZnVuY3Rpb24oKSB7XG4gICAgICByZXR1cm4gdGhpcy5fLmdldFVUQ0RhdGUoKTtcbiAgICB9LFxuICAgIGdldERheTogZnVuY3Rpb24oKSB7XG4gICAgICByZXR1cm4gdGhpcy5fLmdldFVUQ0RheSgpO1xuICAgIH0sXG4gICAgZ2V0RnVsbFllYXI6IGZ1bmN0aW9uKCkge1xuICAgICAgcmV0dXJuIHRoaXMuXy5nZXRVVENGdWxsWWVhcigpO1xuICAgIH0sXG4gICAgZ2V0SG91cnM6IGZ1bmN0aW9uKCkge1xuICAgICAgcmV0dXJuIHRoaXMuXy5nZXRVVENIb3VycygpO1xuICAgIH0sXG4gICAgZ2V0TWlsbGlzZWNvbmRzOiBmdW5jdGlvbigpIHtcbiAgICAgIHJldHVybiB0aGlzLl8uZ2V0VVRDTWlsbGlzZWNvbmRzKCk7XG4gICAgfSxcbiAgICBnZXRNaW51dGVzOiBmdW5jdGlvbigpIHtcbiAgICAgIHJldHVybiB0aGlzLl8uZ2V0VVRDTWludXRlcygpO1xuICAgIH0sXG4gICAgZ2V0TW9udGg6IGZ1bmN0aW9uKCkge1xuICAgICAgcmV0dXJuIHRoaXMuXy5nZXRVVENNb250aCgpO1xuICAgIH0sXG4gICAgZ2V0U2Vjb25kczogZnVuY3Rpb24oKSB7XG4gICAgICByZXR1cm4gdGhpcy5fLmdldFVUQ1NlY29uZHMoKTtcbiAgICB9LFxuICAgIGdldFRpbWU6IGZ1bmN0aW9uKCkge1xuICAgICAgcmV0dXJuIHRoaXMuXy5nZXRUaW1lKCk7XG4gICAgfSxcbiAgICBnZXRUaW1lem9uZU9mZnNldDogZnVuY3Rpb24oKSB7XG4gICAgICByZXR1cm4gMDtcbiAgICB9LFxuICAgIHZhbHVlT2Y6IGZ1bmN0aW9uKCkge1xuICAgICAgcmV0dXJuIHRoaXMuXy52YWx1ZU9mKCk7XG4gICAgfSxcbiAgICBzZXREYXRlOiBmdW5jdGlvbigpIHtcbiAgICAgIGQzX3RpbWVfcHJvdG90eXBlLnNldFVUQ0RhdGUuYXBwbHkodGhpcy5fLCBhcmd1bWVudHMpO1xuICAgIH0sXG4gICAgc2V0RGF5OiBmdW5jdGlvbigpIHtcbiAgICAgIGQzX3RpbWVfcHJvdG90eXBlLnNldFVUQ0RheS5hcHBseSh0aGlzLl8sIGFyZ3VtZW50cyk7XG4gICAgfSxcbiAgICBzZXRGdWxsWWVhcjogZnVuY3Rpb24oKSB7XG4gICAgICBkM190aW1lX3Byb3RvdHlwZS5zZXRVVENGdWxsWWVhci5hcHBseSh0aGlzLl8sIGFyZ3VtZW50cyk7XG4gICAgfSxcbiAgICBzZXRIb3VyczogZnVuY3Rpb24oKSB7XG4gICAgICBkM190aW1lX3Byb3RvdHlwZS5zZXRVVENIb3Vycy5hcHBseSh0aGlzLl8sIGFyZ3VtZW50cyk7XG4gICAgfSxcbiAgICBzZXRNaWxsaXNlY29uZHM6IGZ1bmN0aW9uKCkge1xuICAgICAgZDNfdGltZV9wcm90b3R5cGUuc2V0VVRDTWlsbGlzZWNvbmRzLmFwcGx5KHRoaXMuXywgYXJndW1lbnRzKTtcbiAgICB9LFxuICAgIHNldE1pbnV0ZXM6IGZ1bmN0aW9uKCkge1xuICAgICAgZDNfdGltZV9wcm90b3R5cGUuc2V0VVRDTWludXRlcy5hcHBseSh0aGlzLl8sIGFyZ3VtZW50cyk7XG4gICAgfSxcbiAgICBzZXRNb250aDogZnVuY3Rpb24oKSB7XG4gICAgICBkM190aW1lX3Byb3RvdHlwZS5zZXRVVENNb250aC5hcHBseSh0aGlzLl8sIGFyZ3VtZW50cyk7XG4gICAgfSxcbiAgICBzZXRTZWNvbmRzOiBmdW5jdGlvbigpIHtcbiAgICAgIGQzX3RpbWVfcHJvdG90eXBlLnNldFVUQ1NlY29uZHMuYXBwbHkodGhpcy5fLCBhcmd1bWVudHMpO1xuICAgIH0sXG4gICAgc2V0VGltZTogZnVuY3Rpb24oKSB7XG4gICAgICBkM190aW1lX3Byb3RvdHlwZS5zZXRUaW1lLmFwcGx5KHRoaXMuXywgYXJndW1lbnRzKTtcbiAgICB9XG4gIH07XG4gIHZhciBkM190aW1lX3Byb3RvdHlwZSA9IERhdGUucHJvdG90eXBlO1xuICBmdW5jdGlvbiBkM190aW1lX2ludGVydmFsKGxvY2FsLCBzdGVwLCBudW1iZXIpIHtcbiAgICBmdW5jdGlvbiByb3VuZChkYXRlKSB7XG4gICAgICB2YXIgZDAgPSBsb2NhbChkYXRlKSwgZDEgPSBvZmZzZXQoZDAsIDEpO1xuICAgICAgcmV0dXJuIGRhdGUgLSBkMCA8IGQxIC0gZGF0ZSA/IGQwIDogZDE7XG4gICAgfVxuICAgIGZ1bmN0aW9uIGNlaWwoZGF0ZSkge1xuICAgICAgc3RlcChkYXRlID0gbG9jYWwobmV3IGQzX2RhdGUoZGF0ZSAtIDEpKSwgMSk7XG4gICAgICByZXR1cm4gZGF0ZTtcbiAgICB9XG4gICAgZnVuY3Rpb24gb2Zmc2V0KGRhdGUsIGspIHtcbiAgICAgIHN0ZXAoZGF0ZSA9IG5ldyBkM19kYXRlKCtkYXRlKSwgayk7XG4gICAgICByZXR1cm4gZGF0ZTtcbiAgICB9XG4gICAgZnVuY3Rpb24gcmFuZ2UodDAsIHQxLCBkdCkge1xuICAgICAgdmFyIHRpbWUgPSBjZWlsKHQwKSwgdGltZXMgPSBbXTtcbiAgICAgIGlmIChkdCA+IDEpIHtcbiAgICAgICAgd2hpbGUgKHRpbWUgPCB0MSkge1xuICAgICAgICAgIGlmICghKG51bWJlcih0aW1lKSAlIGR0KSkgdGltZXMucHVzaChuZXcgRGF0ZSgrdGltZSkpO1xuICAgICAgICAgIHN0ZXAodGltZSwgMSk7XG4gICAgICAgIH1cbiAgICAgIH0gZWxzZSB7XG4gICAgICAgIHdoaWxlICh0aW1lIDwgdDEpIHRpbWVzLnB1c2gobmV3IERhdGUoK3RpbWUpKSwgc3RlcCh0aW1lLCAxKTtcbiAgICAgIH1cbiAgICAgIHJldHVybiB0aW1lcztcbiAgICB9XG4gICAgZnVuY3Rpb24gcmFuZ2VfdXRjKHQwLCB0MSwgZHQpIHtcbiAgICAgIHRyeSB7XG4gICAgICAgIGQzX2RhdGUgPSBkM19kYXRlX3V0YztcbiAgICAgICAgdmFyIHV0YyA9IG5ldyBkM19kYXRlX3V0YygpO1xuICAgICAgICB1dGMuXyA9IHQwO1xuICAgICAgICByZXR1cm4gcmFuZ2UodXRjLCB0MSwgZHQpO1xuICAgICAgfSBmaW5hbGx5IHtcbiAgICAgICAgZDNfZGF0ZSA9IERhdGU7XG4gICAgICB9XG4gICAgfVxuICAgIGxvY2FsLmZsb29yID0gbG9jYWw7XG4gICAgbG9jYWwucm91bmQgPSByb3VuZDtcbiAgICBsb2NhbC5jZWlsID0gY2VpbDtcbiAgICBsb2NhbC5vZmZzZXQgPSBvZmZzZXQ7XG4gICAgbG9jYWwucmFuZ2UgPSByYW5nZTtcbiAgICB2YXIgdXRjID0gbG9jYWwudXRjID0gZDNfdGltZV9pbnRlcnZhbF91dGMobG9jYWwpO1xuICAgIHV0Yy5mbG9vciA9IHV0YztcbiAgICB1dGMucm91bmQgPSBkM190aW1lX2ludGVydmFsX3V0Yyhyb3VuZCk7XG4gICAgdXRjLmNlaWwgPSBkM190aW1lX2ludGVydmFsX3V0YyhjZWlsKTtcbiAgICB1dGMub2Zmc2V0ID0gZDNfdGltZV9pbnRlcnZhbF91dGMob2Zmc2V0KTtcbiAgICB1dGMucmFuZ2UgPSByYW5nZV91dGM7XG4gICAgcmV0dXJuIGxvY2FsO1xuICB9XG4gIGZ1bmN0aW9uIGQzX3RpbWVfaW50ZXJ2YWxfdXRjKG1ldGhvZCkge1xuICAgIHJldHVybiBmdW5jdGlvbihkYXRlLCBrKSB7XG4gICAgICB0cnkge1xuICAgICAgICBkM19kYXRlID0gZDNfZGF0ZV91dGM7XG4gICAgICAgIHZhciB1dGMgPSBuZXcgZDNfZGF0ZV91dGMoKTtcbiAgICAgICAgdXRjLl8gPSBkYXRlO1xuICAgICAgICByZXR1cm4gbWV0aG9kKHV0YywgaykuXztcbiAgICAgIH0gZmluYWxseSB7XG4gICAgICAgIGQzX2RhdGUgPSBEYXRlO1xuICAgICAgfVxuICAgIH07XG4gIH1cbiAgZDNfdGltZS55ZWFyID0gZDNfdGltZV9pbnRlcnZhbChmdW5jdGlvbihkYXRlKSB7XG4gICAgZGF0ZSA9IGQzX3RpbWUuZGF5KGRhdGUpO1xuICAgIGRhdGUuc2V0TW9udGgoMCwgMSk7XG4gICAgcmV0dXJuIGRhdGU7XG4gIH0sIGZ1bmN0aW9uKGRhdGUsIG9mZnNldCkge1xuICAgIGRhdGUuc2V0RnVsbFllYXIoZGF0ZS5nZXRGdWxsWWVhcigpICsgb2Zmc2V0KTtcbiAgfSwgZnVuY3Rpb24oZGF0ZSkge1xuICAgIHJldHVybiBkYXRlLmdldEZ1bGxZZWFyKCk7XG4gIH0pO1xuICBkM190aW1lLnllYXJzID0gZDNfdGltZS55ZWFyLnJhbmdlO1xuICBkM190aW1lLnllYXJzLnV0YyA9IGQzX3RpbWUueWVhci51dGMucmFuZ2U7XG4gIGQzX3RpbWUuZGF5ID0gZDNfdGltZV9pbnRlcnZhbChmdW5jdGlvbihkYXRlKSB7XG4gICAgdmFyIGRheSA9IG5ldyBkM19kYXRlKDJlMywgMCk7XG4gICAgZGF5LnNldEZ1bGxZZWFyKGRhdGUuZ2V0RnVsbFllYXIoKSwgZGF0ZS5nZXRNb250aCgpLCBkYXRlLmdldERhdGUoKSk7XG4gICAgcmV0dXJuIGRheTtcbiAgfSwgZnVuY3Rpb24oZGF0ZSwgb2Zmc2V0KSB7XG4gICAgZGF0ZS5zZXREYXRlKGRhdGUuZ2V0RGF0ZSgpICsgb2Zmc2V0KTtcbiAgfSwgZnVuY3Rpb24oZGF0ZSkge1xuICAgIHJldHVybiBkYXRlLmdldERhdGUoKSAtIDE7XG4gIH0pO1xuICBkM190aW1lLmRheXMgPSBkM190aW1lLmRheS5yYW5nZTtcbiAgZDNfdGltZS5kYXlzLnV0YyA9IGQzX3RpbWUuZGF5LnV0Yy5yYW5nZTtcbiAgZDNfdGltZS5kYXlPZlllYXIgPSBmdW5jdGlvbihkYXRlKSB7XG4gICAgdmFyIHllYXIgPSBkM190aW1lLnllYXIoZGF0ZSk7XG4gICAgcmV0dXJuIE1hdGguZmxvb3IoKGRhdGUgLSB5ZWFyIC0gKGRhdGUuZ2V0VGltZXpvbmVPZmZzZXQoKSAtIHllYXIuZ2V0VGltZXpvbmVPZmZzZXQoKSkgKiA2ZTQpIC8gODY0ZTUpO1xuICB9O1xuICBbIFwic3VuZGF5XCIsIFwibW9uZGF5XCIsIFwidHVlc2RheVwiLCBcIndlZG5lc2RheVwiLCBcInRodXJzZGF5XCIsIFwiZnJpZGF5XCIsIFwic2F0dXJkYXlcIiBdLmZvckVhY2goZnVuY3Rpb24oZGF5LCBpKSB7XG4gICAgaSA9IDcgLSBpO1xuICAgIHZhciBpbnRlcnZhbCA9IGQzX3RpbWVbZGF5XSA9IGQzX3RpbWVfaW50ZXJ2YWwoZnVuY3Rpb24oZGF0ZSkge1xuICAgICAgKGRhdGUgPSBkM190aW1lLmRheShkYXRlKSkuc2V0RGF0ZShkYXRlLmdldERhdGUoKSAtIChkYXRlLmdldERheSgpICsgaSkgJSA3KTtcbiAgICAgIHJldHVybiBkYXRlO1xuICAgIH0sIGZ1bmN0aW9uKGRhdGUsIG9mZnNldCkge1xuICAgICAgZGF0ZS5zZXREYXRlKGRhdGUuZ2V0RGF0ZSgpICsgTWF0aC5mbG9vcihvZmZzZXQpICogNyk7XG4gICAgfSwgZnVuY3Rpb24oZGF0ZSkge1xuICAgICAgdmFyIGRheSA9IGQzX3RpbWUueWVhcihkYXRlKS5nZXREYXkoKTtcbiAgICAgIHJldHVybiBNYXRoLmZsb29yKChkM190aW1lLmRheU9mWWVhcihkYXRlKSArIChkYXkgKyBpKSAlIDcpIC8gNykgLSAoZGF5ICE9PSBpKTtcbiAgICB9KTtcbiAgICBkM190aW1lW2RheSArIFwic1wiXSA9IGludGVydmFsLnJhbmdlO1xuICAgIGQzX3RpbWVbZGF5ICsgXCJzXCJdLnV0YyA9IGludGVydmFsLnV0Yy5yYW5nZTtcbiAgICBkM190aW1lW2RheSArIFwiT2ZZZWFyXCJdID0gZnVuY3Rpb24oZGF0ZSkge1xuICAgICAgdmFyIGRheSA9IGQzX3RpbWUueWVhcihkYXRlKS5nZXREYXkoKTtcbiAgICAgIHJldHVybiBNYXRoLmZsb29yKChkM190aW1lLmRheU9mWWVhcihkYXRlKSArIChkYXkgKyBpKSAlIDcpIC8gNyk7XG4gICAgfTtcbiAgfSk7XG4gIGQzX3RpbWUud2VlayA9IGQzX3RpbWUuc3VuZGF5O1xuICBkM190aW1lLndlZWtzID0gZDNfdGltZS5zdW5kYXkucmFuZ2U7XG4gIGQzX3RpbWUud2Vla3MudXRjID0gZDNfdGltZS5zdW5kYXkudXRjLnJhbmdlO1xuICBkM190aW1lLndlZWtPZlllYXIgPSBkM190aW1lLnN1bmRheU9mWWVhcjtcbiAgZnVuY3Rpb24gZDNfbG9jYWxlX3RpbWVGb3JtYXQobG9jYWxlKSB7XG4gICAgdmFyIGxvY2FsZV9kYXRlVGltZSA9IGxvY2FsZS5kYXRlVGltZSwgbG9jYWxlX2RhdGUgPSBsb2NhbGUuZGF0ZSwgbG9jYWxlX3RpbWUgPSBsb2NhbGUudGltZSwgbG9jYWxlX3BlcmlvZHMgPSBsb2NhbGUucGVyaW9kcywgbG9jYWxlX2RheXMgPSBsb2NhbGUuZGF5cywgbG9jYWxlX3Nob3J0RGF5cyA9IGxvY2FsZS5zaG9ydERheXMsIGxvY2FsZV9tb250aHMgPSBsb2NhbGUubW9udGhzLCBsb2NhbGVfc2hvcnRNb250aHMgPSBsb2NhbGUuc2hvcnRNb250aHM7XG4gICAgZnVuY3Rpb24gZDNfdGltZV9mb3JtYXQodGVtcGxhdGUpIHtcbiAgICAgIHZhciBuID0gdGVtcGxhdGUubGVuZ3RoO1xuICAgICAgZnVuY3Rpb24gZm9ybWF0KGRhdGUpIHtcbiAgICAgICAgdmFyIHN0cmluZyA9IFtdLCBpID0gLTEsIGogPSAwLCBjLCBwLCBmO1xuICAgICAgICB3aGlsZSAoKytpIDwgbikge1xuICAgICAgICAgIGlmICh0ZW1wbGF0ZS5jaGFyQ29kZUF0KGkpID09PSAzNykge1xuICAgICAgICAgICAgc3RyaW5nLnB1c2godGVtcGxhdGUuc2xpY2UoaiwgaSkpO1xuICAgICAgICAgICAgaWYgKChwID0gZDNfdGltZV9mb3JtYXRQYWRzW2MgPSB0ZW1wbGF0ZS5jaGFyQXQoKytpKV0pICE9IG51bGwpIGMgPSB0ZW1wbGF0ZS5jaGFyQXQoKytpKTtcbiAgICAgICAgICAgIGlmIChmID0gZDNfdGltZV9mb3JtYXRzW2NdKSBjID0gZihkYXRlLCBwID09IG51bGwgPyBjID09PSBcImVcIiA/IFwiIFwiIDogXCIwXCIgOiBwKTtcbiAgICAgICAgICAgIHN0cmluZy5wdXNoKGMpO1xuICAgICAgICAgICAgaiA9IGkgKyAxO1xuICAgICAgICAgIH1cbiAgICAgICAgfVxuICAgICAgICBzdHJpbmcucHVzaCh0ZW1wbGF0ZS5zbGljZShqLCBpKSk7XG4gICAgICAgIHJldHVybiBzdHJpbmcuam9pbihcIlwiKTtcbiAgICAgIH1cbiAgICAgIGZvcm1hdC5wYXJzZSA9IGZ1bmN0aW9uKHN0cmluZykge1xuICAgICAgICB2YXIgZCA9IHtcbiAgICAgICAgICB5OiAxOTAwLFxuICAgICAgICAgIG06IDAsXG4gICAgICAgICAgZDogMSxcbiAgICAgICAgICBIOiAwLFxuICAgICAgICAgIE06IDAsXG4gICAgICAgICAgUzogMCxcbiAgICAgICAgICBMOiAwLFxuICAgICAgICAgIFo6IG51bGxcbiAgICAgICAgfSwgaSA9IGQzX3RpbWVfcGFyc2UoZCwgdGVtcGxhdGUsIHN0cmluZywgMCk7XG4gICAgICAgIGlmIChpICE9IHN0cmluZy5sZW5ndGgpIHJldHVybiBudWxsO1xuICAgICAgICBpZiAoXCJwXCIgaW4gZCkgZC5IID0gZC5IICUgMTIgKyBkLnAgKiAxMjtcbiAgICAgICAgdmFyIGxvY2FsWiA9IGQuWiAhPSBudWxsICYmIGQzX2RhdGUgIT09IGQzX2RhdGVfdXRjLCBkYXRlID0gbmV3IChsb2NhbFogPyBkM19kYXRlX3V0YyA6IGQzX2RhdGUpKCk7XG4gICAgICAgIGlmIChcImpcIiBpbiBkKSBkYXRlLnNldEZ1bGxZZWFyKGQueSwgMCwgZC5qKTsgZWxzZSBpZiAoXCJXXCIgaW4gZCB8fCBcIlVcIiBpbiBkKSB7XG4gICAgICAgICAgaWYgKCEoXCJ3XCIgaW4gZCkpIGQudyA9IFwiV1wiIGluIGQgPyAxIDogMDtcbiAgICAgICAgICBkYXRlLnNldEZ1bGxZZWFyKGQueSwgMCwgMSk7XG4gICAgICAgICAgZGF0ZS5zZXRGdWxsWWVhcihkLnksIDAsIFwiV1wiIGluIGQgPyAoZC53ICsgNikgJSA3ICsgZC5XICogNyAtIChkYXRlLmdldERheSgpICsgNSkgJSA3IDogZC53ICsgZC5VICogNyAtIChkYXRlLmdldERheSgpICsgNikgJSA3KTtcbiAgICAgICAgfSBlbHNlIGRhdGUuc2V0RnVsbFllYXIoZC55LCBkLm0sIGQuZCk7XG4gICAgICAgIGRhdGUuc2V0SG91cnMoZC5IICsgKGQuWiAvIDEwMCB8IDApLCBkLk0gKyBkLlogJSAxMDAsIGQuUywgZC5MKTtcbiAgICAgICAgcmV0dXJuIGxvY2FsWiA/IGRhdGUuXyA6IGRhdGU7XG4gICAgICB9O1xuICAgICAgZm9ybWF0LnRvU3RyaW5nID0gZnVuY3Rpb24oKSB7XG4gICAgICAgIHJldHVybiB0ZW1wbGF0ZTtcbiAgICAgIH07XG4gICAgICByZXR1cm4gZm9ybWF0O1xuICAgIH1cbiAgICBmdW5jdGlvbiBkM190aW1lX3BhcnNlKGRhdGUsIHRlbXBsYXRlLCBzdHJpbmcsIGopIHtcbiAgICAgIHZhciBjLCBwLCB0LCBpID0gMCwgbiA9IHRlbXBsYXRlLmxlbmd0aCwgbSA9IHN0cmluZy5sZW5ndGg7XG4gICAgICB3aGlsZSAoaSA8IG4pIHtcbiAgICAgICAgaWYgKGogPj0gbSkgcmV0dXJuIC0xO1xuICAgICAgICBjID0gdGVtcGxhdGUuY2hhckNvZGVBdChpKyspO1xuICAgICAgICBpZiAoYyA9PT0gMzcpIHtcbiAgICAgICAgICB0ID0gdGVtcGxhdGUuY2hhckF0KGkrKyk7XG4gICAgICAgICAgcCA9IGQzX3RpbWVfcGFyc2Vyc1t0IGluIGQzX3RpbWVfZm9ybWF0UGFkcyA/IHRlbXBsYXRlLmNoYXJBdChpKyspIDogdF07XG4gICAgICAgICAgaWYgKCFwIHx8IChqID0gcChkYXRlLCBzdHJpbmcsIGopKSA8IDApIHJldHVybiAtMTtcbiAgICAgICAgfSBlbHNlIGlmIChjICE9IHN0cmluZy5jaGFyQ29kZUF0KGorKykpIHtcbiAgICAgICAgICByZXR1cm4gLTE7XG4gICAgICAgIH1cbiAgICAgIH1cbiAgICAgIHJldHVybiBqO1xuICAgIH1cbiAgICBkM190aW1lX2Zvcm1hdC51dGMgPSBmdW5jdGlvbih0ZW1wbGF0ZSkge1xuICAgICAgdmFyIGxvY2FsID0gZDNfdGltZV9mb3JtYXQodGVtcGxhdGUpO1xuICAgICAgZnVuY3Rpb24gZm9ybWF0KGRhdGUpIHtcbiAgICAgICAgdHJ5IHtcbiAgICAgICAgICBkM19kYXRlID0gZDNfZGF0ZV91dGM7XG4gICAgICAgICAgdmFyIHV0YyA9IG5ldyBkM19kYXRlKCk7XG4gICAgICAgICAgdXRjLl8gPSBkYXRlO1xuICAgICAgICAgIHJldHVybiBsb2NhbCh1dGMpO1xuICAgICAgICB9IGZpbmFsbHkge1xuICAgICAgICAgIGQzX2RhdGUgPSBEYXRlO1xuICAgICAgICB9XG4gICAgICB9XG4gICAgICBmb3JtYXQucGFyc2UgPSBmdW5jdGlvbihzdHJpbmcpIHtcbiAgICAgICAgdHJ5IHtcbiAgICAgICAgICBkM19kYXRlID0gZDNfZGF0ZV91dGM7XG4gICAgICAgICAgdmFyIGRhdGUgPSBsb2NhbC5wYXJzZShzdHJpbmcpO1xuICAgICAgICAgIHJldHVybiBkYXRlICYmIGRhdGUuXztcbiAgICAgICAgfSBmaW5hbGx5IHtcbiAgICAgICAgICBkM19kYXRlID0gRGF0ZTtcbiAgICAgICAgfVxuICAgICAgfTtcbiAgICAgIGZvcm1hdC50b1N0cmluZyA9IGxvY2FsLnRvU3RyaW5nO1xuICAgICAgcmV0dXJuIGZvcm1hdDtcbiAgICB9O1xuICAgIGQzX3RpbWVfZm9ybWF0Lm11bHRpID0gZDNfdGltZV9mb3JtYXQudXRjLm11bHRpID0gZDNfdGltZV9mb3JtYXRNdWx0aTtcbiAgICB2YXIgZDNfdGltZV9wZXJpb2RMb29rdXAgPSBkMy5tYXAoKSwgZDNfdGltZV9kYXlSZSA9IGQzX3RpbWVfZm9ybWF0UmUobG9jYWxlX2RheXMpLCBkM190aW1lX2RheUxvb2t1cCA9IGQzX3RpbWVfZm9ybWF0TG9va3VwKGxvY2FsZV9kYXlzKSwgZDNfdGltZV9kYXlBYmJyZXZSZSA9IGQzX3RpbWVfZm9ybWF0UmUobG9jYWxlX3Nob3J0RGF5cyksIGQzX3RpbWVfZGF5QWJicmV2TG9va3VwID0gZDNfdGltZV9mb3JtYXRMb29rdXAobG9jYWxlX3Nob3J0RGF5cyksIGQzX3RpbWVfbW9udGhSZSA9IGQzX3RpbWVfZm9ybWF0UmUobG9jYWxlX21vbnRocyksIGQzX3RpbWVfbW9udGhMb29rdXAgPSBkM190aW1lX2Zvcm1hdExvb2t1cChsb2NhbGVfbW9udGhzKSwgZDNfdGltZV9tb250aEFiYnJldlJlID0gZDNfdGltZV9mb3JtYXRSZShsb2NhbGVfc2hvcnRNb250aHMpLCBkM190aW1lX21vbnRoQWJicmV2TG9va3VwID0gZDNfdGltZV9mb3JtYXRMb29rdXAobG9jYWxlX3Nob3J0TW9udGhzKTtcbiAgICBsb2NhbGVfcGVyaW9kcy5mb3JFYWNoKGZ1bmN0aW9uKHAsIGkpIHtcbiAgICAgIGQzX3RpbWVfcGVyaW9kTG9va3VwLnNldChwLnRvTG93ZXJDYXNlKCksIGkpO1xuICAgIH0pO1xuICAgIHZhciBkM190aW1lX2Zvcm1hdHMgPSB7XG4gICAgICBhOiBmdW5jdGlvbihkKSB7XG4gICAgICAgIHJldHVybiBsb2NhbGVfc2hvcnREYXlzW2QuZ2V0RGF5KCldO1xuICAgICAgfSxcbiAgICAgIEE6IGZ1bmN0aW9uKGQpIHtcbiAgICAgICAgcmV0dXJuIGxvY2FsZV9kYXlzW2QuZ2V0RGF5KCldO1xuICAgICAgfSxcbiAgICAgIGI6IGZ1bmN0aW9uKGQpIHtcbiAgICAgICAgcmV0dXJuIGxvY2FsZV9zaG9ydE1vbnRoc1tkLmdldE1vbnRoKCldO1xuICAgICAgfSxcbiAgICAgIEI6IGZ1bmN0aW9uKGQpIHtcbiAgICAgICAgcmV0dXJuIGxvY2FsZV9tb250aHNbZC5nZXRNb250aCgpXTtcbiAgICAgIH0sXG4gICAgICBjOiBkM190aW1lX2Zvcm1hdChsb2NhbGVfZGF0ZVRpbWUpLFxuICAgICAgZDogZnVuY3Rpb24oZCwgcCkge1xuICAgICAgICByZXR1cm4gZDNfdGltZV9mb3JtYXRQYWQoZC5nZXREYXRlKCksIHAsIDIpO1xuICAgICAgfSxcbiAgICAgIGU6IGZ1bmN0aW9uKGQsIHApIHtcbiAgICAgICAgcmV0dXJuIGQzX3RpbWVfZm9ybWF0UGFkKGQuZ2V0RGF0ZSgpLCBwLCAyKTtcbiAgICAgIH0sXG4gICAgICBIOiBmdW5jdGlvbihkLCBwKSB7XG4gICAgICAgIHJldHVybiBkM190aW1lX2Zvcm1hdFBhZChkLmdldEhvdXJzKCksIHAsIDIpO1xuICAgICAgfSxcbiAgICAgIEk6IGZ1bmN0aW9uKGQsIHApIHtcbiAgICAgICAgcmV0dXJuIGQzX3RpbWVfZm9ybWF0UGFkKGQuZ2V0SG91cnMoKSAlIDEyIHx8IDEyLCBwLCAyKTtcbiAgICAgIH0sXG4gICAgICBqOiBmdW5jdGlvbihkLCBwKSB7XG4gICAgICAgIHJldHVybiBkM190aW1lX2Zvcm1hdFBhZCgxICsgZDNfdGltZS5kYXlPZlllYXIoZCksIHAsIDMpO1xuICAgICAgfSxcbiAgICAgIEw6IGZ1bmN0aW9uKGQsIHApIHtcbiAgICAgICAgcmV0dXJuIGQzX3RpbWVfZm9ybWF0UGFkKGQuZ2V0TWlsbGlzZWNvbmRzKCksIHAsIDMpO1xuICAgICAgfSxcbiAgICAgIG06IGZ1bmN0aW9uKGQsIHApIHtcbiAgICAgICAgcmV0dXJuIGQzX3RpbWVfZm9ybWF0UGFkKGQuZ2V0TW9udGgoKSArIDEsIHAsIDIpO1xuICAgICAgfSxcbiAgICAgIE06IGZ1bmN0aW9uKGQsIHApIHtcbiAgICAgICAgcmV0dXJuIGQzX3RpbWVfZm9ybWF0UGFkKGQuZ2V0TWludXRlcygpLCBwLCAyKTtcbiAgICAgIH0sXG4gICAgICBwOiBmdW5jdGlvbihkKSB7XG4gICAgICAgIHJldHVybiBsb2NhbGVfcGVyaW9kc1srKGQuZ2V0SG91cnMoKSA+PSAxMildO1xuICAgICAgfSxcbiAgICAgIFM6IGZ1bmN0aW9uKGQsIHApIHtcbiAgICAgICAgcmV0dXJuIGQzX3RpbWVfZm9ybWF0UGFkKGQuZ2V0U2Vjb25kcygpLCBwLCAyKTtcbiAgICAgIH0sXG4gICAgICBVOiBmdW5jdGlvbihkLCBwKSB7XG4gICAgICAgIHJldHVybiBkM190aW1lX2Zvcm1hdFBhZChkM190aW1lLnN1bmRheU9mWWVhcihkKSwgcCwgMik7XG4gICAgICB9LFxuICAgICAgdzogZnVuY3Rpb24oZCkge1xuICAgICAgICByZXR1cm4gZC5nZXREYXkoKTtcbiAgICAgIH0sXG4gICAgICBXOiBmdW5jdGlvbihkLCBwKSB7XG4gICAgICAgIHJldHVybiBkM190aW1lX2Zvcm1hdFBhZChkM190aW1lLm1vbmRheU9mWWVhcihkKSwgcCwgMik7XG4gICAgICB9LFxuICAgICAgeDogZDNfdGltZV9mb3JtYXQobG9jYWxlX2RhdGUpLFxuICAgICAgWDogZDNfdGltZV9mb3JtYXQobG9jYWxlX3RpbWUpLFxuICAgICAgeTogZnVuY3Rpb24oZCwgcCkge1xuICAgICAgICByZXR1cm4gZDNfdGltZV9mb3JtYXRQYWQoZC5nZXRGdWxsWWVhcigpICUgMTAwLCBwLCAyKTtcbiAgICAgIH0sXG4gICAgICBZOiBmdW5jdGlvbihkLCBwKSB7XG4gICAgICAgIHJldHVybiBkM190aW1lX2Zvcm1hdFBhZChkLmdldEZ1bGxZZWFyKCkgJSAxZTQsIHAsIDQpO1xuICAgICAgfSxcbiAgICAgIFo6IGQzX3RpbWVfem9uZSxcbiAgICAgIFwiJVwiOiBmdW5jdGlvbigpIHtcbiAgICAgICAgcmV0dXJuIFwiJVwiO1xuICAgICAgfVxuICAgIH07XG4gICAgdmFyIGQzX3RpbWVfcGFyc2VycyA9IHtcbiAgICAgIGE6IGQzX3RpbWVfcGFyc2VXZWVrZGF5QWJicmV2LFxuICAgICAgQTogZDNfdGltZV9wYXJzZVdlZWtkYXksXG4gICAgICBiOiBkM190aW1lX3BhcnNlTW9udGhBYmJyZXYsXG4gICAgICBCOiBkM190aW1lX3BhcnNlTW9udGgsXG4gICAgICBjOiBkM190aW1lX3BhcnNlTG9jYWxlRnVsbCxcbiAgICAgIGQ6IGQzX3RpbWVfcGFyc2VEYXksXG4gICAgICBlOiBkM190aW1lX3BhcnNlRGF5LFxuICAgICAgSDogZDNfdGltZV9wYXJzZUhvdXIyNCxcbiAgICAgIEk6IGQzX3RpbWVfcGFyc2VIb3VyMjQsXG4gICAgICBqOiBkM190aW1lX3BhcnNlRGF5T2ZZZWFyLFxuICAgICAgTDogZDNfdGltZV9wYXJzZU1pbGxpc2Vjb25kcyxcbiAgICAgIG06IGQzX3RpbWVfcGFyc2VNb250aE51bWJlcixcbiAgICAgIE06IGQzX3RpbWVfcGFyc2VNaW51dGVzLFxuICAgICAgcDogZDNfdGltZV9wYXJzZUFtUG0sXG4gICAgICBTOiBkM190aW1lX3BhcnNlU2Vjb25kcyxcbiAgICAgIFU6IGQzX3RpbWVfcGFyc2VXZWVrTnVtYmVyU3VuZGF5LFxuICAgICAgdzogZDNfdGltZV9wYXJzZVdlZWtkYXlOdW1iZXIsXG4gICAgICBXOiBkM190aW1lX3BhcnNlV2Vla051bWJlck1vbmRheSxcbiAgICAgIHg6IGQzX3RpbWVfcGFyc2VMb2NhbGVEYXRlLFxuICAgICAgWDogZDNfdGltZV9wYXJzZUxvY2FsZVRpbWUsXG4gICAgICB5OiBkM190aW1lX3BhcnNlWWVhcixcbiAgICAgIFk6IGQzX3RpbWVfcGFyc2VGdWxsWWVhcixcbiAgICAgIFo6IGQzX3RpbWVfcGFyc2Vab25lLFxuICAgICAgXCIlXCI6IGQzX3RpbWVfcGFyc2VMaXRlcmFsUGVyY2VudFxuICAgIH07XG4gICAgZnVuY3Rpb24gZDNfdGltZV9wYXJzZVdlZWtkYXlBYmJyZXYoZGF0ZSwgc3RyaW5nLCBpKSB7XG4gICAgICBkM190aW1lX2RheUFiYnJldlJlLmxhc3RJbmRleCA9IDA7XG4gICAgICB2YXIgbiA9IGQzX3RpbWVfZGF5QWJicmV2UmUuZXhlYyhzdHJpbmcuc2xpY2UoaSkpO1xuICAgICAgcmV0dXJuIG4gPyAoZGF0ZS53ID0gZDNfdGltZV9kYXlBYmJyZXZMb29rdXAuZ2V0KG5bMF0udG9Mb3dlckNhc2UoKSksIGkgKyBuWzBdLmxlbmd0aCkgOiAtMTtcbiAgICB9XG4gICAgZnVuY3Rpb24gZDNfdGltZV9wYXJzZVdlZWtkYXkoZGF0ZSwgc3RyaW5nLCBpKSB7XG4gICAgICBkM190aW1lX2RheVJlLmxhc3RJbmRleCA9IDA7XG4gICAgICB2YXIgbiA9IGQzX3RpbWVfZGF5UmUuZXhlYyhzdHJpbmcuc2xpY2UoaSkpO1xuICAgICAgcmV0dXJuIG4gPyAoZGF0ZS53ID0gZDNfdGltZV9kYXlMb29rdXAuZ2V0KG5bMF0udG9Mb3dlckNhc2UoKSksIGkgKyBuWzBdLmxlbmd0aCkgOiAtMTtcbiAgICB9XG4gICAgZnVuY3Rpb24gZDNfdGltZV9wYXJzZU1vbnRoQWJicmV2KGRhdGUsIHN0cmluZywgaSkge1xuICAgICAgZDNfdGltZV9tb250aEFiYnJldlJlLmxhc3RJbmRleCA9IDA7XG4gICAgICB2YXIgbiA9IGQzX3RpbWVfbW9udGhBYmJyZXZSZS5leGVjKHN0cmluZy5zbGljZShpKSk7XG4gICAgICByZXR1cm4gbiA/IChkYXRlLm0gPSBkM190aW1lX21vbnRoQWJicmV2TG9va3VwLmdldChuWzBdLnRvTG93ZXJDYXNlKCkpLCBpICsgblswXS5sZW5ndGgpIDogLTE7XG4gICAgfVxuICAgIGZ1bmN0aW9uIGQzX3RpbWVfcGFyc2VNb250aChkYXRlLCBzdHJpbmcsIGkpIHtcbiAgICAgIGQzX3RpbWVfbW9udGhSZS5sYXN0SW5kZXggPSAwO1xuICAgICAgdmFyIG4gPSBkM190aW1lX21vbnRoUmUuZXhlYyhzdHJpbmcuc2xpY2UoaSkpO1xuICAgICAgcmV0dXJuIG4gPyAoZGF0ZS5tID0gZDNfdGltZV9tb250aExvb2t1cC5nZXQoblswXS50b0xvd2VyQ2FzZSgpKSwgaSArIG5bMF0ubGVuZ3RoKSA6IC0xO1xuICAgIH1cbiAgICBmdW5jdGlvbiBkM190aW1lX3BhcnNlTG9jYWxlRnVsbChkYXRlLCBzdHJpbmcsIGkpIHtcbiAgICAgIHJldHVybiBkM190aW1lX3BhcnNlKGRhdGUsIGQzX3RpbWVfZm9ybWF0cy5jLnRvU3RyaW5nKCksIHN0cmluZywgaSk7XG4gICAgfVxuICAgIGZ1bmN0aW9uIGQzX3RpbWVfcGFyc2VMb2NhbGVEYXRlKGRhdGUsIHN0cmluZywgaSkge1xuICAgICAgcmV0dXJuIGQzX3RpbWVfcGFyc2UoZGF0ZSwgZDNfdGltZV9mb3JtYXRzLngudG9TdHJpbmcoKSwgc3RyaW5nLCBpKTtcbiAgICB9XG4gICAgZnVuY3Rpb24gZDNfdGltZV9wYXJzZUxvY2FsZVRpbWUoZGF0ZSwgc3RyaW5nLCBpKSB7XG4gICAgICByZXR1cm4gZDNfdGltZV9wYXJzZShkYXRlLCBkM190aW1lX2Zvcm1hdHMuWC50b1N0cmluZygpLCBzdHJpbmcsIGkpO1xuICAgIH1cbiAgICBmdW5jdGlvbiBkM190aW1lX3BhcnNlQW1QbShkYXRlLCBzdHJpbmcsIGkpIHtcbiAgICAgIHZhciBuID0gZDNfdGltZV9wZXJpb2RMb29rdXAuZ2V0KHN0cmluZy5zbGljZShpLCBpICs9IDIpLnRvTG93ZXJDYXNlKCkpO1xuICAgICAgcmV0dXJuIG4gPT0gbnVsbCA/IC0xIDogKGRhdGUucCA9IG4sIGkpO1xuICAgIH1cbiAgICByZXR1cm4gZDNfdGltZV9mb3JtYXQ7XG4gIH1cbiAgdmFyIGQzX3RpbWVfZm9ybWF0UGFkcyA9IHtcbiAgICBcIi1cIjogXCJcIixcbiAgICBfOiBcIiBcIixcbiAgICBcIjBcIjogXCIwXCJcbiAgfSwgZDNfdGltZV9udW1iZXJSZSA9IC9eXFxzKlxcZCsvLCBkM190aW1lX3BlcmNlbnRSZSA9IC9eJS87XG4gIGZ1bmN0aW9uIGQzX3RpbWVfZm9ybWF0UGFkKHZhbHVlLCBmaWxsLCB3aWR0aCkge1xuICAgIHZhciBzaWduID0gdmFsdWUgPCAwID8gXCItXCIgOiBcIlwiLCBzdHJpbmcgPSAoc2lnbiA/IC12YWx1ZSA6IHZhbHVlKSArIFwiXCIsIGxlbmd0aCA9IHN0cmluZy5sZW5ndGg7XG4gICAgcmV0dXJuIHNpZ24gKyAobGVuZ3RoIDwgd2lkdGggPyBuZXcgQXJyYXkod2lkdGggLSBsZW5ndGggKyAxKS5qb2luKGZpbGwpICsgc3RyaW5nIDogc3RyaW5nKTtcbiAgfVxuICBmdW5jdGlvbiBkM190aW1lX2Zvcm1hdFJlKG5hbWVzKSB7XG4gICAgcmV0dXJuIG5ldyBSZWdFeHAoXCJeKD86XCIgKyBuYW1lcy5tYXAoZDMucmVxdW90ZSkuam9pbihcInxcIikgKyBcIilcIiwgXCJpXCIpO1xuICB9XG4gIGZ1bmN0aW9uIGQzX3RpbWVfZm9ybWF0TG9va3VwKG5hbWVzKSB7XG4gICAgdmFyIG1hcCA9IG5ldyBkM19NYXAoKSwgaSA9IC0xLCBuID0gbmFtZXMubGVuZ3RoO1xuICAgIHdoaWxlICgrK2kgPCBuKSBtYXAuc2V0KG5hbWVzW2ldLnRvTG93ZXJDYXNlKCksIGkpO1xuICAgIHJldHVybiBtYXA7XG4gIH1cbiAgZnVuY3Rpb24gZDNfdGltZV9wYXJzZVdlZWtkYXlOdW1iZXIoZGF0ZSwgc3RyaW5nLCBpKSB7XG4gICAgZDNfdGltZV9udW1iZXJSZS5sYXN0SW5kZXggPSAwO1xuICAgIHZhciBuID0gZDNfdGltZV9udW1iZXJSZS5leGVjKHN0cmluZy5zbGljZShpLCBpICsgMSkpO1xuICAgIHJldHVybiBuID8gKGRhdGUudyA9ICtuWzBdLCBpICsgblswXS5sZW5ndGgpIDogLTE7XG4gIH1cbiAgZnVuY3Rpb24gZDNfdGltZV9wYXJzZVdlZWtOdW1iZXJTdW5kYXkoZGF0ZSwgc3RyaW5nLCBpKSB7XG4gICAgZDNfdGltZV9udW1iZXJSZS5sYXN0SW5kZXggPSAwO1xuICAgIHZhciBuID0gZDNfdGltZV9udW1iZXJSZS5leGVjKHN0cmluZy5zbGljZShpKSk7XG4gICAgcmV0dXJuIG4gPyAoZGF0ZS5VID0gK25bMF0sIGkgKyBuWzBdLmxlbmd0aCkgOiAtMTtcbiAgfVxuICBmdW5jdGlvbiBkM190aW1lX3BhcnNlV2Vla051bWJlck1vbmRheShkYXRlLCBzdHJpbmcsIGkpIHtcbiAgICBkM190aW1lX251bWJlclJlLmxhc3RJbmRleCA9IDA7XG4gICAgdmFyIG4gPSBkM190aW1lX251bWJlclJlLmV4ZWMoc3RyaW5nLnNsaWNlKGkpKTtcbiAgICByZXR1cm4gbiA/IChkYXRlLlcgPSArblswXSwgaSArIG5bMF0ubGVuZ3RoKSA6IC0xO1xuICB9XG4gIGZ1bmN0aW9uIGQzX3RpbWVfcGFyc2VGdWxsWWVhcihkYXRlLCBzdHJpbmcsIGkpIHtcbiAgICBkM190aW1lX251bWJlclJlLmxhc3RJbmRleCA9IDA7XG4gICAgdmFyIG4gPSBkM190aW1lX251bWJlclJlLmV4ZWMoc3RyaW5nLnNsaWNlKGksIGkgKyA0KSk7XG4gICAgcmV0dXJuIG4gPyAoZGF0ZS55ID0gK25bMF0sIGkgKyBuWzBdLmxlbmd0aCkgOiAtMTtcbiAgfVxuICBmdW5jdGlvbiBkM190aW1lX3BhcnNlWWVhcihkYXRlLCBzdHJpbmcsIGkpIHtcbiAgICBkM190aW1lX251bWJlclJlLmxhc3RJbmRleCA9IDA7XG4gICAgdmFyIG4gPSBkM190aW1lX251bWJlclJlLmV4ZWMoc3RyaW5nLnNsaWNlKGksIGkgKyAyKSk7XG4gICAgcmV0dXJuIG4gPyAoZGF0ZS55ID0gZDNfdGltZV9leHBhbmRZZWFyKCtuWzBdKSwgaSArIG5bMF0ubGVuZ3RoKSA6IC0xO1xuICB9XG4gIGZ1bmN0aW9uIGQzX3RpbWVfcGFyc2Vab25lKGRhdGUsIHN0cmluZywgaSkge1xuICAgIHJldHVybiAvXlsrLV1cXGR7NH0kLy50ZXN0KHN0cmluZyA9IHN0cmluZy5zbGljZShpLCBpICsgNSkpID8gKGRhdGUuWiA9IC1zdHJpbmcsIFxuICAgIGkgKyA1KSA6IC0xO1xuICB9XG4gIGZ1bmN0aW9uIGQzX3RpbWVfZXhwYW5kWWVhcihkKSB7XG4gICAgcmV0dXJuIGQgKyAoZCA+IDY4ID8gMTkwMCA6IDJlMyk7XG4gIH1cbiAgZnVuY3Rpb24gZDNfdGltZV9wYXJzZU1vbnRoTnVtYmVyKGRhdGUsIHN0cmluZywgaSkge1xuICAgIGQzX3RpbWVfbnVtYmVyUmUubGFzdEluZGV4ID0gMDtcbiAgICB2YXIgbiA9IGQzX3RpbWVfbnVtYmVyUmUuZXhlYyhzdHJpbmcuc2xpY2UoaSwgaSArIDIpKTtcbiAgICByZXR1cm4gbiA/IChkYXRlLm0gPSBuWzBdIC0gMSwgaSArIG5bMF0ubGVuZ3RoKSA6IC0xO1xuICB9XG4gIGZ1bmN0aW9uIGQzX3RpbWVfcGFyc2VEYXkoZGF0ZSwgc3RyaW5nLCBpKSB7XG4gICAgZDNfdGltZV9udW1iZXJSZS5sYXN0SW5kZXggPSAwO1xuICAgIHZhciBuID0gZDNfdGltZV9udW1iZXJSZS5leGVjKHN0cmluZy5zbGljZShpLCBpICsgMikpO1xuICAgIHJldHVybiBuID8gKGRhdGUuZCA9ICtuWzBdLCBpICsgblswXS5sZW5ndGgpIDogLTE7XG4gIH1cbiAgZnVuY3Rpb24gZDNfdGltZV9wYXJzZURheU9mWWVhcihkYXRlLCBzdHJpbmcsIGkpIHtcbiAgICBkM190aW1lX251bWJlclJlLmxhc3RJbmRleCA9IDA7XG4gICAgdmFyIG4gPSBkM190aW1lX251bWJlclJlLmV4ZWMoc3RyaW5nLnNsaWNlKGksIGkgKyAzKSk7XG4gICAgcmV0dXJuIG4gPyAoZGF0ZS5qID0gK25bMF0sIGkgKyBuWzBdLmxlbmd0aCkgOiAtMTtcbiAgfVxuICBmdW5jdGlvbiBkM190aW1lX3BhcnNlSG91cjI0KGRhdGUsIHN0cmluZywgaSkge1xuICAgIGQzX3RpbWVfbnVtYmVyUmUubGFzdEluZGV4ID0gMDtcbiAgICB2YXIgbiA9IGQzX3RpbWVfbnVtYmVyUmUuZXhlYyhzdHJpbmcuc2xpY2UoaSwgaSArIDIpKTtcbiAgICByZXR1cm4gbiA/IChkYXRlLkggPSArblswXSwgaSArIG5bMF0ubGVuZ3RoKSA6IC0xO1xuICB9XG4gIGZ1bmN0aW9uIGQzX3RpbWVfcGFyc2VNaW51dGVzKGRhdGUsIHN0cmluZywgaSkge1xuICAgIGQzX3RpbWVfbnVtYmVyUmUubGFzdEluZGV4ID0gMDtcbiAgICB2YXIgbiA9IGQzX3RpbWVfbnVtYmVyUmUuZXhlYyhzdHJpbmcuc2xpY2UoaSwgaSArIDIpKTtcbiAgICByZXR1cm4gbiA/IChkYXRlLk0gPSArblswXSwgaSArIG5bMF0ubGVuZ3RoKSA6IC0xO1xuICB9XG4gIGZ1bmN0aW9uIGQzX3RpbWVfcGFyc2VTZWNvbmRzKGRhdGUsIHN0cmluZywgaSkge1xuICAgIGQzX3RpbWVfbnVtYmVyUmUubGFzdEluZGV4ID0gMDtcbiAgICB2YXIgbiA9IGQzX3RpbWVfbnVtYmVyUmUuZXhlYyhzdHJpbmcuc2xpY2UoaSwgaSArIDIpKTtcbiAgICByZXR1cm4gbiA/IChkYXRlLlMgPSArblswXSwgaSArIG5bMF0ubGVuZ3RoKSA6IC0xO1xuICB9XG4gIGZ1bmN0aW9uIGQzX3RpbWVfcGFyc2VNaWxsaXNlY29uZHMoZGF0ZSwgc3RyaW5nLCBpKSB7XG4gICAgZDNfdGltZV9udW1iZXJSZS5sYXN0SW5kZXggPSAwO1xuICAgIHZhciBuID0gZDNfdGltZV9udW1iZXJSZS5leGVjKHN0cmluZy5zbGljZShpLCBpICsgMykpO1xuICAgIHJldHVybiBuID8gKGRhdGUuTCA9ICtuWzBdLCBpICsgblswXS5sZW5ndGgpIDogLTE7XG4gIH1cbiAgZnVuY3Rpb24gZDNfdGltZV96b25lKGQpIHtcbiAgICB2YXIgeiA9IGQuZ2V0VGltZXpvbmVPZmZzZXQoKSwgenMgPSB6ID4gMCA/IFwiLVwiIDogXCIrXCIsIHpoID0gYWJzKHopIC8gNjAgfCAwLCB6bSA9IGFicyh6KSAlIDYwO1xuICAgIHJldHVybiB6cyArIGQzX3RpbWVfZm9ybWF0UGFkKHpoLCBcIjBcIiwgMikgKyBkM190aW1lX2Zvcm1hdFBhZCh6bSwgXCIwXCIsIDIpO1xuICB9XG4gIGZ1bmN0aW9uIGQzX3RpbWVfcGFyc2VMaXRlcmFsUGVyY2VudChkYXRlLCBzdHJpbmcsIGkpIHtcbiAgICBkM190aW1lX3BlcmNlbnRSZS5sYXN0SW5kZXggPSAwO1xuICAgIHZhciBuID0gZDNfdGltZV9wZXJjZW50UmUuZXhlYyhzdHJpbmcuc2xpY2UoaSwgaSArIDEpKTtcbiAgICByZXR1cm4gbiA/IGkgKyBuWzBdLmxlbmd0aCA6IC0xO1xuICB9XG4gIGZ1bmN0aW9uIGQzX3RpbWVfZm9ybWF0TXVsdGkoZm9ybWF0cykge1xuICAgIHZhciBuID0gZm9ybWF0cy5sZW5ndGgsIGkgPSAtMTtcbiAgICB3aGlsZSAoKytpIDwgbikgZm9ybWF0c1tpXVswXSA9IHRoaXMoZm9ybWF0c1tpXVswXSk7XG4gICAgcmV0dXJuIGZ1bmN0aW9uKGRhdGUpIHtcbiAgICAgIHZhciBpID0gMCwgZiA9IGZvcm1hdHNbaV07XG4gICAgICB3aGlsZSAoIWZbMV0oZGF0ZSkpIGYgPSBmb3JtYXRzWysraV07XG4gICAgICByZXR1cm4gZlswXShkYXRlKTtcbiAgICB9O1xuICB9XG4gIGQzLmxvY2FsZSA9IGZ1bmN0aW9uKGxvY2FsZSkge1xuICAgIHJldHVybiB7XG4gICAgICBudW1iZXJGb3JtYXQ6IGQzX2xvY2FsZV9udW1iZXJGb3JtYXQobG9jYWxlKSxcbiAgICAgIHRpbWVGb3JtYXQ6IGQzX2xvY2FsZV90aW1lRm9ybWF0KGxvY2FsZSlcbiAgICB9O1xuICB9O1xuICB2YXIgZDNfbG9jYWxlX2VuVVMgPSBkMy5sb2NhbGUoe1xuICAgIGRlY2ltYWw6IFwiLlwiLFxuICAgIHRob3VzYW5kczogXCIsXCIsXG4gICAgZ3JvdXBpbmc6IFsgMyBdLFxuICAgIGN1cnJlbmN5OiBbIFwiJFwiLCBcIlwiIF0sXG4gICAgZGF0ZVRpbWU6IFwiJWEgJWIgJWUgJVggJVlcIixcbiAgICBkYXRlOiBcIiVtLyVkLyVZXCIsXG4gICAgdGltZTogXCIlSDolTTolU1wiLFxuICAgIHBlcmlvZHM6IFsgXCJBTVwiLCBcIlBNXCIgXSxcbiAgICBkYXlzOiBbIFwiU3VuZGF5XCIsIFwiTW9uZGF5XCIsIFwiVHVlc2RheVwiLCBcIldlZG5lc2RheVwiLCBcIlRodXJzZGF5XCIsIFwiRnJpZGF5XCIsIFwiU2F0dXJkYXlcIiBdLFxuICAgIHNob3J0RGF5czogWyBcIlN1blwiLCBcIk1vblwiLCBcIlR1ZVwiLCBcIldlZFwiLCBcIlRodVwiLCBcIkZyaVwiLCBcIlNhdFwiIF0sXG4gICAgbW9udGhzOiBbIFwiSmFudWFyeVwiLCBcIkZlYnJ1YXJ5XCIsIFwiTWFyY2hcIiwgXCJBcHJpbFwiLCBcIk1heVwiLCBcIkp1bmVcIiwgXCJKdWx5XCIsIFwiQXVndXN0XCIsIFwiU2VwdGVtYmVyXCIsIFwiT2N0b2JlclwiLCBcIk5vdmVtYmVyXCIsIFwiRGVjZW1iZXJcIiBdLFxuICAgIHNob3J0TW9udGhzOiBbIFwiSmFuXCIsIFwiRmViXCIsIFwiTWFyXCIsIFwiQXByXCIsIFwiTWF5XCIsIFwiSnVuXCIsIFwiSnVsXCIsIFwiQXVnXCIsIFwiU2VwXCIsIFwiT2N0XCIsIFwiTm92XCIsIFwiRGVjXCIgXVxuICB9KTtcbiAgZDMuZm9ybWF0ID0gZDNfbG9jYWxlX2VuVVMubnVtYmVyRm9ybWF0O1xuICBkMy5nZW8gPSB7fTtcbiAgZnVuY3Rpb24gZDNfYWRkZXIoKSB7fVxuICBkM19hZGRlci5wcm90b3R5cGUgPSB7XG4gICAgczogMCxcbiAgICB0OiAwLFxuICAgIGFkZDogZnVuY3Rpb24oeSkge1xuICAgICAgZDNfYWRkZXJTdW0oeSwgdGhpcy50LCBkM19hZGRlclRlbXApO1xuICAgICAgZDNfYWRkZXJTdW0oZDNfYWRkZXJUZW1wLnMsIHRoaXMucywgdGhpcyk7XG4gICAgICBpZiAodGhpcy5zKSB0aGlzLnQgKz0gZDNfYWRkZXJUZW1wLnQ7IGVsc2UgdGhpcy5zID0gZDNfYWRkZXJUZW1wLnQ7XG4gICAgfSxcbiAgICByZXNldDogZnVuY3Rpb24oKSB7XG4gICAgICB0aGlzLnMgPSB0aGlzLnQgPSAwO1xuICAgIH0sXG4gICAgdmFsdWVPZjogZnVuY3Rpb24oKSB7XG4gICAgICByZXR1cm4gdGhpcy5zO1xuICAgIH1cbiAgfTtcbiAgdmFyIGQzX2FkZGVyVGVtcCA9IG5ldyBkM19hZGRlcigpO1xuICBmdW5jdGlvbiBkM19hZGRlclN1bShhLCBiLCBvKSB7XG4gICAgdmFyIHggPSBvLnMgPSBhICsgYiwgYnYgPSB4IC0gYSwgYXYgPSB4IC0gYnY7XG4gICAgby50ID0gYSAtIGF2ICsgKGIgLSBidik7XG4gIH1cbiAgZDMuZ2VvLnN0cmVhbSA9IGZ1bmN0aW9uKG9iamVjdCwgbGlzdGVuZXIpIHtcbiAgICBpZiAob2JqZWN0ICYmIGQzX2dlb19zdHJlYW1PYmplY3RUeXBlLmhhc093blByb3BlcnR5KG9iamVjdC50eXBlKSkge1xuICAgICAgZDNfZ2VvX3N0cmVhbU9iamVjdFR5cGVbb2JqZWN0LnR5cGVdKG9iamVjdCwgbGlzdGVuZXIpO1xuICAgIH0gZWxzZSB7XG4gICAgICBkM19nZW9fc3RyZWFtR2VvbWV0cnkob2JqZWN0LCBsaXN0ZW5lcik7XG4gICAgfVxuICB9O1xuICBmdW5jdGlvbiBkM19nZW9fc3RyZWFtR2VvbWV0cnkoZ2VvbWV0cnksIGxpc3RlbmVyKSB7XG4gICAgaWYgKGdlb21ldHJ5ICYmIGQzX2dlb19zdHJlYW1HZW9tZXRyeVR5cGUuaGFzT3duUHJvcGVydHkoZ2VvbWV0cnkudHlwZSkpIHtcbiAgICAgIGQzX2dlb19zdHJlYW1HZW9tZXRyeVR5cGVbZ2VvbWV0cnkudHlwZV0oZ2VvbWV0cnksIGxpc3RlbmVyKTtcbiAgICB9XG4gIH1cbiAgdmFyIGQzX2dlb19zdHJlYW1PYmplY3RUeXBlID0ge1xuICAgIEZlYXR1cmU6IGZ1bmN0aW9uKGZlYXR1cmUsIGxpc3RlbmVyKSB7XG4gICAgICBkM19nZW9fc3RyZWFtR2VvbWV0cnkoZmVhdHVyZS5nZW9tZXRyeSwgbGlzdGVuZXIpO1xuICAgIH0sXG4gICAgRmVhdHVyZUNvbGxlY3Rpb246IGZ1bmN0aW9uKG9iamVjdCwgbGlzdGVuZXIpIHtcbiAgICAgIHZhciBmZWF0dXJlcyA9IG9iamVjdC5mZWF0dXJlcywgaSA9IC0xLCBuID0gZmVhdHVyZXMubGVuZ3RoO1xuICAgICAgd2hpbGUgKCsraSA8IG4pIGQzX2dlb19zdHJlYW1HZW9tZXRyeShmZWF0dXJlc1tpXS5nZW9tZXRyeSwgbGlzdGVuZXIpO1xuICAgIH1cbiAgfTtcbiAgdmFyIGQzX2dlb19zdHJlYW1HZW9tZXRyeVR5cGUgPSB7XG4gICAgU3BoZXJlOiBmdW5jdGlvbihvYmplY3QsIGxpc3RlbmVyKSB7XG4gICAgICBsaXN0ZW5lci5zcGhlcmUoKTtcbiAgICB9LFxuICAgIFBvaW50OiBmdW5jdGlvbihvYmplY3QsIGxpc3RlbmVyKSB7XG4gICAgICBvYmplY3QgPSBvYmplY3QuY29vcmRpbmF0ZXM7XG4gICAgICBsaXN0ZW5lci5wb2ludChvYmplY3RbMF0sIG9iamVjdFsxXSwgb2JqZWN0WzJdKTtcbiAgICB9LFxuICAgIE11bHRpUG9pbnQ6IGZ1bmN0aW9uKG9iamVjdCwgbGlzdGVuZXIpIHtcbiAgICAgIHZhciBjb29yZGluYXRlcyA9IG9iamVjdC5jb29yZGluYXRlcywgaSA9IC0xLCBuID0gY29vcmRpbmF0ZXMubGVuZ3RoO1xuICAgICAgd2hpbGUgKCsraSA8IG4pIG9iamVjdCA9IGNvb3JkaW5hdGVzW2ldLCBsaXN0ZW5lci5wb2ludChvYmplY3RbMF0sIG9iamVjdFsxXSwgb2JqZWN0WzJdKTtcbiAgICB9LFxuICAgIExpbmVTdHJpbmc6IGZ1bmN0aW9uKG9iamVjdCwgbGlzdGVuZXIpIHtcbiAgICAgIGQzX2dlb19zdHJlYW1MaW5lKG9iamVjdC5jb29yZGluYXRlcywgbGlzdGVuZXIsIDApO1xuICAgIH0sXG4gICAgTXVsdGlMaW5lU3RyaW5nOiBmdW5jdGlvbihvYmplY3QsIGxpc3RlbmVyKSB7XG4gICAgICB2YXIgY29vcmRpbmF0ZXMgPSBvYmplY3QuY29vcmRpbmF0ZXMsIGkgPSAtMSwgbiA9IGNvb3JkaW5hdGVzLmxlbmd0aDtcbiAgICAgIHdoaWxlICgrK2kgPCBuKSBkM19nZW9fc3RyZWFtTGluZShjb29yZGluYXRlc1tpXSwgbGlzdGVuZXIsIDApO1xuICAgIH0sXG4gICAgUG9seWdvbjogZnVuY3Rpb24ob2JqZWN0LCBsaXN0ZW5lcikge1xuICAgICAgZDNfZ2VvX3N0cmVhbVBvbHlnb24ob2JqZWN0LmNvb3JkaW5hdGVzLCBsaXN0ZW5lcik7XG4gICAgfSxcbiAgICBNdWx0aVBvbHlnb246IGZ1bmN0aW9uKG9iamVjdCwgbGlzdGVuZXIpIHtcbiAgICAgIHZhciBjb29yZGluYXRlcyA9IG9iamVjdC5jb29yZGluYXRlcywgaSA9IC0xLCBuID0gY29vcmRpbmF0ZXMubGVuZ3RoO1xuICAgICAgd2hpbGUgKCsraSA8IG4pIGQzX2dlb19zdHJlYW1Qb2x5Z29uKGNvb3JkaW5hdGVzW2ldLCBsaXN0ZW5lcik7XG4gICAgfSxcbiAgICBHZW9tZXRyeUNvbGxlY3Rpb246IGZ1bmN0aW9uKG9iamVjdCwgbGlzdGVuZXIpIHtcbiAgICAgIHZhciBnZW9tZXRyaWVzID0gb2JqZWN0Lmdlb21ldHJpZXMsIGkgPSAtMSwgbiA9IGdlb21ldHJpZXMubGVuZ3RoO1xuICAgICAgd2hpbGUgKCsraSA8IG4pIGQzX2dlb19zdHJlYW1HZW9tZXRyeShnZW9tZXRyaWVzW2ldLCBsaXN0ZW5lcik7XG4gICAgfVxuICB9O1xuICBmdW5jdGlvbiBkM19nZW9fc3RyZWFtTGluZShjb29yZGluYXRlcywgbGlzdGVuZXIsIGNsb3NlZCkge1xuICAgIHZhciBpID0gLTEsIG4gPSBjb29yZGluYXRlcy5sZW5ndGggLSBjbG9zZWQsIGNvb3JkaW5hdGU7XG4gICAgbGlzdGVuZXIubGluZVN0YXJ0KCk7XG4gICAgd2hpbGUgKCsraSA8IG4pIGNvb3JkaW5hdGUgPSBjb29yZGluYXRlc1tpXSwgbGlzdGVuZXIucG9pbnQoY29vcmRpbmF0ZVswXSwgY29vcmRpbmF0ZVsxXSwgY29vcmRpbmF0ZVsyXSk7XG4gICAgbGlzdGVuZXIubGluZUVuZCgpO1xuICB9XG4gIGZ1bmN0aW9uIGQzX2dlb19zdHJlYW1Qb2x5Z29uKGNvb3JkaW5hdGVzLCBsaXN0ZW5lcikge1xuICAgIHZhciBpID0gLTEsIG4gPSBjb29yZGluYXRlcy5sZW5ndGg7XG4gICAgbGlzdGVuZXIucG9seWdvblN0YXJ0KCk7XG4gICAgd2hpbGUgKCsraSA8IG4pIGQzX2dlb19zdHJlYW1MaW5lKGNvb3JkaW5hdGVzW2ldLCBsaXN0ZW5lciwgMSk7XG4gICAgbGlzdGVuZXIucG9seWdvbkVuZCgpO1xuICB9XG4gIGQzLmdlby5hcmVhID0gZnVuY3Rpb24ob2JqZWN0KSB7XG4gICAgZDNfZ2VvX2FyZWFTdW0gPSAwO1xuICAgIGQzLmdlby5zdHJlYW0ob2JqZWN0LCBkM19nZW9fYXJlYSk7XG4gICAgcmV0dXJuIGQzX2dlb19hcmVhU3VtO1xuICB9O1xuICB2YXIgZDNfZ2VvX2FyZWFTdW0sIGQzX2dlb19hcmVhUmluZ1N1bSA9IG5ldyBkM19hZGRlcigpO1xuICB2YXIgZDNfZ2VvX2FyZWEgPSB7XG4gICAgc3BoZXJlOiBmdW5jdGlvbigpIHtcbiAgICAgIGQzX2dlb19hcmVhU3VtICs9IDQgKiDPgDtcbiAgICB9LFxuICAgIHBvaW50OiBkM19ub29wLFxuICAgIGxpbmVTdGFydDogZDNfbm9vcCxcbiAgICBsaW5lRW5kOiBkM19ub29wLFxuICAgIHBvbHlnb25TdGFydDogZnVuY3Rpb24oKSB7XG4gICAgICBkM19nZW9fYXJlYVJpbmdTdW0ucmVzZXQoKTtcbiAgICAgIGQzX2dlb19hcmVhLmxpbmVTdGFydCA9IGQzX2dlb19hcmVhUmluZ1N0YXJ0O1xuICAgIH0sXG4gICAgcG9seWdvbkVuZDogZnVuY3Rpb24oKSB7XG4gICAgICB2YXIgYXJlYSA9IDIgKiBkM19nZW9fYXJlYVJpbmdTdW07XG4gICAgICBkM19nZW9fYXJlYVN1bSArPSBhcmVhIDwgMCA/IDQgKiDPgCArIGFyZWEgOiBhcmVhO1xuICAgICAgZDNfZ2VvX2FyZWEubGluZVN0YXJ0ID0gZDNfZ2VvX2FyZWEubGluZUVuZCA9IGQzX2dlb19hcmVhLnBvaW50ID0gZDNfbm9vcDtcbiAgICB9XG4gIH07XG4gIGZ1bmN0aW9uIGQzX2dlb19hcmVhUmluZ1N0YXJ0KCkge1xuICAgIHZhciDOuzAwLCDPhjAwLCDOuzAsIGNvc8+GMCwgc2luz4YwO1xuICAgIGQzX2dlb19hcmVhLnBvaW50ID0gZnVuY3Rpb24ozrssIM+GKSB7XG4gICAgICBkM19nZW9fYXJlYS5wb2ludCA9IG5leHRQb2ludDtcbiAgICAgIM67MCA9ICjOuzAwID0gzrspICogZDNfcmFkaWFucywgY29zz4YwID0gTWF0aC5jb3Moz4YgPSAoz4YwMCA9IM+GKSAqIGQzX3JhZGlhbnMgLyAyICsgz4AgLyA0KSwgXG4gICAgICBzaW7PhjAgPSBNYXRoLnNpbijPhik7XG4gICAgfTtcbiAgICBmdW5jdGlvbiBuZXh0UG9pbnQozrssIM+GKSB7XG4gICAgICDOuyAqPSBkM19yYWRpYW5zO1xuICAgICAgz4YgPSDPhiAqIGQzX3JhZGlhbnMgLyAyICsgz4AgLyA0O1xuICAgICAgdmFyIGTOuyA9IM67IC0gzrswLCBzZM67ID0gZM67ID49IDAgPyAxIDogLTEsIGFkzrsgPSBzZM67ICogZM67LCBjb3PPhiA9IE1hdGguY29zKM+GKSwgc2luz4YgPSBNYXRoLnNpbijPhiksIGsgPSBzaW7PhjAgKiBzaW7PhiwgdSA9IGNvc8+GMCAqIGNvc8+GICsgayAqIE1hdGguY29zKGFkzrspLCB2ID0gayAqIHNkzrsgKiBNYXRoLnNpbihhZM67KTtcbiAgICAgIGQzX2dlb19hcmVhUmluZ1N1bS5hZGQoTWF0aC5hdGFuMih2LCB1KSk7XG4gICAgICDOuzAgPSDOuywgY29zz4YwID0gY29zz4YsIHNpbs+GMCA9IHNpbs+GO1xuICAgIH1cbiAgICBkM19nZW9fYXJlYS5saW5lRW5kID0gZnVuY3Rpb24oKSB7XG4gICAgICBuZXh0UG9pbnQozrswMCwgz4YwMCk7XG4gICAgfTtcbiAgfVxuICBmdW5jdGlvbiBkM19nZW9fY2FydGVzaWFuKHNwaGVyaWNhbCkge1xuICAgIHZhciDOuyA9IHNwaGVyaWNhbFswXSwgz4YgPSBzcGhlcmljYWxbMV0sIGNvc8+GID0gTWF0aC5jb3Moz4YpO1xuICAgIHJldHVybiBbIGNvc8+GICogTWF0aC5jb3MozrspLCBjb3PPhiAqIE1hdGguc2luKM67KSwgTWF0aC5zaW4oz4YpIF07XG4gIH1cbiAgZnVuY3Rpb24gZDNfZ2VvX2NhcnRlc2lhbkRvdChhLCBiKSB7XG4gICAgcmV0dXJuIGFbMF0gKiBiWzBdICsgYVsxXSAqIGJbMV0gKyBhWzJdICogYlsyXTtcbiAgfVxuICBmdW5jdGlvbiBkM19nZW9fY2FydGVzaWFuQ3Jvc3MoYSwgYikge1xuICAgIHJldHVybiBbIGFbMV0gKiBiWzJdIC0gYVsyXSAqIGJbMV0sIGFbMl0gKiBiWzBdIC0gYVswXSAqIGJbMl0sIGFbMF0gKiBiWzFdIC0gYVsxXSAqIGJbMF0gXTtcbiAgfVxuICBmdW5jdGlvbiBkM19nZW9fY2FydGVzaWFuQWRkKGEsIGIpIHtcbiAgICBhWzBdICs9IGJbMF07XG4gICAgYVsxXSArPSBiWzFdO1xuICAgIGFbMl0gKz0gYlsyXTtcbiAgfVxuICBmdW5jdGlvbiBkM19nZW9fY2FydGVzaWFuU2NhbGUodmVjdG9yLCBrKSB7XG4gICAgcmV0dXJuIFsgdmVjdG9yWzBdICogaywgdmVjdG9yWzFdICogaywgdmVjdG9yWzJdICogayBdO1xuICB9XG4gIGZ1bmN0aW9uIGQzX2dlb19jYXJ0ZXNpYW5Ob3JtYWxpemUoZCkge1xuICAgIHZhciBsID0gTWF0aC5zcXJ0KGRbMF0gKiBkWzBdICsgZFsxXSAqIGRbMV0gKyBkWzJdICogZFsyXSk7XG4gICAgZFswXSAvPSBsO1xuICAgIGRbMV0gLz0gbDtcbiAgICBkWzJdIC89IGw7XG4gIH1cbiAgZnVuY3Rpb24gZDNfZ2VvX3NwaGVyaWNhbChjYXJ0ZXNpYW4pIHtcbiAgICByZXR1cm4gWyBNYXRoLmF0YW4yKGNhcnRlc2lhblsxXSwgY2FydGVzaWFuWzBdKSwgZDNfYXNpbihjYXJ0ZXNpYW5bMl0pIF07XG4gIH1cbiAgZnVuY3Rpb24gZDNfZ2VvX3NwaGVyaWNhbEVxdWFsKGEsIGIpIHtcbiAgICByZXR1cm4gYWJzKGFbMF0gLSBiWzBdKSA8IM61ICYmIGFicyhhWzFdIC0gYlsxXSkgPCDOtTtcbiAgfVxuICBkMy5nZW8uYm91bmRzID0gZnVuY3Rpb24oKSB7XG4gICAgdmFyIM67MCwgz4YwLCDOuzEsIM+GMSwgzrtfLCDOu19fLCDPhl9fLCBwMCwgZM67U3VtLCByYW5nZXMsIHJhbmdlO1xuICAgIHZhciBib3VuZCA9IHtcbiAgICAgIHBvaW50OiBwb2ludCxcbiAgICAgIGxpbmVTdGFydDogbGluZVN0YXJ0LFxuICAgICAgbGluZUVuZDogbGluZUVuZCxcbiAgICAgIHBvbHlnb25TdGFydDogZnVuY3Rpb24oKSB7XG4gICAgICAgIGJvdW5kLnBvaW50ID0gcmluZ1BvaW50O1xuICAgICAgICBib3VuZC5saW5lU3RhcnQgPSByaW5nU3RhcnQ7XG4gICAgICAgIGJvdW5kLmxpbmVFbmQgPSByaW5nRW5kO1xuICAgICAgICBkzrtTdW0gPSAwO1xuICAgICAgICBkM19nZW9fYXJlYS5wb2x5Z29uU3RhcnQoKTtcbiAgICAgIH0sXG4gICAgICBwb2x5Z29uRW5kOiBmdW5jdGlvbigpIHtcbiAgICAgICAgZDNfZ2VvX2FyZWEucG9seWdvbkVuZCgpO1xuICAgICAgICBib3VuZC5wb2ludCA9IHBvaW50O1xuICAgICAgICBib3VuZC5saW5lU3RhcnQgPSBsaW5lU3RhcnQ7XG4gICAgICAgIGJvdW5kLmxpbmVFbmQgPSBsaW5lRW5kO1xuICAgICAgICBpZiAoZDNfZ2VvX2FyZWFSaW5nU3VtIDwgMCkgzrswID0gLSjOuzEgPSAxODApLCDPhjAgPSAtKM+GMSA9IDkwKTsgZWxzZSBpZiAoZM67U3VtID4gzrUpIM+GMSA9IDkwOyBlbHNlIGlmIChkzrtTdW0gPCAtzrUpIM+GMCA9IC05MDtcbiAgICAgICAgcmFuZ2VbMF0gPSDOuzAsIHJhbmdlWzFdID0gzrsxO1xuICAgICAgfVxuICAgIH07XG4gICAgZnVuY3Rpb24gcG9pbnQozrssIM+GKSB7XG4gICAgICByYW5nZXMucHVzaChyYW5nZSA9IFsgzrswID0gzrssIM67MSA9IM67IF0pO1xuICAgICAgaWYgKM+GIDwgz4YwKSDPhjAgPSDPhjtcbiAgICAgIGlmICjPhiA+IM+GMSkgz4YxID0gz4Y7XG4gICAgfVxuICAgIGZ1bmN0aW9uIGxpbmVQb2ludCjOuywgz4YpIHtcbiAgICAgIHZhciBwID0gZDNfZ2VvX2NhcnRlc2lhbihbIM67ICogZDNfcmFkaWFucywgz4YgKiBkM19yYWRpYW5zIF0pO1xuICAgICAgaWYgKHAwKSB7XG4gICAgICAgIHZhciBub3JtYWwgPSBkM19nZW9fY2FydGVzaWFuQ3Jvc3MocDAsIHApLCBlcXVhdG9yaWFsID0gWyBub3JtYWxbMV0sIC1ub3JtYWxbMF0sIDAgXSwgaW5mbGVjdGlvbiA9IGQzX2dlb19jYXJ0ZXNpYW5Dcm9zcyhlcXVhdG9yaWFsLCBub3JtYWwpO1xuICAgICAgICBkM19nZW9fY2FydGVzaWFuTm9ybWFsaXplKGluZmxlY3Rpb24pO1xuICAgICAgICBpbmZsZWN0aW9uID0gZDNfZ2VvX3NwaGVyaWNhbChpbmZsZWN0aW9uKTtcbiAgICAgICAgdmFyIGTOuyA9IM67IC0gzrtfLCBzID0gZM67ID4gMCA/IDEgOiAtMSwgzrtpID0gaW5mbGVjdGlvblswXSAqIGQzX2RlZ3JlZXMgKiBzLCBhbnRpbWVyaWRpYW4gPSBhYnMoZM67KSA+IDE4MDtcbiAgICAgICAgaWYgKGFudGltZXJpZGlhbiBeIChzICogzrtfIDwgzrtpICYmIM67aSA8IHMgKiDOuykpIHtcbiAgICAgICAgICB2YXIgz4ZpID0gaW5mbGVjdGlvblsxXSAqIGQzX2RlZ3JlZXM7XG4gICAgICAgICAgaWYgKM+GaSA+IM+GMSkgz4YxID0gz4ZpO1xuICAgICAgICB9IGVsc2UgaWYgKM67aSA9ICjOu2kgKyAzNjApICUgMzYwIC0gMTgwLCBhbnRpbWVyaWRpYW4gXiAocyAqIM67XyA8IM67aSAmJiDOu2kgPCBzICogzrspKSB7XG4gICAgICAgICAgdmFyIM+GaSA9IC1pbmZsZWN0aW9uWzFdICogZDNfZGVncmVlcztcbiAgICAgICAgICBpZiAoz4ZpIDwgz4YwKSDPhjAgPSDPhmk7XG4gICAgICAgIH0gZWxzZSB7XG4gICAgICAgICAgaWYgKM+GIDwgz4YwKSDPhjAgPSDPhjtcbiAgICAgICAgICBpZiAoz4YgPiDPhjEpIM+GMSA9IM+GO1xuICAgICAgICB9XG4gICAgICAgIGlmIChhbnRpbWVyaWRpYW4pIHtcbiAgICAgICAgICBpZiAozrsgPCDOu18pIHtcbiAgICAgICAgICAgIGlmIChhbmdsZSjOuzAsIM67KSA+IGFuZ2xlKM67MCwgzrsxKSkgzrsxID0gzrs7XG4gICAgICAgICAgfSBlbHNlIHtcbiAgICAgICAgICAgIGlmIChhbmdsZSjOuywgzrsxKSA+IGFuZ2xlKM67MCwgzrsxKSkgzrswID0gzrs7XG4gICAgICAgICAgfVxuICAgICAgICB9IGVsc2Uge1xuICAgICAgICAgIGlmICjOuzEgPj0gzrswKSB7XG4gICAgICAgICAgICBpZiAozrsgPCDOuzApIM67MCA9IM67O1xuICAgICAgICAgICAgaWYgKM67ID4gzrsxKSDOuzEgPSDOuztcbiAgICAgICAgICB9IGVsc2Uge1xuICAgICAgICAgICAgaWYgKM67ID4gzrtfKSB7XG4gICAgICAgICAgICAgIGlmIChhbmdsZSjOuzAsIM67KSA+IGFuZ2xlKM67MCwgzrsxKSkgzrsxID0gzrs7XG4gICAgICAgICAgICB9IGVsc2Uge1xuICAgICAgICAgICAgICBpZiAoYW5nbGUozrssIM67MSkgPiBhbmdsZSjOuzAsIM67MSkpIM67MCA9IM67O1xuICAgICAgICAgICAgfVxuICAgICAgICAgIH1cbiAgICAgICAgfVxuICAgICAgfSBlbHNlIHtcbiAgICAgICAgcG9pbnQozrssIM+GKTtcbiAgICAgIH1cbiAgICAgIHAwID0gcCwgzrtfID0gzrs7XG4gICAgfVxuICAgIGZ1bmN0aW9uIGxpbmVTdGFydCgpIHtcbiAgICAgIGJvdW5kLnBvaW50ID0gbGluZVBvaW50O1xuICAgIH1cbiAgICBmdW5jdGlvbiBsaW5lRW5kKCkge1xuICAgICAgcmFuZ2VbMF0gPSDOuzAsIHJhbmdlWzFdID0gzrsxO1xuICAgICAgYm91bmQucG9pbnQgPSBwb2ludDtcbiAgICAgIHAwID0gbnVsbDtcbiAgICB9XG4gICAgZnVuY3Rpb24gcmluZ1BvaW50KM67LCDPhikge1xuICAgICAgaWYgKHAwKSB7XG4gICAgICAgIHZhciBkzrsgPSDOuyAtIM67XztcbiAgICAgICAgZM67U3VtICs9IGFicyhkzrspID4gMTgwID8gZM67ICsgKGTOuyA+IDAgPyAzNjAgOiAtMzYwKSA6IGTOuztcbiAgICAgIH0gZWxzZSDOu19fID0gzrssIM+GX18gPSDPhjtcbiAgICAgIGQzX2dlb19hcmVhLnBvaW50KM67LCDPhik7XG4gICAgICBsaW5lUG9pbnQozrssIM+GKTtcbiAgICB9XG4gICAgZnVuY3Rpb24gcmluZ1N0YXJ0KCkge1xuICAgICAgZDNfZ2VvX2FyZWEubGluZVN0YXJ0KCk7XG4gICAgfVxuICAgIGZ1bmN0aW9uIHJpbmdFbmQoKSB7XG4gICAgICByaW5nUG9pbnQozrtfXywgz4ZfXyk7XG4gICAgICBkM19nZW9fYXJlYS5saW5lRW5kKCk7XG4gICAgICBpZiAoYWJzKGTOu1N1bSkgPiDOtSkgzrswID0gLSjOuzEgPSAxODApO1xuICAgICAgcmFuZ2VbMF0gPSDOuzAsIHJhbmdlWzFdID0gzrsxO1xuICAgICAgcDAgPSBudWxsO1xuICAgIH1cbiAgICBmdW5jdGlvbiBhbmdsZSjOuzAsIM67MSkge1xuICAgICAgcmV0dXJuICjOuzEgLT0gzrswKSA8IDAgPyDOuzEgKyAzNjAgOiDOuzE7XG4gICAgfVxuICAgIGZ1bmN0aW9uIGNvbXBhcmVSYW5nZXMoYSwgYikge1xuICAgICAgcmV0dXJuIGFbMF0gLSBiWzBdO1xuICAgIH1cbiAgICBmdW5jdGlvbiB3aXRoaW5SYW5nZSh4LCByYW5nZSkge1xuICAgICAgcmV0dXJuIHJhbmdlWzBdIDw9IHJhbmdlWzFdID8gcmFuZ2VbMF0gPD0geCAmJiB4IDw9IHJhbmdlWzFdIDogeCA8IHJhbmdlWzBdIHx8IHJhbmdlWzFdIDwgeDtcbiAgICB9XG4gICAgcmV0dXJuIGZ1bmN0aW9uKGZlYXR1cmUpIHtcbiAgICAgIM+GMSA9IM67MSA9IC0ozrswID0gz4YwID0gSW5maW5pdHkpO1xuICAgICAgcmFuZ2VzID0gW107XG4gICAgICBkMy5nZW8uc3RyZWFtKGZlYXR1cmUsIGJvdW5kKTtcbiAgICAgIHZhciBuID0gcmFuZ2VzLmxlbmd0aDtcbiAgICAgIGlmIChuKSB7XG4gICAgICAgIHJhbmdlcy5zb3J0KGNvbXBhcmVSYW5nZXMpO1xuICAgICAgICBmb3IgKHZhciBpID0gMSwgYSA9IHJhbmdlc1swXSwgYiwgbWVyZ2VkID0gWyBhIF07IGkgPCBuOyArK2kpIHtcbiAgICAgICAgICBiID0gcmFuZ2VzW2ldO1xuICAgICAgICAgIGlmICh3aXRoaW5SYW5nZShiWzBdLCBhKSB8fCB3aXRoaW5SYW5nZShiWzFdLCBhKSkge1xuICAgICAgICAgICAgaWYgKGFuZ2xlKGFbMF0sIGJbMV0pID4gYW5nbGUoYVswXSwgYVsxXSkpIGFbMV0gPSBiWzFdO1xuICAgICAgICAgICAgaWYgKGFuZ2xlKGJbMF0sIGFbMV0pID4gYW5nbGUoYVswXSwgYVsxXSkpIGFbMF0gPSBiWzBdO1xuICAgICAgICAgIH0gZWxzZSB7XG4gICAgICAgICAgICBtZXJnZWQucHVzaChhID0gYik7XG4gICAgICAgICAgfVxuICAgICAgICB9XG4gICAgICAgIHZhciBiZXN0ID0gLUluZmluaXR5LCBkzrs7XG4gICAgICAgIGZvciAodmFyIG4gPSBtZXJnZWQubGVuZ3RoIC0gMSwgaSA9IDAsIGEgPSBtZXJnZWRbbl0sIGI7IGkgPD0gbjsgYSA9IGIsICsraSkge1xuICAgICAgICAgIGIgPSBtZXJnZWRbaV07XG4gICAgICAgICAgaWYgKChkzrsgPSBhbmdsZShhWzFdLCBiWzBdKSkgPiBiZXN0KSBiZXN0ID0gZM67LCDOuzAgPSBiWzBdLCDOuzEgPSBhWzFdO1xuICAgICAgICB9XG4gICAgICB9XG4gICAgICByYW5nZXMgPSByYW5nZSA9IG51bGw7XG4gICAgICByZXR1cm4gzrswID09PSBJbmZpbml0eSB8fCDPhjAgPT09IEluZmluaXR5ID8gWyBbIE5hTiwgTmFOIF0sIFsgTmFOLCBOYU4gXSBdIDogWyBbIM67MCwgz4YwIF0sIFsgzrsxLCDPhjEgXSBdO1xuICAgIH07XG4gIH0oKTtcbiAgZDMuZ2VvLmNlbnRyb2lkID0gZnVuY3Rpb24ob2JqZWN0KSB7XG4gICAgZDNfZ2VvX2NlbnRyb2lkVzAgPSBkM19nZW9fY2VudHJvaWRXMSA9IGQzX2dlb19jZW50cm9pZFgwID0gZDNfZ2VvX2NlbnRyb2lkWTAgPSBkM19nZW9fY2VudHJvaWRaMCA9IGQzX2dlb19jZW50cm9pZFgxID0gZDNfZ2VvX2NlbnRyb2lkWTEgPSBkM19nZW9fY2VudHJvaWRaMSA9IGQzX2dlb19jZW50cm9pZFgyID0gZDNfZ2VvX2NlbnRyb2lkWTIgPSBkM19nZW9fY2VudHJvaWRaMiA9IDA7XG4gICAgZDMuZ2VvLnN0cmVhbShvYmplY3QsIGQzX2dlb19jZW50cm9pZCk7XG4gICAgdmFyIHggPSBkM19nZW9fY2VudHJvaWRYMiwgeSA9IGQzX2dlb19jZW50cm9pZFkyLCB6ID0gZDNfZ2VvX2NlbnRyb2lkWjIsIG0gPSB4ICogeCArIHkgKiB5ICsgeiAqIHo7XG4gICAgaWYgKG0gPCDOtTIpIHtcbiAgICAgIHggPSBkM19nZW9fY2VudHJvaWRYMSwgeSA9IGQzX2dlb19jZW50cm9pZFkxLCB6ID0gZDNfZ2VvX2NlbnRyb2lkWjE7XG4gICAgICBpZiAoZDNfZ2VvX2NlbnRyb2lkVzEgPCDOtSkgeCA9IGQzX2dlb19jZW50cm9pZFgwLCB5ID0gZDNfZ2VvX2NlbnRyb2lkWTAsIHogPSBkM19nZW9fY2VudHJvaWRaMDtcbiAgICAgIG0gPSB4ICogeCArIHkgKiB5ICsgeiAqIHo7XG4gICAgICBpZiAobSA8IM61MikgcmV0dXJuIFsgTmFOLCBOYU4gXTtcbiAgICB9XG4gICAgcmV0dXJuIFsgTWF0aC5hdGFuMih5LCB4KSAqIGQzX2RlZ3JlZXMsIGQzX2FzaW4oeiAvIE1hdGguc3FydChtKSkgKiBkM19kZWdyZWVzIF07XG4gIH07XG4gIHZhciBkM19nZW9fY2VudHJvaWRXMCwgZDNfZ2VvX2NlbnRyb2lkVzEsIGQzX2dlb19jZW50cm9pZFgwLCBkM19nZW9fY2VudHJvaWRZMCwgZDNfZ2VvX2NlbnRyb2lkWjAsIGQzX2dlb19jZW50cm9pZFgxLCBkM19nZW9fY2VudHJvaWRZMSwgZDNfZ2VvX2NlbnRyb2lkWjEsIGQzX2dlb19jZW50cm9pZFgyLCBkM19nZW9fY2VudHJvaWRZMiwgZDNfZ2VvX2NlbnRyb2lkWjI7XG4gIHZhciBkM19nZW9fY2VudHJvaWQgPSB7XG4gICAgc3BoZXJlOiBkM19ub29wLFxuICAgIHBvaW50OiBkM19nZW9fY2VudHJvaWRQb2ludCxcbiAgICBsaW5lU3RhcnQ6IGQzX2dlb19jZW50cm9pZExpbmVTdGFydCxcbiAgICBsaW5lRW5kOiBkM19nZW9fY2VudHJvaWRMaW5lRW5kLFxuICAgIHBvbHlnb25TdGFydDogZnVuY3Rpb24oKSB7XG4gICAgICBkM19nZW9fY2VudHJvaWQubGluZVN0YXJ0ID0gZDNfZ2VvX2NlbnRyb2lkUmluZ1N0YXJ0O1xuICAgIH0sXG4gICAgcG9seWdvbkVuZDogZnVuY3Rpb24oKSB7XG4gICAgICBkM19nZW9fY2VudHJvaWQubGluZVN0YXJ0ID0gZDNfZ2VvX2NlbnRyb2lkTGluZVN0YXJ0O1xuICAgIH1cbiAgfTtcbiAgZnVuY3Rpb24gZDNfZ2VvX2NlbnRyb2lkUG9pbnQozrssIM+GKSB7XG4gICAgzrsgKj0gZDNfcmFkaWFucztcbiAgICB2YXIgY29zz4YgPSBNYXRoLmNvcyjPhiAqPSBkM19yYWRpYW5zKTtcbiAgICBkM19nZW9fY2VudHJvaWRQb2ludFhZWihjb3PPhiAqIE1hdGguY29zKM67KSwgY29zz4YgKiBNYXRoLnNpbijOuyksIE1hdGguc2luKM+GKSk7XG4gIH1cbiAgZnVuY3Rpb24gZDNfZ2VvX2NlbnRyb2lkUG9pbnRYWVooeCwgeSwgeikge1xuICAgICsrZDNfZ2VvX2NlbnRyb2lkVzA7XG4gICAgZDNfZ2VvX2NlbnRyb2lkWDAgKz0gKHggLSBkM19nZW9fY2VudHJvaWRYMCkgLyBkM19nZW9fY2VudHJvaWRXMDtcbiAgICBkM19nZW9fY2VudHJvaWRZMCArPSAoeSAtIGQzX2dlb19jZW50cm9pZFkwKSAvIGQzX2dlb19jZW50cm9pZFcwO1xuICAgIGQzX2dlb19jZW50cm9pZFowICs9ICh6IC0gZDNfZ2VvX2NlbnRyb2lkWjApIC8gZDNfZ2VvX2NlbnRyb2lkVzA7XG4gIH1cbiAgZnVuY3Rpb24gZDNfZ2VvX2NlbnRyb2lkTGluZVN0YXJ0KCkge1xuICAgIHZhciB4MCwgeTAsIHowO1xuICAgIGQzX2dlb19jZW50cm9pZC5wb2ludCA9IGZ1bmN0aW9uKM67LCDPhikge1xuICAgICAgzrsgKj0gZDNfcmFkaWFucztcbiAgICAgIHZhciBjb3PPhiA9IE1hdGguY29zKM+GICo9IGQzX3JhZGlhbnMpO1xuICAgICAgeDAgPSBjb3PPhiAqIE1hdGguY29zKM67KTtcbiAgICAgIHkwID0gY29zz4YgKiBNYXRoLnNpbijOuyk7XG4gICAgICB6MCA9IE1hdGguc2luKM+GKTtcbiAgICAgIGQzX2dlb19jZW50cm9pZC5wb2ludCA9IG5leHRQb2ludDtcbiAgICAgIGQzX2dlb19jZW50cm9pZFBvaW50WFlaKHgwLCB5MCwgejApO1xuICAgIH07XG4gICAgZnVuY3Rpb24gbmV4dFBvaW50KM67LCDPhikge1xuICAgICAgzrsgKj0gZDNfcmFkaWFucztcbiAgICAgIHZhciBjb3PPhiA9IE1hdGguY29zKM+GICo9IGQzX3JhZGlhbnMpLCB4ID0gY29zz4YgKiBNYXRoLmNvcyjOuyksIHkgPSBjb3PPhiAqIE1hdGguc2luKM67KSwgeiA9IE1hdGguc2luKM+GKSwgdyA9IE1hdGguYXRhbjIoTWF0aC5zcXJ0KCh3ID0geTAgKiB6IC0gejAgKiB5KSAqIHcgKyAodyA9IHowICogeCAtIHgwICogeikgKiB3ICsgKHcgPSB4MCAqIHkgLSB5MCAqIHgpICogdyksIHgwICogeCArIHkwICogeSArIHowICogeik7XG4gICAgICBkM19nZW9fY2VudHJvaWRXMSArPSB3O1xuICAgICAgZDNfZ2VvX2NlbnRyb2lkWDEgKz0gdyAqICh4MCArICh4MCA9IHgpKTtcbiAgICAgIGQzX2dlb19jZW50cm9pZFkxICs9IHcgKiAoeTAgKyAoeTAgPSB5KSk7XG4gICAgICBkM19nZW9fY2VudHJvaWRaMSArPSB3ICogKHowICsgKHowID0geikpO1xuICAgICAgZDNfZ2VvX2NlbnRyb2lkUG9pbnRYWVooeDAsIHkwLCB6MCk7XG4gICAgfVxuICB9XG4gIGZ1bmN0aW9uIGQzX2dlb19jZW50cm9pZExpbmVFbmQoKSB7XG4gICAgZDNfZ2VvX2NlbnRyb2lkLnBvaW50ID0gZDNfZ2VvX2NlbnRyb2lkUG9pbnQ7XG4gIH1cbiAgZnVuY3Rpb24gZDNfZ2VvX2NlbnRyb2lkUmluZ1N0YXJ0KCkge1xuICAgIHZhciDOuzAwLCDPhjAwLCB4MCwgeTAsIHowO1xuICAgIGQzX2dlb19jZW50cm9pZC5wb2ludCA9IGZ1bmN0aW9uKM67LCDPhikge1xuICAgICAgzrswMCA9IM67LCDPhjAwID0gz4Y7XG4gICAgICBkM19nZW9fY2VudHJvaWQucG9pbnQgPSBuZXh0UG9pbnQ7XG4gICAgICDOuyAqPSBkM19yYWRpYW5zO1xuICAgICAgdmFyIGNvc8+GID0gTWF0aC5jb3Moz4YgKj0gZDNfcmFkaWFucyk7XG4gICAgICB4MCA9IGNvc8+GICogTWF0aC5jb3MozrspO1xuICAgICAgeTAgPSBjb3PPhiAqIE1hdGguc2luKM67KTtcbiAgICAgIHowID0gTWF0aC5zaW4oz4YpO1xuICAgICAgZDNfZ2VvX2NlbnRyb2lkUG9pbnRYWVooeDAsIHkwLCB6MCk7XG4gICAgfTtcbiAgICBkM19nZW9fY2VudHJvaWQubGluZUVuZCA9IGZ1bmN0aW9uKCkge1xuICAgICAgbmV4dFBvaW50KM67MDAsIM+GMDApO1xuICAgICAgZDNfZ2VvX2NlbnRyb2lkLmxpbmVFbmQgPSBkM19nZW9fY2VudHJvaWRMaW5lRW5kO1xuICAgICAgZDNfZ2VvX2NlbnRyb2lkLnBvaW50ID0gZDNfZ2VvX2NlbnRyb2lkUG9pbnQ7XG4gICAgfTtcbiAgICBmdW5jdGlvbiBuZXh0UG9pbnQozrssIM+GKSB7XG4gICAgICDOuyAqPSBkM19yYWRpYW5zO1xuICAgICAgdmFyIGNvc8+GID0gTWF0aC5jb3Moz4YgKj0gZDNfcmFkaWFucyksIHggPSBjb3PPhiAqIE1hdGguY29zKM67KSwgeSA9IGNvc8+GICogTWF0aC5zaW4ozrspLCB6ID0gTWF0aC5zaW4oz4YpLCBjeCA9IHkwICogeiAtIHowICogeSwgY3kgPSB6MCAqIHggLSB4MCAqIHosIGN6ID0geDAgKiB5IC0geTAgKiB4LCBtID0gTWF0aC5zcXJ0KGN4ICogY3ggKyBjeSAqIGN5ICsgY3ogKiBjeiksIHUgPSB4MCAqIHggKyB5MCAqIHkgKyB6MCAqIHosIHYgPSBtICYmIC1kM19hY29zKHUpIC8gbSwgdyA9IE1hdGguYXRhbjIobSwgdSk7XG4gICAgICBkM19nZW9fY2VudHJvaWRYMiArPSB2ICogY3g7XG4gICAgICBkM19nZW9fY2VudHJvaWRZMiArPSB2ICogY3k7XG4gICAgICBkM19nZW9fY2VudHJvaWRaMiArPSB2ICogY3o7XG4gICAgICBkM19nZW9fY2VudHJvaWRXMSArPSB3O1xuICAgICAgZDNfZ2VvX2NlbnRyb2lkWDEgKz0gdyAqICh4MCArICh4MCA9IHgpKTtcbiAgICAgIGQzX2dlb19jZW50cm9pZFkxICs9IHcgKiAoeTAgKyAoeTAgPSB5KSk7XG4gICAgICBkM19nZW9fY2VudHJvaWRaMSArPSB3ICogKHowICsgKHowID0geikpO1xuICAgICAgZDNfZ2VvX2NlbnRyb2lkUG9pbnRYWVooeDAsIHkwLCB6MCk7XG4gICAgfVxuICB9XG4gIGZ1bmN0aW9uIGQzX2dlb19jb21wb3NlKGEsIGIpIHtcbiAgICBmdW5jdGlvbiBjb21wb3NlKHgsIHkpIHtcbiAgICAgIHJldHVybiB4ID0gYSh4LCB5KSwgYih4WzBdLCB4WzFdKTtcbiAgICB9XG4gICAgaWYgKGEuaW52ZXJ0ICYmIGIuaW52ZXJ0KSBjb21wb3NlLmludmVydCA9IGZ1bmN0aW9uKHgsIHkpIHtcbiAgICAgIHJldHVybiB4ID0gYi5pbnZlcnQoeCwgeSksIHggJiYgYS5pbnZlcnQoeFswXSwgeFsxXSk7XG4gICAgfTtcbiAgICByZXR1cm4gY29tcG9zZTtcbiAgfVxuICBmdW5jdGlvbiBkM190cnVlKCkge1xuICAgIHJldHVybiB0cnVlO1xuICB9XG4gIGZ1bmN0aW9uIGQzX2dlb19jbGlwUG9seWdvbihzZWdtZW50cywgY29tcGFyZSwgY2xpcFN0YXJ0SW5zaWRlLCBpbnRlcnBvbGF0ZSwgbGlzdGVuZXIpIHtcbiAgICB2YXIgc3ViamVjdCA9IFtdLCBjbGlwID0gW107XG4gICAgc2VnbWVudHMuZm9yRWFjaChmdW5jdGlvbihzZWdtZW50KSB7XG4gICAgICBpZiAoKG4gPSBzZWdtZW50Lmxlbmd0aCAtIDEpIDw9IDApIHJldHVybjtcbiAgICAgIHZhciBuLCBwMCA9IHNlZ21lbnRbMF0sIHAxID0gc2VnbWVudFtuXTtcbiAgICAgIGlmIChkM19nZW9fc3BoZXJpY2FsRXF1YWwocDAsIHAxKSkge1xuICAgICAgICBsaXN0ZW5lci5saW5lU3RhcnQoKTtcbiAgICAgICAgZm9yICh2YXIgaSA9IDA7IGkgPCBuOyArK2kpIGxpc3RlbmVyLnBvaW50KChwMCA9IHNlZ21lbnRbaV0pWzBdLCBwMFsxXSk7XG4gICAgICAgIGxpc3RlbmVyLmxpbmVFbmQoKTtcbiAgICAgICAgcmV0dXJuO1xuICAgICAgfVxuICAgICAgdmFyIGEgPSBuZXcgZDNfZ2VvX2NsaXBQb2x5Z29uSW50ZXJzZWN0aW9uKHAwLCBzZWdtZW50LCBudWxsLCB0cnVlKSwgYiA9IG5ldyBkM19nZW9fY2xpcFBvbHlnb25JbnRlcnNlY3Rpb24ocDAsIG51bGwsIGEsIGZhbHNlKTtcbiAgICAgIGEubyA9IGI7XG4gICAgICBzdWJqZWN0LnB1c2goYSk7XG4gICAgICBjbGlwLnB1c2goYik7XG4gICAgICBhID0gbmV3IGQzX2dlb19jbGlwUG9seWdvbkludGVyc2VjdGlvbihwMSwgc2VnbWVudCwgbnVsbCwgZmFsc2UpO1xuICAgICAgYiA9IG5ldyBkM19nZW9fY2xpcFBvbHlnb25JbnRlcnNlY3Rpb24ocDEsIG51bGwsIGEsIHRydWUpO1xuICAgICAgYS5vID0gYjtcbiAgICAgIHN1YmplY3QucHVzaChhKTtcbiAgICAgIGNsaXAucHVzaChiKTtcbiAgICB9KTtcbiAgICBjbGlwLnNvcnQoY29tcGFyZSk7XG4gICAgZDNfZ2VvX2NsaXBQb2x5Z29uTGlua0NpcmN1bGFyKHN1YmplY3QpO1xuICAgIGQzX2dlb19jbGlwUG9seWdvbkxpbmtDaXJjdWxhcihjbGlwKTtcbiAgICBpZiAoIXN1YmplY3QubGVuZ3RoKSByZXR1cm47XG4gICAgZm9yICh2YXIgaSA9IDAsIGVudHJ5ID0gY2xpcFN0YXJ0SW5zaWRlLCBuID0gY2xpcC5sZW5ndGg7IGkgPCBuOyArK2kpIHtcbiAgICAgIGNsaXBbaV0uZSA9IGVudHJ5ID0gIWVudHJ5O1xuICAgIH1cbiAgICB2YXIgc3RhcnQgPSBzdWJqZWN0WzBdLCBwb2ludHMsIHBvaW50O1xuICAgIHdoaWxlICgxKSB7XG4gICAgICB2YXIgY3VycmVudCA9IHN0YXJ0LCBpc1N1YmplY3QgPSB0cnVlO1xuICAgICAgd2hpbGUgKGN1cnJlbnQudikgaWYgKChjdXJyZW50ID0gY3VycmVudC5uKSA9PT0gc3RhcnQpIHJldHVybjtcbiAgICAgIHBvaW50cyA9IGN1cnJlbnQuejtcbiAgICAgIGxpc3RlbmVyLmxpbmVTdGFydCgpO1xuICAgICAgZG8ge1xuICAgICAgICBjdXJyZW50LnYgPSBjdXJyZW50Lm8udiA9IHRydWU7XG4gICAgICAgIGlmIChjdXJyZW50LmUpIHtcbiAgICAgICAgICBpZiAoaXNTdWJqZWN0KSB7XG4gICAgICAgICAgICBmb3IgKHZhciBpID0gMCwgbiA9IHBvaW50cy5sZW5ndGg7IGkgPCBuOyArK2kpIGxpc3RlbmVyLnBvaW50KChwb2ludCA9IHBvaW50c1tpXSlbMF0sIHBvaW50WzFdKTtcbiAgICAgICAgICB9IGVsc2Uge1xuICAgICAgICAgICAgaW50ZXJwb2xhdGUoY3VycmVudC54LCBjdXJyZW50Lm4ueCwgMSwgbGlzdGVuZXIpO1xuICAgICAgICAgIH1cbiAgICAgICAgICBjdXJyZW50ID0gY3VycmVudC5uO1xuICAgICAgICB9IGVsc2Uge1xuICAgICAgICAgIGlmIChpc1N1YmplY3QpIHtcbiAgICAgICAgICAgIHBvaW50cyA9IGN1cnJlbnQucC56O1xuICAgICAgICAgICAgZm9yICh2YXIgaSA9IHBvaW50cy5sZW5ndGggLSAxOyBpID49IDA7IC0taSkgbGlzdGVuZXIucG9pbnQoKHBvaW50ID0gcG9pbnRzW2ldKVswXSwgcG9pbnRbMV0pO1xuICAgICAgICAgIH0gZWxzZSB7XG4gICAgICAgICAgICBpbnRlcnBvbGF0ZShjdXJyZW50LngsIGN1cnJlbnQucC54LCAtMSwgbGlzdGVuZXIpO1xuICAgICAgICAgIH1cbiAgICAgICAgICBjdXJyZW50ID0gY3VycmVudC5wO1xuICAgICAgICB9XG4gICAgICAgIGN1cnJlbnQgPSBjdXJyZW50Lm87XG4gICAgICAgIHBvaW50cyA9IGN1cnJlbnQuejtcbiAgICAgICAgaXNTdWJqZWN0ID0gIWlzU3ViamVjdDtcbiAgICAgIH0gd2hpbGUgKCFjdXJyZW50LnYpO1xuICAgICAgbGlzdGVuZXIubGluZUVuZCgpO1xuICAgIH1cbiAgfVxuICBmdW5jdGlvbiBkM19nZW9fY2xpcFBvbHlnb25MaW5rQ2lyY3VsYXIoYXJyYXkpIHtcbiAgICBpZiAoIShuID0gYXJyYXkubGVuZ3RoKSkgcmV0dXJuO1xuICAgIHZhciBuLCBpID0gMCwgYSA9IGFycmF5WzBdLCBiO1xuICAgIHdoaWxlICgrK2kgPCBuKSB7XG4gICAgICBhLm4gPSBiID0gYXJyYXlbaV07XG4gICAgICBiLnAgPSBhO1xuICAgICAgYSA9IGI7XG4gICAgfVxuICAgIGEubiA9IGIgPSBhcnJheVswXTtcbiAgICBiLnAgPSBhO1xuICB9XG4gIGZ1bmN0aW9uIGQzX2dlb19jbGlwUG9seWdvbkludGVyc2VjdGlvbihwb2ludCwgcG9pbnRzLCBvdGhlciwgZW50cnkpIHtcbiAgICB0aGlzLnggPSBwb2ludDtcbiAgICB0aGlzLnogPSBwb2ludHM7XG4gICAgdGhpcy5vID0gb3RoZXI7XG4gICAgdGhpcy5lID0gZW50cnk7XG4gICAgdGhpcy52ID0gZmFsc2U7XG4gICAgdGhpcy5uID0gdGhpcy5wID0gbnVsbDtcbiAgfVxuICBmdW5jdGlvbiBkM19nZW9fY2xpcChwb2ludFZpc2libGUsIGNsaXBMaW5lLCBpbnRlcnBvbGF0ZSwgY2xpcFN0YXJ0KSB7XG4gICAgcmV0dXJuIGZ1bmN0aW9uKHJvdGF0ZSwgbGlzdGVuZXIpIHtcbiAgICAgIHZhciBsaW5lID0gY2xpcExpbmUobGlzdGVuZXIpLCByb3RhdGVkQ2xpcFN0YXJ0ID0gcm90YXRlLmludmVydChjbGlwU3RhcnRbMF0sIGNsaXBTdGFydFsxXSk7XG4gICAgICB2YXIgY2xpcCA9IHtcbiAgICAgICAgcG9pbnQ6IHBvaW50LFxuICAgICAgICBsaW5lU3RhcnQ6IGxpbmVTdGFydCxcbiAgICAgICAgbGluZUVuZDogbGluZUVuZCxcbiAgICAgICAgcG9seWdvblN0YXJ0OiBmdW5jdGlvbigpIHtcbiAgICAgICAgICBjbGlwLnBvaW50ID0gcG9pbnRSaW5nO1xuICAgICAgICAgIGNsaXAubGluZVN0YXJ0ID0gcmluZ1N0YXJ0O1xuICAgICAgICAgIGNsaXAubGluZUVuZCA9IHJpbmdFbmQ7XG4gICAgICAgICAgc2VnbWVudHMgPSBbXTtcbiAgICAgICAgICBwb2x5Z29uID0gW107XG4gICAgICAgIH0sXG4gICAgICAgIHBvbHlnb25FbmQ6IGZ1bmN0aW9uKCkge1xuICAgICAgICAgIGNsaXAucG9pbnQgPSBwb2ludDtcbiAgICAgICAgICBjbGlwLmxpbmVTdGFydCA9IGxpbmVTdGFydDtcbiAgICAgICAgICBjbGlwLmxpbmVFbmQgPSBsaW5lRW5kO1xuICAgICAgICAgIHNlZ21lbnRzID0gZDMubWVyZ2Uoc2VnbWVudHMpO1xuICAgICAgICAgIHZhciBjbGlwU3RhcnRJbnNpZGUgPSBkM19nZW9fcG9pbnRJblBvbHlnb24ocm90YXRlZENsaXBTdGFydCwgcG9seWdvbik7XG4gICAgICAgICAgaWYgKHNlZ21lbnRzLmxlbmd0aCkge1xuICAgICAgICAgICAgaWYgKCFwb2x5Z29uU3RhcnRlZCkgbGlzdGVuZXIucG9seWdvblN0YXJ0KCksIHBvbHlnb25TdGFydGVkID0gdHJ1ZTtcbiAgICAgICAgICAgIGQzX2dlb19jbGlwUG9seWdvbihzZWdtZW50cywgZDNfZ2VvX2NsaXBTb3J0LCBjbGlwU3RhcnRJbnNpZGUsIGludGVycG9sYXRlLCBsaXN0ZW5lcik7XG4gICAgICAgICAgfSBlbHNlIGlmIChjbGlwU3RhcnRJbnNpZGUpIHtcbiAgICAgICAgICAgIGlmICghcG9seWdvblN0YXJ0ZWQpIGxpc3RlbmVyLnBvbHlnb25TdGFydCgpLCBwb2x5Z29uU3RhcnRlZCA9IHRydWU7XG4gICAgICAgICAgICBsaXN0ZW5lci5saW5lU3RhcnQoKTtcbiAgICAgICAgICAgIGludGVycG9sYXRlKG51bGwsIG51bGwsIDEsIGxpc3RlbmVyKTtcbiAgICAgICAgICAgIGxpc3RlbmVyLmxpbmVFbmQoKTtcbiAgICAgICAgICB9XG4gICAgICAgICAgaWYgKHBvbHlnb25TdGFydGVkKSBsaXN0ZW5lci5wb2x5Z29uRW5kKCksIHBvbHlnb25TdGFydGVkID0gZmFsc2U7XG4gICAgICAgICAgc2VnbWVudHMgPSBwb2x5Z29uID0gbnVsbDtcbiAgICAgICAgfSxcbiAgICAgICAgc3BoZXJlOiBmdW5jdGlvbigpIHtcbiAgICAgICAgICBsaXN0ZW5lci5wb2x5Z29uU3RhcnQoKTtcbiAgICAgICAgICBsaXN0ZW5lci5saW5lU3RhcnQoKTtcbiAgICAgICAgICBpbnRlcnBvbGF0ZShudWxsLCBudWxsLCAxLCBsaXN0ZW5lcik7XG4gICAgICAgICAgbGlzdGVuZXIubGluZUVuZCgpO1xuICAgICAgICAgIGxpc3RlbmVyLnBvbHlnb25FbmQoKTtcbiAgICAgICAgfVxuICAgICAgfTtcbiAgICAgIGZ1bmN0aW9uIHBvaW50KM67LCDPhikge1xuICAgICAgICB2YXIgcG9pbnQgPSByb3RhdGUozrssIM+GKTtcbiAgICAgICAgaWYgKHBvaW50VmlzaWJsZSjOuyA9IHBvaW50WzBdLCDPhiA9IHBvaW50WzFdKSkgbGlzdGVuZXIucG9pbnQozrssIM+GKTtcbiAgICAgIH1cbiAgICAgIGZ1bmN0aW9uIHBvaW50TGluZSjOuywgz4YpIHtcbiAgICAgICAgdmFyIHBvaW50ID0gcm90YXRlKM67LCDPhik7XG4gICAgICAgIGxpbmUucG9pbnQocG9pbnRbMF0sIHBvaW50WzFdKTtcbiAgICAgIH1cbiAgICAgIGZ1bmN0aW9uIGxpbmVTdGFydCgpIHtcbiAgICAgICAgY2xpcC5wb2ludCA9IHBvaW50TGluZTtcbiAgICAgICAgbGluZS5saW5lU3RhcnQoKTtcbiAgICAgIH1cbiAgICAgIGZ1bmN0aW9uIGxpbmVFbmQoKSB7XG4gICAgICAgIGNsaXAucG9pbnQgPSBwb2ludDtcbiAgICAgICAgbGluZS5saW5lRW5kKCk7XG4gICAgICB9XG4gICAgICB2YXIgc2VnbWVudHM7XG4gICAgICB2YXIgYnVmZmVyID0gZDNfZ2VvX2NsaXBCdWZmZXJMaXN0ZW5lcigpLCByaW5nTGlzdGVuZXIgPSBjbGlwTGluZShidWZmZXIpLCBwb2x5Z29uU3RhcnRlZCA9IGZhbHNlLCBwb2x5Z29uLCByaW5nO1xuICAgICAgZnVuY3Rpb24gcG9pbnRSaW5nKM67LCDPhikge1xuICAgICAgICByaW5nLnB1c2goWyDOuywgz4YgXSk7XG4gICAgICAgIHZhciBwb2ludCA9IHJvdGF0ZSjOuywgz4YpO1xuICAgICAgICByaW5nTGlzdGVuZXIucG9pbnQocG9pbnRbMF0sIHBvaW50WzFdKTtcbiAgICAgIH1cbiAgICAgIGZ1bmN0aW9uIHJpbmdTdGFydCgpIHtcbiAgICAgICAgcmluZ0xpc3RlbmVyLmxpbmVTdGFydCgpO1xuICAgICAgICByaW5nID0gW107XG4gICAgICB9XG4gICAgICBmdW5jdGlvbiByaW5nRW5kKCkge1xuICAgICAgICBwb2ludFJpbmcocmluZ1swXVswXSwgcmluZ1swXVsxXSk7XG4gICAgICAgIHJpbmdMaXN0ZW5lci5saW5lRW5kKCk7XG4gICAgICAgIHZhciBjbGVhbiA9IHJpbmdMaXN0ZW5lci5jbGVhbigpLCByaW5nU2VnbWVudHMgPSBidWZmZXIuYnVmZmVyKCksIHNlZ21lbnQsIG4gPSByaW5nU2VnbWVudHMubGVuZ3RoO1xuICAgICAgICByaW5nLnBvcCgpO1xuICAgICAgICBwb2x5Z29uLnB1c2gocmluZyk7XG4gICAgICAgIHJpbmcgPSBudWxsO1xuICAgICAgICBpZiAoIW4pIHJldHVybjtcbiAgICAgICAgaWYgKGNsZWFuICYgMSkge1xuICAgICAgICAgIHNlZ21lbnQgPSByaW5nU2VnbWVudHNbMF07XG4gICAgICAgICAgdmFyIG4gPSBzZWdtZW50Lmxlbmd0aCAtIDEsIGkgPSAtMSwgcG9pbnQ7XG4gICAgICAgICAgaWYgKG4gPiAwKSB7XG4gICAgICAgICAgICBpZiAoIXBvbHlnb25TdGFydGVkKSBsaXN0ZW5lci5wb2x5Z29uU3RhcnQoKSwgcG9seWdvblN0YXJ0ZWQgPSB0cnVlO1xuICAgICAgICAgICAgbGlzdGVuZXIubGluZVN0YXJ0KCk7XG4gICAgICAgICAgICB3aGlsZSAoKytpIDwgbikgbGlzdGVuZXIucG9pbnQoKHBvaW50ID0gc2VnbWVudFtpXSlbMF0sIHBvaW50WzFdKTtcbiAgICAgICAgICAgIGxpc3RlbmVyLmxpbmVFbmQoKTtcbiAgICAgICAgICB9XG4gICAgICAgICAgcmV0dXJuO1xuICAgICAgICB9XG4gICAgICAgIGlmIChuID4gMSAmJiBjbGVhbiAmIDIpIHJpbmdTZWdtZW50cy5wdXNoKHJpbmdTZWdtZW50cy5wb3AoKS5jb25jYXQocmluZ1NlZ21lbnRzLnNoaWZ0KCkpKTtcbiAgICAgICAgc2VnbWVudHMucHVzaChyaW5nU2VnbWVudHMuZmlsdGVyKGQzX2dlb19jbGlwU2VnbWVudExlbmd0aDEpKTtcbiAgICAgIH1cbiAgICAgIHJldHVybiBjbGlwO1xuICAgIH07XG4gIH1cbiAgZnVuY3Rpb24gZDNfZ2VvX2NsaXBTZWdtZW50TGVuZ3RoMShzZWdtZW50KSB7XG4gICAgcmV0dXJuIHNlZ21lbnQubGVuZ3RoID4gMTtcbiAgfVxuICBmdW5jdGlvbiBkM19nZW9fY2xpcEJ1ZmZlckxpc3RlbmVyKCkge1xuICAgIHZhciBsaW5lcyA9IFtdLCBsaW5lO1xuICAgIHJldHVybiB7XG4gICAgICBsaW5lU3RhcnQ6IGZ1bmN0aW9uKCkge1xuICAgICAgICBsaW5lcy5wdXNoKGxpbmUgPSBbXSk7XG4gICAgICB9LFxuICAgICAgcG9pbnQ6IGZ1bmN0aW9uKM67LCDPhikge1xuICAgICAgICBsaW5lLnB1c2goWyDOuywgz4YgXSk7XG4gICAgICB9LFxuICAgICAgbGluZUVuZDogZDNfbm9vcCxcbiAgICAgIGJ1ZmZlcjogZnVuY3Rpb24oKSB7XG4gICAgICAgIHZhciBidWZmZXIgPSBsaW5lcztcbiAgICAgICAgbGluZXMgPSBbXTtcbiAgICAgICAgbGluZSA9IG51bGw7XG4gICAgICAgIHJldHVybiBidWZmZXI7XG4gICAgICB9LFxuICAgICAgcmVqb2luOiBmdW5jdGlvbigpIHtcbiAgICAgICAgaWYgKGxpbmVzLmxlbmd0aCA+IDEpIGxpbmVzLnB1c2gobGluZXMucG9wKCkuY29uY2F0KGxpbmVzLnNoaWZ0KCkpKTtcbiAgICAgIH1cbiAgICB9O1xuICB9XG4gIGZ1bmN0aW9uIGQzX2dlb19jbGlwU29ydChhLCBiKSB7XG4gICAgcmV0dXJuICgoYSA9IGEueClbMF0gPCAwID8gYVsxXSAtIGhhbGbPgCAtIM61IDogaGFsZs+AIC0gYVsxXSkgLSAoKGIgPSBiLngpWzBdIDwgMCA/IGJbMV0gLSBoYWxmz4AgLSDOtSA6IGhhbGbPgCAtIGJbMV0pO1xuICB9XG4gIHZhciBkM19nZW9fY2xpcEFudGltZXJpZGlhbiA9IGQzX2dlb19jbGlwKGQzX3RydWUsIGQzX2dlb19jbGlwQW50aW1lcmlkaWFuTGluZSwgZDNfZ2VvX2NsaXBBbnRpbWVyaWRpYW5JbnRlcnBvbGF0ZSwgWyAtz4AsIC3PgCAvIDIgXSk7XG4gIGZ1bmN0aW9uIGQzX2dlb19jbGlwQW50aW1lcmlkaWFuTGluZShsaXN0ZW5lcikge1xuICAgIHZhciDOuzAgPSBOYU4sIM+GMCA9IE5hTiwgc867MCA9IE5hTiwgY2xlYW47XG4gICAgcmV0dXJuIHtcbiAgICAgIGxpbmVTdGFydDogZnVuY3Rpb24oKSB7XG4gICAgICAgIGxpc3RlbmVyLmxpbmVTdGFydCgpO1xuICAgICAgICBjbGVhbiA9IDE7XG4gICAgICB9LFxuICAgICAgcG9pbnQ6IGZ1bmN0aW9uKM67MSwgz4YxKSB7XG4gICAgICAgIHZhciBzzrsxID0gzrsxID4gMCA/IM+AIDogLc+ALCBkzrsgPSBhYnMozrsxIC0gzrswKTtcbiAgICAgICAgaWYgKGFicyhkzrsgLSDPgCkgPCDOtSkge1xuICAgICAgICAgIGxpc3RlbmVyLnBvaW50KM67MCwgz4YwID0gKM+GMCArIM+GMSkgLyAyID4gMCA/IGhhbGbPgCA6IC1oYWxmz4ApO1xuICAgICAgICAgIGxpc3RlbmVyLnBvaW50KHPOuzAsIM+GMCk7XG4gICAgICAgICAgbGlzdGVuZXIubGluZUVuZCgpO1xuICAgICAgICAgIGxpc3RlbmVyLmxpbmVTdGFydCgpO1xuICAgICAgICAgIGxpc3RlbmVyLnBvaW50KHPOuzEsIM+GMCk7XG4gICAgICAgICAgbGlzdGVuZXIucG9pbnQozrsxLCDPhjApO1xuICAgICAgICAgIGNsZWFuID0gMDtcbiAgICAgICAgfSBlbHNlIGlmIChzzrswICE9PSBzzrsxICYmIGTOuyA+PSDPgCkge1xuICAgICAgICAgIGlmIChhYnMozrswIC0gc867MCkgPCDOtSkgzrswIC09IHPOuzAgKiDOtTtcbiAgICAgICAgICBpZiAoYWJzKM67MSAtIHPOuzEpIDwgzrUpIM67MSAtPSBzzrsxICogzrU7XG4gICAgICAgICAgz4YwID0gZDNfZ2VvX2NsaXBBbnRpbWVyaWRpYW5JbnRlcnNlY3QozrswLCDPhjAsIM67MSwgz4YxKTtcbiAgICAgICAgICBsaXN0ZW5lci5wb2ludChzzrswLCDPhjApO1xuICAgICAgICAgIGxpc3RlbmVyLmxpbmVFbmQoKTtcbiAgICAgICAgICBsaXN0ZW5lci5saW5lU3RhcnQoKTtcbiAgICAgICAgICBsaXN0ZW5lci5wb2ludChzzrsxLCDPhjApO1xuICAgICAgICAgIGNsZWFuID0gMDtcbiAgICAgICAgfVxuICAgICAgICBsaXN0ZW5lci5wb2ludCjOuzAgPSDOuzEsIM+GMCA9IM+GMSk7XG4gICAgICAgIHPOuzAgPSBzzrsxO1xuICAgICAgfSxcbiAgICAgIGxpbmVFbmQ6IGZ1bmN0aW9uKCkge1xuICAgICAgICBsaXN0ZW5lci5saW5lRW5kKCk7XG4gICAgICAgIM67MCA9IM+GMCA9IE5hTjtcbiAgICAgIH0sXG4gICAgICBjbGVhbjogZnVuY3Rpb24oKSB7XG4gICAgICAgIHJldHVybiAyIC0gY2xlYW47XG4gICAgICB9XG4gICAgfTtcbiAgfVxuICBmdW5jdGlvbiBkM19nZW9fY2xpcEFudGltZXJpZGlhbkludGVyc2VjdCjOuzAsIM+GMCwgzrsxLCDPhjEpIHtcbiAgICB2YXIgY29zz4YwLCBjb3PPhjEsIHNpbs67MF/OuzEgPSBNYXRoLnNpbijOuzAgLSDOuzEpO1xuICAgIHJldHVybiBhYnMoc2luzrswX867MSkgPiDOtSA/IE1hdGguYXRhbigoTWF0aC5zaW4oz4YwKSAqIChjb3PPhjEgPSBNYXRoLmNvcyjPhjEpKSAqIE1hdGguc2luKM67MSkgLSBNYXRoLnNpbijPhjEpICogKGNvc8+GMCA9IE1hdGguY29zKM+GMCkpICogTWF0aC5zaW4ozrswKSkgLyAoY29zz4YwICogY29zz4YxICogc2luzrswX867MSkpIDogKM+GMCArIM+GMSkgLyAyO1xuICB9XG4gIGZ1bmN0aW9uIGQzX2dlb19jbGlwQW50aW1lcmlkaWFuSW50ZXJwb2xhdGUoZnJvbSwgdG8sIGRpcmVjdGlvbiwgbGlzdGVuZXIpIHtcbiAgICB2YXIgz4Y7XG4gICAgaWYgKGZyb20gPT0gbnVsbCkge1xuICAgICAgz4YgPSBkaXJlY3Rpb24gKiBoYWxmz4A7XG4gICAgICBsaXN0ZW5lci5wb2ludCgtz4AsIM+GKTtcbiAgICAgIGxpc3RlbmVyLnBvaW50KDAsIM+GKTtcbiAgICAgIGxpc3RlbmVyLnBvaW50KM+ALCDPhik7XG4gICAgICBsaXN0ZW5lci5wb2ludCjPgCwgMCk7XG4gICAgICBsaXN0ZW5lci5wb2ludCjPgCwgLc+GKTtcbiAgICAgIGxpc3RlbmVyLnBvaW50KDAsIC3Phik7XG4gICAgICBsaXN0ZW5lci5wb2ludCgtz4AsIC3Phik7XG4gICAgICBsaXN0ZW5lci5wb2ludCgtz4AsIDApO1xuICAgICAgbGlzdGVuZXIucG9pbnQoLc+ALCDPhik7XG4gICAgfSBlbHNlIGlmIChhYnMoZnJvbVswXSAtIHRvWzBdKSA+IM61KSB7XG4gICAgICB2YXIgcyA9IGZyb21bMF0gPCB0b1swXSA/IM+AIDogLc+AO1xuICAgICAgz4YgPSBkaXJlY3Rpb24gKiBzIC8gMjtcbiAgICAgIGxpc3RlbmVyLnBvaW50KC1zLCDPhik7XG4gICAgICBsaXN0ZW5lci5wb2ludCgwLCDPhik7XG4gICAgICBsaXN0ZW5lci5wb2ludChzLCDPhik7XG4gICAgfSBlbHNlIHtcbiAgICAgIGxpc3RlbmVyLnBvaW50KHRvWzBdLCB0b1sxXSk7XG4gICAgfVxuICB9XG4gIGZ1bmN0aW9uIGQzX2dlb19wb2ludEluUG9seWdvbihwb2ludCwgcG9seWdvbikge1xuICAgIHZhciBtZXJpZGlhbiA9IHBvaW50WzBdLCBwYXJhbGxlbCA9IHBvaW50WzFdLCBtZXJpZGlhbk5vcm1hbCA9IFsgTWF0aC5zaW4obWVyaWRpYW4pLCAtTWF0aC5jb3MobWVyaWRpYW4pLCAwIF0sIHBvbGFyQW5nbGUgPSAwLCB3aW5kaW5nID0gMDtcbiAgICBkM19nZW9fYXJlYVJpbmdTdW0ucmVzZXQoKTtcbiAgICBmb3IgKHZhciBpID0gMCwgbiA9IHBvbHlnb24ubGVuZ3RoOyBpIDwgbjsgKytpKSB7XG4gICAgICB2YXIgcmluZyA9IHBvbHlnb25baV0sIG0gPSByaW5nLmxlbmd0aDtcbiAgICAgIGlmICghbSkgY29udGludWU7XG4gICAgICB2YXIgcG9pbnQwID0gcmluZ1swXSwgzrswID0gcG9pbnQwWzBdLCDPhjAgPSBwb2ludDBbMV0gLyAyICsgz4AgLyA0LCBzaW7PhjAgPSBNYXRoLnNpbijPhjApLCBjb3PPhjAgPSBNYXRoLmNvcyjPhjApLCBqID0gMTtcbiAgICAgIHdoaWxlICh0cnVlKSB7XG4gICAgICAgIGlmIChqID09PSBtKSBqID0gMDtcbiAgICAgICAgcG9pbnQgPSByaW5nW2pdO1xuICAgICAgICB2YXIgzrsgPSBwb2ludFswXSwgz4YgPSBwb2ludFsxXSAvIDIgKyDPgCAvIDQsIHNpbs+GID0gTWF0aC5zaW4oz4YpLCBjb3PPhiA9IE1hdGguY29zKM+GKSwgZM67ID0gzrsgLSDOuzAsIHNkzrsgPSBkzrsgPj0gMCA/IDEgOiAtMSwgYWTOuyA9IHNkzrsgKiBkzrssIGFudGltZXJpZGlhbiA9IGFkzrsgPiDPgCwgayA9IHNpbs+GMCAqIHNpbs+GO1xuICAgICAgICBkM19nZW9fYXJlYVJpbmdTdW0uYWRkKE1hdGguYXRhbjIoayAqIHNkzrsgKiBNYXRoLnNpbihhZM67KSwgY29zz4YwICogY29zz4YgKyBrICogTWF0aC5jb3MoYWTOuykpKTtcbiAgICAgICAgcG9sYXJBbmdsZSArPSBhbnRpbWVyaWRpYW4gPyBkzrsgKyBzZM67ICogz4QgOiBkzrs7XG4gICAgICAgIGlmIChhbnRpbWVyaWRpYW4gXiDOuzAgPj0gbWVyaWRpYW4gXiDOuyA+PSBtZXJpZGlhbikge1xuICAgICAgICAgIHZhciBhcmMgPSBkM19nZW9fY2FydGVzaWFuQ3Jvc3MoZDNfZ2VvX2NhcnRlc2lhbihwb2ludDApLCBkM19nZW9fY2FydGVzaWFuKHBvaW50KSk7XG4gICAgICAgICAgZDNfZ2VvX2NhcnRlc2lhbk5vcm1hbGl6ZShhcmMpO1xuICAgICAgICAgIHZhciBpbnRlcnNlY3Rpb24gPSBkM19nZW9fY2FydGVzaWFuQ3Jvc3MobWVyaWRpYW5Ob3JtYWwsIGFyYyk7XG4gICAgICAgICAgZDNfZ2VvX2NhcnRlc2lhbk5vcm1hbGl6ZShpbnRlcnNlY3Rpb24pO1xuICAgICAgICAgIHZhciDPhmFyYyA9IChhbnRpbWVyaWRpYW4gXiBkzrsgPj0gMCA/IC0xIDogMSkgKiBkM19hc2luKGludGVyc2VjdGlvblsyXSk7XG4gICAgICAgICAgaWYgKHBhcmFsbGVsID4gz4ZhcmMgfHwgcGFyYWxsZWwgPT09IM+GYXJjICYmIChhcmNbMF0gfHwgYXJjWzFdKSkge1xuICAgICAgICAgICAgd2luZGluZyArPSBhbnRpbWVyaWRpYW4gXiBkzrsgPj0gMCA/IDEgOiAtMTtcbiAgICAgICAgICB9XG4gICAgICAgIH1cbiAgICAgICAgaWYgKCFqKyspIGJyZWFrO1xuICAgICAgICDOuzAgPSDOuywgc2luz4YwID0gc2luz4YsIGNvc8+GMCA9IGNvc8+GLCBwb2ludDAgPSBwb2ludDtcbiAgICAgIH1cbiAgICB9XG4gICAgcmV0dXJuIChwb2xhckFuZ2xlIDwgLc61IHx8IHBvbGFyQW5nbGUgPCDOtSAmJiBkM19nZW9fYXJlYVJpbmdTdW0gPCAtzrUpIF4gd2luZGluZyAmIDE7XG4gIH1cbiAgZnVuY3Rpb24gZDNfZ2VvX2NsaXBDaXJjbGUocmFkaXVzKSB7XG4gICAgdmFyIGNyID0gTWF0aC5jb3MocmFkaXVzKSwgc21hbGxSYWRpdXMgPSBjciA+IDAsIG5vdEhlbWlzcGhlcmUgPSBhYnMoY3IpID4gzrUsIGludGVycG9sYXRlID0gZDNfZ2VvX2NpcmNsZUludGVycG9sYXRlKHJhZGl1cywgNiAqIGQzX3JhZGlhbnMpO1xuICAgIHJldHVybiBkM19nZW9fY2xpcCh2aXNpYmxlLCBjbGlwTGluZSwgaW50ZXJwb2xhdGUsIHNtYWxsUmFkaXVzID8gWyAwLCAtcmFkaXVzIF0gOiBbIC3PgCwgcmFkaXVzIC0gz4AgXSk7XG4gICAgZnVuY3Rpb24gdmlzaWJsZSjOuywgz4YpIHtcbiAgICAgIHJldHVybiBNYXRoLmNvcyjOuykgKiBNYXRoLmNvcyjPhikgPiBjcjtcbiAgICB9XG4gICAgZnVuY3Rpb24gY2xpcExpbmUobGlzdGVuZXIpIHtcbiAgICAgIHZhciBwb2ludDAsIGMwLCB2MCwgdjAwLCBjbGVhbjtcbiAgICAgIHJldHVybiB7XG4gICAgICAgIGxpbmVTdGFydDogZnVuY3Rpb24oKSB7XG4gICAgICAgICAgdjAwID0gdjAgPSBmYWxzZTtcbiAgICAgICAgICBjbGVhbiA9IDE7XG4gICAgICAgIH0sXG4gICAgICAgIHBvaW50OiBmdW5jdGlvbijOuywgz4YpIHtcbiAgICAgICAgICB2YXIgcG9pbnQxID0gWyDOuywgz4YgXSwgcG9pbnQyLCB2ID0gdmlzaWJsZSjOuywgz4YpLCBjID0gc21hbGxSYWRpdXMgPyB2ID8gMCA6IGNvZGUozrssIM+GKSA6IHYgPyBjb2RlKM67ICsgKM67IDwgMCA/IM+AIDogLc+AKSwgz4YpIDogMDtcbiAgICAgICAgICBpZiAoIXBvaW50MCAmJiAodjAwID0gdjAgPSB2KSkgbGlzdGVuZXIubGluZVN0YXJ0KCk7XG4gICAgICAgICAgaWYgKHYgIT09IHYwKSB7XG4gICAgICAgICAgICBwb2ludDIgPSBpbnRlcnNlY3QocG9pbnQwLCBwb2ludDEpO1xuICAgICAgICAgICAgaWYgKGQzX2dlb19zcGhlcmljYWxFcXVhbChwb2ludDAsIHBvaW50MikgfHwgZDNfZ2VvX3NwaGVyaWNhbEVxdWFsKHBvaW50MSwgcG9pbnQyKSkge1xuICAgICAgICAgICAgICBwb2ludDFbMF0gKz0gzrU7XG4gICAgICAgICAgICAgIHBvaW50MVsxXSArPSDOtTtcbiAgICAgICAgICAgICAgdiA9IHZpc2libGUocG9pbnQxWzBdLCBwb2ludDFbMV0pO1xuICAgICAgICAgICAgfVxuICAgICAgICAgIH1cbiAgICAgICAgICBpZiAodiAhPT0gdjApIHtcbiAgICAgICAgICAgIGNsZWFuID0gMDtcbiAgICAgICAgICAgIGlmICh2KSB7XG4gICAgICAgICAgICAgIGxpc3RlbmVyLmxpbmVTdGFydCgpO1xuICAgICAgICAgICAgICBwb2ludDIgPSBpbnRlcnNlY3QocG9pbnQxLCBwb2ludDApO1xuICAgICAgICAgICAgICBsaXN0ZW5lci5wb2ludChwb2ludDJbMF0sIHBvaW50MlsxXSk7XG4gICAgICAgICAgICB9IGVsc2Uge1xuICAgICAgICAgICAgICBwb2ludDIgPSBpbnRlcnNlY3QocG9pbnQwLCBwb2ludDEpO1xuICAgICAgICAgICAgICBsaXN0ZW5lci5wb2ludChwb2ludDJbMF0sIHBvaW50MlsxXSk7XG4gICAgICAgICAgICAgIGxpc3RlbmVyLmxpbmVFbmQoKTtcbiAgICAgICAgICAgIH1cbiAgICAgICAgICAgIHBvaW50MCA9IHBvaW50MjtcbiAgICAgICAgICB9IGVsc2UgaWYgKG5vdEhlbWlzcGhlcmUgJiYgcG9pbnQwICYmIHNtYWxsUmFkaXVzIF4gdikge1xuICAgICAgICAgICAgdmFyIHQ7XG4gICAgICAgICAgICBpZiAoIShjICYgYzApICYmICh0ID0gaW50ZXJzZWN0KHBvaW50MSwgcG9pbnQwLCB0cnVlKSkpIHtcbiAgICAgICAgICAgICAgY2xlYW4gPSAwO1xuICAgICAgICAgICAgICBpZiAoc21hbGxSYWRpdXMpIHtcbiAgICAgICAgICAgICAgICBsaXN0ZW5lci5saW5lU3RhcnQoKTtcbiAgICAgICAgICAgICAgICBsaXN0ZW5lci5wb2ludCh0WzBdWzBdLCB0WzBdWzFdKTtcbiAgICAgICAgICAgICAgICBsaXN0ZW5lci5wb2ludCh0WzFdWzBdLCB0WzFdWzFdKTtcbiAgICAgICAgICAgICAgICBsaXN0ZW5lci5saW5lRW5kKCk7XG4gICAgICAgICAgICAgIH0gZWxzZSB7XG4gICAgICAgICAgICAgICAgbGlzdGVuZXIucG9pbnQodFsxXVswXSwgdFsxXVsxXSk7XG4gICAgICAgICAgICAgICAgbGlzdGVuZXIubGluZUVuZCgpO1xuICAgICAgICAgICAgICAgIGxpc3RlbmVyLmxpbmVTdGFydCgpO1xuICAgICAgICAgICAgICAgIGxpc3RlbmVyLnBvaW50KHRbMF1bMF0sIHRbMF1bMV0pO1xuICAgICAgICAgICAgICB9XG4gICAgICAgICAgICB9XG4gICAgICAgICAgfVxuICAgICAgICAgIGlmICh2ICYmICghcG9pbnQwIHx8ICFkM19nZW9fc3BoZXJpY2FsRXF1YWwocG9pbnQwLCBwb2ludDEpKSkge1xuICAgICAgICAgICAgbGlzdGVuZXIucG9pbnQocG9pbnQxWzBdLCBwb2ludDFbMV0pO1xuICAgICAgICAgIH1cbiAgICAgICAgICBwb2ludDAgPSBwb2ludDEsIHYwID0gdiwgYzAgPSBjO1xuICAgICAgICB9LFxuICAgICAgICBsaW5lRW5kOiBmdW5jdGlvbigpIHtcbiAgICAgICAgICBpZiAodjApIGxpc3RlbmVyLmxpbmVFbmQoKTtcbiAgICAgICAgICBwb2ludDAgPSBudWxsO1xuICAgICAgICB9LFxuICAgICAgICBjbGVhbjogZnVuY3Rpb24oKSB7XG4gICAgICAgICAgcmV0dXJuIGNsZWFuIHwgKHYwMCAmJiB2MCkgPDwgMTtcbiAgICAgICAgfVxuICAgICAgfTtcbiAgICB9XG4gICAgZnVuY3Rpb24gaW50ZXJzZWN0KGEsIGIsIHR3bykge1xuICAgICAgdmFyIHBhID0gZDNfZ2VvX2NhcnRlc2lhbihhKSwgcGIgPSBkM19nZW9fY2FydGVzaWFuKGIpO1xuICAgICAgdmFyIG4xID0gWyAxLCAwLCAwIF0sIG4yID0gZDNfZ2VvX2NhcnRlc2lhbkNyb3NzKHBhLCBwYiksIG4ybjIgPSBkM19nZW9fY2FydGVzaWFuRG90KG4yLCBuMiksIG4xbjIgPSBuMlswXSwgZGV0ZXJtaW5hbnQgPSBuMm4yIC0gbjFuMiAqIG4xbjI7XG4gICAgICBpZiAoIWRldGVybWluYW50KSByZXR1cm4gIXR3byAmJiBhO1xuICAgICAgdmFyIGMxID0gY3IgKiBuMm4yIC8gZGV0ZXJtaW5hbnQsIGMyID0gLWNyICogbjFuMiAvIGRldGVybWluYW50LCBuMXhuMiA9IGQzX2dlb19jYXJ0ZXNpYW5Dcm9zcyhuMSwgbjIpLCBBID0gZDNfZ2VvX2NhcnRlc2lhblNjYWxlKG4xLCBjMSksIEIgPSBkM19nZW9fY2FydGVzaWFuU2NhbGUobjIsIGMyKTtcbiAgICAgIGQzX2dlb19jYXJ0ZXNpYW5BZGQoQSwgQik7XG4gICAgICB2YXIgdSA9IG4xeG4yLCB3ID0gZDNfZ2VvX2NhcnRlc2lhbkRvdChBLCB1KSwgdXUgPSBkM19nZW9fY2FydGVzaWFuRG90KHUsIHUpLCB0MiA9IHcgKiB3IC0gdXUgKiAoZDNfZ2VvX2NhcnRlc2lhbkRvdChBLCBBKSAtIDEpO1xuICAgICAgaWYgKHQyIDwgMCkgcmV0dXJuO1xuICAgICAgdmFyIHQgPSBNYXRoLnNxcnQodDIpLCBxID0gZDNfZ2VvX2NhcnRlc2lhblNjYWxlKHUsICgtdyAtIHQpIC8gdXUpO1xuICAgICAgZDNfZ2VvX2NhcnRlc2lhbkFkZChxLCBBKTtcbiAgICAgIHEgPSBkM19nZW9fc3BoZXJpY2FsKHEpO1xuICAgICAgaWYgKCF0d28pIHJldHVybiBxO1xuICAgICAgdmFyIM67MCA9IGFbMF0sIM67MSA9IGJbMF0sIM+GMCA9IGFbMV0sIM+GMSA9IGJbMV0sIHo7XG4gICAgICBpZiAozrsxIDwgzrswKSB6ID0gzrswLCDOuzAgPSDOuzEsIM67MSA9IHo7XG4gICAgICB2YXIgzrTOuyA9IM67MSAtIM67MCwgcG9sYXIgPSBhYnMozrTOuyAtIM+AKSA8IM61LCBtZXJpZGlhbiA9IHBvbGFyIHx8IM60zrsgPCDOtTtcbiAgICAgIGlmICghcG9sYXIgJiYgz4YxIDwgz4YwKSB6ID0gz4YwLCDPhjAgPSDPhjEsIM+GMSA9IHo7XG4gICAgICBpZiAobWVyaWRpYW4gPyBwb2xhciA/IM+GMCArIM+GMSA+IDAgXiBxWzFdIDwgKGFicyhxWzBdIC0gzrswKSA8IM61ID8gz4YwIDogz4YxKSA6IM+GMCA8PSBxWzFdICYmIHFbMV0gPD0gz4YxIDogzrTOuyA+IM+AIF4gKM67MCA8PSBxWzBdICYmIHFbMF0gPD0gzrsxKSkge1xuICAgICAgICB2YXIgcTEgPSBkM19nZW9fY2FydGVzaWFuU2NhbGUodSwgKC13ICsgdCkgLyB1dSk7XG4gICAgICAgIGQzX2dlb19jYXJ0ZXNpYW5BZGQocTEsIEEpO1xuICAgICAgICByZXR1cm4gWyBxLCBkM19nZW9fc3BoZXJpY2FsKHExKSBdO1xuICAgICAgfVxuICAgIH1cbiAgICBmdW5jdGlvbiBjb2RlKM67LCDPhikge1xuICAgICAgdmFyIHIgPSBzbWFsbFJhZGl1cyA/IHJhZGl1cyA6IM+AIC0gcmFkaXVzLCBjb2RlID0gMDtcbiAgICAgIGlmICjOuyA8IC1yKSBjb2RlIHw9IDE7IGVsc2UgaWYgKM67ID4gcikgY29kZSB8PSAyO1xuICAgICAgaWYgKM+GIDwgLXIpIGNvZGUgfD0gNDsgZWxzZSBpZiAoz4YgPiByKSBjb2RlIHw9IDg7XG4gICAgICByZXR1cm4gY29kZTtcbiAgICB9XG4gIH1cbiAgZnVuY3Rpb24gZDNfZ2VvbV9jbGlwTGluZSh4MCwgeTAsIHgxLCB5MSkge1xuICAgIHJldHVybiBmdW5jdGlvbihsaW5lKSB7XG4gICAgICB2YXIgYSA9IGxpbmUuYSwgYiA9IGxpbmUuYiwgYXggPSBhLngsIGF5ID0gYS55LCBieCA9IGIueCwgYnkgPSBiLnksIHQwID0gMCwgdDEgPSAxLCBkeCA9IGJ4IC0gYXgsIGR5ID0gYnkgLSBheSwgcjtcbiAgICAgIHIgPSB4MCAtIGF4O1xuICAgICAgaWYgKCFkeCAmJiByID4gMCkgcmV0dXJuO1xuICAgICAgciAvPSBkeDtcbiAgICAgIGlmIChkeCA8IDApIHtcbiAgICAgICAgaWYgKHIgPCB0MCkgcmV0dXJuO1xuICAgICAgICBpZiAociA8IHQxKSB0MSA9IHI7XG4gICAgICB9IGVsc2UgaWYgKGR4ID4gMCkge1xuICAgICAgICBpZiAociA+IHQxKSByZXR1cm47XG4gICAgICAgIGlmIChyID4gdDApIHQwID0gcjtcbiAgICAgIH1cbiAgICAgIHIgPSB4MSAtIGF4O1xuICAgICAgaWYgKCFkeCAmJiByIDwgMCkgcmV0dXJuO1xuICAgICAgciAvPSBkeDtcbiAgICAgIGlmIChkeCA8IDApIHtcbiAgICAgICAgaWYgKHIgPiB0MSkgcmV0dXJuO1xuICAgICAgICBpZiAociA+IHQwKSB0MCA9IHI7XG4gICAgICB9IGVsc2UgaWYgKGR4ID4gMCkge1xuICAgICAgICBpZiAociA8IHQwKSByZXR1cm47XG4gICAgICAgIGlmIChyIDwgdDEpIHQxID0gcjtcbiAgICAgIH1cbiAgICAgIHIgPSB5MCAtIGF5O1xuICAgICAgaWYgKCFkeSAmJiByID4gMCkgcmV0dXJuO1xuICAgICAgciAvPSBkeTtcbiAgICAgIGlmIChkeSA8IDApIHtcbiAgICAgICAgaWYgKHIgPCB0MCkgcmV0dXJuO1xuICAgICAgICBpZiAociA8IHQxKSB0MSA9IHI7XG4gICAgICB9IGVsc2UgaWYgKGR5ID4gMCkge1xuICAgICAgICBpZiAociA+IHQxKSByZXR1cm47XG4gICAgICAgIGlmIChyID4gdDApIHQwID0gcjtcbiAgICAgIH1cbiAgICAgIHIgPSB5MSAtIGF5O1xuICAgICAgaWYgKCFkeSAmJiByIDwgMCkgcmV0dXJuO1xuICAgICAgciAvPSBkeTtcbiAgICAgIGlmIChkeSA8IDApIHtcbiAgICAgICAgaWYgKHIgPiB0MSkgcmV0dXJuO1xuICAgICAgICBpZiAociA+IHQwKSB0MCA9IHI7XG4gICAgICB9IGVsc2UgaWYgKGR5ID4gMCkge1xuICAgICAgICBpZiAociA8IHQwKSByZXR1cm47XG4gICAgICAgIGlmIChyIDwgdDEpIHQxID0gcjtcbiAgICAgIH1cbiAgICAgIGlmICh0MCA+IDApIGxpbmUuYSA9IHtcbiAgICAgICAgeDogYXggKyB0MCAqIGR4LFxuICAgICAgICB5OiBheSArIHQwICogZHlcbiAgICAgIH07XG4gICAgICBpZiAodDEgPCAxKSBsaW5lLmIgPSB7XG4gICAgICAgIHg6IGF4ICsgdDEgKiBkeCxcbiAgICAgICAgeTogYXkgKyB0MSAqIGR5XG4gICAgICB9O1xuICAgICAgcmV0dXJuIGxpbmU7XG4gICAgfTtcbiAgfVxuICB2YXIgZDNfZ2VvX2NsaXBFeHRlbnRNQVggPSAxZTk7XG4gIGQzLmdlby5jbGlwRXh0ZW50ID0gZnVuY3Rpb24oKSB7XG4gICAgdmFyIHgwLCB5MCwgeDEsIHkxLCBzdHJlYW0sIGNsaXAsIGNsaXBFeHRlbnQgPSB7XG4gICAgICBzdHJlYW06IGZ1bmN0aW9uKG91dHB1dCkge1xuICAgICAgICBpZiAoc3RyZWFtKSBzdHJlYW0udmFsaWQgPSBmYWxzZTtcbiAgICAgICAgc3RyZWFtID0gY2xpcChvdXRwdXQpO1xuICAgICAgICBzdHJlYW0udmFsaWQgPSB0cnVlO1xuICAgICAgICByZXR1cm4gc3RyZWFtO1xuICAgICAgfSxcbiAgICAgIGV4dGVudDogZnVuY3Rpb24oXykge1xuICAgICAgICBpZiAoIWFyZ3VtZW50cy5sZW5ndGgpIHJldHVybiBbIFsgeDAsIHkwIF0sIFsgeDEsIHkxIF0gXTtcbiAgICAgICAgY2xpcCA9IGQzX2dlb19jbGlwRXh0ZW50KHgwID0gK19bMF1bMF0sIHkwID0gK19bMF1bMV0sIHgxID0gK19bMV1bMF0sIHkxID0gK19bMV1bMV0pO1xuICAgICAgICBpZiAoc3RyZWFtKSBzdHJlYW0udmFsaWQgPSBmYWxzZSwgc3RyZWFtID0gbnVsbDtcbiAgICAgICAgcmV0dXJuIGNsaXBFeHRlbnQ7XG4gICAgICB9XG4gICAgfTtcbiAgICByZXR1cm4gY2xpcEV4dGVudC5leHRlbnQoWyBbIDAsIDAgXSwgWyA5NjAsIDUwMCBdIF0pO1xuICB9O1xuICBmdW5jdGlvbiBkM19nZW9fY2xpcEV4dGVudCh4MCwgeTAsIHgxLCB5MSkge1xuICAgIHJldHVybiBmdW5jdGlvbihsaXN0ZW5lcikge1xuICAgICAgdmFyIGxpc3RlbmVyXyA9IGxpc3RlbmVyLCBidWZmZXJMaXN0ZW5lciA9IGQzX2dlb19jbGlwQnVmZmVyTGlzdGVuZXIoKSwgY2xpcExpbmUgPSBkM19nZW9tX2NsaXBMaW5lKHgwLCB5MCwgeDEsIHkxKSwgc2VnbWVudHMsIHBvbHlnb24sIHJpbmc7XG4gICAgICB2YXIgY2xpcCA9IHtcbiAgICAgICAgcG9pbnQ6IHBvaW50LFxuICAgICAgICBsaW5lU3RhcnQ6IGxpbmVTdGFydCxcbiAgICAgICAgbGluZUVuZDogbGluZUVuZCxcbiAgICAgICAgcG9seWdvblN0YXJ0OiBmdW5jdGlvbigpIHtcbiAgICAgICAgICBsaXN0ZW5lciA9IGJ1ZmZlckxpc3RlbmVyO1xuICAgICAgICAgIHNlZ21lbnRzID0gW107XG4gICAgICAgICAgcG9seWdvbiA9IFtdO1xuICAgICAgICAgIGNsZWFuID0gdHJ1ZTtcbiAgICAgICAgfSxcbiAgICAgICAgcG9seWdvbkVuZDogZnVuY3Rpb24oKSB7XG4gICAgICAgICAgbGlzdGVuZXIgPSBsaXN0ZW5lcl87XG4gICAgICAgICAgc2VnbWVudHMgPSBkMy5tZXJnZShzZWdtZW50cyk7XG4gICAgICAgICAgdmFyIGNsaXBTdGFydEluc2lkZSA9IGluc2lkZVBvbHlnb24oWyB4MCwgeTEgXSksIGluc2lkZSA9IGNsZWFuICYmIGNsaXBTdGFydEluc2lkZSwgdmlzaWJsZSA9IHNlZ21lbnRzLmxlbmd0aDtcbiAgICAgICAgICBpZiAoaW5zaWRlIHx8IHZpc2libGUpIHtcbiAgICAgICAgICAgIGxpc3RlbmVyLnBvbHlnb25TdGFydCgpO1xuICAgICAgICAgICAgaWYgKGluc2lkZSkge1xuICAgICAgICAgICAgICBsaXN0ZW5lci5saW5lU3RhcnQoKTtcbiAgICAgICAgICAgICAgaW50ZXJwb2xhdGUobnVsbCwgbnVsbCwgMSwgbGlzdGVuZXIpO1xuICAgICAgICAgICAgICBsaXN0ZW5lci5saW5lRW5kKCk7XG4gICAgICAgICAgICB9XG4gICAgICAgICAgICBpZiAodmlzaWJsZSkge1xuICAgICAgICAgICAgICBkM19nZW9fY2xpcFBvbHlnb24oc2VnbWVudHMsIGNvbXBhcmUsIGNsaXBTdGFydEluc2lkZSwgaW50ZXJwb2xhdGUsIGxpc3RlbmVyKTtcbiAgICAgICAgICAgIH1cbiAgICAgICAgICAgIGxpc3RlbmVyLnBvbHlnb25FbmQoKTtcbiAgICAgICAgICB9XG4gICAgICAgICAgc2VnbWVudHMgPSBwb2x5Z29uID0gcmluZyA9IG51bGw7XG4gICAgICAgIH1cbiAgICAgIH07XG4gICAgICBmdW5jdGlvbiBpbnNpZGVQb2x5Z29uKHApIHtcbiAgICAgICAgdmFyIHduID0gMCwgbiA9IHBvbHlnb24ubGVuZ3RoLCB5ID0gcFsxXTtcbiAgICAgICAgZm9yICh2YXIgaSA9IDA7IGkgPCBuOyArK2kpIHtcbiAgICAgICAgICBmb3IgKHZhciBqID0gMSwgdiA9IHBvbHlnb25baV0sIG0gPSB2Lmxlbmd0aCwgYSA9IHZbMF0sIGI7IGogPCBtOyArK2opIHtcbiAgICAgICAgICAgIGIgPSB2W2pdO1xuICAgICAgICAgICAgaWYgKGFbMV0gPD0geSkge1xuICAgICAgICAgICAgICBpZiAoYlsxXSA+IHkgJiYgZDNfY3Jvc3MyZChhLCBiLCBwKSA+IDApICsrd247XG4gICAgICAgICAgICB9IGVsc2Uge1xuICAgICAgICAgICAgICBpZiAoYlsxXSA8PSB5ICYmIGQzX2Nyb3NzMmQoYSwgYiwgcCkgPCAwKSAtLXduO1xuICAgICAgICAgICAgfVxuICAgICAgICAgICAgYSA9IGI7XG4gICAgICAgICAgfVxuICAgICAgICB9XG4gICAgICAgIHJldHVybiB3biAhPT0gMDtcbiAgICAgIH1cbiAgICAgIGZ1bmN0aW9uIGludGVycG9sYXRlKGZyb20sIHRvLCBkaXJlY3Rpb24sIGxpc3RlbmVyKSB7XG4gICAgICAgIHZhciBhID0gMCwgYTEgPSAwO1xuICAgICAgICBpZiAoZnJvbSA9PSBudWxsIHx8IChhID0gY29ybmVyKGZyb20sIGRpcmVjdGlvbikpICE9PSAoYTEgPSBjb3JuZXIodG8sIGRpcmVjdGlvbikpIHx8IGNvbXBhcmVQb2ludHMoZnJvbSwgdG8pIDwgMCBeIGRpcmVjdGlvbiA+IDApIHtcbiAgICAgICAgICBkbyB7XG4gICAgICAgICAgICBsaXN0ZW5lci5wb2ludChhID09PSAwIHx8IGEgPT09IDMgPyB4MCA6IHgxLCBhID4gMSA/IHkxIDogeTApO1xuICAgICAgICAgIH0gd2hpbGUgKChhID0gKGEgKyBkaXJlY3Rpb24gKyA0KSAlIDQpICE9PSBhMSk7XG4gICAgICAgIH0gZWxzZSB7XG4gICAgICAgICAgbGlzdGVuZXIucG9pbnQodG9bMF0sIHRvWzFdKTtcbiAgICAgICAgfVxuICAgICAgfVxuICAgICAgZnVuY3Rpb24gcG9pbnRWaXNpYmxlKHgsIHkpIHtcbiAgICAgICAgcmV0dXJuIHgwIDw9IHggJiYgeCA8PSB4MSAmJiB5MCA8PSB5ICYmIHkgPD0geTE7XG4gICAgICB9XG4gICAgICBmdW5jdGlvbiBwb2ludCh4LCB5KSB7XG4gICAgICAgIGlmIChwb2ludFZpc2libGUoeCwgeSkpIGxpc3RlbmVyLnBvaW50KHgsIHkpO1xuICAgICAgfVxuICAgICAgdmFyIHhfXywgeV9fLCB2X18sIHhfLCB5Xywgdl8sIGZpcnN0LCBjbGVhbjtcbiAgICAgIGZ1bmN0aW9uIGxpbmVTdGFydCgpIHtcbiAgICAgICAgY2xpcC5wb2ludCA9IGxpbmVQb2ludDtcbiAgICAgICAgaWYgKHBvbHlnb24pIHBvbHlnb24ucHVzaChyaW5nID0gW10pO1xuICAgICAgICBmaXJzdCA9IHRydWU7XG4gICAgICAgIHZfID0gZmFsc2U7XG4gICAgICAgIHhfID0geV8gPSBOYU47XG4gICAgICB9XG4gICAgICBmdW5jdGlvbiBsaW5lRW5kKCkge1xuICAgICAgICBpZiAoc2VnbWVudHMpIHtcbiAgICAgICAgICBsaW5lUG9pbnQoeF9fLCB5X18pO1xuICAgICAgICAgIGlmICh2X18gJiYgdl8pIGJ1ZmZlckxpc3RlbmVyLnJlam9pbigpO1xuICAgICAgICAgIHNlZ21lbnRzLnB1c2goYnVmZmVyTGlzdGVuZXIuYnVmZmVyKCkpO1xuICAgICAgICB9XG4gICAgICAgIGNsaXAucG9pbnQgPSBwb2ludDtcbiAgICAgICAgaWYgKHZfKSBsaXN0ZW5lci5saW5lRW5kKCk7XG4gICAgICB9XG4gICAgICBmdW5jdGlvbiBsaW5lUG9pbnQoeCwgeSkge1xuICAgICAgICB4ID0gTWF0aC5tYXgoLWQzX2dlb19jbGlwRXh0ZW50TUFYLCBNYXRoLm1pbihkM19nZW9fY2xpcEV4dGVudE1BWCwgeCkpO1xuICAgICAgICB5ID0gTWF0aC5tYXgoLWQzX2dlb19jbGlwRXh0ZW50TUFYLCBNYXRoLm1pbihkM19nZW9fY2xpcEV4dGVudE1BWCwgeSkpO1xuICAgICAgICB2YXIgdiA9IHBvaW50VmlzaWJsZSh4LCB5KTtcbiAgICAgICAgaWYgKHBvbHlnb24pIHJpbmcucHVzaChbIHgsIHkgXSk7XG4gICAgICAgIGlmIChmaXJzdCkge1xuICAgICAgICAgIHhfXyA9IHgsIHlfXyA9IHksIHZfXyA9IHY7XG4gICAgICAgICAgZmlyc3QgPSBmYWxzZTtcbiAgICAgICAgICBpZiAodikge1xuICAgICAgICAgICAgbGlzdGVuZXIubGluZVN0YXJ0KCk7XG4gICAgICAgICAgICBsaXN0ZW5lci5wb2ludCh4LCB5KTtcbiAgICAgICAgICB9XG4gICAgICAgIH0gZWxzZSB7XG4gICAgICAgICAgaWYgKHYgJiYgdl8pIGxpc3RlbmVyLnBvaW50KHgsIHkpOyBlbHNlIHtcbiAgICAgICAgICAgIHZhciBsID0ge1xuICAgICAgICAgICAgICBhOiB7XG4gICAgICAgICAgICAgICAgeDogeF8sXG4gICAgICAgICAgICAgICAgeTogeV9cbiAgICAgICAgICAgICAgfSxcbiAgICAgICAgICAgICAgYjoge1xuICAgICAgICAgICAgICAgIHg6IHgsXG4gICAgICAgICAgICAgICAgeTogeVxuICAgICAgICAgICAgICB9XG4gICAgICAgICAgICB9O1xuICAgICAgICAgICAgaWYgKGNsaXBMaW5lKGwpKSB7XG4gICAgICAgICAgICAgIGlmICghdl8pIHtcbiAgICAgICAgICAgICAgICBsaXN0ZW5lci5saW5lU3RhcnQoKTtcbiAgICAgICAgICAgICAgICBsaXN0ZW5lci5wb2ludChsLmEueCwgbC5hLnkpO1xuICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgIGxpc3RlbmVyLnBvaW50KGwuYi54LCBsLmIueSk7XG4gICAgICAgICAgICAgIGlmICghdikgbGlzdGVuZXIubGluZUVuZCgpO1xuICAgICAgICAgICAgICBjbGVhbiA9IGZhbHNlO1xuICAgICAgICAgICAgfSBlbHNlIGlmICh2KSB7XG4gICAgICAgICAgICAgIGxpc3RlbmVyLmxpbmVTdGFydCgpO1xuICAgICAgICAgICAgICBsaXN0ZW5lci5wb2ludCh4LCB5KTtcbiAgICAgICAgICAgICAgY2xlYW4gPSBmYWxzZTtcbiAgICAgICAgICAgIH1cbiAgICAgICAgICB9XG4gICAgICAgIH1cbiAgICAgICAgeF8gPSB4LCB5XyA9IHksIHZfID0gdjtcbiAgICAgIH1cbiAgICAgIHJldHVybiBjbGlwO1xuICAgIH07XG4gICAgZnVuY3Rpb24gY29ybmVyKHAsIGRpcmVjdGlvbikge1xuICAgICAgcmV0dXJuIGFicyhwWzBdIC0geDApIDwgzrUgPyBkaXJlY3Rpb24gPiAwID8gMCA6IDMgOiBhYnMocFswXSAtIHgxKSA8IM61ID8gZGlyZWN0aW9uID4gMCA/IDIgOiAxIDogYWJzKHBbMV0gLSB5MCkgPCDOtSA/IGRpcmVjdGlvbiA+IDAgPyAxIDogMCA6IGRpcmVjdGlvbiA+IDAgPyAzIDogMjtcbiAgICB9XG4gICAgZnVuY3Rpb24gY29tcGFyZShhLCBiKSB7XG4gICAgICByZXR1cm4gY29tcGFyZVBvaW50cyhhLngsIGIueCk7XG4gICAgfVxuICAgIGZ1bmN0aW9uIGNvbXBhcmVQb2ludHMoYSwgYikge1xuICAgICAgdmFyIGNhID0gY29ybmVyKGEsIDEpLCBjYiA9IGNvcm5lcihiLCAxKTtcbiAgICAgIHJldHVybiBjYSAhPT0gY2IgPyBjYSAtIGNiIDogY2EgPT09IDAgPyBiWzFdIC0gYVsxXSA6IGNhID09PSAxID8gYVswXSAtIGJbMF0gOiBjYSA9PT0gMiA/IGFbMV0gLSBiWzFdIDogYlswXSAtIGFbMF07XG4gICAgfVxuICB9XG4gIGZ1bmN0aW9uIGQzX2dlb19jb25pYyhwcm9qZWN0QXQpIHtcbiAgICB2YXIgz4YwID0gMCwgz4YxID0gz4AgLyAzLCBtID0gZDNfZ2VvX3Byb2plY3Rpb25NdXRhdG9yKHByb2plY3RBdCksIHAgPSBtKM+GMCwgz4YxKTtcbiAgICBwLnBhcmFsbGVscyA9IGZ1bmN0aW9uKF8pIHtcbiAgICAgIGlmICghYXJndW1lbnRzLmxlbmd0aCkgcmV0dXJuIFsgz4YwIC8gz4AgKiAxODAsIM+GMSAvIM+AICogMTgwIF07XG4gICAgICByZXR1cm4gbSjPhjAgPSBfWzBdICogz4AgLyAxODAsIM+GMSA9IF9bMV0gKiDPgCAvIDE4MCk7XG4gICAgfTtcbiAgICByZXR1cm4gcDtcbiAgfVxuICBmdW5jdGlvbiBkM19nZW9fY29uaWNFcXVhbEFyZWEoz4YwLCDPhjEpIHtcbiAgICB2YXIgc2luz4YwID0gTWF0aC5zaW4oz4YwKSwgbiA9IChzaW7PhjAgKyBNYXRoLnNpbijPhjEpKSAvIDIsIEMgPSAxICsgc2luz4YwICogKDIgKiBuIC0gc2luz4YwKSwgz4EwID0gTWF0aC5zcXJ0KEMpIC8gbjtcbiAgICBmdW5jdGlvbiBmb3J3YXJkKM67LCDPhikge1xuICAgICAgdmFyIM+BID0gTWF0aC5zcXJ0KEMgLSAyICogbiAqIE1hdGguc2luKM+GKSkgLyBuO1xuICAgICAgcmV0dXJuIFsgz4EgKiBNYXRoLnNpbijOuyAqPSBuKSwgz4EwIC0gz4EgKiBNYXRoLmNvcyjOuykgXTtcbiAgICB9XG4gICAgZm9yd2FyZC5pbnZlcnQgPSBmdW5jdGlvbih4LCB5KSB7XG4gICAgICB2YXIgz4EwX3kgPSDPgTAgLSB5O1xuICAgICAgcmV0dXJuIFsgTWF0aC5hdGFuMih4LCDPgTBfeSkgLyBuLCBkM19hc2luKChDIC0gKHggKiB4ICsgz4EwX3kgKiDPgTBfeSkgKiBuICogbikgLyAoMiAqIG4pKSBdO1xuICAgIH07XG4gICAgcmV0dXJuIGZvcndhcmQ7XG4gIH1cbiAgKGQzLmdlby5jb25pY0VxdWFsQXJlYSA9IGZ1bmN0aW9uKCkge1xuICAgIHJldHVybiBkM19nZW9fY29uaWMoZDNfZ2VvX2NvbmljRXF1YWxBcmVhKTtcbiAgfSkucmF3ID0gZDNfZ2VvX2NvbmljRXF1YWxBcmVhO1xuICBkMy5nZW8uYWxiZXJzID0gZnVuY3Rpb24oKSB7XG4gICAgcmV0dXJuIGQzLmdlby5jb25pY0VxdWFsQXJlYSgpLnJvdGF0ZShbIDk2LCAwIF0pLmNlbnRlcihbIC0uNiwgMzguNyBdKS5wYXJhbGxlbHMoWyAyOS41LCA0NS41IF0pLnNjYWxlKDEwNzApO1xuICB9O1xuICBkMy5nZW8uYWxiZXJzVXNhID0gZnVuY3Rpb24oKSB7XG4gICAgdmFyIGxvd2VyNDggPSBkMy5nZW8uYWxiZXJzKCk7XG4gICAgdmFyIGFsYXNrYSA9IGQzLmdlby5jb25pY0VxdWFsQXJlYSgpLnJvdGF0ZShbIDE1NCwgMCBdKS5jZW50ZXIoWyAtMiwgNTguNSBdKS5wYXJhbGxlbHMoWyA1NSwgNjUgXSk7XG4gICAgdmFyIGhhd2FpaSA9IGQzLmdlby5jb25pY0VxdWFsQXJlYSgpLnJvdGF0ZShbIDE1NywgMCBdKS5jZW50ZXIoWyAtMywgMTkuOSBdKS5wYXJhbGxlbHMoWyA4LCAxOCBdKTtcbiAgICB2YXIgcG9pbnQsIHBvaW50U3RyZWFtID0ge1xuICAgICAgcG9pbnQ6IGZ1bmN0aW9uKHgsIHkpIHtcbiAgICAgICAgcG9pbnQgPSBbIHgsIHkgXTtcbiAgICAgIH1cbiAgICB9LCBsb3dlcjQ4UG9pbnQsIGFsYXNrYVBvaW50LCBoYXdhaWlQb2ludDtcbiAgICBmdW5jdGlvbiBhbGJlcnNVc2EoY29vcmRpbmF0ZXMpIHtcbiAgICAgIHZhciB4ID0gY29vcmRpbmF0ZXNbMF0sIHkgPSBjb29yZGluYXRlc1sxXTtcbiAgICAgIHBvaW50ID0gbnVsbDtcbiAgICAgIChsb3dlcjQ4UG9pbnQoeCwgeSksIHBvaW50KSB8fCAoYWxhc2thUG9pbnQoeCwgeSksIHBvaW50KSB8fCBoYXdhaWlQb2ludCh4LCB5KTtcbiAgICAgIHJldHVybiBwb2ludDtcbiAgICB9XG4gICAgYWxiZXJzVXNhLmludmVydCA9IGZ1bmN0aW9uKGNvb3JkaW5hdGVzKSB7XG4gICAgICB2YXIgayA9IGxvd2VyNDguc2NhbGUoKSwgdCA9IGxvd2VyNDgudHJhbnNsYXRlKCksIHggPSAoY29vcmRpbmF0ZXNbMF0gLSB0WzBdKSAvIGssIHkgPSAoY29vcmRpbmF0ZXNbMV0gLSB0WzFdKSAvIGs7XG4gICAgICByZXR1cm4gKHkgPj0gLjEyICYmIHkgPCAuMjM0ICYmIHggPj0gLS40MjUgJiYgeCA8IC0uMjE0ID8gYWxhc2thIDogeSA+PSAuMTY2ICYmIHkgPCAuMjM0ICYmIHggPj0gLS4yMTQgJiYgeCA8IC0uMTE1ID8gaGF3YWlpIDogbG93ZXI0OCkuaW52ZXJ0KGNvb3JkaW5hdGVzKTtcbiAgICB9O1xuICAgIGFsYmVyc1VzYS5zdHJlYW0gPSBmdW5jdGlvbihzdHJlYW0pIHtcbiAgICAgIHZhciBsb3dlcjQ4U3RyZWFtID0gbG93ZXI0OC5zdHJlYW0oc3RyZWFtKSwgYWxhc2thU3RyZWFtID0gYWxhc2thLnN0cmVhbShzdHJlYW0pLCBoYXdhaWlTdHJlYW0gPSBoYXdhaWkuc3RyZWFtKHN0cmVhbSk7XG4gICAgICByZXR1cm4ge1xuICAgICAgICBwb2ludDogZnVuY3Rpb24oeCwgeSkge1xuICAgICAgICAgIGxvd2VyNDhTdHJlYW0ucG9pbnQoeCwgeSk7XG4gICAgICAgICAgYWxhc2thU3RyZWFtLnBvaW50KHgsIHkpO1xuICAgICAgICAgIGhhd2FpaVN0cmVhbS5wb2ludCh4LCB5KTtcbiAgICAgICAgfSxcbiAgICAgICAgc3BoZXJlOiBmdW5jdGlvbigpIHtcbiAgICAgICAgICBsb3dlcjQ4U3RyZWFtLnNwaGVyZSgpO1xuICAgICAgICAgIGFsYXNrYVN0cmVhbS5zcGhlcmUoKTtcbiAgICAgICAgICBoYXdhaWlTdHJlYW0uc3BoZXJlKCk7XG4gICAgICAgIH0sXG4gICAgICAgIGxpbmVTdGFydDogZnVuY3Rpb24oKSB7XG4gICAgICAgICAgbG93ZXI0OFN0cmVhbS5saW5lU3RhcnQoKTtcbiAgICAgICAgICBhbGFza2FTdHJlYW0ubGluZVN0YXJ0KCk7XG4gICAgICAgICAgaGF3YWlpU3RyZWFtLmxpbmVTdGFydCgpO1xuICAgICAgICB9LFxuICAgICAgICBsaW5lRW5kOiBmdW5jdGlvbigpIHtcbiAgICAgICAgICBsb3dlcjQ4U3RyZWFtLmxpbmVFbmQoKTtcbiAgICAgICAgICBhbGFza2FTdHJlYW0ubGluZUVuZCgpO1xuICAgICAgICAgIGhhd2FpaVN0cmVhbS5saW5lRW5kKCk7XG4gICAgICAgIH0sXG4gICAgICAgIHBvbHlnb25TdGFydDogZnVuY3Rpb24oKSB7XG4gICAgICAgICAgbG93ZXI0OFN0cmVhbS5wb2x5Z29uU3RhcnQoKTtcbiAgICAgICAgICBhbGFza2FTdHJlYW0ucG9seWdvblN0YXJ0KCk7XG4gICAgICAgICAgaGF3YWlpU3RyZWFtLnBvbHlnb25TdGFydCgpO1xuICAgICAgICB9LFxuICAgICAgICBwb2x5Z29uRW5kOiBmdW5jdGlvbigpIHtcbiAgICAgICAgICBsb3dlcjQ4U3RyZWFtLnBvbHlnb25FbmQoKTtcbiAgICAgICAgICBhbGFza2FTdHJlYW0ucG9seWdvbkVuZCgpO1xuICAgICAgICAgIGhhd2FpaVN0cmVhbS5wb2x5Z29uRW5kKCk7XG4gICAgICAgIH1cbiAgICAgIH07XG4gICAgfTtcbiAgICBhbGJlcnNVc2EucHJlY2lzaW9uID0gZnVuY3Rpb24oXykge1xuICAgICAgaWYgKCFhcmd1bWVudHMubGVuZ3RoKSByZXR1cm4gbG93ZXI0OC5wcmVjaXNpb24oKTtcbiAgICAgIGxvd2VyNDgucHJlY2lzaW9uKF8pO1xuICAgICAgYWxhc2thLnByZWNpc2lvbihfKTtcbiAgICAgIGhhd2FpaS5wcmVjaXNpb24oXyk7XG4gICAgICByZXR1cm4gYWxiZXJzVXNhO1xuICAgIH07XG4gICAgYWxiZXJzVXNhLnNjYWxlID0gZnVuY3Rpb24oXykge1xuICAgICAgaWYgKCFhcmd1bWVudHMubGVuZ3RoKSByZXR1cm4gbG93ZXI0OC5zY2FsZSgpO1xuICAgICAgbG93ZXI0OC5zY2FsZShfKTtcbiAgICAgIGFsYXNrYS5zY2FsZShfICogLjM1KTtcbiAgICAgIGhhd2FpaS5zY2FsZShfKTtcbiAgICAgIHJldHVybiBhbGJlcnNVc2EudHJhbnNsYXRlKGxvd2VyNDgudHJhbnNsYXRlKCkpO1xuICAgIH07XG4gICAgYWxiZXJzVXNhLnRyYW5zbGF0ZSA9IGZ1bmN0aW9uKF8pIHtcbiAgICAgIGlmICghYXJndW1lbnRzLmxlbmd0aCkgcmV0dXJuIGxvd2VyNDgudHJhbnNsYXRlKCk7XG4gICAgICB2YXIgayA9IGxvd2VyNDguc2NhbGUoKSwgeCA9ICtfWzBdLCB5ID0gK19bMV07XG4gICAgICBsb3dlcjQ4UG9pbnQgPSBsb3dlcjQ4LnRyYW5zbGF0ZShfKS5jbGlwRXh0ZW50KFsgWyB4IC0gLjQ1NSAqIGssIHkgLSAuMjM4ICogayBdLCBbIHggKyAuNDU1ICogaywgeSArIC4yMzggKiBrIF0gXSkuc3RyZWFtKHBvaW50U3RyZWFtKS5wb2ludDtcbiAgICAgIGFsYXNrYVBvaW50ID0gYWxhc2thLnRyYW5zbGF0ZShbIHggLSAuMzA3ICogaywgeSArIC4yMDEgKiBrIF0pLmNsaXBFeHRlbnQoWyBbIHggLSAuNDI1ICogayArIM61LCB5ICsgLjEyICogayArIM61IF0sIFsgeCAtIC4yMTQgKiBrIC0gzrUsIHkgKyAuMjM0ICogayAtIM61IF0gXSkuc3RyZWFtKHBvaW50U3RyZWFtKS5wb2ludDtcbiAgICAgIGhhd2FpaVBvaW50ID0gaGF3YWlpLnRyYW5zbGF0ZShbIHggLSAuMjA1ICogaywgeSArIC4yMTIgKiBrIF0pLmNsaXBFeHRlbnQoWyBbIHggLSAuMjE0ICogayArIM61LCB5ICsgLjE2NiAqIGsgKyDOtSBdLCBbIHggLSAuMTE1ICogayAtIM61LCB5ICsgLjIzNCAqIGsgLSDOtSBdIF0pLnN0cmVhbShwb2ludFN0cmVhbSkucG9pbnQ7XG4gICAgICByZXR1cm4gYWxiZXJzVXNhO1xuICAgIH07XG4gICAgcmV0dXJuIGFsYmVyc1VzYS5zY2FsZSgxMDcwKTtcbiAgfTtcbiAgdmFyIGQzX2dlb19wYXRoQXJlYVN1bSwgZDNfZ2VvX3BhdGhBcmVhUG9seWdvbiwgZDNfZ2VvX3BhdGhBcmVhID0ge1xuICAgIHBvaW50OiBkM19ub29wLFxuICAgIGxpbmVTdGFydDogZDNfbm9vcCxcbiAgICBsaW5lRW5kOiBkM19ub29wLFxuICAgIHBvbHlnb25TdGFydDogZnVuY3Rpb24oKSB7XG4gICAgICBkM19nZW9fcGF0aEFyZWFQb2x5Z29uID0gMDtcbiAgICAgIGQzX2dlb19wYXRoQXJlYS5saW5lU3RhcnQgPSBkM19nZW9fcGF0aEFyZWFSaW5nU3RhcnQ7XG4gICAgfSxcbiAgICBwb2x5Z29uRW5kOiBmdW5jdGlvbigpIHtcbiAgICAgIGQzX2dlb19wYXRoQXJlYS5saW5lU3RhcnQgPSBkM19nZW9fcGF0aEFyZWEubGluZUVuZCA9IGQzX2dlb19wYXRoQXJlYS5wb2ludCA9IGQzX25vb3A7XG4gICAgICBkM19nZW9fcGF0aEFyZWFTdW0gKz0gYWJzKGQzX2dlb19wYXRoQXJlYVBvbHlnb24gLyAyKTtcbiAgICB9XG4gIH07XG4gIGZ1bmN0aW9uIGQzX2dlb19wYXRoQXJlYVJpbmdTdGFydCgpIHtcbiAgICB2YXIgeDAwLCB5MDAsIHgwLCB5MDtcbiAgICBkM19nZW9fcGF0aEFyZWEucG9pbnQgPSBmdW5jdGlvbih4LCB5KSB7XG4gICAgICBkM19nZW9fcGF0aEFyZWEucG9pbnQgPSBuZXh0UG9pbnQ7XG4gICAgICB4MDAgPSB4MCA9IHgsIHkwMCA9IHkwID0geTtcbiAgICB9O1xuICAgIGZ1bmN0aW9uIG5leHRQb2ludCh4LCB5KSB7XG4gICAgICBkM19nZW9fcGF0aEFyZWFQb2x5Z29uICs9IHkwICogeCAtIHgwICogeTtcbiAgICAgIHgwID0geCwgeTAgPSB5O1xuICAgIH1cbiAgICBkM19nZW9fcGF0aEFyZWEubGluZUVuZCA9IGZ1bmN0aW9uKCkge1xuICAgICAgbmV4dFBvaW50KHgwMCwgeTAwKTtcbiAgICB9O1xuICB9XG4gIHZhciBkM19nZW9fcGF0aEJvdW5kc1gwLCBkM19nZW9fcGF0aEJvdW5kc1kwLCBkM19nZW9fcGF0aEJvdW5kc1gxLCBkM19nZW9fcGF0aEJvdW5kc1kxO1xuICB2YXIgZDNfZ2VvX3BhdGhCb3VuZHMgPSB7XG4gICAgcG9pbnQ6IGQzX2dlb19wYXRoQm91bmRzUG9pbnQsXG4gICAgbGluZVN0YXJ0OiBkM19ub29wLFxuICAgIGxpbmVFbmQ6IGQzX25vb3AsXG4gICAgcG9seWdvblN0YXJ0OiBkM19ub29wLFxuICAgIHBvbHlnb25FbmQ6IGQzX25vb3BcbiAgfTtcbiAgZnVuY3Rpb24gZDNfZ2VvX3BhdGhCb3VuZHNQb2ludCh4LCB5KSB7XG4gICAgaWYgKHggPCBkM19nZW9fcGF0aEJvdW5kc1gwKSBkM19nZW9fcGF0aEJvdW5kc1gwID0geDtcbiAgICBpZiAoeCA+IGQzX2dlb19wYXRoQm91bmRzWDEpIGQzX2dlb19wYXRoQm91bmRzWDEgPSB4O1xuICAgIGlmICh5IDwgZDNfZ2VvX3BhdGhCb3VuZHNZMCkgZDNfZ2VvX3BhdGhCb3VuZHNZMCA9IHk7XG4gICAgaWYgKHkgPiBkM19nZW9fcGF0aEJvdW5kc1kxKSBkM19nZW9fcGF0aEJvdW5kc1kxID0geTtcbiAgfVxuICBmdW5jdGlvbiBkM19nZW9fcGF0aEJ1ZmZlcigpIHtcbiAgICB2YXIgcG9pbnRDaXJjbGUgPSBkM19nZW9fcGF0aEJ1ZmZlckNpcmNsZSg0LjUpLCBidWZmZXIgPSBbXTtcbiAgICB2YXIgc3RyZWFtID0ge1xuICAgICAgcG9pbnQ6IHBvaW50LFxuICAgICAgbGluZVN0YXJ0OiBmdW5jdGlvbigpIHtcbiAgICAgICAgc3RyZWFtLnBvaW50ID0gcG9pbnRMaW5lU3RhcnQ7XG4gICAgICB9LFxuICAgICAgbGluZUVuZDogbGluZUVuZCxcbiAgICAgIHBvbHlnb25TdGFydDogZnVuY3Rpb24oKSB7XG4gICAgICAgIHN0cmVhbS5saW5lRW5kID0gbGluZUVuZFBvbHlnb247XG4gICAgICB9LFxuICAgICAgcG9seWdvbkVuZDogZnVuY3Rpb24oKSB7XG4gICAgICAgIHN0cmVhbS5saW5lRW5kID0gbGluZUVuZDtcbiAgICAgICAgc3RyZWFtLnBvaW50ID0gcG9pbnQ7XG4gICAgICB9LFxuICAgICAgcG9pbnRSYWRpdXM6IGZ1bmN0aW9uKF8pIHtcbiAgICAgICAgcG9pbnRDaXJjbGUgPSBkM19nZW9fcGF0aEJ1ZmZlckNpcmNsZShfKTtcbiAgICAgICAgcmV0dXJuIHN0cmVhbTtcbiAgICAgIH0sXG4gICAgICByZXN1bHQ6IGZ1bmN0aW9uKCkge1xuICAgICAgICBpZiAoYnVmZmVyLmxlbmd0aCkge1xuICAgICAgICAgIHZhciByZXN1bHQgPSBidWZmZXIuam9pbihcIlwiKTtcbiAgICAgICAgICBidWZmZXIgPSBbXTtcbiAgICAgICAgICByZXR1cm4gcmVzdWx0O1xuICAgICAgICB9XG4gICAgICB9XG4gICAgfTtcbiAgICBmdW5jdGlvbiBwb2ludCh4LCB5KSB7XG4gICAgICBidWZmZXIucHVzaChcIk1cIiwgeCwgXCIsXCIsIHksIHBvaW50Q2lyY2xlKTtcbiAgICB9XG4gICAgZnVuY3Rpb24gcG9pbnRMaW5lU3RhcnQoeCwgeSkge1xuICAgICAgYnVmZmVyLnB1c2goXCJNXCIsIHgsIFwiLFwiLCB5KTtcbiAgICAgIHN0cmVhbS5wb2ludCA9IHBvaW50TGluZTtcbiAgICB9XG4gICAgZnVuY3Rpb24gcG9pbnRMaW5lKHgsIHkpIHtcbiAgICAgIGJ1ZmZlci5wdXNoKFwiTFwiLCB4LCBcIixcIiwgeSk7XG4gICAgfVxuICAgIGZ1bmN0aW9uIGxpbmVFbmQoKSB7XG4gICAgICBzdHJlYW0ucG9pbnQgPSBwb2ludDtcbiAgICB9XG4gICAgZnVuY3Rpb24gbGluZUVuZFBvbHlnb24oKSB7XG4gICAgICBidWZmZXIucHVzaChcIlpcIik7XG4gICAgfVxuICAgIHJldHVybiBzdHJlYW07XG4gIH1cbiAgZnVuY3Rpb24gZDNfZ2VvX3BhdGhCdWZmZXJDaXJjbGUocmFkaXVzKSB7XG4gICAgcmV0dXJuIFwibTAsXCIgKyByYWRpdXMgKyBcImFcIiArIHJhZGl1cyArIFwiLFwiICsgcmFkaXVzICsgXCIgMCAxLDEgMCxcIiArIC0yICogcmFkaXVzICsgXCJhXCIgKyByYWRpdXMgKyBcIixcIiArIHJhZGl1cyArIFwiIDAgMSwxIDAsXCIgKyAyICogcmFkaXVzICsgXCJ6XCI7XG4gIH1cbiAgdmFyIGQzX2dlb19wYXRoQ2VudHJvaWQgPSB7XG4gICAgcG9pbnQ6IGQzX2dlb19wYXRoQ2VudHJvaWRQb2ludCxcbiAgICBsaW5lU3RhcnQ6IGQzX2dlb19wYXRoQ2VudHJvaWRMaW5lU3RhcnQsXG4gICAgbGluZUVuZDogZDNfZ2VvX3BhdGhDZW50cm9pZExpbmVFbmQsXG4gICAgcG9seWdvblN0YXJ0OiBmdW5jdGlvbigpIHtcbiAgICAgIGQzX2dlb19wYXRoQ2VudHJvaWQubGluZVN0YXJ0ID0gZDNfZ2VvX3BhdGhDZW50cm9pZFJpbmdTdGFydDtcbiAgICB9LFxuICAgIHBvbHlnb25FbmQ6IGZ1bmN0aW9uKCkge1xuICAgICAgZDNfZ2VvX3BhdGhDZW50cm9pZC5wb2ludCA9IGQzX2dlb19wYXRoQ2VudHJvaWRQb2ludDtcbiAgICAgIGQzX2dlb19wYXRoQ2VudHJvaWQubGluZVN0YXJ0ID0gZDNfZ2VvX3BhdGhDZW50cm9pZExpbmVTdGFydDtcbiAgICAgIGQzX2dlb19wYXRoQ2VudHJvaWQubGluZUVuZCA9IGQzX2dlb19wYXRoQ2VudHJvaWRMaW5lRW5kO1xuICAgIH1cbiAgfTtcbiAgZnVuY3Rpb24gZDNfZ2VvX3BhdGhDZW50cm9pZFBvaW50KHgsIHkpIHtcbiAgICBkM19nZW9fY2VudHJvaWRYMCArPSB4O1xuICAgIGQzX2dlb19jZW50cm9pZFkwICs9IHk7XG4gICAgKytkM19nZW9fY2VudHJvaWRaMDtcbiAgfVxuICBmdW5jdGlvbiBkM19nZW9fcGF0aENlbnRyb2lkTGluZVN0YXJ0KCkge1xuICAgIHZhciB4MCwgeTA7XG4gICAgZDNfZ2VvX3BhdGhDZW50cm9pZC5wb2ludCA9IGZ1bmN0aW9uKHgsIHkpIHtcbiAgICAgIGQzX2dlb19wYXRoQ2VudHJvaWQucG9pbnQgPSBuZXh0UG9pbnQ7XG4gICAgICBkM19nZW9fcGF0aENlbnRyb2lkUG9pbnQoeDAgPSB4LCB5MCA9IHkpO1xuICAgIH07XG4gICAgZnVuY3Rpb24gbmV4dFBvaW50KHgsIHkpIHtcbiAgICAgIHZhciBkeCA9IHggLSB4MCwgZHkgPSB5IC0geTAsIHogPSBNYXRoLnNxcnQoZHggKiBkeCArIGR5ICogZHkpO1xuICAgICAgZDNfZ2VvX2NlbnRyb2lkWDEgKz0geiAqICh4MCArIHgpIC8gMjtcbiAgICAgIGQzX2dlb19jZW50cm9pZFkxICs9IHogKiAoeTAgKyB5KSAvIDI7XG4gICAgICBkM19nZW9fY2VudHJvaWRaMSArPSB6O1xuICAgICAgZDNfZ2VvX3BhdGhDZW50cm9pZFBvaW50KHgwID0geCwgeTAgPSB5KTtcbiAgICB9XG4gIH1cbiAgZnVuY3Rpb24gZDNfZ2VvX3BhdGhDZW50cm9pZExpbmVFbmQoKSB7XG4gICAgZDNfZ2VvX3BhdGhDZW50cm9pZC5wb2ludCA9IGQzX2dlb19wYXRoQ2VudHJvaWRQb2ludDtcbiAgfVxuICBmdW5jdGlvbiBkM19nZW9fcGF0aENlbnRyb2lkUmluZ1N0YXJ0KCkge1xuICAgIHZhciB4MDAsIHkwMCwgeDAsIHkwO1xuICAgIGQzX2dlb19wYXRoQ2VudHJvaWQucG9pbnQgPSBmdW5jdGlvbih4LCB5KSB7XG4gICAgICBkM19nZW9fcGF0aENlbnRyb2lkLnBvaW50ID0gbmV4dFBvaW50O1xuICAgICAgZDNfZ2VvX3BhdGhDZW50cm9pZFBvaW50KHgwMCA9IHgwID0geCwgeTAwID0geTAgPSB5KTtcbiAgICB9O1xuICAgIGZ1bmN0aW9uIG5leHRQb2ludCh4LCB5KSB7XG4gICAgICB2YXIgZHggPSB4IC0geDAsIGR5ID0geSAtIHkwLCB6ID0gTWF0aC5zcXJ0KGR4ICogZHggKyBkeSAqIGR5KTtcbiAgICAgIGQzX2dlb19jZW50cm9pZFgxICs9IHogKiAoeDAgKyB4KSAvIDI7XG4gICAgICBkM19nZW9fY2VudHJvaWRZMSArPSB6ICogKHkwICsgeSkgLyAyO1xuICAgICAgZDNfZ2VvX2NlbnRyb2lkWjEgKz0gejtcbiAgICAgIHogPSB5MCAqIHggLSB4MCAqIHk7XG4gICAgICBkM19nZW9fY2VudHJvaWRYMiArPSB6ICogKHgwICsgeCk7XG4gICAgICBkM19nZW9fY2VudHJvaWRZMiArPSB6ICogKHkwICsgeSk7XG4gICAgICBkM19nZW9fY2VudHJvaWRaMiArPSB6ICogMztcbiAgICAgIGQzX2dlb19wYXRoQ2VudHJvaWRQb2ludCh4MCA9IHgsIHkwID0geSk7XG4gICAgfVxuICAgIGQzX2dlb19wYXRoQ2VudHJvaWQubGluZUVuZCA9IGZ1bmN0aW9uKCkge1xuICAgICAgbmV4dFBvaW50KHgwMCwgeTAwKTtcbiAgICB9O1xuICB9XG4gIGZ1bmN0aW9uIGQzX2dlb19wYXRoQ29udGV4dChjb250ZXh0KSB7XG4gICAgdmFyIHBvaW50UmFkaXVzID0gNC41O1xuICAgIHZhciBzdHJlYW0gPSB7XG4gICAgICBwb2ludDogcG9pbnQsXG4gICAgICBsaW5lU3RhcnQ6IGZ1bmN0aW9uKCkge1xuICAgICAgICBzdHJlYW0ucG9pbnQgPSBwb2ludExpbmVTdGFydDtcbiAgICAgIH0sXG4gICAgICBsaW5lRW5kOiBsaW5lRW5kLFxuICAgICAgcG9seWdvblN0YXJ0OiBmdW5jdGlvbigpIHtcbiAgICAgICAgc3RyZWFtLmxpbmVFbmQgPSBsaW5lRW5kUG9seWdvbjtcbiAgICAgIH0sXG4gICAgICBwb2x5Z29uRW5kOiBmdW5jdGlvbigpIHtcbiAgICAgICAgc3RyZWFtLmxpbmVFbmQgPSBsaW5lRW5kO1xuICAgICAgICBzdHJlYW0ucG9pbnQgPSBwb2ludDtcbiAgICAgIH0sXG4gICAgICBwb2ludFJhZGl1czogZnVuY3Rpb24oXykge1xuICAgICAgICBwb2ludFJhZGl1cyA9IF87XG4gICAgICAgIHJldHVybiBzdHJlYW07XG4gICAgICB9LFxuICAgICAgcmVzdWx0OiBkM19ub29wXG4gICAgfTtcbiAgICBmdW5jdGlvbiBwb2ludCh4LCB5KSB7XG4gICAgICBjb250ZXh0Lm1vdmVUbyh4ICsgcG9pbnRSYWRpdXMsIHkpO1xuICAgICAgY29udGV4dC5hcmMoeCwgeSwgcG9pbnRSYWRpdXMsIDAsIM+EKTtcbiAgICB9XG4gICAgZnVuY3Rpb24gcG9pbnRMaW5lU3RhcnQoeCwgeSkge1xuICAgICAgY29udGV4dC5tb3ZlVG8oeCwgeSk7XG4gICAgICBzdHJlYW0ucG9pbnQgPSBwb2ludExpbmU7XG4gICAgfVxuICAgIGZ1bmN0aW9uIHBvaW50TGluZSh4LCB5KSB7XG4gICAgICBjb250ZXh0LmxpbmVUbyh4LCB5KTtcbiAgICB9XG4gICAgZnVuY3Rpb24gbGluZUVuZCgpIHtcbiAgICAgIHN0cmVhbS5wb2ludCA9IHBvaW50O1xuICAgIH1cbiAgICBmdW5jdGlvbiBsaW5lRW5kUG9seWdvbigpIHtcbiAgICAgIGNvbnRleHQuY2xvc2VQYXRoKCk7XG4gICAgfVxuICAgIHJldHVybiBzdHJlYW07XG4gIH1cbiAgZnVuY3Rpb24gZDNfZ2VvX3Jlc2FtcGxlKHByb2plY3QpIHtcbiAgICB2YXIgzrQyID0gLjUsIGNvc01pbkRpc3RhbmNlID0gTWF0aC5jb3MoMzAgKiBkM19yYWRpYW5zKSwgbWF4RGVwdGggPSAxNjtcbiAgICBmdW5jdGlvbiByZXNhbXBsZShzdHJlYW0pIHtcbiAgICAgIHJldHVybiAobWF4RGVwdGggPyByZXNhbXBsZVJlY3Vyc2l2ZSA6IHJlc2FtcGxlTm9uZSkoc3RyZWFtKTtcbiAgICB9XG4gICAgZnVuY3Rpb24gcmVzYW1wbGVOb25lKHN0cmVhbSkge1xuICAgICAgcmV0dXJuIGQzX2dlb190cmFuc2Zvcm1Qb2ludChzdHJlYW0sIGZ1bmN0aW9uKHgsIHkpIHtcbiAgICAgICAgeCA9IHByb2plY3QoeCwgeSk7XG4gICAgICAgIHN0cmVhbS5wb2ludCh4WzBdLCB4WzFdKTtcbiAgICAgIH0pO1xuICAgIH1cbiAgICBmdW5jdGlvbiByZXNhbXBsZVJlY3Vyc2l2ZShzdHJlYW0pIHtcbiAgICAgIHZhciDOuzAwLCDPhjAwLCB4MDAsIHkwMCwgYTAwLCBiMDAsIGMwMCwgzrswLCB4MCwgeTAsIGEwLCBiMCwgYzA7XG4gICAgICB2YXIgcmVzYW1wbGUgPSB7XG4gICAgICAgIHBvaW50OiBwb2ludCxcbiAgICAgICAgbGluZVN0YXJ0OiBsaW5lU3RhcnQsXG4gICAgICAgIGxpbmVFbmQ6IGxpbmVFbmQsXG4gICAgICAgIHBvbHlnb25TdGFydDogZnVuY3Rpb24oKSB7XG4gICAgICAgICAgc3RyZWFtLnBvbHlnb25TdGFydCgpO1xuICAgICAgICAgIHJlc2FtcGxlLmxpbmVTdGFydCA9IHJpbmdTdGFydDtcbiAgICAgICAgfSxcbiAgICAgICAgcG9seWdvbkVuZDogZnVuY3Rpb24oKSB7XG4gICAgICAgICAgc3RyZWFtLnBvbHlnb25FbmQoKTtcbiAgICAgICAgICByZXNhbXBsZS5saW5lU3RhcnQgPSBsaW5lU3RhcnQ7XG4gICAgICAgIH1cbiAgICAgIH07XG4gICAgICBmdW5jdGlvbiBwb2ludCh4LCB5KSB7XG4gICAgICAgIHggPSBwcm9qZWN0KHgsIHkpO1xuICAgICAgICBzdHJlYW0ucG9pbnQoeFswXSwgeFsxXSk7XG4gICAgICB9XG4gICAgICBmdW5jdGlvbiBsaW5lU3RhcnQoKSB7XG4gICAgICAgIHgwID0gTmFOO1xuICAgICAgICByZXNhbXBsZS5wb2ludCA9IGxpbmVQb2ludDtcbiAgICAgICAgc3RyZWFtLmxpbmVTdGFydCgpO1xuICAgICAgfVxuICAgICAgZnVuY3Rpb24gbGluZVBvaW50KM67LCDPhikge1xuICAgICAgICB2YXIgYyA9IGQzX2dlb19jYXJ0ZXNpYW4oWyDOuywgz4YgXSksIHAgPSBwcm9qZWN0KM67LCDPhik7XG4gICAgICAgIHJlc2FtcGxlTGluZVRvKHgwLCB5MCwgzrswLCBhMCwgYjAsIGMwLCB4MCA9IHBbMF0sIHkwID0gcFsxXSwgzrswID0gzrssIGEwID0gY1swXSwgYjAgPSBjWzFdLCBjMCA9IGNbMl0sIG1heERlcHRoLCBzdHJlYW0pO1xuICAgICAgICBzdHJlYW0ucG9pbnQoeDAsIHkwKTtcbiAgICAgIH1cbiAgICAgIGZ1bmN0aW9uIGxpbmVFbmQoKSB7XG4gICAgICAgIHJlc2FtcGxlLnBvaW50ID0gcG9pbnQ7XG4gICAgICAgIHN0cmVhbS5saW5lRW5kKCk7XG4gICAgICB9XG4gICAgICBmdW5jdGlvbiByaW5nU3RhcnQoKSB7XG4gICAgICAgIGxpbmVTdGFydCgpO1xuICAgICAgICByZXNhbXBsZS5wb2ludCA9IHJpbmdQb2ludDtcbiAgICAgICAgcmVzYW1wbGUubGluZUVuZCA9IHJpbmdFbmQ7XG4gICAgICB9XG4gICAgICBmdW5jdGlvbiByaW5nUG9pbnQozrssIM+GKSB7XG4gICAgICAgIGxpbmVQb2ludCjOuzAwID0gzrssIM+GMDAgPSDPhiksIHgwMCA9IHgwLCB5MDAgPSB5MCwgYTAwID0gYTAsIGIwMCA9IGIwLCBjMDAgPSBjMDtcbiAgICAgICAgcmVzYW1wbGUucG9pbnQgPSBsaW5lUG9pbnQ7XG4gICAgICB9XG4gICAgICBmdW5jdGlvbiByaW5nRW5kKCkge1xuICAgICAgICByZXNhbXBsZUxpbmVUbyh4MCwgeTAsIM67MCwgYTAsIGIwLCBjMCwgeDAwLCB5MDAsIM67MDAsIGEwMCwgYjAwLCBjMDAsIG1heERlcHRoLCBzdHJlYW0pO1xuICAgICAgICByZXNhbXBsZS5saW5lRW5kID0gbGluZUVuZDtcbiAgICAgICAgbGluZUVuZCgpO1xuICAgICAgfVxuICAgICAgcmV0dXJuIHJlc2FtcGxlO1xuICAgIH1cbiAgICBmdW5jdGlvbiByZXNhbXBsZUxpbmVUbyh4MCwgeTAsIM67MCwgYTAsIGIwLCBjMCwgeDEsIHkxLCDOuzEsIGExLCBiMSwgYzEsIGRlcHRoLCBzdHJlYW0pIHtcbiAgICAgIHZhciBkeCA9IHgxIC0geDAsIGR5ID0geTEgLSB5MCwgZDIgPSBkeCAqIGR4ICsgZHkgKiBkeTtcbiAgICAgIGlmIChkMiA+IDQgKiDOtDIgJiYgZGVwdGgtLSkge1xuICAgICAgICB2YXIgYSA9IGEwICsgYTEsIGIgPSBiMCArIGIxLCBjID0gYzAgKyBjMSwgbSA9IE1hdGguc3FydChhICogYSArIGIgKiBiICsgYyAqIGMpLCDPhjIgPSBNYXRoLmFzaW4oYyAvPSBtKSwgzrsyID0gYWJzKGFicyhjKSAtIDEpIDwgzrUgfHwgYWJzKM67MCAtIM67MSkgPCDOtSA/ICjOuzAgKyDOuzEpIC8gMiA6IE1hdGguYXRhbjIoYiwgYSksIHAgPSBwcm9qZWN0KM67Miwgz4YyKSwgeDIgPSBwWzBdLCB5MiA9IHBbMV0sIGR4MiA9IHgyIC0geDAsIGR5MiA9IHkyIC0geTAsIGR6ID0gZHkgKiBkeDIgLSBkeCAqIGR5MjtcbiAgICAgICAgaWYgKGR6ICogZHogLyBkMiA+IM60MiB8fCBhYnMoKGR4ICogZHgyICsgZHkgKiBkeTIpIC8gZDIgLSAuNSkgPiAuMyB8fCBhMCAqIGExICsgYjAgKiBiMSArIGMwICogYzEgPCBjb3NNaW5EaXN0YW5jZSkge1xuICAgICAgICAgIHJlc2FtcGxlTGluZVRvKHgwLCB5MCwgzrswLCBhMCwgYjAsIGMwLCB4MiwgeTIsIM67MiwgYSAvPSBtLCBiIC89IG0sIGMsIGRlcHRoLCBzdHJlYW0pO1xuICAgICAgICAgIHN0cmVhbS5wb2ludCh4MiwgeTIpO1xuICAgICAgICAgIHJlc2FtcGxlTGluZVRvKHgyLCB5MiwgzrsyLCBhLCBiLCBjLCB4MSwgeTEsIM67MSwgYTEsIGIxLCBjMSwgZGVwdGgsIHN0cmVhbSk7XG4gICAgICAgIH1cbiAgICAgIH1cbiAgICB9XG4gICAgcmVzYW1wbGUucHJlY2lzaW9uID0gZnVuY3Rpb24oXykge1xuICAgICAgaWYgKCFhcmd1bWVudHMubGVuZ3RoKSByZXR1cm4gTWF0aC5zcXJ0KM60Mik7XG4gICAgICBtYXhEZXB0aCA9ICjOtDIgPSBfICogXykgPiAwICYmIDE2O1xuICAgICAgcmV0dXJuIHJlc2FtcGxlO1xuICAgIH07XG4gICAgcmV0dXJuIHJlc2FtcGxlO1xuICB9XG4gIGQzLmdlby5wYXRoID0gZnVuY3Rpb24oKSB7XG4gICAgdmFyIHBvaW50UmFkaXVzID0gNC41LCBwcm9qZWN0aW9uLCBjb250ZXh0LCBwcm9qZWN0U3RyZWFtLCBjb250ZXh0U3RyZWFtLCBjYWNoZVN0cmVhbTtcbiAgICBmdW5jdGlvbiBwYXRoKG9iamVjdCkge1xuICAgICAgaWYgKG9iamVjdCkge1xuICAgICAgICBpZiAodHlwZW9mIHBvaW50UmFkaXVzID09PSBcImZ1bmN0aW9uXCIpIGNvbnRleHRTdHJlYW0ucG9pbnRSYWRpdXMoK3BvaW50UmFkaXVzLmFwcGx5KHRoaXMsIGFyZ3VtZW50cykpO1xuICAgICAgICBpZiAoIWNhY2hlU3RyZWFtIHx8ICFjYWNoZVN0cmVhbS52YWxpZCkgY2FjaGVTdHJlYW0gPSBwcm9qZWN0U3RyZWFtKGNvbnRleHRTdHJlYW0pO1xuICAgICAgICBkMy5nZW8uc3RyZWFtKG9iamVjdCwgY2FjaGVTdHJlYW0pO1xuICAgICAgfVxuICAgICAgcmV0dXJuIGNvbnRleHRTdHJlYW0ucmVzdWx0KCk7XG4gICAgfVxuICAgIHBhdGguYXJlYSA9IGZ1bmN0aW9uKG9iamVjdCkge1xuICAgICAgZDNfZ2VvX3BhdGhBcmVhU3VtID0gMDtcbiAgICAgIGQzLmdlby5zdHJlYW0ob2JqZWN0LCBwcm9qZWN0U3RyZWFtKGQzX2dlb19wYXRoQXJlYSkpO1xuICAgICAgcmV0dXJuIGQzX2dlb19wYXRoQXJlYVN1bTtcbiAgICB9O1xuICAgIHBhdGguY2VudHJvaWQgPSBmdW5jdGlvbihvYmplY3QpIHtcbiAgICAgIGQzX2dlb19jZW50cm9pZFgwID0gZDNfZ2VvX2NlbnRyb2lkWTAgPSBkM19nZW9fY2VudHJvaWRaMCA9IGQzX2dlb19jZW50cm9pZFgxID0gZDNfZ2VvX2NlbnRyb2lkWTEgPSBkM19nZW9fY2VudHJvaWRaMSA9IGQzX2dlb19jZW50cm9pZFgyID0gZDNfZ2VvX2NlbnRyb2lkWTIgPSBkM19nZW9fY2VudHJvaWRaMiA9IDA7XG4gICAgICBkMy5nZW8uc3RyZWFtKG9iamVjdCwgcHJvamVjdFN0cmVhbShkM19nZW9fcGF0aENlbnRyb2lkKSk7XG4gICAgICByZXR1cm4gZDNfZ2VvX2NlbnRyb2lkWjIgPyBbIGQzX2dlb19jZW50cm9pZFgyIC8gZDNfZ2VvX2NlbnRyb2lkWjIsIGQzX2dlb19jZW50cm9pZFkyIC8gZDNfZ2VvX2NlbnRyb2lkWjIgXSA6IGQzX2dlb19jZW50cm9pZFoxID8gWyBkM19nZW9fY2VudHJvaWRYMSAvIGQzX2dlb19jZW50cm9pZFoxLCBkM19nZW9fY2VudHJvaWRZMSAvIGQzX2dlb19jZW50cm9pZFoxIF0gOiBkM19nZW9fY2VudHJvaWRaMCA/IFsgZDNfZ2VvX2NlbnRyb2lkWDAgLyBkM19nZW9fY2VudHJvaWRaMCwgZDNfZ2VvX2NlbnRyb2lkWTAgLyBkM19nZW9fY2VudHJvaWRaMCBdIDogWyBOYU4sIE5hTiBdO1xuICAgIH07XG4gICAgcGF0aC5ib3VuZHMgPSBmdW5jdGlvbihvYmplY3QpIHtcbiAgICAgIGQzX2dlb19wYXRoQm91bmRzWDEgPSBkM19nZW9fcGF0aEJvdW5kc1kxID0gLShkM19nZW9fcGF0aEJvdW5kc1gwID0gZDNfZ2VvX3BhdGhCb3VuZHNZMCA9IEluZmluaXR5KTtcbiAgICAgIGQzLmdlby5zdHJlYW0ob2JqZWN0LCBwcm9qZWN0U3RyZWFtKGQzX2dlb19wYXRoQm91bmRzKSk7XG4gICAgICByZXR1cm4gWyBbIGQzX2dlb19wYXRoQm91bmRzWDAsIGQzX2dlb19wYXRoQm91bmRzWTAgXSwgWyBkM19nZW9fcGF0aEJvdW5kc1gxLCBkM19nZW9fcGF0aEJvdW5kc1kxIF0gXTtcbiAgICB9O1xuICAgIHBhdGgucHJvamVjdGlvbiA9IGZ1bmN0aW9uKF8pIHtcbiAgICAgIGlmICghYXJndW1lbnRzLmxlbmd0aCkgcmV0dXJuIHByb2plY3Rpb247XG4gICAgICBwcm9qZWN0U3RyZWFtID0gKHByb2plY3Rpb24gPSBfKSA/IF8uc3RyZWFtIHx8IGQzX2dlb19wYXRoUHJvamVjdFN0cmVhbShfKSA6IGQzX2lkZW50aXR5O1xuICAgICAgcmV0dXJuIHJlc2V0KCk7XG4gICAgfTtcbiAgICBwYXRoLmNvbnRleHQgPSBmdW5jdGlvbihfKSB7XG4gICAgICBpZiAoIWFyZ3VtZW50cy5sZW5ndGgpIHJldHVybiBjb250ZXh0O1xuICAgICAgY29udGV4dFN0cmVhbSA9IChjb250ZXh0ID0gXykgPT0gbnVsbCA/IG5ldyBkM19nZW9fcGF0aEJ1ZmZlcigpIDogbmV3IGQzX2dlb19wYXRoQ29udGV4dChfKTtcbiAgICAgIGlmICh0eXBlb2YgcG9pbnRSYWRpdXMgIT09IFwiZnVuY3Rpb25cIikgY29udGV4dFN0cmVhbS5wb2ludFJhZGl1cyhwb2ludFJhZGl1cyk7XG4gICAgICByZXR1cm4gcmVzZXQoKTtcbiAgICB9O1xuICAgIHBhdGgucG9pbnRSYWRpdXMgPSBmdW5jdGlvbihfKSB7XG4gICAgICBpZiAoIWFyZ3VtZW50cy5sZW5ndGgpIHJldHVybiBwb2ludFJhZGl1cztcbiAgICAgIHBvaW50UmFkaXVzID0gdHlwZW9mIF8gPT09IFwiZnVuY3Rpb25cIiA/IF8gOiAoY29udGV4dFN0cmVhbS5wb2ludFJhZGl1cygrXyksICtfKTtcbiAgICAgIHJldHVybiBwYXRoO1xuICAgIH07XG4gICAgZnVuY3Rpb24gcmVzZXQoKSB7XG4gICAgICBjYWNoZVN0cmVhbSA9IG51bGw7XG4gICAgICByZXR1cm4gcGF0aDtcbiAgICB9XG4gICAgcmV0dXJuIHBhdGgucHJvamVjdGlvbihkMy5nZW8uYWxiZXJzVXNhKCkpLmNvbnRleHQobnVsbCk7XG4gIH07XG4gIGZ1bmN0aW9uIGQzX2dlb19wYXRoUHJvamVjdFN0cmVhbShwcm9qZWN0KSB7XG4gICAgdmFyIHJlc2FtcGxlID0gZDNfZ2VvX3Jlc2FtcGxlKGZ1bmN0aW9uKHgsIHkpIHtcbiAgICAgIHJldHVybiBwcm9qZWN0KFsgeCAqIGQzX2RlZ3JlZXMsIHkgKiBkM19kZWdyZWVzIF0pO1xuICAgIH0pO1xuICAgIHJldHVybiBmdW5jdGlvbihzdHJlYW0pIHtcbiAgICAgIHJldHVybiBkM19nZW9fcHJvamVjdGlvblJhZGlhbnMocmVzYW1wbGUoc3RyZWFtKSk7XG4gICAgfTtcbiAgfVxuICBkMy5nZW8udHJhbnNmb3JtID0gZnVuY3Rpb24obWV0aG9kcykge1xuICAgIHJldHVybiB7XG4gICAgICBzdHJlYW06IGZ1bmN0aW9uKHN0cmVhbSkge1xuICAgICAgICB2YXIgdHJhbnNmb3JtID0gbmV3IGQzX2dlb190cmFuc2Zvcm0oc3RyZWFtKTtcbiAgICAgICAgZm9yICh2YXIgayBpbiBtZXRob2RzKSB0cmFuc2Zvcm1ba10gPSBtZXRob2RzW2tdO1xuICAgICAgICByZXR1cm4gdHJhbnNmb3JtO1xuICAgICAgfVxuICAgIH07XG4gIH07XG4gIGZ1bmN0aW9uIGQzX2dlb190cmFuc2Zvcm0oc3RyZWFtKSB7XG4gICAgdGhpcy5zdHJlYW0gPSBzdHJlYW07XG4gIH1cbiAgZDNfZ2VvX3RyYW5zZm9ybS5wcm90b3R5cGUgPSB7XG4gICAgcG9pbnQ6IGZ1bmN0aW9uKHgsIHkpIHtcbiAgICAgIHRoaXMuc3RyZWFtLnBvaW50KHgsIHkpO1xuICAgIH0sXG4gICAgc3BoZXJlOiBmdW5jdGlvbigpIHtcbiAgICAgIHRoaXMuc3RyZWFtLnNwaGVyZSgpO1xuICAgIH0sXG4gICAgbGluZVN0YXJ0OiBmdW5jdGlvbigpIHtcbiAgICAgIHRoaXMuc3RyZWFtLmxpbmVTdGFydCgpO1xuICAgIH0sXG4gICAgbGluZUVuZDogZnVuY3Rpb24oKSB7XG4gICAgICB0aGlzLnN0cmVhbS5saW5lRW5kKCk7XG4gICAgfSxcbiAgICBwb2x5Z29uU3RhcnQ6IGZ1bmN0aW9uKCkge1xuICAgICAgdGhpcy5zdHJlYW0ucG9seWdvblN0YXJ0KCk7XG4gICAgfSxcbiAgICBwb2x5Z29uRW5kOiBmdW5jdGlvbigpIHtcbiAgICAgIHRoaXMuc3RyZWFtLnBvbHlnb25FbmQoKTtcbiAgICB9XG4gIH07XG4gIGZ1bmN0aW9uIGQzX2dlb190cmFuc2Zvcm1Qb2ludChzdHJlYW0sIHBvaW50KSB7XG4gICAgcmV0dXJuIHtcbiAgICAgIHBvaW50OiBwb2ludCxcbiAgICAgIHNwaGVyZTogZnVuY3Rpb24oKSB7XG4gICAgICAgIHN0cmVhbS5zcGhlcmUoKTtcbiAgICAgIH0sXG4gICAgICBsaW5lU3RhcnQ6IGZ1bmN0aW9uKCkge1xuICAgICAgICBzdHJlYW0ubGluZVN0YXJ0KCk7XG4gICAgICB9LFxuICAgICAgbGluZUVuZDogZnVuY3Rpb24oKSB7XG4gICAgICAgIHN0cmVhbS5saW5lRW5kKCk7XG4gICAgICB9LFxuICAgICAgcG9seWdvblN0YXJ0OiBmdW5jdGlvbigpIHtcbiAgICAgICAgc3RyZWFtLnBvbHlnb25TdGFydCgpO1xuICAgICAgfSxcbiAgICAgIHBvbHlnb25FbmQ6IGZ1bmN0aW9uKCkge1xuICAgICAgICBzdHJlYW0ucG9seWdvbkVuZCgpO1xuICAgICAgfVxuICAgIH07XG4gIH1cbiAgZDMuZ2VvLnByb2plY3Rpb24gPSBkM19nZW9fcHJvamVjdGlvbjtcbiAgZDMuZ2VvLnByb2plY3Rpb25NdXRhdG9yID0gZDNfZ2VvX3Byb2plY3Rpb25NdXRhdG9yO1xuICBmdW5jdGlvbiBkM19nZW9fcHJvamVjdGlvbihwcm9qZWN0KSB7XG4gICAgcmV0dXJuIGQzX2dlb19wcm9qZWN0aW9uTXV0YXRvcihmdW5jdGlvbigpIHtcbiAgICAgIHJldHVybiBwcm9qZWN0O1xuICAgIH0pKCk7XG4gIH1cbiAgZnVuY3Rpb24gZDNfZ2VvX3Byb2plY3Rpb25NdXRhdG9yKHByb2plY3RBdCkge1xuICAgIHZhciBwcm9qZWN0LCByb3RhdGUsIHByb2plY3RSb3RhdGUsIHByb2plY3RSZXNhbXBsZSA9IGQzX2dlb19yZXNhbXBsZShmdW5jdGlvbih4LCB5KSB7XG4gICAgICB4ID0gcHJvamVjdCh4LCB5KTtcbiAgICAgIHJldHVybiBbIHhbMF0gKiBrICsgzrR4LCDOtHkgLSB4WzFdICogayBdO1xuICAgIH0pLCBrID0gMTUwLCB4ID0gNDgwLCB5ID0gMjUwLCDOuyA9IDAsIM+GID0gMCwgzrTOuyA9IDAsIM60z4YgPSAwLCDOtM6zID0gMCwgzrR4LCDOtHksIHByZWNsaXAgPSBkM19nZW9fY2xpcEFudGltZXJpZGlhbiwgcG9zdGNsaXAgPSBkM19pZGVudGl0eSwgY2xpcEFuZ2xlID0gbnVsbCwgY2xpcEV4dGVudCA9IG51bGwsIHN0cmVhbTtcbiAgICBmdW5jdGlvbiBwcm9qZWN0aW9uKHBvaW50KSB7XG4gICAgICBwb2ludCA9IHByb2plY3RSb3RhdGUocG9pbnRbMF0gKiBkM19yYWRpYW5zLCBwb2ludFsxXSAqIGQzX3JhZGlhbnMpO1xuICAgICAgcmV0dXJuIFsgcG9pbnRbMF0gKiBrICsgzrR4LCDOtHkgLSBwb2ludFsxXSAqIGsgXTtcbiAgICB9XG4gICAgZnVuY3Rpb24gaW52ZXJ0KHBvaW50KSB7XG4gICAgICBwb2ludCA9IHByb2plY3RSb3RhdGUuaW52ZXJ0KChwb2ludFswXSAtIM60eCkgLyBrLCAozrR5IC0gcG9pbnRbMV0pIC8gayk7XG4gICAgICByZXR1cm4gcG9pbnQgJiYgWyBwb2ludFswXSAqIGQzX2RlZ3JlZXMsIHBvaW50WzFdICogZDNfZGVncmVlcyBdO1xuICAgIH1cbiAgICBwcm9qZWN0aW9uLnN0cmVhbSA9IGZ1bmN0aW9uKG91dHB1dCkge1xuICAgICAgaWYgKHN0cmVhbSkgc3RyZWFtLnZhbGlkID0gZmFsc2U7XG4gICAgICBzdHJlYW0gPSBkM19nZW9fcHJvamVjdGlvblJhZGlhbnMocHJlY2xpcChyb3RhdGUsIHByb2plY3RSZXNhbXBsZShwb3N0Y2xpcChvdXRwdXQpKSkpO1xuICAgICAgc3RyZWFtLnZhbGlkID0gdHJ1ZTtcbiAgICAgIHJldHVybiBzdHJlYW07XG4gICAgfTtcbiAgICBwcm9qZWN0aW9uLmNsaXBBbmdsZSA9IGZ1bmN0aW9uKF8pIHtcbiAgICAgIGlmICghYXJndW1lbnRzLmxlbmd0aCkgcmV0dXJuIGNsaXBBbmdsZTtcbiAgICAgIHByZWNsaXAgPSBfID09IG51bGwgPyAoY2xpcEFuZ2xlID0gXywgZDNfZ2VvX2NsaXBBbnRpbWVyaWRpYW4pIDogZDNfZ2VvX2NsaXBDaXJjbGUoKGNsaXBBbmdsZSA9ICtfKSAqIGQzX3JhZGlhbnMpO1xuICAgICAgcmV0dXJuIGludmFsaWRhdGUoKTtcbiAgICB9O1xuICAgIHByb2plY3Rpb24uY2xpcEV4dGVudCA9IGZ1bmN0aW9uKF8pIHtcbiAgICAgIGlmICghYXJndW1lbnRzLmxlbmd0aCkgcmV0dXJuIGNsaXBFeHRlbnQ7XG4gICAgICBjbGlwRXh0ZW50ID0gXztcbiAgICAgIHBvc3RjbGlwID0gXyA/IGQzX2dlb19jbGlwRXh0ZW50KF9bMF1bMF0sIF9bMF1bMV0sIF9bMV1bMF0sIF9bMV1bMV0pIDogZDNfaWRlbnRpdHk7XG4gICAgICByZXR1cm4gaW52YWxpZGF0ZSgpO1xuICAgIH07XG4gICAgcHJvamVjdGlvbi5zY2FsZSA9IGZ1bmN0aW9uKF8pIHtcbiAgICAgIGlmICghYXJndW1lbnRzLmxlbmd0aCkgcmV0dXJuIGs7XG4gICAgICBrID0gK187XG4gICAgICByZXR1cm4gcmVzZXQoKTtcbiAgICB9O1xuICAgIHByb2plY3Rpb24udHJhbnNsYXRlID0gZnVuY3Rpb24oXykge1xuICAgICAgaWYgKCFhcmd1bWVudHMubGVuZ3RoKSByZXR1cm4gWyB4LCB5IF07XG4gICAgICB4ID0gK19bMF07XG4gICAgICB5ID0gK19bMV07XG4gICAgICByZXR1cm4gcmVzZXQoKTtcbiAgICB9O1xuICAgIHByb2plY3Rpb24uY2VudGVyID0gZnVuY3Rpb24oXykge1xuICAgICAgaWYgKCFhcmd1bWVudHMubGVuZ3RoKSByZXR1cm4gWyDOuyAqIGQzX2RlZ3JlZXMsIM+GICogZDNfZGVncmVlcyBdO1xuICAgICAgzrsgPSBfWzBdICUgMzYwICogZDNfcmFkaWFucztcbiAgICAgIM+GID0gX1sxXSAlIDM2MCAqIGQzX3JhZGlhbnM7XG4gICAgICByZXR1cm4gcmVzZXQoKTtcbiAgICB9O1xuICAgIHByb2plY3Rpb24ucm90YXRlID0gZnVuY3Rpb24oXykge1xuICAgICAgaWYgKCFhcmd1bWVudHMubGVuZ3RoKSByZXR1cm4gWyDOtM67ICogZDNfZGVncmVlcywgzrTPhiAqIGQzX2RlZ3JlZXMsIM60zrMgKiBkM19kZWdyZWVzIF07XG4gICAgICDOtM67ID0gX1swXSAlIDM2MCAqIGQzX3JhZGlhbnM7XG4gICAgICDOtM+GID0gX1sxXSAlIDM2MCAqIGQzX3JhZGlhbnM7XG4gICAgICDOtM6zID0gXy5sZW5ndGggPiAyID8gX1syXSAlIDM2MCAqIGQzX3JhZGlhbnMgOiAwO1xuICAgICAgcmV0dXJuIHJlc2V0KCk7XG4gICAgfTtcbiAgICBkMy5yZWJpbmQocHJvamVjdGlvbiwgcHJvamVjdFJlc2FtcGxlLCBcInByZWNpc2lvblwiKTtcbiAgICBmdW5jdGlvbiByZXNldCgpIHtcbiAgICAgIHByb2plY3RSb3RhdGUgPSBkM19nZW9fY29tcG9zZShyb3RhdGUgPSBkM19nZW9fcm90YXRpb24ozrTOuywgzrTPhiwgzrTOsyksIHByb2plY3QpO1xuICAgICAgdmFyIGNlbnRlciA9IHByb2plY3QozrssIM+GKTtcbiAgICAgIM60eCA9IHggLSBjZW50ZXJbMF0gKiBrO1xuICAgICAgzrR5ID0geSArIGNlbnRlclsxXSAqIGs7XG4gICAgICByZXR1cm4gaW52YWxpZGF0ZSgpO1xuICAgIH1cbiAgICBmdW5jdGlvbiBpbnZhbGlkYXRlKCkge1xuICAgICAgaWYgKHN0cmVhbSkgc3RyZWFtLnZhbGlkID0gZmFsc2UsIHN0cmVhbSA9IG51bGw7XG4gICAgICByZXR1cm4gcHJvamVjdGlvbjtcbiAgICB9XG4gICAgcmV0dXJuIGZ1bmN0aW9uKCkge1xuICAgICAgcHJvamVjdCA9IHByb2plY3RBdC5hcHBseSh0aGlzLCBhcmd1bWVudHMpO1xuICAgICAgcHJvamVjdGlvbi5pbnZlcnQgPSBwcm9qZWN0LmludmVydCAmJiBpbnZlcnQ7XG4gICAgICByZXR1cm4gcmVzZXQoKTtcbiAgICB9O1xuICB9XG4gIGZ1bmN0aW9uIGQzX2dlb19wcm9qZWN0aW9uUmFkaWFucyhzdHJlYW0pIHtcbiAgICByZXR1cm4gZDNfZ2VvX3RyYW5zZm9ybVBvaW50KHN0cmVhbSwgZnVuY3Rpb24oeCwgeSkge1xuICAgICAgc3RyZWFtLnBvaW50KHggKiBkM19yYWRpYW5zLCB5ICogZDNfcmFkaWFucyk7XG4gICAgfSk7XG4gIH1cbiAgZnVuY3Rpb24gZDNfZ2VvX2VxdWlyZWN0YW5ndWxhcijOuywgz4YpIHtcbiAgICByZXR1cm4gWyDOuywgz4YgXTtcbiAgfVxuICAoZDMuZ2VvLmVxdWlyZWN0YW5ndWxhciA9IGZ1bmN0aW9uKCkge1xuICAgIHJldHVybiBkM19nZW9fcHJvamVjdGlvbihkM19nZW9fZXF1aXJlY3Rhbmd1bGFyKTtcbiAgfSkucmF3ID0gZDNfZ2VvX2VxdWlyZWN0YW5ndWxhci5pbnZlcnQgPSBkM19nZW9fZXF1aXJlY3Rhbmd1bGFyO1xuICBkMy5nZW8ucm90YXRpb24gPSBmdW5jdGlvbihyb3RhdGUpIHtcbiAgICByb3RhdGUgPSBkM19nZW9fcm90YXRpb24ocm90YXRlWzBdICUgMzYwICogZDNfcmFkaWFucywgcm90YXRlWzFdICogZDNfcmFkaWFucywgcm90YXRlLmxlbmd0aCA+IDIgPyByb3RhdGVbMl0gKiBkM19yYWRpYW5zIDogMCk7XG4gICAgZnVuY3Rpb24gZm9yd2FyZChjb29yZGluYXRlcykge1xuICAgICAgY29vcmRpbmF0ZXMgPSByb3RhdGUoY29vcmRpbmF0ZXNbMF0gKiBkM19yYWRpYW5zLCBjb29yZGluYXRlc1sxXSAqIGQzX3JhZGlhbnMpO1xuICAgICAgcmV0dXJuIGNvb3JkaW5hdGVzWzBdICo9IGQzX2RlZ3JlZXMsIGNvb3JkaW5hdGVzWzFdICo9IGQzX2RlZ3JlZXMsIGNvb3JkaW5hdGVzO1xuICAgIH1cbiAgICBmb3J3YXJkLmludmVydCA9IGZ1bmN0aW9uKGNvb3JkaW5hdGVzKSB7XG4gICAgICBjb29yZGluYXRlcyA9IHJvdGF0ZS5pbnZlcnQoY29vcmRpbmF0ZXNbMF0gKiBkM19yYWRpYW5zLCBjb29yZGluYXRlc1sxXSAqIGQzX3JhZGlhbnMpO1xuICAgICAgcmV0dXJuIGNvb3JkaW5hdGVzWzBdICo9IGQzX2RlZ3JlZXMsIGNvb3JkaW5hdGVzWzFdICo9IGQzX2RlZ3JlZXMsIGNvb3JkaW5hdGVzO1xuICAgIH07XG4gICAgcmV0dXJuIGZvcndhcmQ7XG4gIH07XG4gIGZ1bmN0aW9uIGQzX2dlb19pZGVudGl0eVJvdGF0aW9uKM67LCDPhikge1xuICAgIHJldHVybiBbIM67ID4gz4AgPyDOuyAtIM+EIDogzrsgPCAtz4AgPyDOuyArIM+EIDogzrssIM+GIF07XG4gIH1cbiAgZDNfZ2VvX2lkZW50aXR5Um90YXRpb24uaW52ZXJ0ID0gZDNfZ2VvX2VxdWlyZWN0YW5ndWxhcjtcbiAgZnVuY3Rpb24gZDNfZ2VvX3JvdGF0aW9uKM60zrssIM60z4YsIM60zrMpIHtcbiAgICByZXR1cm4gzrTOuyA/IM60z4YgfHwgzrTOsyA/IGQzX2dlb19jb21wb3NlKGQzX2dlb19yb3RhdGlvbs67KM60zrspLCBkM19nZW9fcm90YXRpb27Phs6zKM60z4YsIM60zrMpKSA6IGQzX2dlb19yb3RhdGlvbs67KM60zrspIDogzrTPhiB8fCDOtM6zID8gZDNfZ2VvX3JvdGF0aW9uz4bOsyjOtM+GLCDOtM6zKSA6IGQzX2dlb19pZGVudGl0eVJvdGF0aW9uO1xuICB9XG4gIGZ1bmN0aW9uIGQzX2dlb19mb3J3YXJkUm90YXRpb27OuyjOtM67KSB7XG4gICAgcmV0dXJuIGZ1bmN0aW9uKM67LCDPhikge1xuICAgICAgcmV0dXJuIM67ICs9IM60zrssIFsgzrsgPiDPgCA/IM67IC0gz4QgOiDOuyA8IC3PgCA/IM67ICsgz4QgOiDOuywgz4YgXTtcbiAgICB9O1xuICB9XG4gIGZ1bmN0aW9uIGQzX2dlb19yb3RhdGlvbs67KM60zrspIHtcbiAgICB2YXIgcm90YXRpb24gPSBkM19nZW9fZm9yd2FyZFJvdGF0aW9uzrsozrTOuyk7XG4gICAgcm90YXRpb24uaW52ZXJ0ID0gZDNfZ2VvX2ZvcndhcmRSb3RhdGlvbs67KC3OtM67KTtcbiAgICByZXR1cm4gcm90YXRpb247XG4gIH1cbiAgZnVuY3Rpb24gZDNfZ2VvX3JvdGF0aW9uz4bOsyjOtM+GLCDOtM6zKSB7XG4gICAgdmFyIGNvc860z4YgPSBNYXRoLmNvcyjOtM+GKSwgc2luzrTPhiA9IE1hdGguc2luKM60z4YpLCBjb3POtM6zID0gTWF0aC5jb3MozrTOsyksIHNpbs60zrMgPSBNYXRoLnNpbijOtM6zKTtcbiAgICBmdW5jdGlvbiByb3RhdGlvbijOuywgz4YpIHtcbiAgICAgIHZhciBjb3PPhiA9IE1hdGguY29zKM+GKSwgeCA9IE1hdGguY29zKM67KSAqIGNvc8+GLCB5ID0gTWF0aC5zaW4ozrspICogY29zz4YsIHogPSBNYXRoLnNpbijPhiksIGsgPSB6ICogY29zzrTPhiArIHggKiBzaW7OtM+GO1xuICAgICAgcmV0dXJuIFsgTWF0aC5hdGFuMih5ICogY29zzrTOsyAtIGsgKiBzaW7OtM6zLCB4ICogY29zzrTPhiAtIHogKiBzaW7OtM+GKSwgZDNfYXNpbihrICogY29zzrTOsyArIHkgKiBzaW7OtM6zKSBdO1xuICAgIH1cbiAgICByb3RhdGlvbi5pbnZlcnQgPSBmdW5jdGlvbijOuywgz4YpIHtcbiAgICAgIHZhciBjb3PPhiA9IE1hdGguY29zKM+GKSwgeCA9IE1hdGguY29zKM67KSAqIGNvc8+GLCB5ID0gTWF0aC5zaW4ozrspICogY29zz4YsIHogPSBNYXRoLnNpbijPhiksIGsgPSB6ICogY29zzrTOsyAtIHkgKiBzaW7OtM6zO1xuICAgICAgcmV0dXJuIFsgTWF0aC5hdGFuMih5ICogY29zzrTOsyArIHogKiBzaW7OtM6zLCB4ICogY29zzrTPhiArIGsgKiBzaW7OtM+GKSwgZDNfYXNpbihrICogY29zzrTPhiAtIHggKiBzaW7OtM+GKSBdO1xuICAgIH07XG4gICAgcmV0dXJuIHJvdGF0aW9uO1xuICB9XG4gIGQzLmdlby5jaXJjbGUgPSBmdW5jdGlvbigpIHtcbiAgICB2YXIgb3JpZ2luID0gWyAwLCAwIF0sIGFuZ2xlLCBwcmVjaXNpb24gPSA2LCBpbnRlcnBvbGF0ZTtcbiAgICBmdW5jdGlvbiBjaXJjbGUoKSB7XG4gICAgICB2YXIgY2VudGVyID0gdHlwZW9mIG9yaWdpbiA9PT0gXCJmdW5jdGlvblwiID8gb3JpZ2luLmFwcGx5KHRoaXMsIGFyZ3VtZW50cykgOiBvcmlnaW4sIHJvdGF0ZSA9IGQzX2dlb19yb3RhdGlvbigtY2VudGVyWzBdICogZDNfcmFkaWFucywgLWNlbnRlclsxXSAqIGQzX3JhZGlhbnMsIDApLmludmVydCwgcmluZyA9IFtdO1xuICAgICAgaW50ZXJwb2xhdGUobnVsbCwgbnVsbCwgMSwge1xuICAgICAgICBwb2ludDogZnVuY3Rpb24oeCwgeSkge1xuICAgICAgICAgIHJpbmcucHVzaCh4ID0gcm90YXRlKHgsIHkpKTtcbiAgICAgICAgICB4WzBdICo9IGQzX2RlZ3JlZXMsIHhbMV0gKj0gZDNfZGVncmVlcztcbiAgICAgICAgfVxuICAgICAgfSk7XG4gICAgICByZXR1cm4ge1xuICAgICAgICB0eXBlOiBcIlBvbHlnb25cIixcbiAgICAgICAgY29vcmRpbmF0ZXM6IFsgcmluZyBdXG4gICAgICB9O1xuICAgIH1cbiAgICBjaXJjbGUub3JpZ2luID0gZnVuY3Rpb24oeCkge1xuICAgICAgaWYgKCFhcmd1bWVudHMubGVuZ3RoKSByZXR1cm4gb3JpZ2luO1xuICAgICAgb3JpZ2luID0geDtcbiAgICAgIHJldHVybiBjaXJjbGU7XG4gICAgfTtcbiAgICBjaXJjbGUuYW5nbGUgPSBmdW5jdGlvbih4KSB7XG4gICAgICBpZiAoIWFyZ3VtZW50cy5sZW5ndGgpIHJldHVybiBhbmdsZTtcbiAgICAgIGludGVycG9sYXRlID0gZDNfZ2VvX2NpcmNsZUludGVycG9sYXRlKChhbmdsZSA9ICt4KSAqIGQzX3JhZGlhbnMsIHByZWNpc2lvbiAqIGQzX3JhZGlhbnMpO1xuICAgICAgcmV0dXJuIGNpcmNsZTtcbiAgICB9O1xuICAgIGNpcmNsZS5wcmVjaXNpb24gPSBmdW5jdGlvbihfKSB7XG4gICAgICBpZiAoIWFyZ3VtZW50cy5sZW5ndGgpIHJldHVybiBwcmVjaXNpb247XG4gICAgICBpbnRlcnBvbGF0ZSA9IGQzX2dlb19jaXJjbGVJbnRlcnBvbGF0ZShhbmdsZSAqIGQzX3JhZGlhbnMsIChwcmVjaXNpb24gPSArXykgKiBkM19yYWRpYW5zKTtcbiAgICAgIHJldHVybiBjaXJjbGU7XG4gICAgfTtcbiAgICByZXR1cm4gY2lyY2xlLmFuZ2xlKDkwKTtcbiAgfTtcbiAgZnVuY3Rpb24gZDNfZ2VvX2NpcmNsZUludGVycG9sYXRlKHJhZGl1cywgcHJlY2lzaW9uKSB7XG4gICAgdmFyIGNyID0gTWF0aC5jb3MocmFkaXVzKSwgc3IgPSBNYXRoLnNpbihyYWRpdXMpO1xuICAgIHJldHVybiBmdW5jdGlvbihmcm9tLCB0bywgZGlyZWN0aW9uLCBsaXN0ZW5lcikge1xuICAgICAgdmFyIHN0ZXAgPSBkaXJlY3Rpb24gKiBwcmVjaXNpb247XG4gICAgICBpZiAoZnJvbSAhPSBudWxsKSB7XG4gICAgICAgIGZyb20gPSBkM19nZW9fY2lyY2xlQW5nbGUoY3IsIGZyb20pO1xuICAgICAgICB0byA9IGQzX2dlb19jaXJjbGVBbmdsZShjciwgdG8pO1xuICAgICAgICBpZiAoZGlyZWN0aW9uID4gMCA/IGZyb20gPCB0byA6IGZyb20gPiB0bykgZnJvbSArPSBkaXJlY3Rpb24gKiDPhDtcbiAgICAgIH0gZWxzZSB7XG4gICAgICAgIGZyb20gPSByYWRpdXMgKyBkaXJlY3Rpb24gKiDPhDtcbiAgICAgICAgdG8gPSByYWRpdXMgLSAuNSAqIHN0ZXA7XG4gICAgICB9XG4gICAgICBmb3IgKHZhciBwb2ludCwgdCA9IGZyb207IGRpcmVjdGlvbiA+IDAgPyB0ID4gdG8gOiB0IDwgdG87IHQgLT0gc3RlcCkge1xuICAgICAgICBsaXN0ZW5lci5wb2ludCgocG9pbnQgPSBkM19nZW9fc3BoZXJpY2FsKFsgY3IsIC1zciAqIE1hdGguY29zKHQpLCAtc3IgKiBNYXRoLnNpbih0KSBdKSlbMF0sIHBvaW50WzFdKTtcbiAgICAgIH1cbiAgICB9O1xuICB9XG4gIGZ1bmN0aW9uIGQzX2dlb19jaXJjbGVBbmdsZShjciwgcG9pbnQpIHtcbiAgICB2YXIgYSA9IGQzX2dlb19jYXJ0ZXNpYW4ocG9pbnQpO1xuICAgIGFbMF0gLT0gY3I7XG4gICAgZDNfZ2VvX2NhcnRlc2lhbk5vcm1hbGl6ZShhKTtcbiAgICB2YXIgYW5nbGUgPSBkM19hY29zKC1hWzFdKTtcbiAgICByZXR1cm4gKCgtYVsyXSA8IDAgPyAtYW5nbGUgOiBhbmdsZSkgKyAyICogTWF0aC5QSSAtIM61KSAlICgyICogTWF0aC5QSSk7XG4gIH1cbiAgZDMuZ2VvLmRpc3RhbmNlID0gZnVuY3Rpb24oYSwgYikge1xuICAgIHZhciDOlM67ID0gKGJbMF0gLSBhWzBdKSAqIGQzX3JhZGlhbnMsIM+GMCA9IGFbMV0gKiBkM19yYWRpYW5zLCDPhjEgPSBiWzFdICogZDNfcmFkaWFucywgc2luzpTOuyA9IE1hdGguc2luKM6UzrspLCBjb3POlM67ID0gTWF0aC5jb3MozpTOuyksIHNpbs+GMCA9IE1hdGguc2luKM+GMCksIGNvc8+GMCA9IE1hdGguY29zKM+GMCksIHNpbs+GMSA9IE1hdGguc2luKM+GMSksIGNvc8+GMSA9IE1hdGguY29zKM+GMSksIHQ7XG4gICAgcmV0dXJuIE1hdGguYXRhbjIoTWF0aC5zcXJ0KCh0ID0gY29zz4YxICogc2luzpTOuykgKiB0ICsgKHQgPSBjb3PPhjAgKiBzaW7PhjEgLSBzaW7PhjAgKiBjb3PPhjEgKiBjb3POlM67KSAqIHQpLCBzaW7PhjAgKiBzaW7PhjEgKyBjb3PPhjAgKiBjb3PPhjEgKiBjb3POlM67KTtcbiAgfTtcbiAgZDMuZ2VvLmdyYXRpY3VsZSA9IGZ1bmN0aW9uKCkge1xuICAgIHZhciB4MSwgeDAsIFgxLCBYMCwgeTEsIHkwLCBZMSwgWTAsIGR4ID0gMTAsIGR5ID0gZHgsIERYID0gOTAsIERZID0gMzYwLCB4LCB5LCBYLCBZLCBwcmVjaXNpb24gPSAyLjU7XG4gICAgZnVuY3Rpb24gZ3JhdGljdWxlKCkge1xuICAgICAgcmV0dXJuIHtcbiAgICAgICAgdHlwZTogXCJNdWx0aUxpbmVTdHJpbmdcIixcbiAgICAgICAgY29vcmRpbmF0ZXM6IGxpbmVzKClcbiAgICAgIH07XG4gICAgfVxuICAgIGZ1bmN0aW9uIGxpbmVzKCkge1xuICAgICAgcmV0dXJuIGQzLnJhbmdlKE1hdGguY2VpbChYMCAvIERYKSAqIERYLCBYMSwgRFgpLm1hcChYKS5jb25jYXQoZDMucmFuZ2UoTWF0aC5jZWlsKFkwIC8gRFkpICogRFksIFkxLCBEWSkubWFwKFkpKS5jb25jYXQoZDMucmFuZ2UoTWF0aC5jZWlsKHgwIC8gZHgpICogZHgsIHgxLCBkeCkuZmlsdGVyKGZ1bmN0aW9uKHgpIHtcbiAgICAgICAgcmV0dXJuIGFicyh4ICUgRFgpID4gzrU7XG4gICAgICB9KS5tYXAoeCkpLmNvbmNhdChkMy5yYW5nZShNYXRoLmNlaWwoeTAgLyBkeSkgKiBkeSwgeTEsIGR5KS5maWx0ZXIoZnVuY3Rpb24oeSkge1xuICAgICAgICByZXR1cm4gYWJzKHkgJSBEWSkgPiDOtTtcbiAgICAgIH0pLm1hcCh5KSk7XG4gICAgfVxuICAgIGdyYXRpY3VsZS5saW5lcyA9IGZ1bmN0aW9uKCkge1xuICAgICAgcmV0dXJuIGxpbmVzKCkubWFwKGZ1bmN0aW9uKGNvb3JkaW5hdGVzKSB7XG4gICAgICAgIHJldHVybiB7XG4gICAgICAgICAgdHlwZTogXCJMaW5lU3RyaW5nXCIsXG4gICAgICAgICAgY29vcmRpbmF0ZXM6IGNvb3JkaW5hdGVzXG4gICAgICAgIH07XG4gICAgICB9KTtcbiAgICB9O1xuICAgIGdyYXRpY3VsZS5vdXRsaW5lID0gZnVuY3Rpb24oKSB7XG4gICAgICByZXR1cm4ge1xuICAgICAgICB0eXBlOiBcIlBvbHlnb25cIixcbiAgICAgICAgY29vcmRpbmF0ZXM6IFsgWChYMCkuY29uY2F0KFkoWTEpLnNsaWNlKDEpLCBYKFgxKS5yZXZlcnNlKCkuc2xpY2UoMSksIFkoWTApLnJldmVyc2UoKS5zbGljZSgxKSkgXVxuICAgICAgfTtcbiAgICB9O1xuICAgIGdyYXRpY3VsZS5leHRlbnQgPSBmdW5jdGlvbihfKSB7XG4gICAgICBpZiAoIWFyZ3VtZW50cy5sZW5ndGgpIHJldHVybiBncmF0aWN1bGUubWlub3JFeHRlbnQoKTtcbiAgICAgIHJldHVybiBncmF0aWN1bGUubWFqb3JFeHRlbnQoXykubWlub3JFeHRlbnQoXyk7XG4gICAgfTtcbiAgICBncmF0aWN1bGUubWFqb3JFeHRlbnQgPSBmdW5jdGlvbihfKSB7XG4gICAgICBpZiAoIWFyZ3VtZW50cy5sZW5ndGgpIHJldHVybiBbIFsgWDAsIFkwIF0sIFsgWDEsIFkxIF0gXTtcbiAgICAgIFgwID0gK19bMF1bMF0sIFgxID0gK19bMV1bMF07XG4gICAgICBZMCA9ICtfWzBdWzFdLCBZMSA9ICtfWzFdWzFdO1xuICAgICAgaWYgKFgwID4gWDEpIF8gPSBYMCwgWDAgPSBYMSwgWDEgPSBfO1xuICAgICAgaWYgKFkwID4gWTEpIF8gPSBZMCwgWTAgPSBZMSwgWTEgPSBfO1xuICAgICAgcmV0dXJuIGdyYXRpY3VsZS5wcmVjaXNpb24ocHJlY2lzaW9uKTtcbiAgICB9O1xuICAgIGdyYXRpY3VsZS5taW5vckV4dGVudCA9IGZ1bmN0aW9uKF8pIHtcbiAgICAgIGlmICghYXJndW1lbnRzLmxlbmd0aCkgcmV0dXJuIFsgWyB4MCwgeTAgXSwgWyB4MSwgeTEgXSBdO1xuICAgICAgeDAgPSArX1swXVswXSwgeDEgPSArX1sxXVswXTtcbiAgICAgIHkwID0gK19bMF1bMV0sIHkxID0gK19bMV1bMV07XG4gICAgICBpZiAoeDAgPiB4MSkgXyA9IHgwLCB4MCA9IHgxLCB4MSA9IF87XG4gICAgICBpZiAoeTAgPiB5MSkgXyA9IHkwLCB5MCA9IHkxLCB5MSA9IF87XG4gICAgICByZXR1cm4gZ3JhdGljdWxlLnByZWNpc2lvbihwcmVjaXNpb24pO1xuICAgIH07XG4gICAgZ3JhdGljdWxlLnN0ZXAgPSBmdW5jdGlvbihfKSB7XG4gICAgICBpZiAoIWFyZ3VtZW50cy5sZW5ndGgpIHJldHVybiBncmF0aWN1bGUubWlub3JTdGVwKCk7XG4gICAgICByZXR1cm4gZ3JhdGljdWxlLm1ham9yU3RlcChfKS5taW5vclN0ZXAoXyk7XG4gICAgfTtcbiAgICBncmF0aWN1bGUubWFqb3JTdGVwID0gZnVuY3Rpb24oXykge1xuICAgICAgaWYgKCFhcmd1bWVudHMubGVuZ3RoKSByZXR1cm4gWyBEWCwgRFkgXTtcbiAgICAgIERYID0gK19bMF0sIERZID0gK19bMV07XG4gICAgICByZXR1cm4gZ3JhdGljdWxlO1xuICAgIH07XG4gICAgZ3JhdGljdWxlLm1pbm9yU3RlcCA9IGZ1bmN0aW9uKF8pIHtcbiAgICAgIGlmICghYXJndW1lbnRzLmxlbmd0aCkgcmV0dXJuIFsgZHgsIGR5IF07XG4gICAgICBkeCA9ICtfWzBdLCBkeSA9ICtfWzFdO1xuICAgICAgcmV0dXJuIGdyYXRpY3VsZTtcbiAgICB9O1xuICAgIGdyYXRpY3VsZS5wcmVjaXNpb24gPSBmdW5jdGlvbihfKSB7XG4gICAgICBpZiAoIWFyZ3VtZW50cy5sZW5ndGgpIHJldHVybiBwcmVjaXNpb247XG4gICAgICBwcmVjaXNpb24gPSArXztcbiAgICAgIHggPSBkM19nZW9fZ3JhdGljdWxlWCh5MCwgeTEsIDkwKTtcbiAgICAgIHkgPSBkM19nZW9fZ3JhdGljdWxlWSh4MCwgeDEsIHByZWNpc2lvbik7XG4gICAgICBYID0gZDNfZ2VvX2dyYXRpY3VsZVgoWTAsIFkxLCA5MCk7XG4gICAgICBZID0gZDNfZ2VvX2dyYXRpY3VsZVkoWDAsIFgxLCBwcmVjaXNpb24pO1xuICAgICAgcmV0dXJuIGdyYXRpY3VsZTtcbiAgICB9O1xuICAgIHJldHVybiBncmF0aWN1bGUubWFqb3JFeHRlbnQoWyBbIC0xODAsIC05MCArIM61IF0sIFsgMTgwLCA5MCAtIM61IF0gXSkubWlub3JFeHRlbnQoWyBbIC0xODAsIC04MCAtIM61IF0sIFsgMTgwLCA4MCArIM61IF0gXSk7XG4gIH07XG4gIGZ1bmN0aW9uIGQzX2dlb19ncmF0aWN1bGVYKHkwLCB5MSwgZHkpIHtcbiAgICB2YXIgeSA9IGQzLnJhbmdlKHkwLCB5MSAtIM61LCBkeSkuY29uY2F0KHkxKTtcbiAgICByZXR1cm4gZnVuY3Rpb24oeCkge1xuICAgICAgcmV0dXJuIHkubWFwKGZ1bmN0aW9uKHkpIHtcbiAgICAgICAgcmV0dXJuIFsgeCwgeSBdO1xuICAgICAgfSk7XG4gICAgfTtcbiAgfVxuICBmdW5jdGlvbiBkM19nZW9fZ3JhdGljdWxlWSh4MCwgeDEsIGR4KSB7XG4gICAgdmFyIHggPSBkMy5yYW5nZSh4MCwgeDEgLSDOtSwgZHgpLmNvbmNhdCh4MSk7XG4gICAgcmV0dXJuIGZ1bmN0aW9uKHkpIHtcbiAgICAgIHJldHVybiB4Lm1hcChmdW5jdGlvbih4KSB7XG4gICAgICAgIHJldHVybiBbIHgsIHkgXTtcbiAgICAgIH0pO1xuICAgIH07XG4gIH1cbiAgZnVuY3Rpb24gZDNfc291cmNlKGQpIHtcbiAgICByZXR1cm4gZC5zb3VyY2U7XG4gIH1cbiAgZnVuY3Rpb24gZDNfdGFyZ2V0KGQpIHtcbiAgICByZXR1cm4gZC50YXJnZXQ7XG4gIH1cbiAgZDMuZ2VvLmdyZWF0QXJjID0gZnVuY3Rpb24oKSB7XG4gICAgdmFyIHNvdXJjZSA9IGQzX3NvdXJjZSwgc291cmNlXywgdGFyZ2V0ID0gZDNfdGFyZ2V0LCB0YXJnZXRfO1xuICAgIGZ1bmN0aW9uIGdyZWF0QXJjKCkge1xuICAgICAgcmV0dXJuIHtcbiAgICAgICAgdHlwZTogXCJMaW5lU3RyaW5nXCIsXG4gICAgICAgIGNvb3JkaW5hdGVzOiBbIHNvdXJjZV8gfHwgc291cmNlLmFwcGx5KHRoaXMsIGFyZ3VtZW50cyksIHRhcmdldF8gfHwgdGFyZ2V0LmFwcGx5KHRoaXMsIGFyZ3VtZW50cykgXVxuICAgICAgfTtcbiAgICB9XG4gICAgZ3JlYXRBcmMuZGlzdGFuY2UgPSBmdW5jdGlvbigpIHtcbiAgICAgIHJldHVybiBkMy5nZW8uZGlzdGFuY2Uoc291cmNlXyB8fCBzb3VyY2UuYXBwbHkodGhpcywgYXJndW1lbnRzKSwgdGFyZ2V0XyB8fCB0YXJnZXQuYXBwbHkodGhpcywgYXJndW1lbnRzKSk7XG4gICAgfTtcbiAgICBncmVhdEFyYy5zb3VyY2UgPSBmdW5jdGlvbihfKSB7XG4gICAgICBpZiAoIWFyZ3VtZW50cy5sZW5ndGgpIHJldHVybiBzb3VyY2U7XG4gICAgICBzb3VyY2UgPSBfLCBzb3VyY2VfID0gdHlwZW9mIF8gPT09IFwiZnVuY3Rpb25cIiA/IG51bGwgOiBfO1xuICAgICAgcmV0dXJuIGdyZWF0QXJjO1xuICAgIH07XG4gICAgZ3JlYXRBcmMudGFyZ2V0ID0gZnVuY3Rpb24oXykge1xuICAgICAgaWYgKCFhcmd1bWVudHMubGVuZ3RoKSByZXR1cm4gdGFyZ2V0O1xuICAgICAgdGFyZ2V0ID0gXywgdGFyZ2V0XyA9IHR5cGVvZiBfID09PSBcImZ1bmN0aW9uXCIgPyBudWxsIDogXztcbiAgICAgIHJldHVybiBncmVhdEFyYztcbiAgICB9O1xuICAgIGdyZWF0QXJjLnByZWNpc2lvbiA9IGZ1bmN0aW9uKCkge1xuICAgICAgcmV0dXJuIGFyZ3VtZW50cy5sZW5ndGggPyBncmVhdEFyYyA6IDA7XG4gICAgfTtcbiAgICByZXR1cm4gZ3JlYXRBcmM7XG4gIH07XG4gIGQzLmdlby5pbnRlcnBvbGF0ZSA9IGZ1bmN0aW9uKHNvdXJjZSwgdGFyZ2V0KSB7XG4gICAgcmV0dXJuIGQzX2dlb19pbnRlcnBvbGF0ZShzb3VyY2VbMF0gKiBkM19yYWRpYW5zLCBzb3VyY2VbMV0gKiBkM19yYWRpYW5zLCB0YXJnZXRbMF0gKiBkM19yYWRpYW5zLCB0YXJnZXRbMV0gKiBkM19yYWRpYW5zKTtcbiAgfTtcbiAgZnVuY3Rpb24gZDNfZ2VvX2ludGVycG9sYXRlKHgwLCB5MCwgeDEsIHkxKSB7XG4gICAgdmFyIGN5MCA9IE1hdGguY29zKHkwKSwgc3kwID0gTWF0aC5zaW4oeTApLCBjeTEgPSBNYXRoLmNvcyh5MSksIHN5MSA9IE1hdGguc2luKHkxKSwga3gwID0gY3kwICogTWF0aC5jb3MoeDApLCBreTAgPSBjeTAgKiBNYXRoLnNpbih4MCksIGt4MSA9IGN5MSAqIE1hdGguY29zKHgxKSwga3kxID0gY3kxICogTWF0aC5zaW4oeDEpLCBkID0gMiAqIE1hdGguYXNpbihNYXRoLnNxcnQoZDNfaGF2ZXJzaW4oeTEgLSB5MCkgKyBjeTAgKiBjeTEgKiBkM19oYXZlcnNpbih4MSAtIHgwKSkpLCBrID0gMSAvIE1hdGguc2luKGQpO1xuICAgIHZhciBpbnRlcnBvbGF0ZSA9IGQgPyBmdW5jdGlvbih0KSB7XG4gICAgICB2YXIgQiA9IE1hdGguc2luKHQgKj0gZCkgKiBrLCBBID0gTWF0aC5zaW4oZCAtIHQpICogaywgeCA9IEEgKiBreDAgKyBCICoga3gxLCB5ID0gQSAqIGt5MCArIEIgKiBreTEsIHogPSBBICogc3kwICsgQiAqIHN5MTtcbiAgICAgIHJldHVybiBbIE1hdGguYXRhbjIoeSwgeCkgKiBkM19kZWdyZWVzLCBNYXRoLmF0YW4yKHosIE1hdGguc3FydCh4ICogeCArIHkgKiB5KSkgKiBkM19kZWdyZWVzIF07XG4gICAgfSA6IGZ1bmN0aW9uKCkge1xuICAgICAgcmV0dXJuIFsgeDAgKiBkM19kZWdyZWVzLCB5MCAqIGQzX2RlZ3JlZXMgXTtcbiAgICB9O1xuICAgIGludGVycG9sYXRlLmRpc3RhbmNlID0gZDtcbiAgICByZXR1cm4gaW50ZXJwb2xhdGU7XG4gIH1cbiAgZDMuZ2VvLmxlbmd0aCA9IGZ1bmN0aW9uKG9iamVjdCkge1xuICAgIGQzX2dlb19sZW5ndGhTdW0gPSAwO1xuICAgIGQzLmdlby5zdHJlYW0ob2JqZWN0LCBkM19nZW9fbGVuZ3RoKTtcbiAgICByZXR1cm4gZDNfZ2VvX2xlbmd0aFN1bTtcbiAgfTtcbiAgdmFyIGQzX2dlb19sZW5ndGhTdW07XG4gIHZhciBkM19nZW9fbGVuZ3RoID0ge1xuICAgIHNwaGVyZTogZDNfbm9vcCxcbiAgICBwb2ludDogZDNfbm9vcCxcbiAgICBsaW5lU3RhcnQ6IGQzX2dlb19sZW5ndGhMaW5lU3RhcnQsXG4gICAgbGluZUVuZDogZDNfbm9vcCxcbiAgICBwb2x5Z29uU3RhcnQ6IGQzX25vb3AsXG4gICAgcG9seWdvbkVuZDogZDNfbm9vcFxuICB9O1xuICBmdW5jdGlvbiBkM19nZW9fbGVuZ3RoTGluZVN0YXJ0KCkge1xuICAgIHZhciDOuzAsIHNpbs+GMCwgY29zz4YwO1xuICAgIGQzX2dlb19sZW5ndGgucG9pbnQgPSBmdW5jdGlvbijOuywgz4YpIHtcbiAgICAgIM67MCA9IM67ICogZDNfcmFkaWFucywgc2luz4YwID0gTWF0aC5zaW4oz4YgKj0gZDNfcmFkaWFucyksIGNvc8+GMCA9IE1hdGguY29zKM+GKTtcbiAgICAgIGQzX2dlb19sZW5ndGgucG9pbnQgPSBuZXh0UG9pbnQ7XG4gICAgfTtcbiAgICBkM19nZW9fbGVuZ3RoLmxpbmVFbmQgPSBmdW5jdGlvbigpIHtcbiAgICAgIGQzX2dlb19sZW5ndGgucG9pbnQgPSBkM19nZW9fbGVuZ3RoLmxpbmVFbmQgPSBkM19ub29wO1xuICAgIH07XG4gICAgZnVuY3Rpb24gbmV4dFBvaW50KM67LCDPhikge1xuICAgICAgdmFyIHNpbs+GID0gTWF0aC5zaW4oz4YgKj0gZDNfcmFkaWFucyksIGNvc8+GID0gTWF0aC5jb3Moz4YpLCB0ID0gYWJzKCjOuyAqPSBkM19yYWRpYW5zKSAtIM67MCksIGNvc86UzrsgPSBNYXRoLmNvcyh0KTtcbiAgICAgIGQzX2dlb19sZW5ndGhTdW0gKz0gTWF0aC5hdGFuMihNYXRoLnNxcnQoKHQgPSBjb3PPhiAqIE1hdGguc2luKHQpKSAqIHQgKyAodCA9IGNvc8+GMCAqIHNpbs+GIC0gc2luz4YwICogY29zz4YgKiBjb3POlM67KSAqIHQpLCBzaW7PhjAgKiBzaW7PhiArIGNvc8+GMCAqIGNvc8+GICogY29zzpTOuyk7XG4gICAgICDOuzAgPSDOuywgc2luz4YwID0gc2luz4YsIGNvc8+GMCA9IGNvc8+GO1xuICAgIH1cbiAgfVxuICBmdW5jdGlvbiBkM19nZW9fYXppbXV0aGFsKHNjYWxlLCBhbmdsZSkge1xuICAgIGZ1bmN0aW9uIGF6aW11dGhhbCjOuywgz4YpIHtcbiAgICAgIHZhciBjb3POuyA9IE1hdGguY29zKM67KSwgY29zz4YgPSBNYXRoLmNvcyjPhiksIGsgPSBzY2FsZShjb3POuyAqIGNvc8+GKTtcbiAgICAgIHJldHVybiBbIGsgKiBjb3PPhiAqIE1hdGguc2luKM67KSwgayAqIE1hdGguc2luKM+GKSBdO1xuICAgIH1cbiAgICBhemltdXRoYWwuaW52ZXJ0ID0gZnVuY3Rpb24oeCwgeSkge1xuICAgICAgdmFyIM+BID0gTWF0aC5zcXJ0KHggKiB4ICsgeSAqIHkpLCBjID0gYW5nbGUoz4EpLCBzaW5jID0gTWF0aC5zaW4oYyksIGNvc2MgPSBNYXRoLmNvcyhjKTtcbiAgICAgIHJldHVybiBbIE1hdGguYXRhbjIoeCAqIHNpbmMsIM+BICogY29zYyksIE1hdGguYXNpbijPgSAmJiB5ICogc2luYyAvIM+BKSBdO1xuICAgIH07XG4gICAgcmV0dXJuIGF6aW11dGhhbDtcbiAgfVxuICB2YXIgZDNfZ2VvX2F6aW11dGhhbEVxdWFsQXJlYSA9IGQzX2dlb19hemltdXRoYWwoZnVuY3Rpb24oY29zzrtjb3PPhikge1xuICAgIHJldHVybiBNYXRoLnNxcnQoMiAvICgxICsgY29zzrtjb3PPhikpO1xuICB9LCBmdW5jdGlvbijPgSkge1xuICAgIHJldHVybiAyICogTWF0aC5hc2luKM+BIC8gMik7XG4gIH0pO1xuICAoZDMuZ2VvLmF6aW11dGhhbEVxdWFsQXJlYSA9IGZ1bmN0aW9uKCkge1xuICAgIHJldHVybiBkM19nZW9fcHJvamVjdGlvbihkM19nZW9fYXppbXV0aGFsRXF1YWxBcmVhKTtcbiAgfSkucmF3ID0gZDNfZ2VvX2F6aW11dGhhbEVxdWFsQXJlYTtcbiAgdmFyIGQzX2dlb19hemltdXRoYWxFcXVpZGlzdGFudCA9IGQzX2dlb19hemltdXRoYWwoZnVuY3Rpb24oY29zzrtjb3PPhikge1xuICAgIHZhciBjID0gTWF0aC5hY29zKGNvc867Y29zz4YpO1xuICAgIHJldHVybiBjICYmIGMgLyBNYXRoLnNpbihjKTtcbiAgfSwgZDNfaWRlbnRpdHkpO1xuICAoZDMuZ2VvLmF6aW11dGhhbEVxdWlkaXN0YW50ID0gZnVuY3Rpb24oKSB7XG4gICAgcmV0dXJuIGQzX2dlb19wcm9qZWN0aW9uKGQzX2dlb19hemltdXRoYWxFcXVpZGlzdGFudCk7XG4gIH0pLnJhdyA9IGQzX2dlb19hemltdXRoYWxFcXVpZGlzdGFudDtcbiAgZnVuY3Rpb24gZDNfZ2VvX2NvbmljQ29uZm9ybWFsKM+GMCwgz4YxKSB7XG4gICAgdmFyIGNvc8+GMCA9IE1hdGguY29zKM+GMCksIHQgPSBmdW5jdGlvbijPhikge1xuICAgICAgcmV0dXJuIE1hdGgudGFuKM+AIC8gNCArIM+GIC8gMik7XG4gICAgfSwgbiA9IM+GMCA9PT0gz4YxID8gTWF0aC5zaW4oz4YwKSA6IE1hdGgubG9nKGNvc8+GMCAvIE1hdGguY29zKM+GMSkpIC8gTWF0aC5sb2codCjPhjEpIC8gdCjPhjApKSwgRiA9IGNvc8+GMCAqIE1hdGgucG93KHQoz4YwKSwgbikgLyBuO1xuICAgIGlmICghbikgcmV0dXJuIGQzX2dlb19tZXJjYXRvcjtcbiAgICBmdW5jdGlvbiBmb3J3YXJkKM67LCDPhikge1xuICAgICAgaWYgKEYgPiAwKSB7XG4gICAgICAgIGlmICjPhiA8IC1oYWxmz4AgKyDOtSkgz4YgPSAtaGFsZs+AICsgzrU7XG4gICAgICB9IGVsc2Uge1xuICAgICAgICBpZiAoz4YgPiBoYWxmz4AgLSDOtSkgz4YgPSBoYWxmz4AgLSDOtTtcbiAgICAgIH1cbiAgICAgIHZhciDPgSA9IEYgLyBNYXRoLnBvdyh0KM+GKSwgbik7XG4gICAgICByZXR1cm4gWyDPgSAqIE1hdGguc2luKG4gKiDOuyksIEYgLSDPgSAqIE1hdGguY29zKG4gKiDOuykgXTtcbiAgICB9XG4gICAgZm9yd2FyZC5pbnZlcnQgPSBmdW5jdGlvbih4LCB5KSB7XG4gICAgICB2YXIgz4EwX3kgPSBGIC0geSwgz4EgPSBkM19zZ24obikgKiBNYXRoLnNxcnQoeCAqIHggKyDPgTBfeSAqIM+BMF95KTtcbiAgICAgIHJldHVybiBbIE1hdGguYXRhbjIoeCwgz4EwX3kpIC8gbiwgMiAqIE1hdGguYXRhbihNYXRoLnBvdyhGIC8gz4EsIDEgLyBuKSkgLSBoYWxmz4AgXTtcbiAgICB9O1xuICAgIHJldHVybiBmb3J3YXJkO1xuICB9XG4gIChkMy5nZW8uY29uaWNDb25mb3JtYWwgPSBmdW5jdGlvbigpIHtcbiAgICByZXR1cm4gZDNfZ2VvX2NvbmljKGQzX2dlb19jb25pY0NvbmZvcm1hbCk7XG4gIH0pLnJhdyA9IGQzX2dlb19jb25pY0NvbmZvcm1hbDtcbiAgZnVuY3Rpb24gZDNfZ2VvX2NvbmljRXF1aWRpc3RhbnQoz4YwLCDPhjEpIHtcbiAgICB2YXIgY29zz4YwID0gTWF0aC5jb3Moz4YwKSwgbiA9IM+GMCA9PT0gz4YxID8gTWF0aC5zaW4oz4YwKSA6IChjb3PPhjAgLSBNYXRoLmNvcyjPhjEpKSAvICjPhjEgLSDPhjApLCBHID0gY29zz4YwIC8gbiArIM+GMDtcbiAgICBpZiAoYWJzKG4pIDwgzrUpIHJldHVybiBkM19nZW9fZXF1aXJlY3Rhbmd1bGFyO1xuICAgIGZ1bmN0aW9uIGZvcndhcmQozrssIM+GKSB7XG4gICAgICB2YXIgz4EgPSBHIC0gz4Y7XG4gICAgICByZXR1cm4gWyDPgSAqIE1hdGguc2luKG4gKiDOuyksIEcgLSDPgSAqIE1hdGguY29zKG4gKiDOuykgXTtcbiAgICB9XG4gICAgZm9yd2FyZC5pbnZlcnQgPSBmdW5jdGlvbih4LCB5KSB7XG4gICAgICB2YXIgz4EwX3kgPSBHIC0geTtcbiAgICAgIHJldHVybiBbIE1hdGguYXRhbjIoeCwgz4EwX3kpIC8gbiwgRyAtIGQzX3NnbihuKSAqIE1hdGguc3FydCh4ICogeCArIM+BMF95ICogz4EwX3kpIF07XG4gICAgfTtcbiAgICByZXR1cm4gZm9yd2FyZDtcbiAgfVxuICAoZDMuZ2VvLmNvbmljRXF1aWRpc3RhbnQgPSBmdW5jdGlvbigpIHtcbiAgICByZXR1cm4gZDNfZ2VvX2NvbmljKGQzX2dlb19jb25pY0VxdWlkaXN0YW50KTtcbiAgfSkucmF3ID0gZDNfZ2VvX2NvbmljRXF1aWRpc3RhbnQ7XG4gIHZhciBkM19nZW9fZ25vbW9uaWMgPSBkM19nZW9fYXppbXV0aGFsKGZ1bmN0aW9uKGNvc867Y29zz4YpIHtcbiAgICByZXR1cm4gMSAvIGNvc867Y29zz4Y7XG4gIH0sIE1hdGguYXRhbik7XG4gIChkMy5nZW8uZ25vbW9uaWMgPSBmdW5jdGlvbigpIHtcbiAgICByZXR1cm4gZDNfZ2VvX3Byb2plY3Rpb24oZDNfZ2VvX2dub21vbmljKTtcbiAgfSkucmF3ID0gZDNfZ2VvX2dub21vbmljO1xuICBmdW5jdGlvbiBkM19nZW9fbWVyY2F0b3IozrssIM+GKSB7XG4gICAgcmV0dXJuIFsgzrssIE1hdGgubG9nKE1hdGgudGFuKM+AIC8gNCArIM+GIC8gMikpIF07XG4gIH1cbiAgZDNfZ2VvX21lcmNhdG9yLmludmVydCA9IGZ1bmN0aW9uKHgsIHkpIHtcbiAgICByZXR1cm4gWyB4LCAyICogTWF0aC5hdGFuKE1hdGguZXhwKHkpKSAtIGhhbGbPgCBdO1xuICB9O1xuICBmdW5jdGlvbiBkM19nZW9fbWVyY2F0b3JQcm9qZWN0aW9uKHByb2plY3QpIHtcbiAgICB2YXIgbSA9IGQzX2dlb19wcm9qZWN0aW9uKHByb2plY3QpLCBzY2FsZSA9IG0uc2NhbGUsIHRyYW5zbGF0ZSA9IG0udHJhbnNsYXRlLCBjbGlwRXh0ZW50ID0gbS5jbGlwRXh0ZW50LCBjbGlwQXV0bztcbiAgICBtLnNjYWxlID0gZnVuY3Rpb24oKSB7XG4gICAgICB2YXIgdiA9IHNjYWxlLmFwcGx5KG0sIGFyZ3VtZW50cyk7XG4gICAgICByZXR1cm4gdiA9PT0gbSA/IGNsaXBBdXRvID8gbS5jbGlwRXh0ZW50KG51bGwpIDogbSA6IHY7XG4gICAgfTtcbiAgICBtLnRyYW5zbGF0ZSA9IGZ1bmN0aW9uKCkge1xuICAgICAgdmFyIHYgPSB0cmFuc2xhdGUuYXBwbHkobSwgYXJndW1lbnRzKTtcbiAgICAgIHJldHVybiB2ID09PSBtID8gY2xpcEF1dG8gPyBtLmNsaXBFeHRlbnQobnVsbCkgOiBtIDogdjtcbiAgICB9O1xuICAgIG0uY2xpcEV4dGVudCA9IGZ1bmN0aW9uKF8pIHtcbiAgICAgIHZhciB2ID0gY2xpcEV4dGVudC5hcHBseShtLCBhcmd1bWVudHMpO1xuICAgICAgaWYgKHYgPT09IG0pIHtcbiAgICAgICAgaWYgKGNsaXBBdXRvID0gXyA9PSBudWxsKSB7XG4gICAgICAgICAgdmFyIGsgPSDPgCAqIHNjYWxlKCksIHQgPSB0cmFuc2xhdGUoKTtcbiAgICAgICAgICBjbGlwRXh0ZW50KFsgWyB0WzBdIC0gaywgdFsxXSAtIGsgXSwgWyB0WzBdICsgaywgdFsxXSArIGsgXSBdKTtcbiAgICAgICAgfVxuICAgICAgfSBlbHNlIGlmIChjbGlwQXV0bykge1xuICAgICAgICB2ID0gbnVsbDtcbiAgICAgIH1cbiAgICAgIHJldHVybiB2O1xuICAgIH07XG4gICAgcmV0dXJuIG0uY2xpcEV4dGVudChudWxsKTtcbiAgfVxuICAoZDMuZ2VvLm1lcmNhdG9yID0gZnVuY3Rpb24oKSB7XG4gICAgcmV0dXJuIGQzX2dlb19tZXJjYXRvclByb2plY3Rpb24oZDNfZ2VvX21lcmNhdG9yKTtcbiAgfSkucmF3ID0gZDNfZ2VvX21lcmNhdG9yO1xuICB2YXIgZDNfZ2VvX29ydGhvZ3JhcGhpYyA9IGQzX2dlb19hemltdXRoYWwoZnVuY3Rpb24oKSB7XG4gICAgcmV0dXJuIDE7XG4gIH0sIE1hdGguYXNpbik7XG4gIChkMy5nZW8ub3J0aG9ncmFwaGljID0gZnVuY3Rpb24oKSB7XG4gICAgcmV0dXJuIGQzX2dlb19wcm9qZWN0aW9uKGQzX2dlb19vcnRob2dyYXBoaWMpO1xuICB9KS5yYXcgPSBkM19nZW9fb3J0aG9ncmFwaGljO1xuICB2YXIgZDNfZ2VvX3N0ZXJlb2dyYXBoaWMgPSBkM19nZW9fYXppbXV0aGFsKGZ1bmN0aW9uKGNvc867Y29zz4YpIHtcbiAgICByZXR1cm4gMSAvICgxICsgY29zzrtjb3PPhik7XG4gIH0sIGZ1bmN0aW9uKM+BKSB7XG4gICAgcmV0dXJuIDIgKiBNYXRoLmF0YW4oz4EpO1xuICB9KTtcbiAgKGQzLmdlby5zdGVyZW9ncmFwaGljID0gZnVuY3Rpb24oKSB7XG4gICAgcmV0dXJuIGQzX2dlb19wcm9qZWN0aW9uKGQzX2dlb19zdGVyZW9ncmFwaGljKTtcbiAgfSkucmF3ID0gZDNfZ2VvX3N0ZXJlb2dyYXBoaWM7XG4gIGZ1bmN0aW9uIGQzX2dlb190cmFuc3ZlcnNlTWVyY2F0b3IozrssIM+GKSB7XG4gICAgcmV0dXJuIFsgTWF0aC5sb2coTWF0aC50YW4oz4AgLyA0ICsgz4YgLyAyKSksIC3OuyBdO1xuICB9XG4gIGQzX2dlb190cmFuc3ZlcnNlTWVyY2F0b3IuaW52ZXJ0ID0gZnVuY3Rpb24oeCwgeSkge1xuICAgIHJldHVybiBbIC15LCAyICogTWF0aC5hdGFuKE1hdGguZXhwKHgpKSAtIGhhbGbPgCBdO1xuICB9O1xuICAoZDMuZ2VvLnRyYW5zdmVyc2VNZXJjYXRvciA9IGZ1bmN0aW9uKCkge1xuICAgIHZhciBwcm9qZWN0aW9uID0gZDNfZ2VvX21lcmNhdG9yUHJvamVjdGlvbihkM19nZW9fdHJhbnN2ZXJzZU1lcmNhdG9yKSwgY2VudGVyID0gcHJvamVjdGlvbi5jZW50ZXIsIHJvdGF0ZSA9IHByb2plY3Rpb24ucm90YXRlO1xuICAgIHByb2plY3Rpb24uY2VudGVyID0gZnVuY3Rpb24oXykge1xuICAgICAgcmV0dXJuIF8gPyBjZW50ZXIoWyAtX1sxXSwgX1swXSBdKSA6IChfID0gY2VudGVyKCksIFsgX1sxXSwgLV9bMF0gXSk7XG4gICAgfTtcbiAgICBwcm9qZWN0aW9uLnJvdGF0ZSA9IGZ1bmN0aW9uKF8pIHtcbiAgICAgIHJldHVybiBfID8gcm90YXRlKFsgX1swXSwgX1sxXSwgXy5sZW5ndGggPiAyID8gX1syXSArIDkwIDogOTAgXSkgOiAoXyA9IHJvdGF0ZSgpLCBcbiAgICAgIFsgX1swXSwgX1sxXSwgX1syXSAtIDkwIF0pO1xuICAgIH07XG4gICAgcmV0dXJuIHJvdGF0ZShbIDAsIDAsIDkwIF0pO1xuICB9KS5yYXcgPSBkM19nZW9fdHJhbnN2ZXJzZU1lcmNhdG9yO1xuICBkMy5nZW9tID0ge307XG4gIGZ1bmN0aW9uIGQzX2dlb21fcG9pbnRYKGQpIHtcbiAgICByZXR1cm4gZFswXTtcbiAgfVxuICBmdW5jdGlvbiBkM19nZW9tX3BvaW50WShkKSB7XG4gICAgcmV0dXJuIGRbMV07XG4gIH1cbiAgZDMuZ2VvbS5odWxsID0gZnVuY3Rpb24odmVydGljZXMpIHtcbiAgICB2YXIgeCA9IGQzX2dlb21fcG9pbnRYLCB5ID0gZDNfZ2VvbV9wb2ludFk7XG4gICAgaWYgKGFyZ3VtZW50cy5sZW5ndGgpIHJldHVybiBodWxsKHZlcnRpY2VzKTtcbiAgICBmdW5jdGlvbiBodWxsKGRhdGEpIHtcbiAgICAgIGlmIChkYXRhLmxlbmd0aCA8IDMpIHJldHVybiBbXTtcbiAgICAgIHZhciBmeCA9IGQzX2Z1bmN0b3IoeCksIGZ5ID0gZDNfZnVuY3Rvcih5KSwgaSwgbiA9IGRhdGEubGVuZ3RoLCBwb2ludHMgPSBbXSwgZmxpcHBlZFBvaW50cyA9IFtdO1xuICAgICAgZm9yIChpID0gMDsgaSA8IG47IGkrKykge1xuICAgICAgICBwb2ludHMucHVzaChbICtmeC5jYWxsKHRoaXMsIGRhdGFbaV0sIGkpLCArZnkuY2FsbCh0aGlzLCBkYXRhW2ldLCBpKSwgaSBdKTtcbiAgICAgIH1cbiAgICAgIHBvaW50cy5zb3J0KGQzX2dlb21faHVsbE9yZGVyKTtcbiAgICAgIGZvciAoaSA9IDA7IGkgPCBuOyBpKyspIGZsaXBwZWRQb2ludHMucHVzaChbIHBvaW50c1tpXVswXSwgLXBvaW50c1tpXVsxXSBdKTtcbiAgICAgIHZhciB1cHBlciA9IGQzX2dlb21faHVsbFVwcGVyKHBvaW50cyksIGxvd2VyID0gZDNfZ2VvbV9odWxsVXBwZXIoZmxpcHBlZFBvaW50cyk7XG4gICAgICB2YXIgc2tpcExlZnQgPSBsb3dlclswXSA9PT0gdXBwZXJbMF0sIHNraXBSaWdodCA9IGxvd2VyW2xvd2VyLmxlbmd0aCAtIDFdID09PSB1cHBlclt1cHBlci5sZW5ndGggLSAxXSwgcG9seWdvbiA9IFtdO1xuICAgICAgZm9yIChpID0gdXBwZXIubGVuZ3RoIC0gMTsgaSA+PSAwOyAtLWkpIHBvbHlnb24ucHVzaChkYXRhW3BvaW50c1t1cHBlcltpXV1bMl1dKTtcbiAgICAgIGZvciAoaSA9ICtza2lwTGVmdDsgaSA8IGxvd2VyLmxlbmd0aCAtIHNraXBSaWdodDsgKytpKSBwb2x5Z29uLnB1c2goZGF0YVtwb2ludHNbbG93ZXJbaV1dWzJdXSk7XG4gICAgICByZXR1cm4gcG9seWdvbjtcbiAgICB9XG4gICAgaHVsbC54ID0gZnVuY3Rpb24oXykge1xuICAgICAgcmV0dXJuIGFyZ3VtZW50cy5sZW5ndGggPyAoeCA9IF8sIGh1bGwpIDogeDtcbiAgICB9O1xuICAgIGh1bGwueSA9IGZ1bmN0aW9uKF8pIHtcbiAgICAgIHJldHVybiBhcmd1bWVudHMubGVuZ3RoID8gKHkgPSBfLCBodWxsKSA6IHk7XG4gICAgfTtcbiAgICByZXR1cm4gaHVsbDtcbiAgfTtcbiAgZnVuY3Rpb24gZDNfZ2VvbV9odWxsVXBwZXIocG9pbnRzKSB7XG4gICAgdmFyIG4gPSBwb2ludHMubGVuZ3RoLCBodWxsID0gWyAwLCAxIF0sIGhzID0gMjtcbiAgICBmb3IgKHZhciBpID0gMjsgaSA8IG47IGkrKykge1xuICAgICAgd2hpbGUgKGhzID4gMSAmJiBkM19jcm9zczJkKHBvaW50c1todWxsW2hzIC0gMl1dLCBwb2ludHNbaHVsbFtocyAtIDFdXSwgcG9pbnRzW2ldKSA8PSAwKSAtLWhzO1xuICAgICAgaHVsbFtocysrXSA9IGk7XG4gICAgfVxuICAgIHJldHVybiBodWxsLnNsaWNlKDAsIGhzKTtcbiAgfVxuICBmdW5jdGlvbiBkM19nZW9tX2h1bGxPcmRlcihhLCBiKSB7XG4gICAgcmV0dXJuIGFbMF0gLSBiWzBdIHx8IGFbMV0gLSBiWzFdO1xuICB9XG4gIGQzLmdlb20ucG9seWdvbiA9IGZ1bmN0aW9uKGNvb3JkaW5hdGVzKSB7XG4gICAgZDNfc3ViY2xhc3MoY29vcmRpbmF0ZXMsIGQzX2dlb21fcG9seWdvblByb3RvdHlwZSk7XG4gICAgcmV0dXJuIGNvb3JkaW5hdGVzO1xuICB9O1xuICB2YXIgZDNfZ2VvbV9wb2x5Z29uUHJvdG90eXBlID0gZDMuZ2VvbS5wb2x5Z29uLnByb3RvdHlwZSA9IFtdO1xuICBkM19nZW9tX3BvbHlnb25Qcm90b3R5cGUuYXJlYSA9IGZ1bmN0aW9uKCkge1xuICAgIHZhciBpID0gLTEsIG4gPSB0aGlzLmxlbmd0aCwgYSwgYiA9IHRoaXNbbiAtIDFdLCBhcmVhID0gMDtcbiAgICB3aGlsZSAoKytpIDwgbikge1xuICAgICAgYSA9IGI7XG4gICAgICBiID0gdGhpc1tpXTtcbiAgICAgIGFyZWEgKz0gYVsxXSAqIGJbMF0gLSBhWzBdICogYlsxXTtcbiAgICB9XG4gICAgcmV0dXJuIGFyZWEgKiAuNTtcbiAgfTtcbiAgZDNfZ2VvbV9wb2x5Z29uUHJvdG90eXBlLmNlbnRyb2lkID0gZnVuY3Rpb24oaykge1xuICAgIHZhciBpID0gLTEsIG4gPSB0aGlzLmxlbmd0aCwgeCA9IDAsIHkgPSAwLCBhLCBiID0gdGhpc1tuIC0gMV0sIGM7XG4gICAgaWYgKCFhcmd1bWVudHMubGVuZ3RoKSBrID0gLTEgLyAoNiAqIHRoaXMuYXJlYSgpKTtcbiAgICB3aGlsZSAoKytpIDwgbikge1xuICAgICAgYSA9IGI7XG4gICAgICBiID0gdGhpc1tpXTtcbiAgICAgIGMgPSBhWzBdICogYlsxXSAtIGJbMF0gKiBhWzFdO1xuICAgICAgeCArPSAoYVswXSArIGJbMF0pICogYztcbiAgICAgIHkgKz0gKGFbMV0gKyBiWzFdKSAqIGM7XG4gICAgfVxuICAgIHJldHVybiBbIHggKiBrLCB5ICogayBdO1xuICB9O1xuICBkM19nZW9tX3BvbHlnb25Qcm90b3R5cGUuY2xpcCA9IGZ1bmN0aW9uKHN1YmplY3QpIHtcbiAgICB2YXIgaW5wdXQsIGNsb3NlZCA9IGQzX2dlb21fcG9seWdvbkNsb3NlZChzdWJqZWN0KSwgaSA9IC0xLCBuID0gdGhpcy5sZW5ndGggLSBkM19nZW9tX3BvbHlnb25DbG9zZWQodGhpcyksIGosIG0sIGEgPSB0aGlzW24gLSAxXSwgYiwgYywgZDtcbiAgICB3aGlsZSAoKytpIDwgbikge1xuICAgICAgaW5wdXQgPSBzdWJqZWN0LnNsaWNlKCk7XG4gICAgICBzdWJqZWN0Lmxlbmd0aCA9IDA7XG4gICAgICBiID0gdGhpc1tpXTtcbiAgICAgIGMgPSBpbnB1dFsobSA9IGlucHV0Lmxlbmd0aCAtIGNsb3NlZCkgLSAxXTtcbiAgICAgIGogPSAtMTtcbiAgICAgIHdoaWxlICgrK2ogPCBtKSB7XG4gICAgICAgIGQgPSBpbnB1dFtqXTtcbiAgICAgICAgaWYgKGQzX2dlb21fcG9seWdvbkluc2lkZShkLCBhLCBiKSkge1xuICAgICAgICAgIGlmICghZDNfZ2VvbV9wb2x5Z29uSW5zaWRlKGMsIGEsIGIpKSB7XG4gICAgICAgICAgICBzdWJqZWN0LnB1c2goZDNfZ2VvbV9wb2x5Z29uSW50ZXJzZWN0KGMsIGQsIGEsIGIpKTtcbiAgICAgICAgICB9XG4gICAgICAgICAgc3ViamVjdC5wdXNoKGQpO1xuICAgICAgICB9IGVsc2UgaWYgKGQzX2dlb21fcG9seWdvbkluc2lkZShjLCBhLCBiKSkge1xuICAgICAgICAgIHN1YmplY3QucHVzaChkM19nZW9tX3BvbHlnb25JbnRlcnNlY3QoYywgZCwgYSwgYikpO1xuICAgICAgICB9XG4gICAgICAgIGMgPSBkO1xuICAgICAgfVxuICAgICAgaWYgKGNsb3NlZCkgc3ViamVjdC5wdXNoKHN1YmplY3RbMF0pO1xuICAgICAgYSA9IGI7XG4gICAgfVxuICAgIHJldHVybiBzdWJqZWN0O1xuICB9O1xuICBmdW5jdGlvbiBkM19nZW9tX3BvbHlnb25JbnNpZGUocCwgYSwgYikge1xuICAgIHJldHVybiAoYlswXSAtIGFbMF0pICogKHBbMV0gLSBhWzFdKSA8IChiWzFdIC0gYVsxXSkgKiAocFswXSAtIGFbMF0pO1xuICB9XG4gIGZ1bmN0aW9uIGQzX2dlb21fcG9seWdvbkludGVyc2VjdChjLCBkLCBhLCBiKSB7XG4gICAgdmFyIHgxID0gY1swXSwgeDMgPSBhWzBdLCB4MjEgPSBkWzBdIC0geDEsIHg0MyA9IGJbMF0gLSB4MywgeTEgPSBjWzFdLCB5MyA9IGFbMV0sIHkyMSA9IGRbMV0gLSB5MSwgeTQzID0gYlsxXSAtIHkzLCB1YSA9ICh4NDMgKiAoeTEgLSB5MykgLSB5NDMgKiAoeDEgLSB4MykpIC8gKHk0MyAqIHgyMSAtIHg0MyAqIHkyMSk7XG4gICAgcmV0dXJuIFsgeDEgKyB1YSAqIHgyMSwgeTEgKyB1YSAqIHkyMSBdO1xuICB9XG4gIGZ1bmN0aW9uIGQzX2dlb21fcG9seWdvbkNsb3NlZChjb29yZGluYXRlcykge1xuICAgIHZhciBhID0gY29vcmRpbmF0ZXNbMF0sIGIgPSBjb29yZGluYXRlc1tjb29yZGluYXRlcy5sZW5ndGggLSAxXTtcbiAgICByZXR1cm4gIShhWzBdIC0gYlswXSB8fCBhWzFdIC0gYlsxXSk7XG4gIH1cbiAgdmFyIGQzX2dlb21fdm9yb25vaUVkZ2VzLCBkM19nZW9tX3Zvcm9ub2lDZWxscywgZDNfZ2VvbV92b3Jvbm9pQmVhY2hlcywgZDNfZ2VvbV92b3Jvbm9pQmVhY2hQb29sID0gW10sIGQzX2dlb21fdm9yb25vaUZpcnN0Q2lyY2xlLCBkM19nZW9tX3Zvcm9ub2lDaXJjbGVzLCBkM19nZW9tX3Zvcm9ub2lDaXJjbGVQb29sID0gW107XG4gIGZ1bmN0aW9uIGQzX2dlb21fdm9yb25vaUJlYWNoKCkge1xuICAgIGQzX2dlb21fdm9yb25vaVJlZEJsYWNrTm9kZSh0aGlzKTtcbiAgICB0aGlzLmVkZ2UgPSB0aGlzLnNpdGUgPSB0aGlzLmNpcmNsZSA9IG51bGw7XG4gIH1cbiAgZnVuY3Rpb24gZDNfZ2VvbV92b3Jvbm9pQ3JlYXRlQmVhY2goc2l0ZSkge1xuICAgIHZhciBiZWFjaCA9IGQzX2dlb21fdm9yb25vaUJlYWNoUG9vbC5wb3AoKSB8fCBuZXcgZDNfZ2VvbV92b3Jvbm9pQmVhY2goKTtcbiAgICBiZWFjaC5zaXRlID0gc2l0ZTtcbiAgICByZXR1cm4gYmVhY2g7XG4gIH1cbiAgZnVuY3Rpb24gZDNfZ2VvbV92b3Jvbm9pRGV0YWNoQmVhY2goYmVhY2gpIHtcbiAgICBkM19nZW9tX3Zvcm9ub2lEZXRhY2hDaXJjbGUoYmVhY2gpO1xuICAgIGQzX2dlb21fdm9yb25vaUJlYWNoZXMucmVtb3ZlKGJlYWNoKTtcbiAgICBkM19nZW9tX3Zvcm9ub2lCZWFjaFBvb2wucHVzaChiZWFjaCk7XG4gICAgZDNfZ2VvbV92b3Jvbm9pUmVkQmxhY2tOb2RlKGJlYWNoKTtcbiAgfVxuICBmdW5jdGlvbiBkM19nZW9tX3Zvcm9ub2lSZW1vdmVCZWFjaChiZWFjaCkge1xuICAgIHZhciBjaXJjbGUgPSBiZWFjaC5jaXJjbGUsIHggPSBjaXJjbGUueCwgeSA9IGNpcmNsZS5jeSwgdmVydGV4ID0ge1xuICAgICAgeDogeCxcbiAgICAgIHk6IHlcbiAgICB9LCBwcmV2aW91cyA9IGJlYWNoLlAsIG5leHQgPSBiZWFjaC5OLCBkaXNhcHBlYXJpbmcgPSBbIGJlYWNoIF07XG4gICAgZDNfZ2VvbV92b3Jvbm9pRGV0YWNoQmVhY2goYmVhY2gpO1xuICAgIHZhciBsQXJjID0gcHJldmlvdXM7XG4gICAgd2hpbGUgKGxBcmMuY2lyY2xlICYmIGFicyh4IC0gbEFyYy5jaXJjbGUueCkgPCDOtSAmJiBhYnMoeSAtIGxBcmMuY2lyY2xlLmN5KSA8IM61KSB7XG4gICAgICBwcmV2aW91cyA9IGxBcmMuUDtcbiAgICAgIGRpc2FwcGVhcmluZy51bnNoaWZ0KGxBcmMpO1xuICAgICAgZDNfZ2VvbV92b3Jvbm9pRGV0YWNoQmVhY2gobEFyYyk7XG4gICAgICBsQXJjID0gcHJldmlvdXM7XG4gICAgfVxuICAgIGRpc2FwcGVhcmluZy51bnNoaWZ0KGxBcmMpO1xuICAgIGQzX2dlb21fdm9yb25vaURldGFjaENpcmNsZShsQXJjKTtcbiAgICB2YXIgckFyYyA9IG5leHQ7XG4gICAgd2hpbGUgKHJBcmMuY2lyY2xlICYmIGFicyh4IC0gckFyYy5jaXJjbGUueCkgPCDOtSAmJiBhYnMoeSAtIHJBcmMuY2lyY2xlLmN5KSA8IM61KSB7XG4gICAgICBuZXh0ID0gckFyYy5OO1xuICAgICAgZGlzYXBwZWFyaW5nLnB1c2gockFyYyk7XG4gICAgICBkM19nZW9tX3Zvcm9ub2lEZXRhY2hCZWFjaChyQXJjKTtcbiAgICAgIHJBcmMgPSBuZXh0O1xuICAgIH1cbiAgICBkaXNhcHBlYXJpbmcucHVzaChyQXJjKTtcbiAgICBkM19nZW9tX3Zvcm9ub2lEZXRhY2hDaXJjbGUockFyYyk7XG4gICAgdmFyIG5BcmNzID0gZGlzYXBwZWFyaW5nLmxlbmd0aCwgaUFyYztcbiAgICBmb3IgKGlBcmMgPSAxOyBpQXJjIDwgbkFyY3M7ICsraUFyYykge1xuICAgICAgckFyYyA9IGRpc2FwcGVhcmluZ1tpQXJjXTtcbiAgICAgIGxBcmMgPSBkaXNhcHBlYXJpbmdbaUFyYyAtIDFdO1xuICAgICAgZDNfZ2VvbV92b3Jvbm9pU2V0RWRnZUVuZChyQXJjLmVkZ2UsIGxBcmMuc2l0ZSwgckFyYy5zaXRlLCB2ZXJ0ZXgpO1xuICAgIH1cbiAgICBsQXJjID0gZGlzYXBwZWFyaW5nWzBdO1xuICAgIHJBcmMgPSBkaXNhcHBlYXJpbmdbbkFyY3MgLSAxXTtcbiAgICByQXJjLmVkZ2UgPSBkM19nZW9tX3Zvcm9ub2lDcmVhdGVFZGdlKGxBcmMuc2l0ZSwgckFyYy5zaXRlLCBudWxsLCB2ZXJ0ZXgpO1xuICAgIGQzX2dlb21fdm9yb25vaUF0dGFjaENpcmNsZShsQXJjKTtcbiAgICBkM19nZW9tX3Zvcm9ub2lBdHRhY2hDaXJjbGUockFyYyk7XG4gIH1cbiAgZnVuY3Rpb24gZDNfZ2VvbV92b3Jvbm9pQWRkQmVhY2goc2l0ZSkge1xuICAgIHZhciB4ID0gc2l0ZS54LCBkaXJlY3RyaXggPSBzaXRlLnksIGxBcmMsIHJBcmMsIGR4bCwgZHhyLCBub2RlID0gZDNfZ2VvbV92b3Jvbm9pQmVhY2hlcy5fO1xuICAgIHdoaWxlIChub2RlKSB7XG4gICAgICBkeGwgPSBkM19nZW9tX3Zvcm9ub2lMZWZ0QnJlYWtQb2ludChub2RlLCBkaXJlY3RyaXgpIC0geDtcbiAgICAgIGlmIChkeGwgPiDOtSkgbm9kZSA9IG5vZGUuTDsgZWxzZSB7XG4gICAgICAgIGR4ciA9IHggLSBkM19nZW9tX3Zvcm9ub2lSaWdodEJyZWFrUG9pbnQobm9kZSwgZGlyZWN0cml4KTtcbiAgICAgICAgaWYgKGR4ciA+IM61KSB7XG4gICAgICAgICAgaWYgKCFub2RlLlIpIHtcbiAgICAgICAgICAgIGxBcmMgPSBub2RlO1xuICAgICAgICAgICAgYnJlYWs7XG4gICAgICAgICAgfVxuICAgICAgICAgIG5vZGUgPSBub2RlLlI7XG4gICAgICAgIH0gZWxzZSB7XG4gICAgICAgICAgaWYgKGR4bCA+IC3OtSkge1xuICAgICAgICAgICAgbEFyYyA9IG5vZGUuUDtcbiAgICAgICAgICAgIHJBcmMgPSBub2RlO1xuICAgICAgICAgIH0gZWxzZSBpZiAoZHhyID4gLc61KSB7XG4gICAgICAgICAgICBsQXJjID0gbm9kZTtcbiAgICAgICAgICAgIHJBcmMgPSBub2RlLk47XG4gICAgICAgICAgfSBlbHNlIHtcbiAgICAgICAgICAgIGxBcmMgPSByQXJjID0gbm9kZTtcbiAgICAgICAgICB9XG4gICAgICAgICAgYnJlYWs7XG4gICAgICAgIH1cbiAgICAgIH1cbiAgICB9XG4gICAgdmFyIG5ld0FyYyA9IGQzX2dlb21fdm9yb25vaUNyZWF0ZUJlYWNoKHNpdGUpO1xuICAgIGQzX2dlb21fdm9yb25vaUJlYWNoZXMuaW5zZXJ0KGxBcmMsIG5ld0FyYyk7XG4gICAgaWYgKCFsQXJjICYmICFyQXJjKSByZXR1cm47XG4gICAgaWYgKGxBcmMgPT09IHJBcmMpIHtcbiAgICAgIGQzX2dlb21fdm9yb25vaURldGFjaENpcmNsZShsQXJjKTtcbiAgICAgIHJBcmMgPSBkM19nZW9tX3Zvcm9ub2lDcmVhdGVCZWFjaChsQXJjLnNpdGUpO1xuICAgICAgZDNfZ2VvbV92b3Jvbm9pQmVhY2hlcy5pbnNlcnQobmV3QXJjLCByQXJjKTtcbiAgICAgIG5ld0FyYy5lZGdlID0gckFyYy5lZGdlID0gZDNfZ2VvbV92b3Jvbm9pQ3JlYXRlRWRnZShsQXJjLnNpdGUsIG5ld0FyYy5zaXRlKTtcbiAgICAgIGQzX2dlb21fdm9yb25vaUF0dGFjaENpcmNsZShsQXJjKTtcbiAgICAgIGQzX2dlb21fdm9yb25vaUF0dGFjaENpcmNsZShyQXJjKTtcbiAgICAgIHJldHVybjtcbiAgICB9XG4gICAgaWYgKCFyQXJjKSB7XG4gICAgICBuZXdBcmMuZWRnZSA9IGQzX2dlb21fdm9yb25vaUNyZWF0ZUVkZ2UobEFyYy5zaXRlLCBuZXdBcmMuc2l0ZSk7XG4gICAgICByZXR1cm47XG4gICAgfVxuICAgIGQzX2dlb21fdm9yb25vaURldGFjaENpcmNsZShsQXJjKTtcbiAgICBkM19nZW9tX3Zvcm9ub2lEZXRhY2hDaXJjbGUockFyYyk7XG4gICAgdmFyIGxTaXRlID0gbEFyYy5zaXRlLCBheCA9IGxTaXRlLngsIGF5ID0gbFNpdGUueSwgYnggPSBzaXRlLnggLSBheCwgYnkgPSBzaXRlLnkgLSBheSwgclNpdGUgPSByQXJjLnNpdGUsIGN4ID0gclNpdGUueCAtIGF4LCBjeSA9IHJTaXRlLnkgLSBheSwgZCA9IDIgKiAoYnggKiBjeSAtIGJ5ICogY3gpLCBoYiA9IGJ4ICogYnggKyBieSAqIGJ5LCBoYyA9IGN4ICogY3ggKyBjeSAqIGN5LCB2ZXJ0ZXggPSB7XG4gICAgICB4OiAoY3kgKiBoYiAtIGJ5ICogaGMpIC8gZCArIGF4LFxuICAgICAgeTogKGJ4ICogaGMgLSBjeCAqIGhiKSAvIGQgKyBheVxuICAgIH07XG4gICAgZDNfZ2VvbV92b3Jvbm9pU2V0RWRnZUVuZChyQXJjLmVkZ2UsIGxTaXRlLCByU2l0ZSwgdmVydGV4KTtcbiAgICBuZXdBcmMuZWRnZSA9IGQzX2dlb21fdm9yb25vaUNyZWF0ZUVkZ2UobFNpdGUsIHNpdGUsIG51bGwsIHZlcnRleCk7XG4gICAgckFyYy5lZGdlID0gZDNfZ2VvbV92b3Jvbm9pQ3JlYXRlRWRnZShzaXRlLCByU2l0ZSwgbnVsbCwgdmVydGV4KTtcbiAgICBkM19nZW9tX3Zvcm9ub2lBdHRhY2hDaXJjbGUobEFyYyk7XG4gICAgZDNfZ2VvbV92b3Jvbm9pQXR0YWNoQ2lyY2xlKHJBcmMpO1xuICB9XG4gIGZ1bmN0aW9uIGQzX2dlb21fdm9yb25vaUxlZnRCcmVha1BvaW50KGFyYywgZGlyZWN0cml4KSB7XG4gICAgdmFyIHNpdGUgPSBhcmMuc2l0ZSwgcmZvY3ggPSBzaXRlLngsIHJmb2N5ID0gc2l0ZS55LCBwYnkyID0gcmZvY3kgLSBkaXJlY3RyaXg7XG4gICAgaWYgKCFwYnkyKSByZXR1cm4gcmZvY3g7XG4gICAgdmFyIGxBcmMgPSBhcmMuUDtcbiAgICBpZiAoIWxBcmMpIHJldHVybiAtSW5maW5pdHk7XG4gICAgc2l0ZSA9IGxBcmMuc2l0ZTtcbiAgICB2YXIgbGZvY3ggPSBzaXRlLngsIGxmb2N5ID0gc2l0ZS55LCBwbGJ5MiA9IGxmb2N5IC0gZGlyZWN0cml4O1xuICAgIGlmICghcGxieTIpIHJldHVybiBsZm9jeDtcbiAgICB2YXIgaGwgPSBsZm9jeCAtIHJmb2N4LCBhYnkyID0gMSAvIHBieTIgLSAxIC8gcGxieTIsIGIgPSBobCAvIHBsYnkyO1xuICAgIGlmIChhYnkyKSByZXR1cm4gKC1iICsgTWF0aC5zcXJ0KGIgKiBiIC0gMiAqIGFieTIgKiAoaGwgKiBobCAvICgtMiAqIHBsYnkyKSAtIGxmb2N5ICsgcGxieTIgLyAyICsgcmZvY3kgLSBwYnkyIC8gMikpKSAvIGFieTIgKyByZm9jeDtcbiAgICByZXR1cm4gKHJmb2N4ICsgbGZvY3gpIC8gMjtcbiAgfVxuICBmdW5jdGlvbiBkM19nZW9tX3Zvcm9ub2lSaWdodEJyZWFrUG9pbnQoYXJjLCBkaXJlY3RyaXgpIHtcbiAgICB2YXIgckFyYyA9IGFyYy5OO1xuICAgIGlmIChyQXJjKSByZXR1cm4gZDNfZ2VvbV92b3Jvbm9pTGVmdEJyZWFrUG9pbnQockFyYywgZGlyZWN0cml4KTtcbiAgICB2YXIgc2l0ZSA9IGFyYy5zaXRlO1xuICAgIHJldHVybiBzaXRlLnkgPT09IGRpcmVjdHJpeCA/IHNpdGUueCA6IEluZmluaXR5O1xuICB9XG4gIGZ1bmN0aW9uIGQzX2dlb21fdm9yb25vaUNlbGwoc2l0ZSkge1xuICAgIHRoaXMuc2l0ZSA9IHNpdGU7XG4gICAgdGhpcy5lZGdlcyA9IFtdO1xuICB9XG4gIGQzX2dlb21fdm9yb25vaUNlbGwucHJvdG90eXBlLnByZXBhcmUgPSBmdW5jdGlvbigpIHtcbiAgICB2YXIgaGFsZkVkZ2VzID0gdGhpcy5lZGdlcywgaUhhbGZFZGdlID0gaGFsZkVkZ2VzLmxlbmd0aCwgZWRnZTtcbiAgICB3aGlsZSAoaUhhbGZFZGdlLS0pIHtcbiAgICAgIGVkZ2UgPSBoYWxmRWRnZXNbaUhhbGZFZGdlXS5lZGdlO1xuICAgICAgaWYgKCFlZGdlLmIgfHwgIWVkZ2UuYSkgaGFsZkVkZ2VzLnNwbGljZShpSGFsZkVkZ2UsIDEpO1xuICAgIH1cbiAgICBoYWxmRWRnZXMuc29ydChkM19nZW9tX3Zvcm9ub2lIYWxmRWRnZU9yZGVyKTtcbiAgICByZXR1cm4gaGFsZkVkZ2VzLmxlbmd0aDtcbiAgfTtcbiAgZnVuY3Rpb24gZDNfZ2VvbV92b3Jvbm9pQ2xvc2VDZWxscyhleHRlbnQpIHtcbiAgICB2YXIgeDAgPSBleHRlbnRbMF1bMF0sIHgxID0gZXh0ZW50WzFdWzBdLCB5MCA9IGV4dGVudFswXVsxXSwgeTEgPSBleHRlbnRbMV1bMV0sIHgyLCB5MiwgeDMsIHkzLCBjZWxscyA9IGQzX2dlb21fdm9yb25vaUNlbGxzLCBpQ2VsbCA9IGNlbGxzLmxlbmd0aCwgY2VsbCwgaUhhbGZFZGdlLCBoYWxmRWRnZXMsIG5IYWxmRWRnZXMsIHN0YXJ0LCBlbmQ7XG4gICAgd2hpbGUgKGlDZWxsLS0pIHtcbiAgICAgIGNlbGwgPSBjZWxsc1tpQ2VsbF07XG4gICAgICBpZiAoIWNlbGwgfHwgIWNlbGwucHJlcGFyZSgpKSBjb250aW51ZTtcbiAgICAgIGhhbGZFZGdlcyA9IGNlbGwuZWRnZXM7XG4gICAgICBuSGFsZkVkZ2VzID0gaGFsZkVkZ2VzLmxlbmd0aDtcbiAgICAgIGlIYWxmRWRnZSA9IDA7XG4gICAgICB3aGlsZSAoaUhhbGZFZGdlIDwgbkhhbGZFZGdlcykge1xuICAgICAgICBlbmQgPSBoYWxmRWRnZXNbaUhhbGZFZGdlXS5lbmQoKSwgeDMgPSBlbmQueCwgeTMgPSBlbmQueTtcbiAgICAgICAgc3RhcnQgPSBoYWxmRWRnZXNbKytpSGFsZkVkZ2UgJSBuSGFsZkVkZ2VzXS5zdGFydCgpLCB4MiA9IHN0YXJ0LngsIHkyID0gc3RhcnQueTtcbiAgICAgICAgaWYgKGFicyh4MyAtIHgyKSA+IM61IHx8IGFicyh5MyAtIHkyKSA+IM61KSB7XG4gICAgICAgICAgaGFsZkVkZ2VzLnNwbGljZShpSGFsZkVkZ2UsIDAsIG5ldyBkM19nZW9tX3Zvcm9ub2lIYWxmRWRnZShkM19nZW9tX3Zvcm9ub2lDcmVhdGVCb3JkZXJFZGdlKGNlbGwuc2l0ZSwgZW5kLCBhYnMoeDMgLSB4MCkgPCDOtSAmJiB5MSAtIHkzID4gzrUgPyB7XG4gICAgICAgICAgICB4OiB4MCxcbiAgICAgICAgICAgIHk6IGFicyh4MiAtIHgwKSA8IM61ID8geTIgOiB5MVxuICAgICAgICAgIH0gOiBhYnMoeTMgLSB5MSkgPCDOtSAmJiB4MSAtIHgzID4gzrUgPyB7XG4gICAgICAgICAgICB4OiBhYnMoeTIgLSB5MSkgPCDOtSA/IHgyIDogeDEsXG4gICAgICAgICAgICB5OiB5MVxuICAgICAgICAgIH0gOiBhYnMoeDMgLSB4MSkgPCDOtSAmJiB5MyAtIHkwID4gzrUgPyB7XG4gICAgICAgICAgICB4OiB4MSxcbiAgICAgICAgICAgIHk6IGFicyh4MiAtIHgxKSA8IM61ID8geTIgOiB5MFxuICAgICAgICAgIH0gOiBhYnMoeTMgLSB5MCkgPCDOtSAmJiB4MyAtIHgwID4gzrUgPyB7XG4gICAgICAgICAgICB4OiBhYnMoeTIgLSB5MCkgPCDOtSA/IHgyIDogeDAsXG4gICAgICAgICAgICB5OiB5MFxuICAgICAgICAgIH0gOiBudWxsKSwgY2VsbC5zaXRlLCBudWxsKSk7XG4gICAgICAgICAgKytuSGFsZkVkZ2VzO1xuICAgICAgICB9XG4gICAgICB9XG4gICAgfVxuICB9XG4gIGZ1bmN0aW9uIGQzX2dlb21fdm9yb25vaUhhbGZFZGdlT3JkZXIoYSwgYikge1xuICAgIHJldHVybiBiLmFuZ2xlIC0gYS5hbmdsZTtcbiAgfVxuICBmdW5jdGlvbiBkM19nZW9tX3Zvcm9ub2lDaXJjbGUoKSB7XG4gICAgZDNfZ2VvbV92b3Jvbm9pUmVkQmxhY2tOb2RlKHRoaXMpO1xuICAgIHRoaXMueCA9IHRoaXMueSA9IHRoaXMuYXJjID0gdGhpcy5zaXRlID0gdGhpcy5jeSA9IG51bGw7XG4gIH1cbiAgZnVuY3Rpb24gZDNfZ2VvbV92b3Jvbm9pQXR0YWNoQ2lyY2xlKGFyYykge1xuICAgIHZhciBsQXJjID0gYXJjLlAsIHJBcmMgPSBhcmMuTjtcbiAgICBpZiAoIWxBcmMgfHwgIXJBcmMpIHJldHVybjtcbiAgICB2YXIgbFNpdGUgPSBsQXJjLnNpdGUsIGNTaXRlID0gYXJjLnNpdGUsIHJTaXRlID0gckFyYy5zaXRlO1xuICAgIGlmIChsU2l0ZSA9PT0gclNpdGUpIHJldHVybjtcbiAgICB2YXIgYnggPSBjU2l0ZS54LCBieSA9IGNTaXRlLnksIGF4ID0gbFNpdGUueCAtIGJ4LCBheSA9IGxTaXRlLnkgLSBieSwgY3ggPSByU2l0ZS54IC0gYngsIGN5ID0gclNpdGUueSAtIGJ5O1xuICAgIHZhciBkID0gMiAqIChheCAqIGN5IC0gYXkgKiBjeCk7XG4gICAgaWYgKGQgPj0gLc61MikgcmV0dXJuO1xuICAgIHZhciBoYSA9IGF4ICogYXggKyBheSAqIGF5LCBoYyA9IGN4ICogY3ggKyBjeSAqIGN5LCB4ID0gKGN5ICogaGEgLSBheSAqIGhjKSAvIGQsIHkgPSAoYXggKiBoYyAtIGN4ICogaGEpIC8gZCwgY3kgPSB5ICsgYnk7XG4gICAgdmFyIGNpcmNsZSA9IGQzX2dlb21fdm9yb25vaUNpcmNsZVBvb2wucG9wKCkgfHwgbmV3IGQzX2dlb21fdm9yb25vaUNpcmNsZSgpO1xuICAgIGNpcmNsZS5hcmMgPSBhcmM7XG4gICAgY2lyY2xlLnNpdGUgPSBjU2l0ZTtcbiAgICBjaXJjbGUueCA9IHggKyBieDtcbiAgICBjaXJjbGUueSA9IGN5ICsgTWF0aC5zcXJ0KHggKiB4ICsgeSAqIHkpO1xuICAgIGNpcmNsZS5jeSA9IGN5O1xuICAgIGFyYy5jaXJjbGUgPSBjaXJjbGU7XG4gICAgdmFyIGJlZm9yZSA9IG51bGwsIG5vZGUgPSBkM19nZW9tX3Zvcm9ub2lDaXJjbGVzLl87XG4gICAgd2hpbGUgKG5vZGUpIHtcbiAgICAgIGlmIChjaXJjbGUueSA8IG5vZGUueSB8fCBjaXJjbGUueSA9PT0gbm9kZS55ICYmIGNpcmNsZS54IDw9IG5vZGUueCkge1xuICAgICAgICBpZiAobm9kZS5MKSBub2RlID0gbm9kZS5MOyBlbHNlIHtcbiAgICAgICAgICBiZWZvcmUgPSBub2RlLlA7XG4gICAgICAgICAgYnJlYWs7XG4gICAgICAgIH1cbiAgICAgIH0gZWxzZSB7XG4gICAgICAgIGlmIChub2RlLlIpIG5vZGUgPSBub2RlLlI7IGVsc2Uge1xuICAgICAgICAgIGJlZm9yZSA9IG5vZGU7XG4gICAgICAgICAgYnJlYWs7XG4gICAgICAgIH1cbiAgICAgIH1cbiAgICB9XG4gICAgZDNfZ2VvbV92b3Jvbm9pQ2lyY2xlcy5pbnNlcnQoYmVmb3JlLCBjaXJjbGUpO1xuICAgIGlmICghYmVmb3JlKSBkM19nZW9tX3Zvcm9ub2lGaXJzdENpcmNsZSA9IGNpcmNsZTtcbiAgfVxuICBmdW5jdGlvbiBkM19nZW9tX3Zvcm9ub2lEZXRhY2hDaXJjbGUoYXJjKSB7XG4gICAgdmFyIGNpcmNsZSA9IGFyYy5jaXJjbGU7XG4gICAgaWYgKGNpcmNsZSkge1xuICAgICAgaWYgKCFjaXJjbGUuUCkgZDNfZ2VvbV92b3Jvbm9pRmlyc3RDaXJjbGUgPSBjaXJjbGUuTjtcbiAgICAgIGQzX2dlb21fdm9yb25vaUNpcmNsZXMucmVtb3ZlKGNpcmNsZSk7XG4gICAgICBkM19nZW9tX3Zvcm9ub2lDaXJjbGVQb29sLnB1c2goY2lyY2xlKTtcbiAgICAgIGQzX2dlb21fdm9yb25vaVJlZEJsYWNrTm9kZShjaXJjbGUpO1xuICAgICAgYXJjLmNpcmNsZSA9IG51bGw7XG4gICAgfVxuICB9XG4gIGZ1bmN0aW9uIGQzX2dlb21fdm9yb25vaUNsaXBFZGdlcyhleHRlbnQpIHtcbiAgICB2YXIgZWRnZXMgPSBkM19nZW9tX3Zvcm9ub2lFZGdlcywgY2xpcCA9IGQzX2dlb21fY2xpcExpbmUoZXh0ZW50WzBdWzBdLCBleHRlbnRbMF1bMV0sIGV4dGVudFsxXVswXSwgZXh0ZW50WzFdWzFdKSwgaSA9IGVkZ2VzLmxlbmd0aCwgZTtcbiAgICB3aGlsZSAoaS0tKSB7XG4gICAgICBlID0gZWRnZXNbaV07XG4gICAgICBpZiAoIWQzX2dlb21fdm9yb25vaUNvbm5lY3RFZGdlKGUsIGV4dGVudCkgfHwgIWNsaXAoZSkgfHwgYWJzKGUuYS54IC0gZS5iLngpIDwgzrUgJiYgYWJzKGUuYS55IC0gZS5iLnkpIDwgzrUpIHtcbiAgICAgICAgZS5hID0gZS5iID0gbnVsbDtcbiAgICAgICAgZWRnZXMuc3BsaWNlKGksIDEpO1xuICAgICAgfVxuICAgIH1cbiAgfVxuICBmdW5jdGlvbiBkM19nZW9tX3Zvcm9ub2lDb25uZWN0RWRnZShlZGdlLCBleHRlbnQpIHtcbiAgICB2YXIgdmIgPSBlZGdlLmI7XG4gICAgaWYgKHZiKSByZXR1cm4gdHJ1ZTtcbiAgICB2YXIgdmEgPSBlZGdlLmEsIHgwID0gZXh0ZW50WzBdWzBdLCB4MSA9IGV4dGVudFsxXVswXSwgeTAgPSBleHRlbnRbMF1bMV0sIHkxID0gZXh0ZW50WzFdWzFdLCBsU2l0ZSA9IGVkZ2UubCwgclNpdGUgPSBlZGdlLnIsIGx4ID0gbFNpdGUueCwgbHkgPSBsU2l0ZS55LCByeCA9IHJTaXRlLngsIHJ5ID0gclNpdGUueSwgZnggPSAobHggKyByeCkgLyAyLCBmeSA9IChseSArIHJ5KSAvIDIsIGZtLCBmYjtcbiAgICBpZiAocnkgPT09IGx5KSB7XG4gICAgICBpZiAoZnggPCB4MCB8fCBmeCA+PSB4MSkgcmV0dXJuO1xuICAgICAgaWYgKGx4ID4gcngpIHtcbiAgICAgICAgaWYgKCF2YSkgdmEgPSB7XG4gICAgICAgICAgeDogZngsXG4gICAgICAgICAgeTogeTBcbiAgICAgICAgfTsgZWxzZSBpZiAodmEueSA+PSB5MSkgcmV0dXJuO1xuICAgICAgICB2YiA9IHtcbiAgICAgICAgICB4OiBmeCxcbiAgICAgICAgICB5OiB5MVxuICAgICAgICB9O1xuICAgICAgfSBlbHNlIHtcbiAgICAgICAgaWYgKCF2YSkgdmEgPSB7XG4gICAgICAgICAgeDogZngsXG4gICAgICAgICAgeTogeTFcbiAgICAgICAgfTsgZWxzZSBpZiAodmEueSA8IHkwKSByZXR1cm47XG4gICAgICAgIHZiID0ge1xuICAgICAgICAgIHg6IGZ4LFxuICAgICAgICAgIHk6IHkwXG4gICAgICAgIH07XG4gICAgICB9XG4gICAgfSBlbHNlIHtcbiAgICAgIGZtID0gKGx4IC0gcngpIC8gKHJ5IC0gbHkpO1xuICAgICAgZmIgPSBmeSAtIGZtICogZng7XG4gICAgICBpZiAoZm0gPCAtMSB8fCBmbSA+IDEpIHtcbiAgICAgICAgaWYgKGx4ID4gcngpIHtcbiAgICAgICAgICBpZiAoIXZhKSB2YSA9IHtcbiAgICAgICAgICAgIHg6ICh5MCAtIGZiKSAvIGZtLFxuICAgICAgICAgICAgeTogeTBcbiAgICAgICAgICB9OyBlbHNlIGlmICh2YS55ID49IHkxKSByZXR1cm47XG4gICAgICAgICAgdmIgPSB7XG4gICAgICAgICAgICB4OiAoeTEgLSBmYikgLyBmbSxcbiAgICAgICAgICAgIHk6IHkxXG4gICAgICAgICAgfTtcbiAgICAgICAgfSBlbHNlIHtcbiAgICAgICAgICBpZiAoIXZhKSB2YSA9IHtcbiAgICAgICAgICAgIHg6ICh5MSAtIGZiKSAvIGZtLFxuICAgICAgICAgICAgeTogeTFcbiAgICAgICAgICB9OyBlbHNlIGlmICh2YS55IDwgeTApIHJldHVybjtcbiAgICAgICAgICB2YiA9IHtcbiAgICAgICAgICAgIHg6ICh5MCAtIGZiKSAvIGZtLFxuICAgICAgICAgICAgeTogeTBcbiAgICAgICAgICB9O1xuICAgICAgICB9XG4gICAgICB9IGVsc2Uge1xuICAgICAgICBpZiAobHkgPCByeSkge1xuICAgICAgICAgIGlmICghdmEpIHZhID0ge1xuICAgICAgICAgICAgeDogeDAsXG4gICAgICAgICAgICB5OiBmbSAqIHgwICsgZmJcbiAgICAgICAgICB9OyBlbHNlIGlmICh2YS54ID49IHgxKSByZXR1cm47XG4gICAgICAgICAgdmIgPSB7XG4gICAgICAgICAgICB4OiB4MSxcbiAgICAgICAgICAgIHk6IGZtICogeDEgKyBmYlxuICAgICAgICAgIH07XG4gICAgICAgIH0gZWxzZSB7XG4gICAgICAgICAgaWYgKCF2YSkgdmEgPSB7XG4gICAgICAgICAgICB4OiB4MSxcbiAgICAgICAgICAgIHk6IGZtICogeDEgKyBmYlxuICAgICAgICAgIH07IGVsc2UgaWYgKHZhLnggPCB4MCkgcmV0dXJuO1xuICAgICAgICAgIHZiID0ge1xuICAgICAgICAgICAgeDogeDAsXG4gICAgICAgICAgICB5OiBmbSAqIHgwICsgZmJcbiAgICAgICAgICB9O1xuICAgICAgICB9XG4gICAgICB9XG4gICAgfVxuICAgIGVkZ2UuYSA9IHZhO1xuICAgIGVkZ2UuYiA9IHZiO1xuICAgIHJldHVybiB0cnVlO1xuICB9XG4gIGZ1bmN0aW9uIGQzX2dlb21fdm9yb25vaUVkZ2UobFNpdGUsIHJTaXRlKSB7XG4gICAgdGhpcy5sID0gbFNpdGU7XG4gICAgdGhpcy5yID0gclNpdGU7XG4gICAgdGhpcy5hID0gdGhpcy5iID0gbnVsbDtcbiAgfVxuICBmdW5jdGlvbiBkM19nZW9tX3Zvcm9ub2lDcmVhdGVFZGdlKGxTaXRlLCByU2l0ZSwgdmEsIHZiKSB7XG4gICAgdmFyIGVkZ2UgPSBuZXcgZDNfZ2VvbV92b3Jvbm9pRWRnZShsU2l0ZSwgclNpdGUpO1xuICAgIGQzX2dlb21fdm9yb25vaUVkZ2VzLnB1c2goZWRnZSk7XG4gICAgaWYgKHZhKSBkM19nZW9tX3Zvcm9ub2lTZXRFZGdlRW5kKGVkZ2UsIGxTaXRlLCByU2l0ZSwgdmEpO1xuICAgIGlmICh2YikgZDNfZ2VvbV92b3Jvbm9pU2V0RWRnZUVuZChlZGdlLCByU2l0ZSwgbFNpdGUsIHZiKTtcbiAgICBkM19nZW9tX3Zvcm9ub2lDZWxsc1tsU2l0ZS5pXS5lZGdlcy5wdXNoKG5ldyBkM19nZW9tX3Zvcm9ub2lIYWxmRWRnZShlZGdlLCBsU2l0ZSwgclNpdGUpKTtcbiAgICBkM19nZW9tX3Zvcm9ub2lDZWxsc1tyU2l0ZS5pXS5lZGdlcy5wdXNoKG5ldyBkM19nZW9tX3Zvcm9ub2lIYWxmRWRnZShlZGdlLCByU2l0ZSwgbFNpdGUpKTtcbiAgICByZXR1cm4gZWRnZTtcbiAgfVxuICBmdW5jdGlvbiBkM19nZW9tX3Zvcm9ub2lDcmVhdGVCb3JkZXJFZGdlKGxTaXRlLCB2YSwgdmIpIHtcbiAgICB2YXIgZWRnZSA9IG5ldyBkM19nZW9tX3Zvcm9ub2lFZGdlKGxTaXRlLCBudWxsKTtcbiAgICBlZGdlLmEgPSB2YTtcbiAgICBlZGdlLmIgPSB2YjtcbiAgICBkM19nZW9tX3Zvcm9ub2lFZGdlcy5wdXNoKGVkZ2UpO1xuICAgIHJldHVybiBlZGdlO1xuICB9XG4gIGZ1bmN0aW9uIGQzX2dlb21fdm9yb25vaVNldEVkZ2VFbmQoZWRnZSwgbFNpdGUsIHJTaXRlLCB2ZXJ0ZXgpIHtcbiAgICBpZiAoIWVkZ2UuYSAmJiAhZWRnZS5iKSB7XG4gICAgICBlZGdlLmEgPSB2ZXJ0ZXg7XG4gICAgICBlZGdlLmwgPSBsU2l0ZTtcbiAgICAgIGVkZ2UuciA9IHJTaXRlO1xuICAgIH0gZWxzZSBpZiAoZWRnZS5sID09PSByU2l0ZSkge1xuICAgICAgZWRnZS5iID0gdmVydGV4O1xuICAgIH0gZWxzZSB7XG4gICAgICBlZGdlLmEgPSB2ZXJ0ZXg7XG4gICAgfVxuICB9XG4gIGZ1bmN0aW9uIGQzX2dlb21fdm9yb25vaUhhbGZFZGdlKGVkZ2UsIGxTaXRlLCByU2l0ZSkge1xuICAgIHZhciB2YSA9IGVkZ2UuYSwgdmIgPSBlZGdlLmI7XG4gICAgdGhpcy5lZGdlID0gZWRnZTtcbiAgICB0aGlzLnNpdGUgPSBsU2l0ZTtcbiAgICB0aGlzLmFuZ2xlID0gclNpdGUgPyBNYXRoLmF0YW4yKHJTaXRlLnkgLSBsU2l0ZS55LCByU2l0ZS54IC0gbFNpdGUueCkgOiBlZGdlLmwgPT09IGxTaXRlID8gTWF0aC5hdGFuMih2Yi54IC0gdmEueCwgdmEueSAtIHZiLnkpIDogTWF0aC5hdGFuMih2YS54IC0gdmIueCwgdmIueSAtIHZhLnkpO1xuICB9XG4gIGQzX2dlb21fdm9yb25vaUhhbGZFZGdlLnByb3RvdHlwZSA9IHtcbiAgICBzdGFydDogZnVuY3Rpb24oKSB7XG4gICAgICByZXR1cm4gdGhpcy5lZGdlLmwgPT09IHRoaXMuc2l0ZSA/IHRoaXMuZWRnZS5hIDogdGhpcy5lZGdlLmI7XG4gICAgfSxcbiAgICBlbmQ6IGZ1bmN0aW9uKCkge1xuICAgICAgcmV0dXJuIHRoaXMuZWRnZS5sID09PSB0aGlzLnNpdGUgPyB0aGlzLmVkZ2UuYiA6IHRoaXMuZWRnZS5hO1xuICAgIH1cbiAgfTtcbiAgZnVuY3Rpb24gZDNfZ2VvbV92b3Jvbm9pUmVkQmxhY2tUcmVlKCkge1xuICAgIHRoaXMuXyA9IG51bGw7XG4gIH1cbiAgZnVuY3Rpb24gZDNfZ2VvbV92b3Jvbm9pUmVkQmxhY2tOb2RlKG5vZGUpIHtcbiAgICBub2RlLlUgPSBub2RlLkMgPSBub2RlLkwgPSBub2RlLlIgPSBub2RlLlAgPSBub2RlLk4gPSBudWxsO1xuICB9XG4gIGQzX2dlb21fdm9yb25vaVJlZEJsYWNrVHJlZS5wcm90b3R5cGUgPSB7XG4gICAgaW5zZXJ0OiBmdW5jdGlvbihhZnRlciwgbm9kZSkge1xuICAgICAgdmFyIHBhcmVudCwgZ3JhbmRwYSwgdW5jbGU7XG4gICAgICBpZiAoYWZ0ZXIpIHtcbiAgICAgICAgbm9kZS5QID0gYWZ0ZXI7XG4gICAgICAgIG5vZGUuTiA9IGFmdGVyLk47XG4gICAgICAgIGlmIChhZnRlci5OKSBhZnRlci5OLlAgPSBub2RlO1xuICAgICAgICBhZnRlci5OID0gbm9kZTtcbiAgICAgICAgaWYgKGFmdGVyLlIpIHtcbiAgICAgICAgICBhZnRlciA9IGFmdGVyLlI7XG4gICAgICAgICAgd2hpbGUgKGFmdGVyLkwpIGFmdGVyID0gYWZ0ZXIuTDtcbiAgICAgICAgICBhZnRlci5MID0gbm9kZTtcbiAgICAgICAgfSBlbHNlIHtcbiAgICAgICAgICBhZnRlci5SID0gbm9kZTtcbiAgICAgICAgfVxuICAgICAgICBwYXJlbnQgPSBhZnRlcjtcbiAgICAgIH0gZWxzZSBpZiAodGhpcy5fKSB7XG4gICAgICAgIGFmdGVyID0gZDNfZ2VvbV92b3Jvbm9pUmVkQmxhY2tGaXJzdCh0aGlzLl8pO1xuICAgICAgICBub2RlLlAgPSBudWxsO1xuICAgICAgICBub2RlLk4gPSBhZnRlcjtcbiAgICAgICAgYWZ0ZXIuUCA9IGFmdGVyLkwgPSBub2RlO1xuICAgICAgICBwYXJlbnQgPSBhZnRlcjtcbiAgICAgIH0gZWxzZSB7XG4gICAgICAgIG5vZGUuUCA9IG5vZGUuTiA9IG51bGw7XG4gICAgICAgIHRoaXMuXyA9IG5vZGU7XG4gICAgICAgIHBhcmVudCA9IG51bGw7XG4gICAgICB9XG4gICAgICBub2RlLkwgPSBub2RlLlIgPSBudWxsO1xuICAgICAgbm9kZS5VID0gcGFyZW50O1xuICAgICAgbm9kZS5DID0gdHJ1ZTtcbiAgICAgIGFmdGVyID0gbm9kZTtcbiAgICAgIHdoaWxlIChwYXJlbnQgJiYgcGFyZW50LkMpIHtcbiAgICAgICAgZ3JhbmRwYSA9IHBhcmVudC5VO1xuICAgICAgICBpZiAocGFyZW50ID09PSBncmFuZHBhLkwpIHtcbiAgICAgICAgICB1bmNsZSA9IGdyYW5kcGEuUjtcbiAgICAgICAgICBpZiAodW5jbGUgJiYgdW5jbGUuQykge1xuICAgICAgICAgICAgcGFyZW50LkMgPSB1bmNsZS5DID0gZmFsc2U7XG4gICAgICAgICAgICBncmFuZHBhLkMgPSB0cnVlO1xuICAgICAgICAgICAgYWZ0ZXIgPSBncmFuZHBhO1xuICAgICAgICAgIH0gZWxzZSB7XG4gICAgICAgICAgICBpZiAoYWZ0ZXIgPT09IHBhcmVudC5SKSB7XG4gICAgICAgICAgICAgIGQzX2dlb21fdm9yb25vaVJlZEJsYWNrUm90YXRlTGVmdCh0aGlzLCBwYXJlbnQpO1xuICAgICAgICAgICAgICBhZnRlciA9IHBhcmVudDtcbiAgICAgICAgICAgICAgcGFyZW50ID0gYWZ0ZXIuVTtcbiAgICAgICAgICAgIH1cbiAgICAgICAgICAgIHBhcmVudC5DID0gZmFsc2U7XG4gICAgICAgICAgICBncmFuZHBhLkMgPSB0cnVlO1xuICAgICAgICAgICAgZDNfZ2VvbV92b3Jvbm9pUmVkQmxhY2tSb3RhdGVSaWdodCh0aGlzLCBncmFuZHBhKTtcbiAgICAgICAgICB9XG4gICAgICAgIH0gZWxzZSB7XG4gICAgICAgICAgdW5jbGUgPSBncmFuZHBhLkw7XG4gICAgICAgICAgaWYgKHVuY2xlICYmIHVuY2xlLkMpIHtcbiAgICAgICAgICAgIHBhcmVudC5DID0gdW5jbGUuQyA9IGZhbHNlO1xuICAgICAgICAgICAgZ3JhbmRwYS5DID0gdHJ1ZTtcbiAgICAgICAgICAgIGFmdGVyID0gZ3JhbmRwYTtcbiAgICAgICAgICB9IGVsc2Uge1xuICAgICAgICAgICAgaWYgKGFmdGVyID09PSBwYXJlbnQuTCkge1xuICAgICAgICAgICAgICBkM19nZW9tX3Zvcm9ub2lSZWRCbGFja1JvdGF0ZVJpZ2h0KHRoaXMsIHBhcmVudCk7XG4gICAgICAgICAgICAgIGFmdGVyID0gcGFyZW50O1xuICAgICAgICAgICAgICBwYXJlbnQgPSBhZnRlci5VO1xuICAgICAgICAgICAgfVxuICAgICAgICAgICAgcGFyZW50LkMgPSBmYWxzZTtcbiAgICAgICAgICAgIGdyYW5kcGEuQyA9IHRydWU7XG4gICAgICAgICAgICBkM19nZW9tX3Zvcm9ub2lSZWRCbGFja1JvdGF0ZUxlZnQodGhpcywgZ3JhbmRwYSk7XG4gICAgICAgICAgfVxuICAgICAgICB9XG4gICAgICAgIHBhcmVudCA9IGFmdGVyLlU7XG4gICAgICB9XG4gICAgICB0aGlzLl8uQyA9IGZhbHNlO1xuICAgIH0sXG4gICAgcmVtb3ZlOiBmdW5jdGlvbihub2RlKSB7XG4gICAgICBpZiAobm9kZS5OKSBub2RlLk4uUCA9IG5vZGUuUDtcbiAgICAgIGlmIChub2RlLlApIG5vZGUuUC5OID0gbm9kZS5OO1xuICAgICAgbm9kZS5OID0gbm9kZS5QID0gbnVsbDtcbiAgICAgIHZhciBwYXJlbnQgPSBub2RlLlUsIHNpYmxpbmcsIGxlZnQgPSBub2RlLkwsIHJpZ2h0ID0gbm9kZS5SLCBuZXh0LCByZWQ7XG4gICAgICBpZiAoIWxlZnQpIG5leHQgPSByaWdodDsgZWxzZSBpZiAoIXJpZ2h0KSBuZXh0ID0gbGVmdDsgZWxzZSBuZXh0ID0gZDNfZ2VvbV92b3Jvbm9pUmVkQmxhY2tGaXJzdChyaWdodCk7XG4gICAgICBpZiAocGFyZW50KSB7XG4gICAgICAgIGlmIChwYXJlbnQuTCA9PT0gbm9kZSkgcGFyZW50LkwgPSBuZXh0OyBlbHNlIHBhcmVudC5SID0gbmV4dDtcbiAgICAgIH0gZWxzZSB7XG4gICAgICAgIHRoaXMuXyA9IG5leHQ7XG4gICAgICB9XG4gICAgICBpZiAobGVmdCAmJiByaWdodCkge1xuICAgICAgICByZWQgPSBuZXh0LkM7XG4gICAgICAgIG5leHQuQyA9IG5vZGUuQztcbiAgICAgICAgbmV4dC5MID0gbGVmdDtcbiAgICAgICAgbGVmdC5VID0gbmV4dDtcbiAgICAgICAgaWYgKG5leHQgIT09IHJpZ2h0KSB7XG4gICAgICAgICAgcGFyZW50ID0gbmV4dC5VO1xuICAgICAgICAgIG5leHQuVSA9IG5vZGUuVTtcbiAgICAgICAgICBub2RlID0gbmV4dC5SO1xuICAgICAgICAgIHBhcmVudC5MID0gbm9kZTtcbiAgICAgICAgICBuZXh0LlIgPSByaWdodDtcbiAgICAgICAgICByaWdodC5VID0gbmV4dDtcbiAgICAgICAgfSBlbHNlIHtcbiAgICAgICAgICBuZXh0LlUgPSBwYXJlbnQ7XG4gICAgICAgICAgcGFyZW50ID0gbmV4dDtcbiAgICAgICAgICBub2RlID0gbmV4dC5SO1xuICAgICAgICB9XG4gICAgICB9IGVsc2Uge1xuICAgICAgICByZWQgPSBub2RlLkM7XG4gICAgICAgIG5vZGUgPSBuZXh0O1xuICAgICAgfVxuICAgICAgaWYgKG5vZGUpIG5vZGUuVSA9IHBhcmVudDtcbiAgICAgIGlmIChyZWQpIHJldHVybjtcbiAgICAgIGlmIChub2RlICYmIG5vZGUuQykge1xuICAgICAgICBub2RlLkMgPSBmYWxzZTtcbiAgICAgICAgcmV0dXJuO1xuICAgICAgfVxuICAgICAgZG8ge1xuICAgICAgICBpZiAobm9kZSA9PT0gdGhpcy5fKSBicmVhaztcbiAgICAgICAgaWYgKG5vZGUgPT09IHBhcmVudC5MKSB7XG4gICAgICAgICAgc2libGluZyA9IHBhcmVudC5SO1xuICAgICAgICAgIGlmIChzaWJsaW5nLkMpIHtcbiAgICAgICAgICAgIHNpYmxpbmcuQyA9IGZhbHNlO1xuICAgICAgICAgICAgcGFyZW50LkMgPSB0cnVlO1xuICAgICAgICAgICAgZDNfZ2VvbV92b3Jvbm9pUmVkQmxhY2tSb3RhdGVMZWZ0KHRoaXMsIHBhcmVudCk7XG4gICAgICAgICAgICBzaWJsaW5nID0gcGFyZW50LlI7XG4gICAgICAgICAgfVxuICAgICAgICAgIGlmIChzaWJsaW5nLkwgJiYgc2libGluZy5MLkMgfHwgc2libGluZy5SICYmIHNpYmxpbmcuUi5DKSB7XG4gICAgICAgICAgICBpZiAoIXNpYmxpbmcuUiB8fCAhc2libGluZy5SLkMpIHtcbiAgICAgICAgICAgICAgc2libGluZy5MLkMgPSBmYWxzZTtcbiAgICAgICAgICAgICAgc2libGluZy5DID0gdHJ1ZTtcbiAgICAgICAgICAgICAgZDNfZ2VvbV92b3Jvbm9pUmVkQmxhY2tSb3RhdGVSaWdodCh0aGlzLCBzaWJsaW5nKTtcbiAgICAgICAgICAgICAgc2libGluZyA9IHBhcmVudC5SO1xuICAgICAgICAgICAgfVxuICAgICAgICAgICAgc2libGluZy5DID0gcGFyZW50LkM7XG4gICAgICAgICAgICBwYXJlbnQuQyA9IHNpYmxpbmcuUi5DID0gZmFsc2U7XG4gICAgICAgICAgICBkM19nZW9tX3Zvcm9ub2lSZWRCbGFja1JvdGF0ZUxlZnQodGhpcywgcGFyZW50KTtcbiAgICAgICAgICAgIG5vZGUgPSB0aGlzLl87XG4gICAgICAgICAgICBicmVhaztcbiAgICAgICAgICB9XG4gICAgICAgIH0gZWxzZSB7XG4gICAgICAgICAgc2libGluZyA9IHBhcmVudC5MO1xuICAgICAgICAgIGlmIChzaWJsaW5nLkMpIHtcbiAgICAgICAgICAgIHNpYmxpbmcuQyA9IGZhbHNlO1xuICAgICAgICAgICAgcGFyZW50LkMgPSB0cnVlO1xuICAgICAgICAgICAgZDNfZ2VvbV92b3Jvbm9pUmVkQmxhY2tSb3RhdGVSaWdodCh0aGlzLCBwYXJlbnQpO1xuICAgICAgICAgICAgc2libGluZyA9IHBhcmVudC5MO1xuICAgICAgICAgIH1cbiAgICAgICAgICBpZiAoc2libGluZy5MICYmIHNpYmxpbmcuTC5DIHx8IHNpYmxpbmcuUiAmJiBzaWJsaW5nLlIuQykge1xuICAgICAgICAgICAgaWYgKCFzaWJsaW5nLkwgfHwgIXNpYmxpbmcuTC5DKSB7XG4gICAgICAgICAgICAgIHNpYmxpbmcuUi5DID0gZmFsc2U7XG4gICAgICAgICAgICAgIHNpYmxpbmcuQyA9IHRydWU7XG4gICAgICAgICAgICAgIGQzX2dlb21fdm9yb25vaVJlZEJsYWNrUm90YXRlTGVmdCh0aGlzLCBzaWJsaW5nKTtcbiAgICAgICAgICAgICAgc2libGluZyA9IHBhcmVudC5MO1xuICAgICAgICAgICAgfVxuICAgICAgICAgICAgc2libGluZy5DID0gcGFyZW50LkM7XG4gICAgICAgICAgICBwYXJlbnQuQyA9IHNpYmxpbmcuTC5DID0gZmFsc2U7XG4gICAgICAgICAgICBkM19nZW9tX3Zvcm9ub2lSZWRCbGFja1JvdGF0ZVJpZ2h0KHRoaXMsIHBhcmVudCk7XG4gICAgICAgICAgICBub2RlID0gdGhpcy5fO1xuICAgICAgICAgICAgYnJlYWs7XG4gICAgICAgICAgfVxuICAgICAgICB9XG4gICAgICAgIHNpYmxpbmcuQyA9IHRydWU7XG4gICAgICAgIG5vZGUgPSBwYXJlbnQ7XG4gICAgICAgIHBhcmVudCA9IHBhcmVudC5VO1xuICAgICAgfSB3aGlsZSAoIW5vZGUuQyk7XG4gICAgICBpZiAobm9kZSkgbm9kZS5DID0gZmFsc2U7XG4gICAgfVxuICB9O1xuICBmdW5jdGlvbiBkM19nZW9tX3Zvcm9ub2lSZWRCbGFja1JvdGF0ZUxlZnQodHJlZSwgbm9kZSkge1xuICAgIHZhciBwID0gbm9kZSwgcSA9IG5vZGUuUiwgcGFyZW50ID0gcC5VO1xuICAgIGlmIChwYXJlbnQpIHtcbiAgICAgIGlmIChwYXJlbnQuTCA9PT0gcCkgcGFyZW50LkwgPSBxOyBlbHNlIHBhcmVudC5SID0gcTtcbiAgICB9IGVsc2Uge1xuICAgICAgdHJlZS5fID0gcTtcbiAgICB9XG4gICAgcS5VID0gcGFyZW50O1xuICAgIHAuVSA9IHE7XG4gICAgcC5SID0gcS5MO1xuICAgIGlmIChwLlIpIHAuUi5VID0gcDtcbiAgICBxLkwgPSBwO1xuICB9XG4gIGZ1bmN0aW9uIGQzX2dlb21fdm9yb25vaVJlZEJsYWNrUm90YXRlUmlnaHQodHJlZSwgbm9kZSkge1xuICAgIHZhciBwID0gbm9kZSwgcSA9IG5vZGUuTCwgcGFyZW50ID0gcC5VO1xuICAgIGlmIChwYXJlbnQpIHtcbiAgICAgIGlmIChwYXJlbnQuTCA9PT0gcCkgcGFyZW50LkwgPSBxOyBlbHNlIHBhcmVudC5SID0gcTtcbiAgICB9IGVsc2Uge1xuICAgICAgdHJlZS5fID0gcTtcbiAgICB9XG4gICAgcS5VID0gcGFyZW50O1xuICAgIHAuVSA9IHE7XG4gICAgcC5MID0gcS5SO1xuICAgIGlmIChwLkwpIHAuTC5VID0gcDtcbiAgICBxLlIgPSBwO1xuICB9XG4gIGZ1bmN0aW9uIGQzX2dlb21fdm9yb25vaVJlZEJsYWNrRmlyc3Qobm9kZSkge1xuICAgIHdoaWxlIChub2RlLkwpIG5vZGUgPSBub2RlLkw7XG4gICAgcmV0dXJuIG5vZGU7XG4gIH1cbiAgZnVuY3Rpb24gZDNfZ2VvbV92b3Jvbm9pKHNpdGVzLCBiYm94KSB7XG4gICAgdmFyIHNpdGUgPSBzaXRlcy5zb3J0KGQzX2dlb21fdm9yb25vaVZlcnRleE9yZGVyKS5wb3AoKSwgeDAsIHkwLCBjaXJjbGU7XG4gICAgZDNfZ2VvbV92b3Jvbm9pRWRnZXMgPSBbXTtcbiAgICBkM19nZW9tX3Zvcm9ub2lDZWxscyA9IG5ldyBBcnJheShzaXRlcy5sZW5ndGgpO1xuICAgIGQzX2dlb21fdm9yb25vaUJlYWNoZXMgPSBuZXcgZDNfZ2VvbV92b3Jvbm9pUmVkQmxhY2tUcmVlKCk7XG4gICAgZDNfZ2VvbV92b3Jvbm9pQ2lyY2xlcyA9IG5ldyBkM19nZW9tX3Zvcm9ub2lSZWRCbGFja1RyZWUoKTtcbiAgICB3aGlsZSAodHJ1ZSkge1xuICAgICAgY2lyY2xlID0gZDNfZ2VvbV92b3Jvbm9pRmlyc3RDaXJjbGU7XG4gICAgICBpZiAoc2l0ZSAmJiAoIWNpcmNsZSB8fCBzaXRlLnkgPCBjaXJjbGUueSB8fCBzaXRlLnkgPT09IGNpcmNsZS55ICYmIHNpdGUueCA8IGNpcmNsZS54KSkge1xuICAgICAgICBpZiAoc2l0ZS54ICE9PSB4MCB8fCBzaXRlLnkgIT09IHkwKSB7XG4gICAgICAgICAgZDNfZ2VvbV92b3Jvbm9pQ2VsbHNbc2l0ZS5pXSA9IG5ldyBkM19nZW9tX3Zvcm9ub2lDZWxsKHNpdGUpO1xuICAgICAgICAgIGQzX2dlb21fdm9yb25vaUFkZEJlYWNoKHNpdGUpO1xuICAgICAgICAgIHgwID0gc2l0ZS54LCB5MCA9IHNpdGUueTtcbiAgICAgICAgfVxuICAgICAgICBzaXRlID0gc2l0ZXMucG9wKCk7XG4gICAgICB9IGVsc2UgaWYgKGNpcmNsZSkge1xuICAgICAgICBkM19nZW9tX3Zvcm9ub2lSZW1vdmVCZWFjaChjaXJjbGUuYXJjKTtcbiAgICAgIH0gZWxzZSB7XG4gICAgICAgIGJyZWFrO1xuICAgICAgfVxuICAgIH1cbiAgICBpZiAoYmJveCkgZDNfZ2VvbV92b3Jvbm9pQ2xpcEVkZ2VzKGJib3gpLCBkM19nZW9tX3Zvcm9ub2lDbG9zZUNlbGxzKGJib3gpO1xuICAgIHZhciBkaWFncmFtID0ge1xuICAgICAgY2VsbHM6IGQzX2dlb21fdm9yb25vaUNlbGxzLFxuICAgICAgZWRnZXM6IGQzX2dlb21fdm9yb25vaUVkZ2VzXG4gICAgfTtcbiAgICBkM19nZW9tX3Zvcm9ub2lCZWFjaGVzID0gZDNfZ2VvbV92b3Jvbm9pQ2lyY2xlcyA9IGQzX2dlb21fdm9yb25vaUVkZ2VzID0gZDNfZ2VvbV92b3Jvbm9pQ2VsbHMgPSBudWxsO1xuICAgIHJldHVybiBkaWFncmFtO1xuICB9XG4gIGZ1bmN0aW9uIGQzX2dlb21fdm9yb25vaVZlcnRleE9yZGVyKGEsIGIpIHtcbiAgICByZXR1cm4gYi55IC0gYS55IHx8IGIueCAtIGEueDtcbiAgfVxuICBkMy5nZW9tLnZvcm9ub2kgPSBmdW5jdGlvbihwb2ludHMpIHtcbiAgICB2YXIgeCA9IGQzX2dlb21fcG9pbnRYLCB5ID0gZDNfZ2VvbV9wb2ludFksIGZ4ID0geCwgZnkgPSB5LCBjbGlwRXh0ZW50ID0gZDNfZ2VvbV92b3Jvbm9pQ2xpcEV4dGVudDtcbiAgICBpZiAocG9pbnRzKSByZXR1cm4gdm9yb25vaShwb2ludHMpO1xuICAgIGZ1bmN0aW9uIHZvcm9ub2koZGF0YSkge1xuICAgICAgdmFyIHBvbHlnb25zID0gbmV3IEFycmF5KGRhdGEubGVuZ3RoKSwgeDAgPSBjbGlwRXh0ZW50WzBdWzBdLCB5MCA9IGNsaXBFeHRlbnRbMF1bMV0sIHgxID0gY2xpcEV4dGVudFsxXVswXSwgeTEgPSBjbGlwRXh0ZW50WzFdWzFdO1xuICAgICAgZDNfZ2VvbV92b3Jvbm9pKHNpdGVzKGRhdGEpLCBjbGlwRXh0ZW50KS5jZWxscy5mb3JFYWNoKGZ1bmN0aW9uKGNlbGwsIGkpIHtcbiAgICAgICAgdmFyIGVkZ2VzID0gY2VsbC5lZGdlcywgc2l0ZSA9IGNlbGwuc2l0ZSwgcG9seWdvbiA9IHBvbHlnb25zW2ldID0gZWRnZXMubGVuZ3RoID8gZWRnZXMubWFwKGZ1bmN0aW9uKGUpIHtcbiAgICAgICAgICB2YXIgcyA9IGUuc3RhcnQoKTtcbiAgICAgICAgICByZXR1cm4gWyBzLngsIHMueSBdO1xuICAgICAgICB9KSA6IHNpdGUueCA+PSB4MCAmJiBzaXRlLnggPD0geDEgJiYgc2l0ZS55ID49IHkwICYmIHNpdGUueSA8PSB5MSA/IFsgWyB4MCwgeTEgXSwgWyB4MSwgeTEgXSwgWyB4MSwgeTAgXSwgWyB4MCwgeTAgXSBdIDogW107XG4gICAgICAgIHBvbHlnb24ucG9pbnQgPSBkYXRhW2ldO1xuICAgICAgfSk7XG4gICAgICByZXR1cm4gcG9seWdvbnM7XG4gICAgfVxuICAgIGZ1bmN0aW9uIHNpdGVzKGRhdGEpIHtcbiAgICAgIHJldHVybiBkYXRhLm1hcChmdW5jdGlvbihkLCBpKSB7XG4gICAgICAgIHJldHVybiB7XG4gICAgICAgICAgeDogTWF0aC5yb3VuZChmeChkLCBpKSAvIM61KSAqIM61LFxuICAgICAgICAgIHk6IE1hdGgucm91bmQoZnkoZCwgaSkgLyDOtSkgKiDOtSxcbiAgICAgICAgICBpOiBpXG4gICAgICAgIH07XG4gICAgICB9KTtcbiAgICB9XG4gICAgdm9yb25vaS5saW5rcyA9IGZ1bmN0aW9uKGRhdGEpIHtcbiAgICAgIHJldHVybiBkM19nZW9tX3Zvcm9ub2koc2l0ZXMoZGF0YSkpLmVkZ2VzLmZpbHRlcihmdW5jdGlvbihlZGdlKSB7XG4gICAgICAgIHJldHVybiBlZGdlLmwgJiYgZWRnZS5yO1xuICAgICAgfSkubWFwKGZ1bmN0aW9uKGVkZ2UpIHtcbiAgICAgICAgcmV0dXJuIHtcbiAgICAgICAgICBzb3VyY2U6IGRhdGFbZWRnZS5sLmldLFxuICAgICAgICAgIHRhcmdldDogZGF0YVtlZGdlLnIuaV1cbiAgICAgICAgfTtcbiAgICAgIH0pO1xuICAgIH07XG4gICAgdm9yb25vaS50cmlhbmdsZXMgPSBmdW5jdGlvbihkYXRhKSB7XG4gICAgICB2YXIgdHJpYW5nbGVzID0gW107XG4gICAgICBkM19nZW9tX3Zvcm9ub2koc2l0ZXMoZGF0YSkpLmNlbGxzLmZvckVhY2goZnVuY3Rpb24oY2VsbCwgaSkge1xuICAgICAgICB2YXIgc2l0ZSA9IGNlbGwuc2l0ZSwgZWRnZXMgPSBjZWxsLmVkZ2VzLnNvcnQoZDNfZ2VvbV92b3Jvbm9pSGFsZkVkZ2VPcmRlciksIGogPSAtMSwgbSA9IGVkZ2VzLmxlbmd0aCwgZTAsIHMwLCBlMSA9IGVkZ2VzW20gLSAxXS5lZGdlLCBzMSA9IGUxLmwgPT09IHNpdGUgPyBlMS5yIDogZTEubDtcbiAgICAgICAgd2hpbGUgKCsraiA8IG0pIHtcbiAgICAgICAgICBlMCA9IGUxO1xuICAgICAgICAgIHMwID0gczE7XG4gICAgICAgICAgZTEgPSBlZGdlc1tqXS5lZGdlO1xuICAgICAgICAgIHMxID0gZTEubCA9PT0gc2l0ZSA/IGUxLnIgOiBlMS5sO1xuICAgICAgICAgIGlmIChpIDwgczAuaSAmJiBpIDwgczEuaSAmJiBkM19nZW9tX3Zvcm9ub2lUcmlhbmdsZUFyZWEoc2l0ZSwgczAsIHMxKSA8IDApIHtcbiAgICAgICAgICAgIHRyaWFuZ2xlcy5wdXNoKFsgZGF0YVtpXSwgZGF0YVtzMC5pXSwgZGF0YVtzMS5pXSBdKTtcbiAgICAgICAgICB9XG4gICAgICAgIH1cbiAgICAgIH0pO1xuICAgICAgcmV0dXJuIHRyaWFuZ2xlcztcbiAgICB9O1xuICAgIHZvcm9ub2kueCA9IGZ1bmN0aW9uKF8pIHtcbiAgICAgIHJldHVybiBhcmd1bWVudHMubGVuZ3RoID8gKGZ4ID0gZDNfZnVuY3Rvcih4ID0gXyksIHZvcm9ub2kpIDogeDtcbiAgICB9O1xuICAgIHZvcm9ub2kueSA9IGZ1bmN0aW9uKF8pIHtcbiAgICAgIHJldHVybiBhcmd1bWVudHMubGVuZ3RoID8gKGZ5ID0gZDNfZnVuY3Rvcih5ID0gXyksIHZvcm9ub2kpIDogeTtcbiAgICB9O1xuICAgIHZvcm9ub2kuY2xpcEV4dGVudCA9IGZ1bmN0aW9uKF8pIHtcbiAgICAgIGlmICghYXJndW1lbnRzLmxlbmd0aCkgcmV0dXJuIGNsaXBFeHRlbnQgPT09IGQzX2dlb21fdm9yb25vaUNsaXBFeHRlbnQgPyBudWxsIDogY2xpcEV4dGVudDtcbiAgICAgIGNsaXBFeHRlbnQgPSBfID09IG51bGwgPyBkM19nZW9tX3Zvcm9ub2lDbGlwRXh0ZW50IDogXztcbiAgICAgIHJldHVybiB2b3Jvbm9pO1xuICAgIH07XG4gICAgdm9yb25vaS5zaXplID0gZnVuY3Rpb24oXykge1xuICAgICAgaWYgKCFhcmd1bWVudHMubGVuZ3RoKSByZXR1cm4gY2xpcEV4dGVudCA9PT0gZDNfZ2VvbV92b3Jvbm9pQ2xpcEV4dGVudCA/IG51bGwgOiBjbGlwRXh0ZW50ICYmIGNsaXBFeHRlbnRbMV07XG4gICAgICByZXR1cm4gdm9yb25vaS5jbGlwRXh0ZW50KF8gJiYgWyBbIDAsIDAgXSwgXyBdKTtcbiAgICB9O1xuICAgIHJldHVybiB2b3Jvbm9pO1xuICB9O1xuICB2YXIgZDNfZ2VvbV92b3Jvbm9pQ2xpcEV4dGVudCA9IFsgWyAtMWU2LCAtMWU2IF0sIFsgMWU2LCAxZTYgXSBdO1xuICBmdW5jdGlvbiBkM19nZW9tX3Zvcm9ub2lUcmlhbmdsZUFyZWEoYSwgYiwgYykge1xuICAgIHJldHVybiAoYS54IC0gYy54KSAqIChiLnkgLSBhLnkpIC0gKGEueCAtIGIueCkgKiAoYy55IC0gYS55KTtcbiAgfVxuICBkMy5nZW9tLmRlbGF1bmF5ID0gZnVuY3Rpb24odmVydGljZXMpIHtcbiAgICByZXR1cm4gZDMuZ2VvbS52b3Jvbm9pKCkudHJpYW5nbGVzKHZlcnRpY2VzKTtcbiAgfTtcbiAgZDMuZ2VvbS5xdWFkdHJlZSA9IGZ1bmN0aW9uKHBvaW50cywgeDEsIHkxLCB4MiwgeTIpIHtcbiAgICB2YXIgeCA9IGQzX2dlb21fcG9pbnRYLCB5ID0gZDNfZ2VvbV9wb2ludFksIGNvbXBhdDtcbiAgICBpZiAoY29tcGF0ID0gYXJndW1lbnRzLmxlbmd0aCkge1xuICAgICAgeCA9IGQzX2dlb21fcXVhZHRyZWVDb21wYXRYO1xuICAgICAgeSA9IGQzX2dlb21fcXVhZHRyZWVDb21wYXRZO1xuICAgICAgaWYgKGNvbXBhdCA9PT0gMykge1xuICAgICAgICB5MiA9IHkxO1xuICAgICAgICB4MiA9IHgxO1xuICAgICAgICB5MSA9IHgxID0gMDtcbiAgICAgIH1cbiAgICAgIHJldHVybiBxdWFkdHJlZShwb2ludHMpO1xuICAgIH1cbiAgICBmdW5jdGlvbiBxdWFkdHJlZShkYXRhKSB7XG4gICAgICB2YXIgZCwgZnggPSBkM19mdW5jdG9yKHgpLCBmeSA9IGQzX2Z1bmN0b3IoeSksIHhzLCB5cywgaSwgbiwgeDFfLCB5MV8sIHgyXywgeTJfO1xuICAgICAgaWYgKHgxICE9IG51bGwpIHtcbiAgICAgICAgeDFfID0geDEsIHkxXyA9IHkxLCB4Ml8gPSB4MiwgeTJfID0geTI7XG4gICAgICB9IGVsc2Uge1xuICAgICAgICB4Ml8gPSB5Ml8gPSAtKHgxXyA9IHkxXyA9IEluZmluaXR5KTtcbiAgICAgICAgeHMgPSBbXSwgeXMgPSBbXTtcbiAgICAgICAgbiA9IGRhdGEubGVuZ3RoO1xuICAgICAgICBpZiAoY29tcGF0KSBmb3IgKGkgPSAwOyBpIDwgbjsgKytpKSB7XG4gICAgICAgICAgZCA9IGRhdGFbaV07XG4gICAgICAgICAgaWYgKGQueCA8IHgxXykgeDFfID0gZC54O1xuICAgICAgICAgIGlmIChkLnkgPCB5MV8pIHkxXyA9IGQueTtcbiAgICAgICAgICBpZiAoZC54ID4geDJfKSB4Ml8gPSBkLng7XG4gICAgICAgICAgaWYgKGQueSA+IHkyXykgeTJfID0gZC55O1xuICAgICAgICAgIHhzLnB1c2goZC54KTtcbiAgICAgICAgICB5cy5wdXNoKGQueSk7XG4gICAgICAgIH0gZWxzZSBmb3IgKGkgPSAwOyBpIDwgbjsgKytpKSB7XG4gICAgICAgICAgdmFyIHhfID0gK2Z4KGQgPSBkYXRhW2ldLCBpKSwgeV8gPSArZnkoZCwgaSk7XG4gICAgICAgICAgaWYgKHhfIDwgeDFfKSB4MV8gPSB4XztcbiAgICAgICAgICBpZiAoeV8gPCB5MV8pIHkxXyA9IHlfO1xuICAgICAgICAgIGlmICh4XyA+IHgyXykgeDJfID0geF87XG4gICAgICAgICAgaWYgKHlfID4geTJfKSB5Ml8gPSB5XztcbiAgICAgICAgICB4cy5wdXNoKHhfKTtcbiAgICAgICAgICB5cy5wdXNoKHlfKTtcbiAgICAgICAgfVxuICAgICAgfVxuICAgICAgdmFyIGR4ID0geDJfIC0geDFfLCBkeSA9IHkyXyAtIHkxXztcbiAgICAgIGlmIChkeCA+IGR5KSB5Ml8gPSB5MV8gKyBkeDsgZWxzZSB4Ml8gPSB4MV8gKyBkeTtcbiAgICAgIGZ1bmN0aW9uIGluc2VydChuLCBkLCB4LCB5LCB4MSwgeTEsIHgyLCB5Mikge1xuICAgICAgICBpZiAoaXNOYU4oeCkgfHwgaXNOYU4oeSkpIHJldHVybjtcbiAgICAgICAgaWYgKG4ubGVhZikge1xuICAgICAgICAgIHZhciBueCA9IG4ueCwgbnkgPSBuLnk7XG4gICAgICAgICAgaWYgKG54ICE9IG51bGwpIHtcbiAgICAgICAgICAgIGlmIChhYnMobnggLSB4KSArIGFicyhueSAtIHkpIDwgLjAxKSB7XG4gICAgICAgICAgICAgIGluc2VydENoaWxkKG4sIGQsIHgsIHksIHgxLCB5MSwgeDIsIHkyKTtcbiAgICAgICAgICAgIH0gZWxzZSB7XG4gICAgICAgICAgICAgIHZhciBuUG9pbnQgPSBuLnBvaW50O1xuICAgICAgICAgICAgICBuLnggPSBuLnkgPSBuLnBvaW50ID0gbnVsbDtcbiAgICAgICAgICAgICAgaW5zZXJ0Q2hpbGQobiwgblBvaW50LCBueCwgbnksIHgxLCB5MSwgeDIsIHkyKTtcbiAgICAgICAgICAgICAgaW5zZXJ0Q2hpbGQobiwgZCwgeCwgeSwgeDEsIHkxLCB4MiwgeTIpO1xuICAgICAgICAgICAgfVxuICAgICAgICAgIH0gZWxzZSB7XG4gICAgICAgICAgICBuLnggPSB4LCBuLnkgPSB5LCBuLnBvaW50ID0gZDtcbiAgICAgICAgICB9XG4gICAgICAgIH0gZWxzZSB7XG4gICAgICAgICAgaW5zZXJ0Q2hpbGQobiwgZCwgeCwgeSwgeDEsIHkxLCB4MiwgeTIpO1xuICAgICAgICB9XG4gICAgICB9XG4gICAgICBmdW5jdGlvbiBpbnNlcnRDaGlsZChuLCBkLCB4LCB5LCB4MSwgeTEsIHgyLCB5Mikge1xuICAgICAgICB2YXIgeG0gPSAoeDEgKyB4MikgKiAuNSwgeW0gPSAoeTEgKyB5MikgKiAuNSwgcmlnaHQgPSB4ID49IHhtLCBiZWxvdyA9IHkgPj0geW0sIGkgPSBiZWxvdyA8PCAxIHwgcmlnaHQ7XG4gICAgICAgIG4ubGVhZiA9IGZhbHNlO1xuICAgICAgICBuID0gbi5ub2Rlc1tpXSB8fCAobi5ub2Rlc1tpXSA9IGQzX2dlb21fcXVhZHRyZWVOb2RlKCkpO1xuICAgICAgICBpZiAocmlnaHQpIHgxID0geG07IGVsc2UgeDIgPSB4bTtcbiAgICAgICAgaWYgKGJlbG93KSB5MSA9IHltOyBlbHNlIHkyID0geW07XG4gICAgICAgIGluc2VydChuLCBkLCB4LCB5LCB4MSwgeTEsIHgyLCB5Mik7XG4gICAgICB9XG4gICAgICB2YXIgcm9vdCA9IGQzX2dlb21fcXVhZHRyZWVOb2RlKCk7XG4gICAgICByb290LmFkZCA9IGZ1bmN0aW9uKGQpIHtcbiAgICAgICAgaW5zZXJ0KHJvb3QsIGQsICtmeChkLCArK2kpLCArZnkoZCwgaSksIHgxXywgeTFfLCB4Ml8sIHkyXyk7XG4gICAgICB9O1xuICAgICAgcm9vdC52aXNpdCA9IGZ1bmN0aW9uKGYpIHtcbiAgICAgICAgZDNfZ2VvbV9xdWFkdHJlZVZpc2l0KGYsIHJvb3QsIHgxXywgeTFfLCB4Ml8sIHkyXyk7XG4gICAgICB9O1xuICAgICAgcm9vdC5maW5kID0gZnVuY3Rpb24ocG9pbnQpIHtcbiAgICAgICAgcmV0dXJuIGQzX2dlb21fcXVhZHRyZWVGaW5kKHJvb3QsIHBvaW50WzBdLCBwb2ludFsxXSwgeDFfLCB5MV8sIHgyXywgeTJfKTtcbiAgICAgIH07XG4gICAgICBpID0gLTE7XG4gICAgICBpZiAoeDEgPT0gbnVsbCkge1xuICAgICAgICB3aGlsZSAoKytpIDwgbikge1xuICAgICAgICAgIGluc2VydChyb290LCBkYXRhW2ldLCB4c1tpXSwgeXNbaV0sIHgxXywgeTFfLCB4Ml8sIHkyXyk7XG4gICAgICAgIH1cbiAgICAgICAgLS1pO1xuICAgICAgfSBlbHNlIGRhdGEuZm9yRWFjaChyb290LmFkZCk7XG4gICAgICB4cyA9IHlzID0gZGF0YSA9IGQgPSBudWxsO1xuICAgICAgcmV0dXJuIHJvb3Q7XG4gICAgfVxuICAgIHF1YWR0cmVlLnggPSBmdW5jdGlvbihfKSB7XG4gICAgICByZXR1cm4gYXJndW1lbnRzLmxlbmd0aCA/ICh4ID0gXywgcXVhZHRyZWUpIDogeDtcbiAgICB9O1xuICAgIHF1YWR0cmVlLnkgPSBmdW5jdGlvbihfKSB7XG4gICAgICByZXR1cm4gYXJndW1lbnRzLmxlbmd0aCA/ICh5ID0gXywgcXVhZHRyZWUpIDogeTtcbiAgICB9O1xuICAgIHF1YWR0cmVlLmV4dGVudCA9IGZ1bmN0aW9uKF8pIHtcbiAgICAgIGlmICghYXJndW1lbnRzLmxlbmd0aCkgcmV0dXJuIHgxID09IG51bGwgPyBudWxsIDogWyBbIHgxLCB5MSBdLCBbIHgyLCB5MiBdIF07XG4gICAgICBpZiAoXyA9PSBudWxsKSB4MSA9IHkxID0geDIgPSB5MiA9IG51bGw7IGVsc2UgeDEgPSArX1swXVswXSwgeTEgPSArX1swXVsxXSwgeDIgPSArX1sxXVswXSwgXG4gICAgICB5MiA9ICtfWzFdWzFdO1xuICAgICAgcmV0dXJuIHF1YWR0cmVlO1xuICAgIH07XG4gICAgcXVhZHRyZWUuc2l6ZSA9IGZ1bmN0aW9uKF8pIHtcbiAgICAgIGlmICghYXJndW1lbnRzLmxlbmd0aCkgcmV0dXJuIHgxID09IG51bGwgPyBudWxsIDogWyB4MiAtIHgxLCB5MiAtIHkxIF07XG4gICAgICBpZiAoXyA9PSBudWxsKSB4MSA9IHkxID0geDIgPSB5MiA9IG51bGw7IGVsc2UgeDEgPSB5MSA9IDAsIHgyID0gK19bMF0sIHkyID0gK19bMV07XG4gICAgICByZXR1cm4gcXVhZHRyZWU7XG4gICAgfTtcbiAgICByZXR1cm4gcXVhZHRyZWU7XG4gIH07XG4gIGZ1bmN0aW9uIGQzX2dlb21fcXVhZHRyZWVDb21wYXRYKGQpIHtcbiAgICByZXR1cm4gZC54O1xuICB9XG4gIGZ1bmN0aW9uIGQzX2dlb21fcXVhZHRyZWVDb21wYXRZKGQpIHtcbiAgICByZXR1cm4gZC55O1xuICB9XG4gIGZ1bmN0aW9uIGQzX2dlb21fcXVhZHRyZWVOb2RlKCkge1xuICAgIHJldHVybiB7XG4gICAgICBsZWFmOiB0cnVlLFxuICAgICAgbm9kZXM6IFtdLFxuICAgICAgcG9pbnQ6IG51bGwsXG4gICAgICB4OiBudWxsLFxuICAgICAgeTogbnVsbFxuICAgIH07XG4gIH1cbiAgZnVuY3Rpb24gZDNfZ2VvbV9xdWFkdHJlZVZpc2l0KGYsIG5vZGUsIHgxLCB5MSwgeDIsIHkyKSB7XG4gICAgaWYgKCFmKG5vZGUsIHgxLCB5MSwgeDIsIHkyKSkge1xuICAgICAgdmFyIHN4ID0gKHgxICsgeDIpICogLjUsIHN5ID0gKHkxICsgeTIpICogLjUsIGNoaWxkcmVuID0gbm9kZS5ub2RlcztcbiAgICAgIGlmIChjaGlsZHJlblswXSkgZDNfZ2VvbV9xdWFkdHJlZVZpc2l0KGYsIGNoaWxkcmVuWzBdLCB4MSwgeTEsIHN4LCBzeSk7XG4gICAgICBpZiAoY2hpbGRyZW5bMV0pIGQzX2dlb21fcXVhZHRyZWVWaXNpdChmLCBjaGlsZHJlblsxXSwgc3gsIHkxLCB4Miwgc3kpO1xuICAgICAgaWYgKGNoaWxkcmVuWzJdKSBkM19nZW9tX3F1YWR0cmVlVmlzaXQoZiwgY2hpbGRyZW5bMl0sIHgxLCBzeSwgc3gsIHkyKTtcbiAgICAgIGlmIChjaGlsZHJlblszXSkgZDNfZ2VvbV9xdWFkdHJlZVZpc2l0KGYsIGNoaWxkcmVuWzNdLCBzeCwgc3ksIHgyLCB5Mik7XG4gICAgfVxuICB9XG4gIGZ1bmN0aW9uIGQzX2dlb21fcXVhZHRyZWVGaW5kKHJvb3QsIHgsIHksIHgwLCB5MCwgeDMsIHkzKSB7XG4gICAgdmFyIG1pbkRpc3RhbmNlMiA9IEluZmluaXR5LCBjbG9zZXN0UG9pbnQ7XG4gICAgKGZ1bmN0aW9uIGZpbmQobm9kZSwgeDEsIHkxLCB4MiwgeTIpIHtcbiAgICAgIGlmICh4MSA+IHgzIHx8IHkxID4geTMgfHwgeDIgPCB4MCB8fCB5MiA8IHkwKSByZXR1cm47XG4gICAgICBpZiAocG9pbnQgPSBub2RlLnBvaW50KSB7XG4gICAgICAgIHZhciBwb2ludCwgZHggPSB4IC0gbm9kZS54LCBkeSA9IHkgLSBub2RlLnksIGRpc3RhbmNlMiA9IGR4ICogZHggKyBkeSAqIGR5O1xuICAgICAgICBpZiAoZGlzdGFuY2UyIDwgbWluRGlzdGFuY2UyKSB7XG4gICAgICAgICAgdmFyIGRpc3RhbmNlID0gTWF0aC5zcXJ0KG1pbkRpc3RhbmNlMiA9IGRpc3RhbmNlMik7XG4gICAgICAgICAgeDAgPSB4IC0gZGlzdGFuY2UsIHkwID0geSAtIGRpc3RhbmNlO1xuICAgICAgICAgIHgzID0geCArIGRpc3RhbmNlLCB5MyA9IHkgKyBkaXN0YW5jZTtcbiAgICAgICAgICBjbG9zZXN0UG9pbnQgPSBwb2ludDtcbiAgICAgICAgfVxuICAgICAgfVxuICAgICAgdmFyIGNoaWxkcmVuID0gbm9kZS5ub2RlcywgeG0gPSAoeDEgKyB4MikgKiAuNSwgeW0gPSAoeTEgKyB5MikgKiAuNSwgcmlnaHQgPSB4ID49IHhtLCBiZWxvdyA9IHkgPj0geW07XG4gICAgICBmb3IgKHZhciBpID0gYmVsb3cgPDwgMSB8IHJpZ2h0LCBqID0gaSArIDQ7IGkgPCBqOyArK2kpIHtcbiAgICAgICAgaWYgKG5vZGUgPSBjaGlsZHJlbltpICYgM10pIHN3aXRjaCAoaSAmIDMpIHtcbiAgICAgICAgIGNhc2UgMDpcbiAgICAgICAgICBmaW5kKG5vZGUsIHgxLCB5MSwgeG0sIHltKTtcbiAgICAgICAgICBicmVhaztcblxuICAgICAgICAgY2FzZSAxOlxuICAgICAgICAgIGZpbmQobm9kZSwgeG0sIHkxLCB4MiwgeW0pO1xuICAgICAgICAgIGJyZWFrO1xuXG4gICAgICAgICBjYXNlIDI6XG4gICAgICAgICAgZmluZChub2RlLCB4MSwgeW0sIHhtLCB5Mik7XG4gICAgICAgICAgYnJlYWs7XG5cbiAgICAgICAgIGNhc2UgMzpcbiAgICAgICAgICBmaW5kKG5vZGUsIHhtLCB5bSwgeDIsIHkyKTtcbiAgICAgICAgICBicmVhaztcbiAgICAgICAgfVxuICAgICAgfVxuICAgIH0pKHJvb3QsIHgwLCB5MCwgeDMsIHkzKTtcbiAgICByZXR1cm4gY2xvc2VzdFBvaW50O1xuICB9XG4gIGQzLmludGVycG9sYXRlUmdiID0gZDNfaW50ZXJwb2xhdGVSZ2I7XG4gIGZ1bmN0aW9uIGQzX2ludGVycG9sYXRlUmdiKGEsIGIpIHtcbiAgICBhID0gZDMucmdiKGEpO1xuICAgIGIgPSBkMy5yZ2IoYik7XG4gICAgdmFyIGFyID0gYS5yLCBhZyA9IGEuZywgYWIgPSBhLmIsIGJyID0gYi5yIC0gYXIsIGJnID0gYi5nIC0gYWcsIGJiID0gYi5iIC0gYWI7XG4gICAgcmV0dXJuIGZ1bmN0aW9uKHQpIHtcbiAgICAgIHJldHVybiBcIiNcIiArIGQzX3JnYl9oZXgoTWF0aC5yb3VuZChhciArIGJyICogdCkpICsgZDNfcmdiX2hleChNYXRoLnJvdW5kKGFnICsgYmcgKiB0KSkgKyBkM19yZ2JfaGV4KE1hdGgucm91bmQoYWIgKyBiYiAqIHQpKTtcbiAgICB9O1xuICB9XG4gIGQzLmludGVycG9sYXRlT2JqZWN0ID0gZDNfaW50ZXJwb2xhdGVPYmplY3Q7XG4gIGZ1bmN0aW9uIGQzX2ludGVycG9sYXRlT2JqZWN0KGEsIGIpIHtcbiAgICB2YXIgaSA9IHt9LCBjID0ge30sIGs7XG4gICAgZm9yIChrIGluIGEpIHtcbiAgICAgIGlmIChrIGluIGIpIHtcbiAgICAgICAgaVtrXSA9IGQzX2ludGVycG9sYXRlKGFba10sIGJba10pO1xuICAgICAgfSBlbHNlIHtcbiAgICAgICAgY1trXSA9IGFba107XG4gICAgICB9XG4gICAgfVxuICAgIGZvciAoayBpbiBiKSB7XG4gICAgICBpZiAoIShrIGluIGEpKSB7XG4gICAgICAgIGNba10gPSBiW2tdO1xuICAgICAgfVxuICAgIH1cbiAgICByZXR1cm4gZnVuY3Rpb24odCkge1xuICAgICAgZm9yIChrIGluIGkpIGNba10gPSBpW2tdKHQpO1xuICAgICAgcmV0dXJuIGM7XG4gICAgfTtcbiAgfVxuICBkMy5pbnRlcnBvbGF0ZU51bWJlciA9IGQzX2ludGVycG9sYXRlTnVtYmVyO1xuICBmdW5jdGlvbiBkM19pbnRlcnBvbGF0ZU51bWJlcihhLCBiKSB7XG4gICAgYSA9ICthLCBiID0gK2I7XG4gICAgcmV0dXJuIGZ1bmN0aW9uKHQpIHtcbiAgICAgIHJldHVybiBhICogKDEgLSB0KSArIGIgKiB0O1xuICAgIH07XG4gIH1cbiAgZDMuaW50ZXJwb2xhdGVTdHJpbmcgPSBkM19pbnRlcnBvbGF0ZVN0cmluZztcbiAgZnVuY3Rpb24gZDNfaW50ZXJwb2xhdGVTdHJpbmcoYSwgYikge1xuICAgIHZhciBiaSA9IGQzX2ludGVycG9sYXRlX251bWJlckEubGFzdEluZGV4ID0gZDNfaW50ZXJwb2xhdGVfbnVtYmVyQi5sYXN0SW5kZXggPSAwLCBhbSwgYm0sIGJzLCBpID0gLTEsIHMgPSBbXSwgcSA9IFtdO1xuICAgIGEgPSBhICsgXCJcIiwgYiA9IGIgKyBcIlwiO1xuICAgIHdoaWxlICgoYW0gPSBkM19pbnRlcnBvbGF0ZV9udW1iZXJBLmV4ZWMoYSkpICYmIChibSA9IGQzX2ludGVycG9sYXRlX251bWJlckIuZXhlYyhiKSkpIHtcbiAgICAgIGlmICgoYnMgPSBibS5pbmRleCkgPiBiaSkge1xuICAgICAgICBicyA9IGIuc2xpY2UoYmksIGJzKTtcbiAgICAgICAgaWYgKHNbaV0pIHNbaV0gKz0gYnM7IGVsc2Ugc1srK2ldID0gYnM7XG4gICAgICB9XG4gICAgICBpZiAoKGFtID0gYW1bMF0pID09PSAoYm0gPSBibVswXSkpIHtcbiAgICAgICAgaWYgKHNbaV0pIHNbaV0gKz0gYm07IGVsc2Ugc1srK2ldID0gYm07XG4gICAgICB9IGVsc2Uge1xuICAgICAgICBzWysraV0gPSBudWxsO1xuICAgICAgICBxLnB1c2goe1xuICAgICAgICAgIGk6IGksXG4gICAgICAgICAgeDogZDNfaW50ZXJwb2xhdGVOdW1iZXIoYW0sIGJtKVxuICAgICAgICB9KTtcbiAgICAgIH1cbiAgICAgIGJpID0gZDNfaW50ZXJwb2xhdGVfbnVtYmVyQi5sYXN0SW5kZXg7XG4gICAgfVxuICAgIGlmIChiaSA8IGIubGVuZ3RoKSB7XG4gICAgICBicyA9IGIuc2xpY2UoYmkpO1xuICAgICAgaWYgKHNbaV0pIHNbaV0gKz0gYnM7IGVsc2Ugc1srK2ldID0gYnM7XG4gICAgfVxuICAgIHJldHVybiBzLmxlbmd0aCA8IDIgPyBxWzBdID8gKGIgPSBxWzBdLngsIGZ1bmN0aW9uKHQpIHtcbiAgICAgIHJldHVybiBiKHQpICsgXCJcIjtcbiAgICB9KSA6IGZ1bmN0aW9uKCkge1xuICAgICAgcmV0dXJuIGI7XG4gICAgfSA6IChiID0gcS5sZW5ndGgsIGZ1bmN0aW9uKHQpIHtcbiAgICAgIGZvciAodmFyIGkgPSAwLCBvOyBpIDwgYjsgKytpKSBzWyhvID0gcVtpXSkuaV0gPSBvLngodCk7XG4gICAgICByZXR1cm4gcy5qb2luKFwiXCIpO1xuICAgIH0pO1xuICB9XG4gIHZhciBkM19pbnRlcnBvbGF0ZV9udW1iZXJBID0gL1stK10/KD86XFxkK1xcLj9cXGQqfFxcLj9cXGQrKSg/OltlRV1bLStdP1xcZCspPy9nLCBkM19pbnRlcnBvbGF0ZV9udW1iZXJCID0gbmV3IFJlZ0V4cChkM19pbnRlcnBvbGF0ZV9udW1iZXJBLnNvdXJjZSwgXCJnXCIpO1xuICBkMy5pbnRlcnBvbGF0ZSA9IGQzX2ludGVycG9sYXRlO1xuICBmdW5jdGlvbiBkM19pbnRlcnBvbGF0ZShhLCBiKSB7XG4gICAgdmFyIGkgPSBkMy5pbnRlcnBvbGF0b3JzLmxlbmd0aCwgZjtcbiAgICB3aGlsZSAoLS1pID49IDAgJiYgIShmID0gZDMuaW50ZXJwb2xhdG9yc1tpXShhLCBiKSkpIDtcbiAgICByZXR1cm4gZjtcbiAgfVxuICBkMy5pbnRlcnBvbGF0b3JzID0gWyBmdW5jdGlvbihhLCBiKSB7XG4gICAgdmFyIHQgPSB0eXBlb2YgYjtcbiAgICByZXR1cm4gKHQgPT09IFwic3RyaW5nXCIgPyBkM19yZ2JfbmFtZXMuaGFzKGIudG9Mb3dlckNhc2UoKSkgfHwgL14oI3xyZ2JcXCh8aHNsXFwoKS9pLnRlc3QoYikgPyBkM19pbnRlcnBvbGF0ZVJnYiA6IGQzX2ludGVycG9sYXRlU3RyaW5nIDogYiBpbnN0YW5jZW9mIGQzX2NvbG9yID8gZDNfaW50ZXJwb2xhdGVSZ2IgOiBBcnJheS5pc0FycmF5KGIpID8gZDNfaW50ZXJwb2xhdGVBcnJheSA6IHQgPT09IFwib2JqZWN0XCIgJiYgaXNOYU4oYikgPyBkM19pbnRlcnBvbGF0ZU9iamVjdCA6IGQzX2ludGVycG9sYXRlTnVtYmVyKShhLCBiKTtcbiAgfSBdO1xuICBkMy5pbnRlcnBvbGF0ZUFycmF5ID0gZDNfaW50ZXJwb2xhdGVBcnJheTtcbiAgZnVuY3Rpb24gZDNfaW50ZXJwb2xhdGVBcnJheShhLCBiKSB7XG4gICAgdmFyIHggPSBbXSwgYyA9IFtdLCBuYSA9IGEubGVuZ3RoLCBuYiA9IGIubGVuZ3RoLCBuMCA9IE1hdGgubWluKGEubGVuZ3RoLCBiLmxlbmd0aCksIGk7XG4gICAgZm9yIChpID0gMDsgaSA8IG4wOyArK2kpIHgucHVzaChkM19pbnRlcnBvbGF0ZShhW2ldLCBiW2ldKSk7XG4gICAgZm9yICg7aSA8IG5hOyArK2kpIGNbaV0gPSBhW2ldO1xuICAgIGZvciAoO2kgPCBuYjsgKytpKSBjW2ldID0gYltpXTtcbiAgICByZXR1cm4gZnVuY3Rpb24odCkge1xuICAgICAgZm9yIChpID0gMDsgaSA8IG4wOyArK2kpIGNbaV0gPSB4W2ldKHQpO1xuICAgICAgcmV0dXJuIGM7XG4gICAgfTtcbiAgfVxuICB2YXIgZDNfZWFzZV9kZWZhdWx0ID0gZnVuY3Rpb24oKSB7XG4gICAgcmV0dXJuIGQzX2lkZW50aXR5O1xuICB9O1xuICB2YXIgZDNfZWFzZSA9IGQzLm1hcCh7XG4gICAgbGluZWFyOiBkM19lYXNlX2RlZmF1bHQsXG4gICAgcG9seTogZDNfZWFzZV9wb2x5LFxuICAgIHF1YWQ6IGZ1bmN0aW9uKCkge1xuICAgICAgcmV0dXJuIGQzX2Vhc2VfcXVhZDtcbiAgICB9LFxuICAgIGN1YmljOiBmdW5jdGlvbigpIHtcbiAgICAgIHJldHVybiBkM19lYXNlX2N1YmljO1xuICAgIH0sXG4gICAgc2luOiBmdW5jdGlvbigpIHtcbiAgICAgIHJldHVybiBkM19lYXNlX3NpbjtcbiAgICB9LFxuICAgIGV4cDogZnVuY3Rpb24oKSB7XG4gICAgICByZXR1cm4gZDNfZWFzZV9leHA7XG4gICAgfSxcbiAgICBjaXJjbGU6IGZ1bmN0aW9uKCkge1xuICAgICAgcmV0dXJuIGQzX2Vhc2VfY2lyY2xlO1xuICAgIH0sXG4gICAgZWxhc3RpYzogZDNfZWFzZV9lbGFzdGljLFxuICAgIGJhY2s6IGQzX2Vhc2VfYmFjayxcbiAgICBib3VuY2U6IGZ1bmN0aW9uKCkge1xuICAgICAgcmV0dXJuIGQzX2Vhc2VfYm91bmNlO1xuICAgIH1cbiAgfSk7XG4gIHZhciBkM19lYXNlX21vZGUgPSBkMy5tYXAoe1xuICAgIFwiaW5cIjogZDNfaWRlbnRpdHksXG4gICAgb3V0OiBkM19lYXNlX3JldmVyc2UsXG4gICAgXCJpbi1vdXRcIjogZDNfZWFzZV9yZWZsZWN0LFxuICAgIFwib3V0LWluXCI6IGZ1bmN0aW9uKGYpIHtcbiAgICAgIHJldHVybiBkM19lYXNlX3JlZmxlY3QoZDNfZWFzZV9yZXZlcnNlKGYpKTtcbiAgICB9XG4gIH0pO1xuICBkMy5lYXNlID0gZnVuY3Rpb24obmFtZSkge1xuICAgIHZhciBpID0gbmFtZS5pbmRleE9mKFwiLVwiKSwgdCA9IGkgPj0gMCA/IG5hbWUuc2xpY2UoMCwgaSkgOiBuYW1lLCBtID0gaSA+PSAwID8gbmFtZS5zbGljZShpICsgMSkgOiBcImluXCI7XG4gICAgdCA9IGQzX2Vhc2UuZ2V0KHQpIHx8IGQzX2Vhc2VfZGVmYXVsdDtcbiAgICBtID0gZDNfZWFzZV9tb2RlLmdldChtKSB8fCBkM19pZGVudGl0eTtcbiAgICByZXR1cm4gZDNfZWFzZV9jbGFtcChtKHQuYXBwbHkobnVsbCwgZDNfYXJyYXlTbGljZS5jYWxsKGFyZ3VtZW50cywgMSkpKSk7XG4gIH07XG4gIGZ1bmN0aW9uIGQzX2Vhc2VfY2xhbXAoZikge1xuICAgIHJldHVybiBmdW5jdGlvbih0KSB7XG4gICAgICByZXR1cm4gdCA8PSAwID8gMCA6IHQgPj0gMSA/IDEgOiBmKHQpO1xuICAgIH07XG4gIH1cbiAgZnVuY3Rpb24gZDNfZWFzZV9yZXZlcnNlKGYpIHtcbiAgICByZXR1cm4gZnVuY3Rpb24odCkge1xuICAgICAgcmV0dXJuIDEgLSBmKDEgLSB0KTtcbiAgICB9O1xuICB9XG4gIGZ1bmN0aW9uIGQzX2Vhc2VfcmVmbGVjdChmKSB7XG4gICAgcmV0dXJuIGZ1bmN0aW9uKHQpIHtcbiAgICAgIHJldHVybiAuNSAqICh0IDwgLjUgPyBmKDIgKiB0KSA6IDIgLSBmKDIgLSAyICogdCkpO1xuICAgIH07XG4gIH1cbiAgZnVuY3Rpb24gZDNfZWFzZV9xdWFkKHQpIHtcbiAgICByZXR1cm4gdCAqIHQ7XG4gIH1cbiAgZnVuY3Rpb24gZDNfZWFzZV9jdWJpYyh0KSB7XG4gICAgcmV0dXJuIHQgKiB0ICogdDtcbiAgfVxuICBmdW5jdGlvbiBkM19lYXNlX2N1YmljSW5PdXQodCkge1xuICAgIGlmICh0IDw9IDApIHJldHVybiAwO1xuICAgIGlmICh0ID49IDEpIHJldHVybiAxO1xuICAgIHZhciB0MiA9IHQgKiB0LCB0MyA9IHQyICogdDtcbiAgICByZXR1cm4gNCAqICh0IDwgLjUgPyB0MyA6IDMgKiAodCAtIHQyKSArIHQzIC0gLjc1KTtcbiAgfVxuICBmdW5jdGlvbiBkM19lYXNlX3BvbHkoZSkge1xuICAgIHJldHVybiBmdW5jdGlvbih0KSB7XG4gICAgICByZXR1cm4gTWF0aC5wb3codCwgZSk7XG4gICAgfTtcbiAgfVxuICBmdW5jdGlvbiBkM19lYXNlX3Npbih0KSB7XG4gICAgcmV0dXJuIDEgLSBNYXRoLmNvcyh0ICogaGFsZs+AKTtcbiAgfVxuICBmdW5jdGlvbiBkM19lYXNlX2V4cCh0KSB7XG4gICAgcmV0dXJuIE1hdGgucG93KDIsIDEwICogKHQgLSAxKSk7XG4gIH1cbiAgZnVuY3Rpb24gZDNfZWFzZV9jaXJjbGUodCkge1xuICAgIHJldHVybiAxIC0gTWF0aC5zcXJ0KDEgLSB0ICogdCk7XG4gIH1cbiAgZnVuY3Rpb24gZDNfZWFzZV9lbGFzdGljKGEsIHApIHtcbiAgICB2YXIgcztcbiAgICBpZiAoYXJndW1lbnRzLmxlbmd0aCA8IDIpIHAgPSAuNDU7XG4gICAgaWYgKGFyZ3VtZW50cy5sZW5ndGgpIHMgPSBwIC8gz4QgKiBNYXRoLmFzaW4oMSAvIGEpOyBlbHNlIGEgPSAxLCBzID0gcCAvIDQ7XG4gICAgcmV0dXJuIGZ1bmN0aW9uKHQpIHtcbiAgICAgIHJldHVybiAxICsgYSAqIE1hdGgucG93KDIsIC0xMCAqIHQpICogTWF0aC5zaW4oKHQgLSBzKSAqIM+EIC8gcCk7XG4gICAgfTtcbiAgfVxuICBmdW5jdGlvbiBkM19lYXNlX2JhY2socykge1xuICAgIGlmICghcykgcyA9IDEuNzAxNTg7XG4gICAgcmV0dXJuIGZ1bmN0aW9uKHQpIHtcbiAgICAgIHJldHVybiB0ICogdCAqICgocyArIDEpICogdCAtIHMpO1xuICAgIH07XG4gIH1cbiAgZnVuY3Rpb24gZDNfZWFzZV9ib3VuY2UodCkge1xuICAgIHJldHVybiB0IDwgMSAvIDIuNzUgPyA3LjU2MjUgKiB0ICogdCA6IHQgPCAyIC8gMi43NSA/IDcuNTYyNSAqICh0IC09IDEuNSAvIDIuNzUpICogdCArIC43NSA6IHQgPCAyLjUgLyAyLjc1ID8gNy41NjI1ICogKHQgLT0gMi4yNSAvIDIuNzUpICogdCArIC45Mzc1IDogNy41NjI1ICogKHQgLT0gMi42MjUgLyAyLjc1KSAqIHQgKyAuOTg0Mzc1O1xuICB9XG4gIGQzLmludGVycG9sYXRlSGNsID0gZDNfaW50ZXJwb2xhdGVIY2w7XG4gIGZ1bmN0aW9uIGQzX2ludGVycG9sYXRlSGNsKGEsIGIpIHtcbiAgICBhID0gZDMuaGNsKGEpO1xuICAgIGIgPSBkMy5oY2woYik7XG4gICAgdmFyIGFoID0gYS5oLCBhYyA9IGEuYywgYWwgPSBhLmwsIGJoID0gYi5oIC0gYWgsIGJjID0gYi5jIC0gYWMsIGJsID0gYi5sIC0gYWw7XG4gICAgaWYgKGlzTmFOKGJjKSkgYmMgPSAwLCBhYyA9IGlzTmFOKGFjKSA/IGIuYyA6IGFjO1xuICAgIGlmIChpc05hTihiaCkpIGJoID0gMCwgYWggPSBpc05hTihhaCkgPyBiLmggOiBhaDsgZWxzZSBpZiAoYmggPiAxODApIGJoIC09IDM2MDsgZWxzZSBpZiAoYmggPCAtMTgwKSBiaCArPSAzNjA7XG4gICAgcmV0dXJuIGZ1bmN0aW9uKHQpIHtcbiAgICAgIHJldHVybiBkM19oY2xfbGFiKGFoICsgYmggKiB0LCBhYyArIGJjICogdCwgYWwgKyBibCAqIHQpICsgXCJcIjtcbiAgICB9O1xuICB9XG4gIGQzLmludGVycG9sYXRlSHNsID0gZDNfaW50ZXJwb2xhdGVIc2w7XG4gIGZ1bmN0aW9uIGQzX2ludGVycG9sYXRlSHNsKGEsIGIpIHtcbiAgICBhID0gZDMuaHNsKGEpO1xuICAgIGIgPSBkMy5oc2woYik7XG4gICAgdmFyIGFoID0gYS5oLCBhcyA9IGEucywgYWwgPSBhLmwsIGJoID0gYi5oIC0gYWgsIGJzID0gYi5zIC0gYXMsIGJsID0gYi5sIC0gYWw7XG4gICAgaWYgKGlzTmFOKGJzKSkgYnMgPSAwLCBhcyA9IGlzTmFOKGFzKSA/IGIucyA6IGFzO1xuICAgIGlmIChpc05hTihiaCkpIGJoID0gMCwgYWggPSBpc05hTihhaCkgPyBiLmggOiBhaDsgZWxzZSBpZiAoYmggPiAxODApIGJoIC09IDM2MDsgZWxzZSBpZiAoYmggPCAtMTgwKSBiaCArPSAzNjA7XG4gICAgcmV0dXJuIGZ1bmN0aW9uKHQpIHtcbiAgICAgIHJldHVybiBkM19oc2xfcmdiKGFoICsgYmggKiB0LCBhcyArIGJzICogdCwgYWwgKyBibCAqIHQpICsgXCJcIjtcbiAgICB9O1xuICB9XG4gIGQzLmludGVycG9sYXRlTGFiID0gZDNfaW50ZXJwb2xhdGVMYWI7XG4gIGZ1bmN0aW9uIGQzX2ludGVycG9sYXRlTGFiKGEsIGIpIHtcbiAgICBhID0gZDMubGFiKGEpO1xuICAgIGIgPSBkMy5sYWIoYik7XG4gICAgdmFyIGFsID0gYS5sLCBhYSA9IGEuYSwgYWIgPSBhLmIsIGJsID0gYi5sIC0gYWwsIGJhID0gYi5hIC0gYWEsIGJiID0gYi5iIC0gYWI7XG4gICAgcmV0dXJuIGZ1bmN0aW9uKHQpIHtcbiAgICAgIHJldHVybiBkM19sYWJfcmdiKGFsICsgYmwgKiB0LCBhYSArIGJhICogdCwgYWIgKyBiYiAqIHQpICsgXCJcIjtcbiAgICB9O1xuICB9XG4gIGQzLmludGVycG9sYXRlUm91bmQgPSBkM19pbnRlcnBvbGF0ZVJvdW5kO1xuICBmdW5jdGlvbiBkM19pbnRlcnBvbGF0ZVJvdW5kKGEsIGIpIHtcbiAgICBiIC09IGE7XG4gICAgcmV0dXJuIGZ1bmN0aW9uKHQpIHtcbiAgICAgIHJldHVybiBNYXRoLnJvdW5kKGEgKyBiICogdCk7XG4gICAgfTtcbiAgfVxuICBkMy50cmFuc2Zvcm0gPSBmdW5jdGlvbihzdHJpbmcpIHtcbiAgICB2YXIgZyA9IGQzX2RvY3VtZW50LmNyZWF0ZUVsZW1lbnROUyhkMy5ucy5wcmVmaXguc3ZnLCBcImdcIik7XG4gICAgcmV0dXJuIChkMy50cmFuc2Zvcm0gPSBmdW5jdGlvbihzdHJpbmcpIHtcbiAgICAgIGlmIChzdHJpbmcgIT0gbnVsbCkge1xuICAgICAgICBnLnNldEF0dHJpYnV0ZShcInRyYW5zZm9ybVwiLCBzdHJpbmcpO1xuICAgICAgICB2YXIgdCA9IGcudHJhbnNmb3JtLmJhc2VWYWwuY29uc29saWRhdGUoKTtcbiAgICAgIH1cbiAgICAgIHJldHVybiBuZXcgZDNfdHJhbnNmb3JtKHQgPyB0Lm1hdHJpeCA6IGQzX3RyYW5zZm9ybUlkZW50aXR5KTtcbiAgICB9KShzdHJpbmcpO1xuICB9O1xuICBmdW5jdGlvbiBkM190cmFuc2Zvcm0obSkge1xuICAgIHZhciByMCA9IFsgbS5hLCBtLmIgXSwgcjEgPSBbIG0uYywgbS5kIF0sIGt4ID0gZDNfdHJhbnNmb3JtTm9ybWFsaXplKHIwKSwga3ogPSBkM190cmFuc2Zvcm1Eb3QocjAsIHIxKSwga3kgPSBkM190cmFuc2Zvcm1Ob3JtYWxpemUoZDNfdHJhbnNmb3JtQ29tYmluZShyMSwgcjAsIC1reikpIHx8IDA7XG4gICAgaWYgKHIwWzBdICogcjFbMV0gPCByMVswXSAqIHIwWzFdKSB7XG4gICAgICByMFswXSAqPSAtMTtcbiAgICAgIHIwWzFdICo9IC0xO1xuICAgICAga3ggKj0gLTE7XG4gICAgICBreiAqPSAtMTtcbiAgICB9XG4gICAgdGhpcy5yb3RhdGUgPSAoa3ggPyBNYXRoLmF0YW4yKHIwWzFdLCByMFswXSkgOiBNYXRoLmF0YW4yKC1yMVswXSwgcjFbMV0pKSAqIGQzX2RlZ3JlZXM7XG4gICAgdGhpcy50cmFuc2xhdGUgPSBbIG0uZSwgbS5mIF07XG4gICAgdGhpcy5zY2FsZSA9IFsga3gsIGt5IF07XG4gICAgdGhpcy5za2V3ID0ga3kgPyBNYXRoLmF0YW4yKGt6LCBreSkgKiBkM19kZWdyZWVzIDogMDtcbiAgfVxuICBkM190cmFuc2Zvcm0ucHJvdG90eXBlLnRvU3RyaW5nID0gZnVuY3Rpb24oKSB7XG4gICAgcmV0dXJuIFwidHJhbnNsYXRlKFwiICsgdGhpcy50cmFuc2xhdGUgKyBcIilyb3RhdGUoXCIgKyB0aGlzLnJvdGF0ZSArIFwiKXNrZXdYKFwiICsgdGhpcy5za2V3ICsgXCIpc2NhbGUoXCIgKyB0aGlzLnNjYWxlICsgXCIpXCI7XG4gIH07XG4gIGZ1bmN0aW9uIGQzX3RyYW5zZm9ybURvdChhLCBiKSB7XG4gICAgcmV0dXJuIGFbMF0gKiBiWzBdICsgYVsxXSAqIGJbMV07XG4gIH1cbiAgZnVuY3Rpb24gZDNfdHJhbnNmb3JtTm9ybWFsaXplKGEpIHtcbiAgICB2YXIgayA9IE1hdGguc3FydChkM190cmFuc2Zvcm1Eb3QoYSwgYSkpO1xuICAgIGlmIChrKSB7XG4gICAgICBhWzBdIC89IGs7XG4gICAgICBhWzFdIC89IGs7XG4gICAgfVxuICAgIHJldHVybiBrO1xuICB9XG4gIGZ1bmN0aW9uIGQzX3RyYW5zZm9ybUNvbWJpbmUoYSwgYiwgaykge1xuICAgIGFbMF0gKz0gayAqIGJbMF07XG4gICAgYVsxXSArPSBrICogYlsxXTtcbiAgICByZXR1cm4gYTtcbiAgfVxuICB2YXIgZDNfdHJhbnNmb3JtSWRlbnRpdHkgPSB7XG4gICAgYTogMSxcbiAgICBiOiAwLFxuICAgIGM6IDAsXG4gICAgZDogMSxcbiAgICBlOiAwLFxuICAgIGY6IDBcbiAgfTtcbiAgZDMuaW50ZXJwb2xhdGVUcmFuc2Zvcm0gPSBkM19pbnRlcnBvbGF0ZVRyYW5zZm9ybTtcbiAgZnVuY3Rpb24gZDNfaW50ZXJwb2xhdGVUcmFuc2Zvcm1Qb3Aocykge1xuICAgIHJldHVybiBzLmxlbmd0aCA/IHMucG9wKCkgKyBcIixcIiA6IFwiXCI7XG4gIH1cbiAgZnVuY3Rpb24gZDNfaW50ZXJwb2xhdGVUcmFuc2xhdGUodGEsIHRiLCBzLCBxKSB7XG4gICAgaWYgKHRhWzBdICE9PSB0YlswXSB8fCB0YVsxXSAhPT0gdGJbMV0pIHtcbiAgICAgIHZhciBpID0gcy5wdXNoKFwidHJhbnNsYXRlKFwiLCBudWxsLCBcIixcIiwgbnVsbCwgXCIpXCIpO1xuICAgICAgcS5wdXNoKHtcbiAgICAgICAgaTogaSAtIDQsXG4gICAgICAgIHg6IGQzX2ludGVycG9sYXRlTnVtYmVyKHRhWzBdLCB0YlswXSlcbiAgICAgIH0sIHtcbiAgICAgICAgaTogaSAtIDIsXG4gICAgICAgIHg6IGQzX2ludGVycG9sYXRlTnVtYmVyKHRhWzFdLCB0YlsxXSlcbiAgICAgIH0pO1xuICAgIH0gZWxzZSBpZiAodGJbMF0gfHwgdGJbMV0pIHtcbiAgICAgIHMucHVzaChcInRyYW5zbGF0ZShcIiArIHRiICsgXCIpXCIpO1xuICAgIH1cbiAgfVxuICBmdW5jdGlvbiBkM19pbnRlcnBvbGF0ZVJvdGF0ZShyYSwgcmIsIHMsIHEpIHtcbiAgICBpZiAocmEgIT09IHJiKSB7XG4gICAgICBpZiAocmEgLSByYiA+IDE4MCkgcmIgKz0gMzYwOyBlbHNlIGlmIChyYiAtIHJhID4gMTgwKSByYSArPSAzNjA7XG4gICAgICBxLnB1c2goe1xuICAgICAgICBpOiBzLnB1c2goZDNfaW50ZXJwb2xhdGVUcmFuc2Zvcm1Qb3AocykgKyBcInJvdGF0ZShcIiwgbnVsbCwgXCIpXCIpIC0gMixcbiAgICAgICAgeDogZDNfaW50ZXJwb2xhdGVOdW1iZXIocmEsIHJiKVxuICAgICAgfSk7XG4gICAgfSBlbHNlIGlmIChyYikge1xuICAgICAgcy5wdXNoKGQzX2ludGVycG9sYXRlVHJhbnNmb3JtUG9wKHMpICsgXCJyb3RhdGUoXCIgKyByYiArIFwiKVwiKTtcbiAgICB9XG4gIH1cbiAgZnVuY3Rpb24gZDNfaW50ZXJwb2xhdGVTa2V3KHdhLCB3YiwgcywgcSkge1xuICAgIGlmICh3YSAhPT0gd2IpIHtcbiAgICAgIHEucHVzaCh7XG4gICAgICAgIGk6IHMucHVzaChkM19pbnRlcnBvbGF0ZVRyYW5zZm9ybVBvcChzKSArIFwic2tld1goXCIsIG51bGwsIFwiKVwiKSAtIDIsXG4gICAgICAgIHg6IGQzX2ludGVycG9sYXRlTnVtYmVyKHdhLCB3YilcbiAgICAgIH0pO1xuICAgIH0gZWxzZSBpZiAod2IpIHtcbiAgICAgIHMucHVzaChkM19pbnRlcnBvbGF0ZVRyYW5zZm9ybVBvcChzKSArIFwic2tld1goXCIgKyB3YiArIFwiKVwiKTtcbiAgICB9XG4gIH1cbiAgZnVuY3Rpb24gZDNfaW50ZXJwb2xhdGVTY2FsZShrYSwga2IsIHMsIHEpIHtcbiAgICBpZiAoa2FbMF0gIT09IGtiWzBdIHx8IGthWzFdICE9PSBrYlsxXSkge1xuICAgICAgdmFyIGkgPSBzLnB1c2goZDNfaW50ZXJwb2xhdGVUcmFuc2Zvcm1Qb3AocykgKyBcInNjYWxlKFwiLCBudWxsLCBcIixcIiwgbnVsbCwgXCIpXCIpO1xuICAgICAgcS5wdXNoKHtcbiAgICAgICAgaTogaSAtIDQsXG4gICAgICAgIHg6IGQzX2ludGVycG9sYXRlTnVtYmVyKGthWzBdLCBrYlswXSlcbiAgICAgIH0sIHtcbiAgICAgICAgaTogaSAtIDIsXG4gICAgICAgIHg6IGQzX2ludGVycG9sYXRlTnVtYmVyKGthWzFdLCBrYlsxXSlcbiAgICAgIH0pO1xuICAgIH0gZWxzZSBpZiAoa2JbMF0gIT09IDEgfHwga2JbMV0gIT09IDEpIHtcbiAgICAgIHMucHVzaChkM19pbnRlcnBvbGF0ZVRyYW5zZm9ybVBvcChzKSArIFwic2NhbGUoXCIgKyBrYiArIFwiKVwiKTtcbiAgICB9XG4gIH1cbiAgZnVuY3Rpb24gZDNfaW50ZXJwb2xhdGVUcmFuc2Zvcm0oYSwgYikge1xuICAgIHZhciBzID0gW10sIHEgPSBbXTtcbiAgICBhID0gZDMudHJhbnNmb3JtKGEpLCBiID0gZDMudHJhbnNmb3JtKGIpO1xuICAgIGQzX2ludGVycG9sYXRlVHJhbnNsYXRlKGEudHJhbnNsYXRlLCBiLnRyYW5zbGF0ZSwgcywgcSk7XG4gICAgZDNfaW50ZXJwb2xhdGVSb3RhdGUoYS5yb3RhdGUsIGIucm90YXRlLCBzLCBxKTtcbiAgICBkM19pbnRlcnBvbGF0ZVNrZXcoYS5za2V3LCBiLnNrZXcsIHMsIHEpO1xuICAgIGQzX2ludGVycG9sYXRlU2NhbGUoYS5zY2FsZSwgYi5zY2FsZSwgcywgcSk7XG4gICAgYSA9IGIgPSBudWxsO1xuICAgIHJldHVybiBmdW5jdGlvbih0KSB7XG4gICAgICB2YXIgaSA9IC0xLCBuID0gcS5sZW5ndGgsIG87XG4gICAgICB3aGlsZSAoKytpIDwgbikgc1sobyA9IHFbaV0pLmldID0gby54KHQpO1xuICAgICAgcmV0dXJuIHMuam9pbihcIlwiKTtcbiAgICB9O1xuICB9XG4gIGZ1bmN0aW9uIGQzX3VuaW50ZXJwb2xhdGVOdW1iZXIoYSwgYikge1xuICAgIGIgPSAoYiAtPSBhID0gK2EpIHx8IDEgLyBiO1xuICAgIHJldHVybiBmdW5jdGlvbih4KSB7XG4gICAgICByZXR1cm4gKHggLSBhKSAvIGI7XG4gICAgfTtcbiAgfVxuICBmdW5jdGlvbiBkM191bmludGVycG9sYXRlQ2xhbXAoYSwgYikge1xuICAgIGIgPSAoYiAtPSBhID0gK2EpIHx8IDEgLyBiO1xuICAgIHJldHVybiBmdW5jdGlvbih4KSB7XG4gICAgICByZXR1cm4gTWF0aC5tYXgoMCwgTWF0aC5taW4oMSwgKHggLSBhKSAvIGIpKTtcbiAgICB9O1xuICB9XG4gIGQzLmxheW91dCA9IHt9O1xuICBkMy5sYXlvdXQuYnVuZGxlID0gZnVuY3Rpb24oKSB7XG4gICAgcmV0dXJuIGZ1bmN0aW9uKGxpbmtzKSB7XG4gICAgICB2YXIgcGF0aHMgPSBbXSwgaSA9IC0xLCBuID0gbGlua3MubGVuZ3RoO1xuICAgICAgd2hpbGUgKCsraSA8IG4pIHBhdGhzLnB1c2goZDNfbGF5b3V0X2J1bmRsZVBhdGgobGlua3NbaV0pKTtcbiAgICAgIHJldHVybiBwYXRocztcbiAgICB9O1xuICB9O1xuICBmdW5jdGlvbiBkM19sYXlvdXRfYnVuZGxlUGF0aChsaW5rKSB7XG4gICAgdmFyIHN0YXJ0ID0gbGluay5zb3VyY2UsIGVuZCA9IGxpbmsudGFyZ2V0LCBsY2EgPSBkM19sYXlvdXRfYnVuZGxlTGVhc3RDb21tb25BbmNlc3RvcihzdGFydCwgZW5kKSwgcG9pbnRzID0gWyBzdGFydCBdO1xuICAgIHdoaWxlIChzdGFydCAhPT0gbGNhKSB7XG4gICAgICBzdGFydCA9IHN0YXJ0LnBhcmVudDtcbiAgICAgIHBvaW50cy5wdXNoKHN0YXJ0KTtcbiAgICB9XG4gICAgdmFyIGsgPSBwb2ludHMubGVuZ3RoO1xuICAgIHdoaWxlIChlbmQgIT09IGxjYSkge1xuICAgICAgcG9pbnRzLnNwbGljZShrLCAwLCBlbmQpO1xuICAgICAgZW5kID0gZW5kLnBhcmVudDtcbiAgICB9XG4gICAgcmV0dXJuIHBvaW50cztcbiAgfVxuICBmdW5jdGlvbiBkM19sYXlvdXRfYnVuZGxlQW5jZXN0b3JzKG5vZGUpIHtcbiAgICB2YXIgYW5jZXN0b3JzID0gW10sIHBhcmVudCA9IG5vZGUucGFyZW50O1xuICAgIHdoaWxlIChwYXJlbnQgIT0gbnVsbCkge1xuICAgICAgYW5jZXN0b3JzLnB1c2gobm9kZSk7XG4gICAgICBub2RlID0gcGFyZW50O1xuICAgICAgcGFyZW50ID0gcGFyZW50LnBhcmVudDtcbiAgICB9XG4gICAgYW5jZXN0b3JzLnB1c2gobm9kZSk7XG4gICAgcmV0dXJuIGFuY2VzdG9ycztcbiAgfVxuICBmdW5jdGlvbiBkM19sYXlvdXRfYnVuZGxlTGVhc3RDb21tb25BbmNlc3RvcihhLCBiKSB7XG4gICAgaWYgKGEgPT09IGIpIHJldHVybiBhO1xuICAgIHZhciBhTm9kZXMgPSBkM19sYXlvdXRfYnVuZGxlQW5jZXN0b3JzKGEpLCBiTm9kZXMgPSBkM19sYXlvdXRfYnVuZGxlQW5jZXN0b3JzKGIpLCBhTm9kZSA9IGFOb2Rlcy5wb3AoKSwgYk5vZGUgPSBiTm9kZXMucG9wKCksIHNoYXJlZE5vZGUgPSBudWxsO1xuICAgIHdoaWxlIChhTm9kZSA9PT0gYk5vZGUpIHtcbiAgICAgIHNoYXJlZE5vZGUgPSBhTm9kZTtcbiAgICAgIGFOb2RlID0gYU5vZGVzLnBvcCgpO1xuICAgICAgYk5vZGUgPSBiTm9kZXMucG9wKCk7XG4gICAgfVxuICAgIHJldHVybiBzaGFyZWROb2RlO1xuICB9XG4gIGQzLmxheW91dC5jaG9yZCA9IGZ1bmN0aW9uKCkge1xuICAgIHZhciBjaG9yZCA9IHt9LCBjaG9yZHMsIGdyb3VwcywgbWF0cml4LCBuLCBwYWRkaW5nID0gMCwgc29ydEdyb3Vwcywgc29ydFN1Ymdyb3Vwcywgc29ydENob3JkcztcbiAgICBmdW5jdGlvbiByZWxheW91dCgpIHtcbiAgICAgIHZhciBzdWJncm91cHMgPSB7fSwgZ3JvdXBTdW1zID0gW10sIGdyb3VwSW5kZXggPSBkMy5yYW5nZShuKSwgc3ViZ3JvdXBJbmRleCA9IFtdLCBrLCB4LCB4MCwgaSwgajtcbiAgICAgIGNob3JkcyA9IFtdO1xuICAgICAgZ3JvdXBzID0gW107XG4gICAgICBrID0gMCwgaSA9IC0xO1xuICAgICAgd2hpbGUgKCsraSA8IG4pIHtcbiAgICAgICAgeCA9IDAsIGogPSAtMTtcbiAgICAgICAgd2hpbGUgKCsraiA8IG4pIHtcbiAgICAgICAgICB4ICs9IG1hdHJpeFtpXVtqXTtcbiAgICAgICAgfVxuICAgICAgICBncm91cFN1bXMucHVzaCh4KTtcbiAgICAgICAgc3ViZ3JvdXBJbmRleC5wdXNoKGQzLnJhbmdlKG4pKTtcbiAgICAgICAgayArPSB4O1xuICAgICAgfVxuICAgICAgaWYgKHNvcnRHcm91cHMpIHtcbiAgICAgICAgZ3JvdXBJbmRleC5zb3J0KGZ1bmN0aW9uKGEsIGIpIHtcbiAgICAgICAgICByZXR1cm4gc29ydEdyb3Vwcyhncm91cFN1bXNbYV0sIGdyb3VwU3Vtc1tiXSk7XG4gICAgICAgIH0pO1xuICAgICAgfVxuICAgICAgaWYgKHNvcnRTdWJncm91cHMpIHtcbiAgICAgICAgc3ViZ3JvdXBJbmRleC5mb3JFYWNoKGZ1bmN0aW9uKGQsIGkpIHtcbiAgICAgICAgICBkLnNvcnQoZnVuY3Rpb24oYSwgYikge1xuICAgICAgICAgICAgcmV0dXJuIHNvcnRTdWJncm91cHMobWF0cml4W2ldW2FdLCBtYXRyaXhbaV1bYl0pO1xuICAgICAgICAgIH0pO1xuICAgICAgICB9KTtcbiAgICAgIH1cbiAgICAgIGsgPSAoz4QgLSBwYWRkaW5nICogbikgLyBrO1xuICAgICAgeCA9IDAsIGkgPSAtMTtcbiAgICAgIHdoaWxlICgrK2kgPCBuKSB7XG4gICAgICAgIHgwID0geCwgaiA9IC0xO1xuICAgICAgICB3aGlsZSAoKytqIDwgbikge1xuICAgICAgICAgIHZhciBkaSA9IGdyb3VwSW5kZXhbaV0sIGRqID0gc3ViZ3JvdXBJbmRleFtkaV1bal0sIHYgPSBtYXRyaXhbZGldW2RqXSwgYTAgPSB4LCBhMSA9IHggKz0gdiAqIGs7XG4gICAgICAgICAgc3ViZ3JvdXBzW2RpICsgXCItXCIgKyBkal0gPSB7XG4gICAgICAgICAgICBpbmRleDogZGksXG4gICAgICAgICAgICBzdWJpbmRleDogZGosXG4gICAgICAgICAgICBzdGFydEFuZ2xlOiBhMCxcbiAgICAgICAgICAgIGVuZEFuZ2xlOiBhMSxcbiAgICAgICAgICAgIHZhbHVlOiB2XG4gICAgICAgICAgfTtcbiAgICAgICAgfVxuICAgICAgICBncm91cHNbZGldID0ge1xuICAgICAgICAgIGluZGV4OiBkaSxcbiAgICAgICAgICBzdGFydEFuZ2xlOiB4MCxcbiAgICAgICAgICBlbmRBbmdsZTogeCxcbiAgICAgICAgICB2YWx1ZTogZ3JvdXBTdW1zW2RpXVxuICAgICAgICB9O1xuICAgICAgICB4ICs9IHBhZGRpbmc7XG4gICAgICB9XG4gICAgICBpID0gLTE7XG4gICAgICB3aGlsZSAoKytpIDwgbikge1xuICAgICAgICBqID0gaSAtIDE7XG4gICAgICAgIHdoaWxlICgrK2ogPCBuKSB7XG4gICAgICAgICAgdmFyIHNvdXJjZSA9IHN1Ymdyb3Vwc1tpICsgXCItXCIgKyBqXSwgdGFyZ2V0ID0gc3ViZ3JvdXBzW2ogKyBcIi1cIiArIGldO1xuICAgICAgICAgIGlmIChzb3VyY2UudmFsdWUgfHwgdGFyZ2V0LnZhbHVlKSB7XG4gICAgICAgICAgICBjaG9yZHMucHVzaChzb3VyY2UudmFsdWUgPCB0YXJnZXQudmFsdWUgPyB7XG4gICAgICAgICAgICAgIHNvdXJjZTogdGFyZ2V0LFxuICAgICAgICAgICAgICB0YXJnZXQ6IHNvdXJjZVxuICAgICAgICAgICAgfSA6IHtcbiAgICAgICAgICAgICAgc291cmNlOiBzb3VyY2UsXG4gICAgICAgICAgICAgIHRhcmdldDogdGFyZ2V0XG4gICAgICAgICAgICB9KTtcbiAgICAgICAgICB9XG4gICAgICAgIH1cbiAgICAgIH1cbiAgICAgIGlmIChzb3J0Q2hvcmRzKSByZXNvcnQoKTtcbiAgICB9XG4gICAgZnVuY3Rpb24gcmVzb3J0KCkge1xuICAgICAgY2hvcmRzLnNvcnQoZnVuY3Rpb24oYSwgYikge1xuICAgICAgICByZXR1cm4gc29ydENob3JkcygoYS5zb3VyY2UudmFsdWUgKyBhLnRhcmdldC52YWx1ZSkgLyAyLCAoYi5zb3VyY2UudmFsdWUgKyBiLnRhcmdldC52YWx1ZSkgLyAyKTtcbiAgICAgIH0pO1xuICAgIH1cbiAgICBjaG9yZC5tYXRyaXggPSBmdW5jdGlvbih4KSB7XG4gICAgICBpZiAoIWFyZ3VtZW50cy5sZW5ndGgpIHJldHVybiBtYXRyaXg7XG4gICAgICBuID0gKG1hdHJpeCA9IHgpICYmIG1hdHJpeC5sZW5ndGg7XG4gICAgICBjaG9yZHMgPSBncm91cHMgPSBudWxsO1xuICAgICAgcmV0dXJuIGNob3JkO1xuICAgIH07XG4gICAgY2hvcmQucGFkZGluZyA9IGZ1bmN0aW9uKHgpIHtcbiAgICAgIGlmICghYXJndW1lbnRzLmxlbmd0aCkgcmV0dXJuIHBhZGRpbmc7XG4gICAgICBwYWRkaW5nID0geDtcbiAgICAgIGNob3JkcyA9IGdyb3VwcyA9IG51bGw7XG4gICAgICByZXR1cm4gY2hvcmQ7XG4gICAgfTtcbiAgICBjaG9yZC5zb3J0R3JvdXBzID0gZnVuY3Rpb24oeCkge1xuICAgICAgaWYgKCFhcmd1bWVudHMubGVuZ3RoKSByZXR1cm4gc29ydEdyb3VwcztcbiAgICAgIHNvcnRHcm91cHMgPSB4O1xuICAgICAgY2hvcmRzID0gZ3JvdXBzID0gbnVsbDtcbiAgICAgIHJldHVybiBjaG9yZDtcbiAgICB9O1xuICAgIGNob3JkLnNvcnRTdWJncm91cHMgPSBmdW5jdGlvbih4KSB7XG4gICAgICBpZiAoIWFyZ3VtZW50cy5sZW5ndGgpIHJldHVybiBzb3J0U3ViZ3JvdXBzO1xuICAgICAgc29ydFN1Ymdyb3VwcyA9IHg7XG4gICAgICBjaG9yZHMgPSBudWxsO1xuICAgICAgcmV0dXJuIGNob3JkO1xuICAgIH07XG4gICAgY2hvcmQuc29ydENob3JkcyA9IGZ1bmN0aW9uKHgpIHtcbiAgICAgIGlmICghYXJndW1lbnRzLmxlbmd0aCkgcmV0dXJuIHNvcnRDaG9yZHM7XG4gICAgICBzb3J0Q2hvcmRzID0geDtcbiAgICAgIGlmIChjaG9yZHMpIHJlc29ydCgpO1xuICAgICAgcmV0dXJuIGNob3JkO1xuICAgIH07XG4gICAgY2hvcmQuY2hvcmRzID0gZnVuY3Rpb24oKSB7XG4gICAgICBpZiAoIWNob3JkcykgcmVsYXlvdXQoKTtcbiAgICAgIHJldHVybiBjaG9yZHM7XG4gICAgfTtcbiAgICBjaG9yZC5ncm91cHMgPSBmdW5jdGlvbigpIHtcbiAgICAgIGlmICghZ3JvdXBzKSByZWxheW91dCgpO1xuICAgICAgcmV0dXJuIGdyb3VwcztcbiAgICB9O1xuICAgIHJldHVybiBjaG9yZDtcbiAgfTtcbiAgZDMubGF5b3V0LmZvcmNlID0gZnVuY3Rpb24oKSB7XG4gICAgdmFyIGZvcmNlID0ge30sIGV2ZW50ID0gZDMuZGlzcGF0Y2goXCJzdGFydFwiLCBcInRpY2tcIiwgXCJlbmRcIiksIHRpbWVyLCBzaXplID0gWyAxLCAxIF0sIGRyYWcsIGFscGhhLCBmcmljdGlvbiA9IC45LCBsaW5rRGlzdGFuY2UgPSBkM19sYXlvdXRfZm9yY2VMaW5rRGlzdGFuY2UsIGxpbmtTdHJlbmd0aCA9IGQzX2xheW91dF9mb3JjZUxpbmtTdHJlbmd0aCwgY2hhcmdlID0gLTMwLCBjaGFyZ2VEaXN0YW5jZTIgPSBkM19sYXlvdXRfZm9yY2VDaGFyZ2VEaXN0YW5jZTIsIGdyYXZpdHkgPSAuMSwgdGhldGEyID0gLjY0LCBub2RlcyA9IFtdLCBsaW5rcyA9IFtdLCBkaXN0YW5jZXMsIHN0cmVuZ3RocywgY2hhcmdlcztcbiAgICBmdW5jdGlvbiByZXB1bHNlKG5vZGUpIHtcbiAgICAgIHJldHVybiBmdW5jdGlvbihxdWFkLCB4MSwgXywgeDIpIHtcbiAgICAgICAgaWYgKHF1YWQucG9pbnQgIT09IG5vZGUpIHtcbiAgICAgICAgICB2YXIgZHggPSBxdWFkLmN4IC0gbm9kZS54LCBkeSA9IHF1YWQuY3kgLSBub2RlLnksIGR3ID0geDIgLSB4MSwgZG4gPSBkeCAqIGR4ICsgZHkgKiBkeTtcbiAgICAgICAgICBpZiAoZHcgKiBkdyAvIHRoZXRhMiA8IGRuKSB7XG4gICAgICAgICAgICBpZiAoZG4gPCBjaGFyZ2VEaXN0YW5jZTIpIHtcbiAgICAgICAgICAgICAgdmFyIGsgPSBxdWFkLmNoYXJnZSAvIGRuO1xuICAgICAgICAgICAgICBub2RlLnB4IC09IGR4ICogaztcbiAgICAgICAgICAgICAgbm9kZS5weSAtPSBkeSAqIGs7XG4gICAgICAgICAgICB9XG4gICAgICAgICAgICByZXR1cm4gdHJ1ZTtcbiAgICAgICAgICB9XG4gICAgICAgICAgaWYgKHF1YWQucG9pbnQgJiYgZG4gJiYgZG4gPCBjaGFyZ2VEaXN0YW5jZTIpIHtcbiAgICAgICAgICAgIHZhciBrID0gcXVhZC5wb2ludENoYXJnZSAvIGRuO1xuICAgICAgICAgICAgbm9kZS5weCAtPSBkeCAqIGs7XG4gICAgICAgICAgICBub2RlLnB5IC09IGR5ICogaztcbiAgICAgICAgICB9XG4gICAgICAgIH1cbiAgICAgICAgcmV0dXJuICFxdWFkLmNoYXJnZTtcbiAgICAgIH07XG4gICAgfVxuICAgIGZvcmNlLnRpY2sgPSBmdW5jdGlvbigpIHtcbiAgICAgIGlmICgoYWxwaGEgKj0gLjk5KSA8IC4wMDUpIHtcbiAgICAgICAgdGltZXIgPSBudWxsO1xuICAgICAgICBldmVudC5lbmQoe1xuICAgICAgICAgIHR5cGU6IFwiZW5kXCIsXG4gICAgICAgICAgYWxwaGE6IGFscGhhID0gMFxuICAgICAgICB9KTtcbiAgICAgICAgcmV0dXJuIHRydWU7XG4gICAgICB9XG4gICAgICB2YXIgbiA9IG5vZGVzLmxlbmd0aCwgbSA9IGxpbmtzLmxlbmd0aCwgcSwgaSwgbywgcywgdCwgbCwgaywgeCwgeTtcbiAgICAgIGZvciAoaSA9IDA7IGkgPCBtOyArK2kpIHtcbiAgICAgICAgbyA9IGxpbmtzW2ldO1xuICAgICAgICBzID0gby5zb3VyY2U7XG4gICAgICAgIHQgPSBvLnRhcmdldDtcbiAgICAgICAgeCA9IHQueCAtIHMueDtcbiAgICAgICAgeSA9IHQueSAtIHMueTtcbiAgICAgICAgaWYgKGwgPSB4ICogeCArIHkgKiB5KSB7XG4gICAgICAgICAgbCA9IGFscGhhICogc3RyZW5ndGhzW2ldICogKChsID0gTWF0aC5zcXJ0KGwpKSAtIGRpc3RhbmNlc1tpXSkgLyBsO1xuICAgICAgICAgIHggKj0gbDtcbiAgICAgICAgICB5ICo9IGw7XG4gICAgICAgICAgdC54IC09IHggKiAoayA9IHMud2VpZ2h0ICsgdC53ZWlnaHQgPyBzLndlaWdodCAvIChzLndlaWdodCArIHQud2VpZ2h0KSA6IC41KTtcbiAgICAgICAgICB0LnkgLT0geSAqIGs7XG4gICAgICAgICAgcy54ICs9IHggKiAoayA9IDEgLSBrKTtcbiAgICAgICAgICBzLnkgKz0geSAqIGs7XG4gICAgICAgIH1cbiAgICAgIH1cbiAgICAgIGlmIChrID0gYWxwaGEgKiBncmF2aXR5KSB7XG4gICAgICAgIHggPSBzaXplWzBdIC8gMjtcbiAgICAgICAgeSA9IHNpemVbMV0gLyAyO1xuICAgICAgICBpID0gLTE7XG4gICAgICAgIGlmIChrKSB3aGlsZSAoKytpIDwgbikge1xuICAgICAgICAgIG8gPSBub2Rlc1tpXTtcbiAgICAgICAgICBvLnggKz0gKHggLSBvLngpICogaztcbiAgICAgICAgICBvLnkgKz0gKHkgLSBvLnkpICogaztcbiAgICAgICAgfVxuICAgICAgfVxuICAgICAgaWYgKGNoYXJnZSkge1xuICAgICAgICBkM19sYXlvdXRfZm9yY2VBY2N1bXVsYXRlKHEgPSBkMy5nZW9tLnF1YWR0cmVlKG5vZGVzKSwgYWxwaGEsIGNoYXJnZXMpO1xuICAgICAgICBpID0gLTE7XG4gICAgICAgIHdoaWxlICgrK2kgPCBuKSB7XG4gICAgICAgICAgaWYgKCEobyA9IG5vZGVzW2ldKS5maXhlZCkge1xuICAgICAgICAgICAgcS52aXNpdChyZXB1bHNlKG8pKTtcbiAgICAgICAgICB9XG4gICAgICAgIH1cbiAgICAgIH1cbiAgICAgIGkgPSAtMTtcbiAgICAgIHdoaWxlICgrK2kgPCBuKSB7XG4gICAgICAgIG8gPSBub2Rlc1tpXTtcbiAgICAgICAgaWYgKG8uZml4ZWQpIHtcbiAgICAgICAgICBvLnggPSBvLnB4O1xuICAgICAgICAgIG8ueSA9IG8ucHk7XG4gICAgICAgIH0gZWxzZSB7XG4gICAgICAgICAgby54IC09IChvLnB4IC0gKG8ucHggPSBvLngpKSAqIGZyaWN0aW9uO1xuICAgICAgICAgIG8ueSAtPSAoby5weSAtIChvLnB5ID0gby55KSkgKiBmcmljdGlvbjtcbiAgICAgICAgfVxuICAgICAgfVxuICAgICAgZXZlbnQudGljayh7XG4gICAgICAgIHR5cGU6IFwidGlja1wiLFxuICAgICAgICBhbHBoYTogYWxwaGFcbiAgICAgIH0pO1xuICAgIH07XG4gICAgZm9yY2Uubm9kZXMgPSBmdW5jdGlvbih4KSB7XG4gICAgICBpZiAoIWFyZ3VtZW50cy5sZW5ndGgpIHJldHVybiBub2RlcztcbiAgICAgIG5vZGVzID0geDtcbiAgICAgIHJldHVybiBmb3JjZTtcbiAgICB9O1xuICAgIGZvcmNlLmxpbmtzID0gZnVuY3Rpb24oeCkge1xuICAgICAgaWYgKCFhcmd1bWVudHMubGVuZ3RoKSByZXR1cm4gbGlua3M7XG4gICAgICBsaW5rcyA9IHg7XG4gICAgICByZXR1cm4gZm9yY2U7XG4gICAgfTtcbiAgICBmb3JjZS5zaXplID0gZnVuY3Rpb24oeCkge1xuICAgICAgaWYgKCFhcmd1bWVudHMubGVuZ3RoKSByZXR1cm4gc2l6ZTtcbiAgICAgIHNpemUgPSB4O1xuICAgICAgcmV0dXJuIGZvcmNlO1xuICAgIH07XG4gICAgZm9yY2UubGlua0Rpc3RhbmNlID0gZnVuY3Rpb24oeCkge1xuICAgICAgaWYgKCFhcmd1bWVudHMubGVuZ3RoKSByZXR1cm4gbGlua0Rpc3RhbmNlO1xuICAgICAgbGlua0Rpc3RhbmNlID0gdHlwZW9mIHggPT09IFwiZnVuY3Rpb25cIiA/IHggOiAreDtcbiAgICAgIHJldHVybiBmb3JjZTtcbiAgICB9O1xuICAgIGZvcmNlLmRpc3RhbmNlID0gZm9yY2UubGlua0Rpc3RhbmNlO1xuICAgIGZvcmNlLmxpbmtTdHJlbmd0aCA9IGZ1bmN0aW9uKHgpIHtcbiAgICAgIGlmICghYXJndW1lbnRzLmxlbmd0aCkgcmV0dXJuIGxpbmtTdHJlbmd0aDtcbiAgICAgIGxpbmtTdHJlbmd0aCA9IHR5cGVvZiB4ID09PSBcImZ1bmN0aW9uXCIgPyB4IDogK3g7XG4gICAgICByZXR1cm4gZm9yY2U7XG4gICAgfTtcbiAgICBmb3JjZS5mcmljdGlvbiA9IGZ1bmN0aW9uKHgpIHtcbiAgICAgIGlmICghYXJndW1lbnRzLmxlbmd0aCkgcmV0dXJuIGZyaWN0aW9uO1xuICAgICAgZnJpY3Rpb24gPSAreDtcbiAgICAgIHJldHVybiBmb3JjZTtcbiAgICB9O1xuICAgIGZvcmNlLmNoYXJnZSA9IGZ1bmN0aW9uKHgpIHtcbiAgICAgIGlmICghYXJndW1lbnRzLmxlbmd0aCkgcmV0dXJuIGNoYXJnZTtcbiAgICAgIGNoYXJnZSA9IHR5cGVvZiB4ID09PSBcImZ1bmN0aW9uXCIgPyB4IDogK3g7XG4gICAgICByZXR1cm4gZm9yY2U7XG4gICAgfTtcbiAgICBmb3JjZS5jaGFyZ2VEaXN0YW5jZSA9IGZ1bmN0aW9uKHgpIHtcbiAgICAgIGlmICghYXJndW1lbnRzLmxlbmd0aCkgcmV0dXJuIE1hdGguc3FydChjaGFyZ2VEaXN0YW5jZTIpO1xuICAgICAgY2hhcmdlRGlzdGFuY2UyID0geCAqIHg7XG4gICAgICByZXR1cm4gZm9yY2U7XG4gICAgfTtcbiAgICBmb3JjZS5ncmF2aXR5ID0gZnVuY3Rpb24oeCkge1xuICAgICAgaWYgKCFhcmd1bWVudHMubGVuZ3RoKSByZXR1cm4gZ3Jhdml0eTtcbiAgICAgIGdyYXZpdHkgPSAreDtcbiAgICAgIHJldHVybiBmb3JjZTtcbiAgICB9O1xuICAgIGZvcmNlLnRoZXRhID0gZnVuY3Rpb24oeCkge1xuICAgICAgaWYgKCFhcmd1bWVudHMubGVuZ3RoKSByZXR1cm4gTWF0aC5zcXJ0KHRoZXRhMik7XG4gICAgICB0aGV0YTIgPSB4ICogeDtcbiAgICAgIHJldHVybiBmb3JjZTtcbiAgICB9O1xuICAgIGZvcmNlLmFscGhhID0gZnVuY3Rpb24oeCkge1xuICAgICAgaWYgKCFhcmd1bWVudHMubGVuZ3RoKSByZXR1cm4gYWxwaGE7XG4gICAgICB4ID0gK3g7XG4gICAgICBpZiAoYWxwaGEpIHtcbiAgICAgICAgaWYgKHggPiAwKSB7XG4gICAgICAgICAgYWxwaGEgPSB4O1xuICAgICAgICB9IGVsc2Uge1xuICAgICAgICAgIHRpbWVyLmMgPSBudWxsLCB0aW1lci50ID0gTmFOLCB0aW1lciA9IG51bGw7XG4gICAgICAgICAgZXZlbnQuZW5kKHtcbiAgICAgICAgICAgIHR5cGU6IFwiZW5kXCIsXG4gICAgICAgICAgICBhbHBoYTogYWxwaGEgPSAwXG4gICAgICAgICAgfSk7XG4gICAgICAgIH1cbiAgICAgIH0gZWxzZSBpZiAoeCA+IDApIHtcbiAgICAgICAgZXZlbnQuc3RhcnQoe1xuICAgICAgICAgIHR5cGU6IFwic3RhcnRcIixcbiAgICAgICAgICBhbHBoYTogYWxwaGEgPSB4XG4gICAgICAgIH0pO1xuICAgICAgICB0aW1lciA9IGQzX3RpbWVyKGZvcmNlLnRpY2spO1xuICAgICAgfVxuICAgICAgcmV0dXJuIGZvcmNlO1xuICAgIH07XG4gICAgZm9yY2Uuc3RhcnQgPSBmdW5jdGlvbigpIHtcbiAgICAgIHZhciBpLCBuID0gbm9kZXMubGVuZ3RoLCBtID0gbGlua3MubGVuZ3RoLCB3ID0gc2l6ZVswXSwgaCA9IHNpemVbMV0sIG5laWdoYm9ycywgbztcbiAgICAgIGZvciAoaSA9IDA7IGkgPCBuOyArK2kpIHtcbiAgICAgICAgKG8gPSBub2Rlc1tpXSkuaW5kZXggPSBpO1xuICAgICAgICBvLndlaWdodCA9IDA7XG4gICAgICB9XG4gICAgICBmb3IgKGkgPSAwOyBpIDwgbTsgKytpKSB7XG4gICAgICAgIG8gPSBsaW5rc1tpXTtcbiAgICAgICAgaWYgKHR5cGVvZiBvLnNvdXJjZSA9PSBcIm51bWJlclwiKSBvLnNvdXJjZSA9IG5vZGVzW28uc291cmNlXTtcbiAgICAgICAgaWYgKHR5cGVvZiBvLnRhcmdldCA9PSBcIm51bWJlclwiKSBvLnRhcmdldCA9IG5vZGVzW28udGFyZ2V0XTtcbiAgICAgICAgKytvLnNvdXJjZS53ZWlnaHQ7XG4gICAgICAgICsrby50YXJnZXQud2VpZ2h0O1xuICAgICAgfVxuICAgICAgZm9yIChpID0gMDsgaSA8IG47ICsraSkge1xuICAgICAgICBvID0gbm9kZXNbaV07XG4gICAgICAgIGlmIChpc05hTihvLngpKSBvLnggPSBwb3NpdGlvbihcInhcIiwgdyk7XG4gICAgICAgIGlmIChpc05hTihvLnkpKSBvLnkgPSBwb3NpdGlvbihcInlcIiwgaCk7XG4gICAgICAgIGlmIChpc05hTihvLnB4KSkgby5weCA9IG8ueDtcbiAgICAgICAgaWYgKGlzTmFOKG8ucHkpKSBvLnB5ID0gby55O1xuICAgICAgfVxuICAgICAgZGlzdGFuY2VzID0gW107XG4gICAgICBpZiAodHlwZW9mIGxpbmtEaXN0YW5jZSA9PT0gXCJmdW5jdGlvblwiKSBmb3IgKGkgPSAwOyBpIDwgbTsgKytpKSBkaXN0YW5jZXNbaV0gPSArbGlua0Rpc3RhbmNlLmNhbGwodGhpcywgbGlua3NbaV0sIGkpOyBlbHNlIGZvciAoaSA9IDA7IGkgPCBtOyArK2kpIGRpc3RhbmNlc1tpXSA9IGxpbmtEaXN0YW5jZTtcbiAgICAgIHN0cmVuZ3RocyA9IFtdO1xuICAgICAgaWYgKHR5cGVvZiBsaW5rU3RyZW5ndGggPT09IFwiZnVuY3Rpb25cIikgZm9yIChpID0gMDsgaSA8IG07ICsraSkgc3RyZW5ndGhzW2ldID0gK2xpbmtTdHJlbmd0aC5jYWxsKHRoaXMsIGxpbmtzW2ldLCBpKTsgZWxzZSBmb3IgKGkgPSAwOyBpIDwgbTsgKytpKSBzdHJlbmd0aHNbaV0gPSBsaW5rU3RyZW5ndGg7XG4gICAgICBjaGFyZ2VzID0gW107XG4gICAgICBpZiAodHlwZW9mIGNoYXJnZSA9PT0gXCJmdW5jdGlvblwiKSBmb3IgKGkgPSAwOyBpIDwgbjsgKytpKSBjaGFyZ2VzW2ldID0gK2NoYXJnZS5jYWxsKHRoaXMsIG5vZGVzW2ldLCBpKTsgZWxzZSBmb3IgKGkgPSAwOyBpIDwgbjsgKytpKSBjaGFyZ2VzW2ldID0gY2hhcmdlO1xuICAgICAgZnVuY3Rpb24gcG9zaXRpb24oZGltZW5zaW9uLCBzaXplKSB7XG4gICAgICAgIGlmICghbmVpZ2hib3JzKSB7XG4gICAgICAgICAgbmVpZ2hib3JzID0gbmV3IEFycmF5KG4pO1xuICAgICAgICAgIGZvciAoaiA9IDA7IGogPCBuOyArK2opIHtcbiAgICAgICAgICAgIG5laWdoYm9yc1tqXSA9IFtdO1xuICAgICAgICAgIH1cbiAgICAgICAgICBmb3IgKGogPSAwOyBqIDwgbTsgKytqKSB7XG4gICAgICAgICAgICB2YXIgbyA9IGxpbmtzW2pdO1xuICAgICAgICAgICAgbmVpZ2hib3JzW28uc291cmNlLmluZGV4XS5wdXNoKG8udGFyZ2V0KTtcbiAgICAgICAgICAgIG5laWdoYm9yc1tvLnRhcmdldC5pbmRleF0ucHVzaChvLnNvdXJjZSk7XG4gICAgICAgICAgfVxuICAgICAgICB9XG4gICAgICAgIHZhciBjYW5kaWRhdGVzID0gbmVpZ2hib3JzW2ldLCBqID0gLTEsIGwgPSBjYW5kaWRhdGVzLmxlbmd0aCwgeDtcbiAgICAgICAgd2hpbGUgKCsraiA8IGwpIGlmICghaXNOYU4oeCA9IGNhbmRpZGF0ZXNbal1bZGltZW5zaW9uXSkpIHJldHVybiB4O1xuICAgICAgICByZXR1cm4gTWF0aC5yYW5kb20oKSAqIHNpemU7XG4gICAgICB9XG4gICAgICByZXR1cm4gZm9yY2UucmVzdW1lKCk7XG4gICAgfTtcbiAgICBmb3JjZS5yZXN1bWUgPSBmdW5jdGlvbigpIHtcbiAgICAgIHJldHVybiBmb3JjZS5hbHBoYSguMSk7XG4gICAgfTtcbiAgICBmb3JjZS5zdG9wID0gZnVuY3Rpb24oKSB7XG4gICAgICByZXR1cm4gZm9yY2UuYWxwaGEoMCk7XG4gICAgfTtcbiAgICBmb3JjZS5kcmFnID0gZnVuY3Rpb24oKSB7XG4gICAgICBpZiAoIWRyYWcpIGRyYWcgPSBkMy5iZWhhdmlvci5kcmFnKCkub3JpZ2luKGQzX2lkZW50aXR5KS5vbihcImRyYWdzdGFydC5mb3JjZVwiLCBkM19sYXlvdXRfZm9yY2VEcmFnc3RhcnQpLm9uKFwiZHJhZy5mb3JjZVwiLCBkcmFnbW92ZSkub24oXCJkcmFnZW5kLmZvcmNlXCIsIGQzX2xheW91dF9mb3JjZURyYWdlbmQpO1xuICAgICAgaWYgKCFhcmd1bWVudHMubGVuZ3RoKSByZXR1cm4gZHJhZztcbiAgICAgIHRoaXMub24oXCJtb3VzZW92ZXIuZm9yY2VcIiwgZDNfbGF5b3V0X2ZvcmNlTW91c2VvdmVyKS5vbihcIm1vdXNlb3V0LmZvcmNlXCIsIGQzX2xheW91dF9mb3JjZU1vdXNlb3V0KS5jYWxsKGRyYWcpO1xuICAgIH07XG4gICAgZnVuY3Rpb24gZHJhZ21vdmUoZCkge1xuICAgICAgZC5weCA9IGQzLmV2ZW50LngsIGQucHkgPSBkMy5ldmVudC55O1xuICAgICAgZm9yY2UucmVzdW1lKCk7XG4gICAgfVxuICAgIHJldHVybiBkMy5yZWJpbmQoZm9yY2UsIGV2ZW50LCBcIm9uXCIpO1xuICB9O1xuICBmdW5jdGlvbiBkM19sYXlvdXRfZm9yY2VEcmFnc3RhcnQoZCkge1xuICAgIGQuZml4ZWQgfD0gMjtcbiAgfVxuICBmdW5jdGlvbiBkM19sYXlvdXRfZm9yY2VEcmFnZW5kKGQpIHtcbiAgICBkLmZpeGVkICY9IH42O1xuICB9XG4gIGZ1bmN0aW9uIGQzX2xheW91dF9mb3JjZU1vdXNlb3ZlcihkKSB7XG4gICAgZC5maXhlZCB8PSA0O1xuICAgIGQucHggPSBkLngsIGQucHkgPSBkLnk7XG4gIH1cbiAgZnVuY3Rpb24gZDNfbGF5b3V0X2ZvcmNlTW91c2VvdXQoZCkge1xuICAgIGQuZml4ZWQgJj0gfjQ7XG4gIH1cbiAgZnVuY3Rpb24gZDNfbGF5b3V0X2ZvcmNlQWNjdW11bGF0ZShxdWFkLCBhbHBoYSwgY2hhcmdlcykge1xuICAgIHZhciBjeCA9IDAsIGN5ID0gMDtcbiAgICBxdWFkLmNoYXJnZSA9IDA7XG4gICAgaWYgKCFxdWFkLmxlYWYpIHtcbiAgICAgIHZhciBub2RlcyA9IHF1YWQubm9kZXMsIG4gPSBub2Rlcy5sZW5ndGgsIGkgPSAtMSwgYztcbiAgICAgIHdoaWxlICgrK2kgPCBuKSB7XG4gICAgICAgIGMgPSBub2Rlc1tpXTtcbiAgICAgICAgaWYgKGMgPT0gbnVsbCkgY29udGludWU7XG4gICAgICAgIGQzX2xheW91dF9mb3JjZUFjY3VtdWxhdGUoYywgYWxwaGEsIGNoYXJnZXMpO1xuICAgICAgICBxdWFkLmNoYXJnZSArPSBjLmNoYXJnZTtcbiAgICAgICAgY3ggKz0gYy5jaGFyZ2UgKiBjLmN4O1xuICAgICAgICBjeSArPSBjLmNoYXJnZSAqIGMuY3k7XG4gICAgICB9XG4gICAgfVxuICAgIGlmIChxdWFkLnBvaW50KSB7XG4gICAgICBpZiAoIXF1YWQubGVhZikge1xuICAgICAgICBxdWFkLnBvaW50LnggKz0gTWF0aC5yYW5kb20oKSAtIC41O1xuICAgICAgICBxdWFkLnBvaW50LnkgKz0gTWF0aC5yYW5kb20oKSAtIC41O1xuICAgICAgfVxuICAgICAgdmFyIGsgPSBhbHBoYSAqIGNoYXJnZXNbcXVhZC5wb2ludC5pbmRleF07XG4gICAgICBxdWFkLmNoYXJnZSArPSBxdWFkLnBvaW50Q2hhcmdlID0gaztcbiAgICAgIGN4ICs9IGsgKiBxdWFkLnBvaW50Lng7XG4gICAgICBjeSArPSBrICogcXVhZC5wb2ludC55O1xuICAgIH1cbiAgICBxdWFkLmN4ID0gY3ggLyBxdWFkLmNoYXJnZTtcbiAgICBxdWFkLmN5ID0gY3kgLyBxdWFkLmNoYXJnZTtcbiAgfVxuICB2YXIgZDNfbGF5b3V0X2ZvcmNlTGlua0Rpc3RhbmNlID0gMjAsIGQzX2xheW91dF9mb3JjZUxpbmtTdHJlbmd0aCA9IDEsIGQzX2xheW91dF9mb3JjZUNoYXJnZURpc3RhbmNlMiA9IEluZmluaXR5O1xuICBkMy5sYXlvdXQuaGllcmFyY2h5ID0gZnVuY3Rpb24oKSB7XG4gICAgdmFyIHNvcnQgPSBkM19sYXlvdXRfaGllcmFyY2h5U29ydCwgY2hpbGRyZW4gPSBkM19sYXlvdXRfaGllcmFyY2h5Q2hpbGRyZW4sIHZhbHVlID0gZDNfbGF5b3V0X2hpZXJhcmNoeVZhbHVlO1xuICAgIGZ1bmN0aW9uIGhpZXJhcmNoeShyb290KSB7XG4gICAgICB2YXIgc3RhY2sgPSBbIHJvb3QgXSwgbm9kZXMgPSBbXSwgbm9kZTtcbiAgICAgIHJvb3QuZGVwdGggPSAwO1xuICAgICAgd2hpbGUgKChub2RlID0gc3RhY2sucG9wKCkpICE9IG51bGwpIHtcbiAgICAgICAgbm9kZXMucHVzaChub2RlKTtcbiAgICAgICAgaWYgKChjaGlsZHMgPSBjaGlsZHJlbi5jYWxsKGhpZXJhcmNoeSwgbm9kZSwgbm9kZS5kZXB0aCkpICYmIChuID0gY2hpbGRzLmxlbmd0aCkpIHtcbiAgICAgICAgICB2YXIgbiwgY2hpbGRzLCBjaGlsZDtcbiAgICAgICAgICB3aGlsZSAoLS1uID49IDApIHtcbiAgICAgICAgICAgIHN0YWNrLnB1c2goY2hpbGQgPSBjaGlsZHNbbl0pO1xuICAgICAgICAgICAgY2hpbGQucGFyZW50ID0gbm9kZTtcbiAgICAgICAgICAgIGNoaWxkLmRlcHRoID0gbm9kZS5kZXB0aCArIDE7XG4gICAgICAgICAgfVxuICAgICAgICAgIGlmICh2YWx1ZSkgbm9kZS52YWx1ZSA9IDA7XG4gICAgICAgICAgbm9kZS5jaGlsZHJlbiA9IGNoaWxkcztcbiAgICAgICAgfSBlbHNlIHtcbiAgICAgICAgICBpZiAodmFsdWUpIG5vZGUudmFsdWUgPSArdmFsdWUuY2FsbChoaWVyYXJjaHksIG5vZGUsIG5vZGUuZGVwdGgpIHx8IDA7XG4gICAgICAgICAgZGVsZXRlIG5vZGUuY2hpbGRyZW47XG4gICAgICAgIH1cbiAgICAgIH1cbiAgICAgIGQzX2xheW91dF9oaWVyYXJjaHlWaXNpdEFmdGVyKHJvb3QsIGZ1bmN0aW9uKG5vZGUpIHtcbiAgICAgICAgdmFyIGNoaWxkcywgcGFyZW50O1xuICAgICAgICBpZiAoc29ydCAmJiAoY2hpbGRzID0gbm9kZS5jaGlsZHJlbikpIGNoaWxkcy5zb3J0KHNvcnQpO1xuICAgICAgICBpZiAodmFsdWUgJiYgKHBhcmVudCA9IG5vZGUucGFyZW50KSkgcGFyZW50LnZhbHVlICs9IG5vZGUudmFsdWU7XG4gICAgICB9KTtcbiAgICAgIHJldHVybiBub2RlcztcbiAgICB9XG4gICAgaGllcmFyY2h5LnNvcnQgPSBmdW5jdGlvbih4KSB7XG4gICAgICBpZiAoIWFyZ3VtZW50cy5sZW5ndGgpIHJldHVybiBzb3J0O1xuICAgICAgc29ydCA9IHg7XG4gICAgICByZXR1cm4gaGllcmFyY2h5O1xuICAgIH07XG4gICAgaGllcmFyY2h5LmNoaWxkcmVuID0gZnVuY3Rpb24oeCkge1xuICAgICAgaWYgKCFhcmd1bWVudHMubGVuZ3RoKSByZXR1cm4gY2hpbGRyZW47XG4gICAgICBjaGlsZHJlbiA9IHg7XG4gICAgICByZXR1cm4gaGllcmFyY2h5O1xuICAgIH07XG4gICAgaGllcmFyY2h5LnZhbHVlID0gZnVuY3Rpb24oeCkge1xuICAgICAgaWYgKCFhcmd1bWVudHMubGVuZ3RoKSByZXR1cm4gdmFsdWU7XG4gICAgICB2YWx1ZSA9IHg7XG4gICAgICByZXR1cm4gaGllcmFyY2h5O1xuICAgIH07XG4gICAgaGllcmFyY2h5LnJldmFsdWUgPSBmdW5jdGlvbihyb290KSB7XG4gICAgICBpZiAodmFsdWUpIHtcbiAgICAgICAgZDNfbGF5b3V0X2hpZXJhcmNoeVZpc2l0QmVmb3JlKHJvb3QsIGZ1bmN0aW9uKG5vZGUpIHtcbiAgICAgICAgICBpZiAobm9kZS5jaGlsZHJlbikgbm9kZS52YWx1ZSA9IDA7XG4gICAgICAgIH0pO1xuICAgICAgICBkM19sYXlvdXRfaGllcmFyY2h5VmlzaXRBZnRlcihyb290LCBmdW5jdGlvbihub2RlKSB7XG4gICAgICAgICAgdmFyIHBhcmVudDtcbiAgICAgICAgICBpZiAoIW5vZGUuY2hpbGRyZW4pIG5vZGUudmFsdWUgPSArdmFsdWUuY2FsbChoaWVyYXJjaHksIG5vZGUsIG5vZGUuZGVwdGgpIHx8IDA7XG4gICAgICAgICAgaWYgKHBhcmVudCA9IG5vZGUucGFyZW50KSBwYXJlbnQudmFsdWUgKz0gbm9kZS52YWx1ZTtcbiAgICAgICAgfSk7XG4gICAgICB9XG4gICAgICByZXR1cm4gcm9vdDtcbiAgICB9O1xuICAgIHJldHVybiBoaWVyYXJjaHk7XG4gIH07XG4gIGZ1bmN0aW9uIGQzX2xheW91dF9oaWVyYXJjaHlSZWJpbmQob2JqZWN0LCBoaWVyYXJjaHkpIHtcbiAgICBkMy5yZWJpbmQob2JqZWN0LCBoaWVyYXJjaHksIFwic29ydFwiLCBcImNoaWxkcmVuXCIsIFwidmFsdWVcIik7XG4gICAgb2JqZWN0Lm5vZGVzID0gb2JqZWN0O1xuICAgIG9iamVjdC5saW5rcyA9IGQzX2xheW91dF9oaWVyYXJjaHlMaW5rcztcbiAgICByZXR1cm4gb2JqZWN0O1xuICB9XG4gIGZ1bmN0aW9uIGQzX2xheW91dF9oaWVyYXJjaHlWaXNpdEJlZm9yZShub2RlLCBjYWxsYmFjaykge1xuICAgIHZhciBub2RlcyA9IFsgbm9kZSBdO1xuICAgIHdoaWxlICgobm9kZSA9IG5vZGVzLnBvcCgpKSAhPSBudWxsKSB7XG4gICAgICBjYWxsYmFjayhub2RlKTtcbiAgICAgIGlmICgoY2hpbGRyZW4gPSBub2RlLmNoaWxkcmVuKSAmJiAobiA9IGNoaWxkcmVuLmxlbmd0aCkpIHtcbiAgICAgICAgdmFyIG4sIGNoaWxkcmVuO1xuICAgICAgICB3aGlsZSAoLS1uID49IDApIG5vZGVzLnB1c2goY2hpbGRyZW5bbl0pO1xuICAgICAgfVxuICAgIH1cbiAgfVxuICBmdW5jdGlvbiBkM19sYXlvdXRfaGllcmFyY2h5VmlzaXRBZnRlcihub2RlLCBjYWxsYmFjaykge1xuICAgIHZhciBub2RlcyA9IFsgbm9kZSBdLCBub2RlczIgPSBbXTtcbiAgICB3aGlsZSAoKG5vZGUgPSBub2Rlcy5wb3AoKSkgIT0gbnVsbCkge1xuICAgICAgbm9kZXMyLnB1c2gobm9kZSk7XG4gICAgICBpZiAoKGNoaWxkcmVuID0gbm9kZS5jaGlsZHJlbikgJiYgKG4gPSBjaGlsZHJlbi5sZW5ndGgpKSB7XG4gICAgICAgIHZhciBpID0gLTEsIG4sIGNoaWxkcmVuO1xuICAgICAgICB3aGlsZSAoKytpIDwgbikgbm9kZXMucHVzaChjaGlsZHJlbltpXSk7XG4gICAgICB9XG4gICAgfVxuICAgIHdoaWxlICgobm9kZSA9IG5vZGVzMi5wb3AoKSkgIT0gbnVsbCkge1xuICAgICAgY2FsbGJhY2sobm9kZSk7XG4gICAgfVxuICB9XG4gIGZ1bmN0aW9uIGQzX2xheW91dF9oaWVyYXJjaHlDaGlsZHJlbihkKSB7XG4gICAgcmV0dXJuIGQuY2hpbGRyZW47XG4gIH1cbiAgZnVuY3Rpb24gZDNfbGF5b3V0X2hpZXJhcmNoeVZhbHVlKGQpIHtcbiAgICByZXR1cm4gZC52YWx1ZTtcbiAgfVxuICBmdW5jdGlvbiBkM19sYXlvdXRfaGllcmFyY2h5U29ydChhLCBiKSB7XG4gICAgcmV0dXJuIGIudmFsdWUgLSBhLnZhbHVlO1xuICB9XG4gIGZ1bmN0aW9uIGQzX2xheW91dF9oaWVyYXJjaHlMaW5rcyhub2Rlcykge1xuICAgIHJldHVybiBkMy5tZXJnZShub2Rlcy5tYXAoZnVuY3Rpb24ocGFyZW50KSB7XG4gICAgICByZXR1cm4gKHBhcmVudC5jaGlsZHJlbiB8fCBbXSkubWFwKGZ1bmN0aW9uKGNoaWxkKSB7XG4gICAgICAgIHJldHVybiB7XG4gICAgICAgICAgc291cmNlOiBwYXJlbnQsXG4gICAgICAgICAgdGFyZ2V0OiBjaGlsZFxuICAgICAgICB9O1xuICAgICAgfSk7XG4gICAgfSkpO1xuICB9XG4gIGQzLmxheW91dC5wYXJ0aXRpb24gPSBmdW5jdGlvbigpIHtcbiAgICB2YXIgaGllcmFyY2h5ID0gZDMubGF5b3V0LmhpZXJhcmNoeSgpLCBzaXplID0gWyAxLCAxIF07XG4gICAgZnVuY3Rpb24gcG9zaXRpb24obm9kZSwgeCwgZHgsIGR5KSB7XG4gICAgICB2YXIgY2hpbGRyZW4gPSBub2RlLmNoaWxkcmVuO1xuICAgICAgbm9kZS54ID0geDtcbiAgICAgIG5vZGUueSA9IG5vZGUuZGVwdGggKiBkeTtcbiAgICAgIG5vZGUuZHggPSBkeDtcbiAgICAgIG5vZGUuZHkgPSBkeTtcbiAgICAgIGlmIChjaGlsZHJlbiAmJiAobiA9IGNoaWxkcmVuLmxlbmd0aCkpIHtcbiAgICAgICAgdmFyIGkgPSAtMSwgbiwgYywgZDtcbiAgICAgICAgZHggPSBub2RlLnZhbHVlID8gZHggLyBub2RlLnZhbHVlIDogMDtcbiAgICAgICAgd2hpbGUgKCsraSA8IG4pIHtcbiAgICAgICAgICBwb3NpdGlvbihjID0gY2hpbGRyZW5baV0sIHgsIGQgPSBjLnZhbHVlICogZHgsIGR5KTtcbiAgICAgICAgICB4ICs9IGQ7XG4gICAgICAgIH1cbiAgICAgIH1cbiAgICB9XG4gICAgZnVuY3Rpb24gZGVwdGgobm9kZSkge1xuICAgICAgdmFyIGNoaWxkcmVuID0gbm9kZS5jaGlsZHJlbiwgZCA9IDA7XG4gICAgICBpZiAoY2hpbGRyZW4gJiYgKG4gPSBjaGlsZHJlbi5sZW5ndGgpKSB7XG4gICAgICAgIHZhciBpID0gLTEsIG47XG4gICAgICAgIHdoaWxlICgrK2kgPCBuKSBkID0gTWF0aC5tYXgoZCwgZGVwdGgoY2hpbGRyZW5baV0pKTtcbiAgICAgIH1cbiAgICAgIHJldHVybiAxICsgZDtcbiAgICB9XG4gICAgZnVuY3Rpb24gcGFydGl0aW9uKGQsIGkpIHtcbiAgICAgIHZhciBub2RlcyA9IGhpZXJhcmNoeS5jYWxsKHRoaXMsIGQsIGkpO1xuICAgICAgcG9zaXRpb24obm9kZXNbMF0sIDAsIHNpemVbMF0sIHNpemVbMV0gLyBkZXB0aChub2Rlc1swXSkpO1xuICAgICAgcmV0dXJuIG5vZGVzO1xuICAgIH1cbiAgICBwYXJ0aXRpb24uc2l6ZSA9IGZ1bmN0aW9uKHgpIHtcbiAgICAgIGlmICghYXJndW1lbnRzLmxlbmd0aCkgcmV0dXJuIHNpemU7XG4gICAgICBzaXplID0geDtcbiAgICAgIHJldHVybiBwYXJ0aXRpb247XG4gICAgfTtcbiAgICByZXR1cm4gZDNfbGF5b3V0X2hpZXJhcmNoeVJlYmluZChwYXJ0aXRpb24sIGhpZXJhcmNoeSk7XG4gIH07XG4gIGQzLmxheW91dC5waWUgPSBmdW5jdGlvbigpIHtcbiAgICB2YXIgdmFsdWUgPSBOdW1iZXIsIHNvcnQgPSBkM19sYXlvdXRfcGllU29ydEJ5VmFsdWUsIHN0YXJ0QW5nbGUgPSAwLCBlbmRBbmdsZSA9IM+ELCBwYWRBbmdsZSA9IDA7XG4gICAgZnVuY3Rpb24gcGllKGRhdGEpIHtcbiAgICAgIHZhciBuID0gZGF0YS5sZW5ndGgsIHZhbHVlcyA9IGRhdGEubWFwKGZ1bmN0aW9uKGQsIGkpIHtcbiAgICAgICAgcmV0dXJuICt2YWx1ZS5jYWxsKHBpZSwgZCwgaSk7XG4gICAgICB9KSwgYSA9ICsodHlwZW9mIHN0YXJ0QW5nbGUgPT09IFwiZnVuY3Rpb25cIiA/IHN0YXJ0QW5nbGUuYXBwbHkodGhpcywgYXJndW1lbnRzKSA6IHN0YXJ0QW5nbGUpLCBkYSA9ICh0eXBlb2YgZW5kQW5nbGUgPT09IFwiZnVuY3Rpb25cIiA/IGVuZEFuZ2xlLmFwcGx5KHRoaXMsIGFyZ3VtZW50cykgOiBlbmRBbmdsZSkgLSBhLCBwID0gTWF0aC5taW4oTWF0aC5hYnMoZGEpIC8gbiwgKyh0eXBlb2YgcGFkQW5nbGUgPT09IFwiZnVuY3Rpb25cIiA/IHBhZEFuZ2xlLmFwcGx5KHRoaXMsIGFyZ3VtZW50cykgOiBwYWRBbmdsZSkpLCBwYSA9IHAgKiAoZGEgPCAwID8gLTEgOiAxKSwgc3VtID0gZDMuc3VtKHZhbHVlcyksIGsgPSBzdW0gPyAoZGEgLSBuICogcGEpIC8gc3VtIDogMCwgaW5kZXggPSBkMy5yYW5nZShuKSwgYXJjcyA9IFtdLCB2O1xuICAgICAgaWYgKHNvcnQgIT0gbnVsbCkgaW5kZXguc29ydChzb3J0ID09PSBkM19sYXlvdXRfcGllU29ydEJ5VmFsdWUgPyBmdW5jdGlvbihpLCBqKSB7XG4gICAgICAgIHJldHVybiB2YWx1ZXNbal0gLSB2YWx1ZXNbaV07XG4gICAgICB9IDogZnVuY3Rpb24oaSwgaikge1xuICAgICAgICByZXR1cm4gc29ydChkYXRhW2ldLCBkYXRhW2pdKTtcbiAgICAgIH0pO1xuICAgICAgaW5kZXguZm9yRWFjaChmdW5jdGlvbihpKSB7XG4gICAgICAgIGFyY3NbaV0gPSB7XG4gICAgICAgICAgZGF0YTogZGF0YVtpXSxcbiAgICAgICAgICB2YWx1ZTogdiA9IHZhbHVlc1tpXSxcbiAgICAgICAgICBzdGFydEFuZ2xlOiBhLFxuICAgICAgICAgIGVuZEFuZ2xlOiBhICs9IHYgKiBrICsgcGEsXG4gICAgICAgICAgcGFkQW5nbGU6IHBcbiAgICAgICAgfTtcbiAgICAgIH0pO1xuICAgICAgcmV0dXJuIGFyY3M7XG4gICAgfVxuICAgIHBpZS52YWx1ZSA9IGZ1bmN0aW9uKF8pIHtcbiAgICAgIGlmICghYXJndW1lbnRzLmxlbmd0aCkgcmV0dXJuIHZhbHVlO1xuICAgICAgdmFsdWUgPSBfO1xuICAgICAgcmV0dXJuIHBpZTtcbiAgICB9O1xuICAgIHBpZS5zb3J0ID0gZnVuY3Rpb24oXykge1xuICAgICAgaWYgKCFhcmd1bWVudHMubGVuZ3RoKSByZXR1cm4gc29ydDtcbiAgICAgIHNvcnQgPSBfO1xuICAgICAgcmV0dXJuIHBpZTtcbiAgICB9O1xuICAgIHBpZS5zdGFydEFuZ2xlID0gZnVuY3Rpb24oXykge1xuICAgICAgaWYgKCFhcmd1bWVudHMubGVuZ3RoKSByZXR1cm4gc3RhcnRBbmdsZTtcbiAgICAgIHN0YXJ0QW5nbGUgPSBfO1xuICAgICAgcmV0dXJuIHBpZTtcbiAgICB9O1xuICAgIHBpZS5lbmRBbmdsZSA9IGZ1bmN0aW9uKF8pIHtcbiAgICAgIGlmICghYXJndW1lbnRzLmxlbmd0aCkgcmV0dXJuIGVuZEFuZ2xlO1xuICAgICAgZW5kQW5nbGUgPSBfO1xuICAgICAgcmV0dXJuIHBpZTtcbiAgICB9O1xuICAgIHBpZS5wYWRBbmdsZSA9IGZ1bmN0aW9uKF8pIHtcbiAgICAgIGlmICghYXJndW1lbnRzLmxlbmd0aCkgcmV0dXJuIHBhZEFuZ2xlO1xuICAgICAgcGFkQW5nbGUgPSBfO1xuICAgICAgcmV0dXJuIHBpZTtcbiAgICB9O1xuICAgIHJldHVybiBwaWU7XG4gIH07XG4gIHZhciBkM19sYXlvdXRfcGllU29ydEJ5VmFsdWUgPSB7fTtcbiAgZDMubGF5b3V0LnN0YWNrID0gZnVuY3Rpb24oKSB7XG4gICAgdmFyIHZhbHVlcyA9IGQzX2lkZW50aXR5LCBvcmRlciA9IGQzX2xheW91dF9zdGFja09yZGVyRGVmYXVsdCwgb2Zmc2V0ID0gZDNfbGF5b3V0X3N0YWNrT2Zmc2V0WmVybywgb3V0ID0gZDNfbGF5b3V0X3N0YWNrT3V0LCB4ID0gZDNfbGF5b3V0X3N0YWNrWCwgeSA9IGQzX2xheW91dF9zdGFja1k7XG4gICAgZnVuY3Rpb24gc3RhY2soZGF0YSwgaW5kZXgpIHtcbiAgICAgIGlmICghKG4gPSBkYXRhLmxlbmd0aCkpIHJldHVybiBkYXRhO1xuICAgICAgdmFyIHNlcmllcyA9IGRhdGEubWFwKGZ1bmN0aW9uKGQsIGkpIHtcbiAgICAgICAgcmV0dXJuIHZhbHVlcy5jYWxsKHN0YWNrLCBkLCBpKTtcbiAgICAgIH0pO1xuICAgICAgdmFyIHBvaW50cyA9IHNlcmllcy5tYXAoZnVuY3Rpb24oZCkge1xuICAgICAgICByZXR1cm4gZC5tYXAoZnVuY3Rpb24odiwgaSkge1xuICAgICAgICAgIHJldHVybiBbIHguY2FsbChzdGFjaywgdiwgaSksIHkuY2FsbChzdGFjaywgdiwgaSkgXTtcbiAgICAgICAgfSk7XG4gICAgICB9KTtcbiAgICAgIHZhciBvcmRlcnMgPSBvcmRlci5jYWxsKHN0YWNrLCBwb2ludHMsIGluZGV4KTtcbiAgICAgIHNlcmllcyA9IGQzLnBlcm11dGUoc2VyaWVzLCBvcmRlcnMpO1xuICAgICAgcG9pbnRzID0gZDMucGVybXV0ZShwb2ludHMsIG9yZGVycyk7XG4gICAgICB2YXIgb2Zmc2V0cyA9IG9mZnNldC5jYWxsKHN0YWNrLCBwb2ludHMsIGluZGV4KTtcbiAgICAgIHZhciBtID0gc2VyaWVzWzBdLmxlbmd0aCwgbiwgaSwgaiwgbztcbiAgICAgIGZvciAoaiA9IDA7IGogPCBtOyArK2opIHtcbiAgICAgICAgb3V0LmNhbGwoc3RhY2ssIHNlcmllc1swXVtqXSwgbyA9IG9mZnNldHNbal0sIHBvaW50c1swXVtqXVsxXSk7XG4gICAgICAgIGZvciAoaSA9IDE7IGkgPCBuOyArK2kpIHtcbiAgICAgICAgICBvdXQuY2FsbChzdGFjaywgc2VyaWVzW2ldW2pdLCBvICs9IHBvaW50c1tpIC0gMV1bal1bMV0sIHBvaW50c1tpXVtqXVsxXSk7XG4gICAgICAgIH1cbiAgICAgIH1cbiAgICAgIHJldHVybiBkYXRhO1xuICAgIH1cbiAgICBzdGFjay52YWx1ZXMgPSBmdW5jdGlvbih4KSB7XG4gICAgICBpZiAoIWFyZ3VtZW50cy5sZW5ndGgpIHJldHVybiB2YWx1ZXM7XG4gICAgICB2YWx1ZXMgPSB4O1xuICAgICAgcmV0dXJuIHN0YWNrO1xuICAgIH07XG4gICAgc3RhY2sub3JkZXIgPSBmdW5jdGlvbih4KSB7XG4gICAgICBpZiAoIWFyZ3VtZW50cy5sZW5ndGgpIHJldHVybiBvcmRlcjtcbiAgICAgIG9yZGVyID0gdHlwZW9mIHggPT09IFwiZnVuY3Rpb25cIiA/IHggOiBkM19sYXlvdXRfc3RhY2tPcmRlcnMuZ2V0KHgpIHx8IGQzX2xheW91dF9zdGFja09yZGVyRGVmYXVsdDtcbiAgICAgIHJldHVybiBzdGFjaztcbiAgICB9O1xuICAgIHN0YWNrLm9mZnNldCA9IGZ1bmN0aW9uKHgpIHtcbiAgICAgIGlmICghYXJndW1lbnRzLmxlbmd0aCkgcmV0dXJuIG9mZnNldDtcbiAgICAgIG9mZnNldCA9IHR5cGVvZiB4ID09PSBcImZ1bmN0aW9uXCIgPyB4IDogZDNfbGF5b3V0X3N0YWNrT2Zmc2V0cy5nZXQoeCkgfHwgZDNfbGF5b3V0X3N0YWNrT2Zmc2V0WmVybztcbiAgICAgIHJldHVybiBzdGFjaztcbiAgICB9O1xuICAgIHN0YWNrLnggPSBmdW5jdGlvbih6KSB7XG4gICAgICBpZiAoIWFyZ3VtZW50cy5sZW5ndGgpIHJldHVybiB4O1xuICAgICAgeCA9IHo7XG4gICAgICByZXR1cm4gc3RhY2s7XG4gICAgfTtcbiAgICBzdGFjay55ID0gZnVuY3Rpb24oeikge1xuICAgICAgaWYgKCFhcmd1bWVudHMubGVuZ3RoKSByZXR1cm4geTtcbiAgICAgIHkgPSB6O1xuICAgICAgcmV0dXJuIHN0YWNrO1xuICAgIH07XG4gICAgc3RhY2sub3V0ID0gZnVuY3Rpb24oeikge1xuICAgICAgaWYgKCFhcmd1bWVudHMubGVuZ3RoKSByZXR1cm4gb3V0O1xuICAgICAgb3V0ID0gejtcbiAgICAgIHJldHVybiBzdGFjaztcbiAgICB9O1xuICAgIHJldHVybiBzdGFjaztcbiAgfTtcbiAgZnVuY3Rpb24gZDNfbGF5b3V0X3N0YWNrWChkKSB7XG4gICAgcmV0dXJuIGQueDtcbiAgfVxuICBmdW5jdGlvbiBkM19sYXlvdXRfc3RhY2tZKGQpIHtcbiAgICByZXR1cm4gZC55O1xuICB9XG4gIGZ1bmN0aW9uIGQzX2xheW91dF9zdGFja091dChkLCB5MCwgeSkge1xuICAgIGQueTAgPSB5MDtcbiAgICBkLnkgPSB5O1xuICB9XG4gIHZhciBkM19sYXlvdXRfc3RhY2tPcmRlcnMgPSBkMy5tYXAoe1xuICAgIFwiaW5zaWRlLW91dFwiOiBmdW5jdGlvbihkYXRhKSB7XG4gICAgICB2YXIgbiA9IGRhdGEubGVuZ3RoLCBpLCBqLCBtYXggPSBkYXRhLm1hcChkM19sYXlvdXRfc3RhY2tNYXhJbmRleCksIHN1bXMgPSBkYXRhLm1hcChkM19sYXlvdXRfc3RhY2tSZWR1Y2VTdW0pLCBpbmRleCA9IGQzLnJhbmdlKG4pLnNvcnQoZnVuY3Rpb24oYSwgYikge1xuICAgICAgICByZXR1cm4gbWF4W2FdIC0gbWF4W2JdO1xuICAgICAgfSksIHRvcCA9IDAsIGJvdHRvbSA9IDAsIHRvcHMgPSBbXSwgYm90dG9tcyA9IFtdO1xuICAgICAgZm9yIChpID0gMDsgaSA8IG47ICsraSkge1xuICAgICAgICBqID0gaW5kZXhbaV07XG4gICAgICAgIGlmICh0b3AgPCBib3R0b20pIHtcbiAgICAgICAgICB0b3AgKz0gc3Vtc1tqXTtcbiAgICAgICAgICB0b3BzLnB1c2goaik7XG4gICAgICAgIH0gZWxzZSB7XG4gICAgICAgICAgYm90dG9tICs9IHN1bXNbal07XG4gICAgICAgICAgYm90dG9tcy5wdXNoKGopO1xuICAgICAgICB9XG4gICAgICB9XG4gICAgICByZXR1cm4gYm90dG9tcy5yZXZlcnNlKCkuY29uY2F0KHRvcHMpO1xuICAgIH0sXG4gICAgcmV2ZXJzZTogZnVuY3Rpb24oZGF0YSkge1xuICAgICAgcmV0dXJuIGQzLnJhbmdlKGRhdGEubGVuZ3RoKS5yZXZlcnNlKCk7XG4gICAgfSxcbiAgICBcImRlZmF1bHRcIjogZDNfbGF5b3V0X3N0YWNrT3JkZXJEZWZhdWx0XG4gIH0pO1xuICB2YXIgZDNfbGF5b3V0X3N0YWNrT2Zmc2V0cyA9IGQzLm1hcCh7XG4gICAgc2lsaG91ZXR0ZTogZnVuY3Rpb24oZGF0YSkge1xuICAgICAgdmFyIG4gPSBkYXRhLmxlbmd0aCwgbSA9IGRhdGFbMF0ubGVuZ3RoLCBzdW1zID0gW10sIG1heCA9IDAsIGksIGosIG8sIHkwID0gW107XG4gICAgICBmb3IgKGogPSAwOyBqIDwgbTsgKytqKSB7XG4gICAgICAgIGZvciAoaSA9IDAsIG8gPSAwOyBpIDwgbjsgaSsrKSBvICs9IGRhdGFbaV1bal1bMV07XG4gICAgICAgIGlmIChvID4gbWF4KSBtYXggPSBvO1xuICAgICAgICBzdW1zLnB1c2gobyk7XG4gICAgICB9XG4gICAgICBmb3IgKGogPSAwOyBqIDwgbTsgKytqKSB7XG4gICAgICAgIHkwW2pdID0gKG1heCAtIHN1bXNbal0pIC8gMjtcbiAgICAgIH1cbiAgICAgIHJldHVybiB5MDtcbiAgICB9LFxuICAgIHdpZ2dsZTogZnVuY3Rpb24oZGF0YSkge1xuICAgICAgdmFyIG4gPSBkYXRhLmxlbmd0aCwgeCA9IGRhdGFbMF0sIG0gPSB4Lmxlbmd0aCwgaSwgaiwgaywgczEsIHMyLCBzMywgZHgsIG8sIG8wLCB5MCA9IFtdO1xuICAgICAgeTBbMF0gPSBvID0gbzAgPSAwO1xuICAgICAgZm9yIChqID0gMTsgaiA8IG07ICsraikge1xuICAgICAgICBmb3IgKGkgPSAwLCBzMSA9IDA7IGkgPCBuOyArK2kpIHMxICs9IGRhdGFbaV1bal1bMV07XG4gICAgICAgIGZvciAoaSA9IDAsIHMyID0gMCwgZHggPSB4W2pdWzBdIC0geFtqIC0gMV1bMF07IGkgPCBuOyArK2kpIHtcbiAgICAgICAgICBmb3IgKGsgPSAwLCBzMyA9IChkYXRhW2ldW2pdWzFdIC0gZGF0YVtpXVtqIC0gMV1bMV0pIC8gKDIgKiBkeCk7IGsgPCBpOyArK2spIHtcbiAgICAgICAgICAgIHMzICs9IChkYXRhW2tdW2pdWzFdIC0gZGF0YVtrXVtqIC0gMV1bMV0pIC8gZHg7XG4gICAgICAgICAgfVxuICAgICAgICAgIHMyICs9IHMzICogZGF0YVtpXVtqXVsxXTtcbiAgICAgICAgfVxuICAgICAgICB5MFtqXSA9IG8gLT0gczEgPyBzMiAvIHMxICogZHggOiAwO1xuICAgICAgICBpZiAobyA8IG8wKSBvMCA9IG87XG4gICAgICB9XG4gICAgICBmb3IgKGogPSAwOyBqIDwgbTsgKytqKSB5MFtqXSAtPSBvMDtcbiAgICAgIHJldHVybiB5MDtcbiAgICB9LFxuICAgIGV4cGFuZDogZnVuY3Rpb24oZGF0YSkge1xuICAgICAgdmFyIG4gPSBkYXRhLmxlbmd0aCwgbSA9IGRhdGFbMF0ubGVuZ3RoLCBrID0gMSAvIG4sIGksIGosIG8sIHkwID0gW107XG4gICAgICBmb3IgKGogPSAwOyBqIDwgbTsgKytqKSB7XG4gICAgICAgIGZvciAoaSA9IDAsIG8gPSAwOyBpIDwgbjsgaSsrKSBvICs9IGRhdGFbaV1bal1bMV07XG4gICAgICAgIGlmIChvKSBmb3IgKGkgPSAwOyBpIDwgbjsgaSsrKSBkYXRhW2ldW2pdWzFdIC89IG87IGVsc2UgZm9yIChpID0gMDsgaSA8IG47IGkrKykgZGF0YVtpXVtqXVsxXSA9IGs7XG4gICAgICB9XG4gICAgICBmb3IgKGogPSAwOyBqIDwgbTsgKytqKSB5MFtqXSA9IDA7XG4gICAgICByZXR1cm4geTA7XG4gICAgfSxcbiAgICB6ZXJvOiBkM19sYXlvdXRfc3RhY2tPZmZzZXRaZXJvXG4gIH0pO1xuICBmdW5jdGlvbiBkM19sYXlvdXRfc3RhY2tPcmRlckRlZmF1bHQoZGF0YSkge1xuICAgIHJldHVybiBkMy5yYW5nZShkYXRhLmxlbmd0aCk7XG4gIH1cbiAgZnVuY3Rpb24gZDNfbGF5b3V0X3N0YWNrT2Zmc2V0WmVybyhkYXRhKSB7XG4gICAgdmFyIGogPSAtMSwgbSA9IGRhdGFbMF0ubGVuZ3RoLCB5MCA9IFtdO1xuICAgIHdoaWxlICgrK2ogPCBtKSB5MFtqXSA9IDA7XG4gICAgcmV0dXJuIHkwO1xuICB9XG4gIGZ1bmN0aW9uIGQzX2xheW91dF9zdGFja01heEluZGV4KGFycmF5KSB7XG4gICAgdmFyIGkgPSAxLCBqID0gMCwgdiA9IGFycmF5WzBdWzFdLCBrLCBuID0gYXJyYXkubGVuZ3RoO1xuICAgIGZvciAoO2kgPCBuOyArK2kpIHtcbiAgICAgIGlmICgoayA9IGFycmF5W2ldWzFdKSA+IHYpIHtcbiAgICAgICAgaiA9IGk7XG4gICAgICAgIHYgPSBrO1xuICAgICAgfVxuICAgIH1cbiAgICByZXR1cm4gajtcbiAgfVxuICBmdW5jdGlvbiBkM19sYXlvdXRfc3RhY2tSZWR1Y2VTdW0oZCkge1xuICAgIHJldHVybiBkLnJlZHVjZShkM19sYXlvdXRfc3RhY2tTdW0sIDApO1xuICB9XG4gIGZ1bmN0aW9uIGQzX2xheW91dF9zdGFja1N1bShwLCBkKSB7XG4gICAgcmV0dXJuIHAgKyBkWzFdO1xuICB9XG4gIGQzLmxheW91dC5oaXN0b2dyYW0gPSBmdW5jdGlvbigpIHtcbiAgICB2YXIgZnJlcXVlbmN5ID0gdHJ1ZSwgdmFsdWVyID0gTnVtYmVyLCByYW5nZXIgPSBkM19sYXlvdXRfaGlzdG9ncmFtUmFuZ2UsIGJpbm5lciA9IGQzX2xheW91dF9oaXN0b2dyYW1CaW5TdHVyZ2VzO1xuICAgIGZ1bmN0aW9uIGhpc3RvZ3JhbShkYXRhLCBpKSB7XG4gICAgICB2YXIgYmlucyA9IFtdLCB2YWx1ZXMgPSBkYXRhLm1hcCh2YWx1ZXIsIHRoaXMpLCByYW5nZSA9IHJhbmdlci5jYWxsKHRoaXMsIHZhbHVlcywgaSksIHRocmVzaG9sZHMgPSBiaW5uZXIuY2FsbCh0aGlzLCByYW5nZSwgdmFsdWVzLCBpKSwgYmluLCBpID0gLTEsIG4gPSB2YWx1ZXMubGVuZ3RoLCBtID0gdGhyZXNob2xkcy5sZW5ndGggLSAxLCBrID0gZnJlcXVlbmN5ID8gMSA6IDEgLyBuLCB4O1xuICAgICAgd2hpbGUgKCsraSA8IG0pIHtcbiAgICAgICAgYmluID0gYmluc1tpXSA9IFtdO1xuICAgICAgICBiaW4uZHggPSB0aHJlc2hvbGRzW2kgKyAxXSAtIChiaW4ueCA9IHRocmVzaG9sZHNbaV0pO1xuICAgICAgICBiaW4ueSA9IDA7XG4gICAgICB9XG4gICAgICBpZiAobSA+IDApIHtcbiAgICAgICAgaSA9IC0xO1xuICAgICAgICB3aGlsZSAoKytpIDwgbikge1xuICAgICAgICAgIHggPSB2YWx1ZXNbaV07XG4gICAgICAgICAgaWYgKHggPj0gcmFuZ2VbMF0gJiYgeCA8PSByYW5nZVsxXSkge1xuICAgICAgICAgICAgYmluID0gYmluc1tkMy5iaXNlY3QodGhyZXNob2xkcywgeCwgMSwgbSkgLSAxXTtcbiAgICAgICAgICAgIGJpbi55ICs9IGs7XG4gICAgICAgICAgICBiaW4ucHVzaChkYXRhW2ldKTtcbiAgICAgICAgICB9XG4gICAgICAgIH1cbiAgICAgIH1cbiAgICAgIHJldHVybiBiaW5zO1xuICAgIH1cbiAgICBoaXN0b2dyYW0udmFsdWUgPSBmdW5jdGlvbih4KSB7XG4gICAgICBpZiAoIWFyZ3VtZW50cy5sZW5ndGgpIHJldHVybiB2YWx1ZXI7XG4gICAgICB2YWx1ZXIgPSB4O1xuICAgICAgcmV0dXJuIGhpc3RvZ3JhbTtcbiAgICB9O1xuICAgIGhpc3RvZ3JhbS5yYW5nZSA9IGZ1bmN0aW9uKHgpIHtcbiAgICAgIGlmICghYXJndW1lbnRzLmxlbmd0aCkgcmV0dXJuIHJhbmdlcjtcbiAgICAgIHJhbmdlciA9IGQzX2Z1bmN0b3IoeCk7XG4gICAgICByZXR1cm4gaGlzdG9ncmFtO1xuICAgIH07XG4gICAgaGlzdG9ncmFtLmJpbnMgPSBmdW5jdGlvbih4KSB7XG4gICAgICBpZiAoIWFyZ3VtZW50cy5sZW5ndGgpIHJldHVybiBiaW5uZXI7XG4gICAgICBiaW5uZXIgPSB0eXBlb2YgeCA9PT0gXCJudW1iZXJcIiA/IGZ1bmN0aW9uKHJhbmdlKSB7XG4gICAgICAgIHJldHVybiBkM19sYXlvdXRfaGlzdG9ncmFtQmluRml4ZWQocmFuZ2UsIHgpO1xuICAgICAgfSA6IGQzX2Z1bmN0b3IoeCk7XG4gICAgICByZXR1cm4gaGlzdG9ncmFtO1xuICAgIH07XG4gICAgaGlzdG9ncmFtLmZyZXF1ZW5jeSA9IGZ1bmN0aW9uKHgpIHtcbiAgICAgIGlmICghYXJndW1lbnRzLmxlbmd0aCkgcmV0dXJuIGZyZXF1ZW5jeTtcbiAgICAgIGZyZXF1ZW5jeSA9ICEheDtcbiAgICAgIHJldHVybiBoaXN0b2dyYW07XG4gICAgfTtcbiAgICByZXR1cm4gaGlzdG9ncmFtO1xuICB9O1xuICBmdW5jdGlvbiBkM19sYXlvdXRfaGlzdG9ncmFtQmluU3R1cmdlcyhyYW5nZSwgdmFsdWVzKSB7XG4gICAgcmV0dXJuIGQzX2xheW91dF9oaXN0b2dyYW1CaW5GaXhlZChyYW5nZSwgTWF0aC5jZWlsKE1hdGgubG9nKHZhbHVlcy5sZW5ndGgpIC8gTWF0aC5MTjIgKyAxKSk7XG4gIH1cbiAgZnVuY3Rpb24gZDNfbGF5b3V0X2hpc3RvZ3JhbUJpbkZpeGVkKHJhbmdlLCBuKSB7XG4gICAgdmFyIHggPSAtMSwgYiA9ICtyYW5nZVswXSwgbSA9IChyYW5nZVsxXSAtIGIpIC8gbiwgZiA9IFtdO1xuICAgIHdoaWxlICgrK3ggPD0gbikgZlt4XSA9IG0gKiB4ICsgYjtcbiAgICByZXR1cm4gZjtcbiAgfVxuICBmdW5jdGlvbiBkM19sYXlvdXRfaGlzdG9ncmFtUmFuZ2UodmFsdWVzKSB7XG4gICAgcmV0dXJuIFsgZDMubWluKHZhbHVlcyksIGQzLm1heCh2YWx1ZXMpIF07XG4gIH1cbiAgZDMubGF5b3V0LnBhY2sgPSBmdW5jdGlvbigpIHtcbiAgICB2YXIgaGllcmFyY2h5ID0gZDMubGF5b3V0LmhpZXJhcmNoeSgpLnNvcnQoZDNfbGF5b3V0X3BhY2tTb3J0KSwgcGFkZGluZyA9IDAsIHNpemUgPSBbIDEsIDEgXSwgcmFkaXVzO1xuICAgIGZ1bmN0aW9uIHBhY2soZCwgaSkge1xuICAgICAgdmFyIG5vZGVzID0gaGllcmFyY2h5LmNhbGwodGhpcywgZCwgaSksIHJvb3QgPSBub2Rlc1swXSwgdyA9IHNpemVbMF0sIGggPSBzaXplWzFdLCByID0gcmFkaXVzID09IG51bGwgPyBNYXRoLnNxcnQgOiB0eXBlb2YgcmFkaXVzID09PSBcImZ1bmN0aW9uXCIgPyByYWRpdXMgOiBmdW5jdGlvbigpIHtcbiAgICAgICAgcmV0dXJuIHJhZGl1cztcbiAgICAgIH07XG4gICAgICByb290LnggPSByb290LnkgPSAwO1xuICAgICAgZDNfbGF5b3V0X2hpZXJhcmNoeVZpc2l0QWZ0ZXIocm9vdCwgZnVuY3Rpb24oZCkge1xuICAgICAgICBkLnIgPSArcihkLnZhbHVlKTtcbiAgICAgIH0pO1xuICAgICAgZDNfbGF5b3V0X2hpZXJhcmNoeVZpc2l0QWZ0ZXIocm9vdCwgZDNfbGF5b3V0X3BhY2tTaWJsaW5ncyk7XG4gICAgICBpZiAocGFkZGluZykge1xuICAgICAgICB2YXIgZHIgPSBwYWRkaW5nICogKHJhZGl1cyA/IDEgOiBNYXRoLm1heCgyICogcm9vdC5yIC8gdywgMiAqIHJvb3QuciAvIGgpKSAvIDI7XG4gICAgICAgIGQzX2xheW91dF9oaWVyYXJjaHlWaXNpdEFmdGVyKHJvb3QsIGZ1bmN0aW9uKGQpIHtcbiAgICAgICAgICBkLnIgKz0gZHI7XG4gICAgICAgIH0pO1xuICAgICAgICBkM19sYXlvdXRfaGllcmFyY2h5VmlzaXRBZnRlcihyb290LCBkM19sYXlvdXRfcGFja1NpYmxpbmdzKTtcbiAgICAgICAgZDNfbGF5b3V0X2hpZXJhcmNoeVZpc2l0QWZ0ZXIocm9vdCwgZnVuY3Rpb24oZCkge1xuICAgICAgICAgIGQuciAtPSBkcjtcbiAgICAgICAgfSk7XG4gICAgICB9XG4gICAgICBkM19sYXlvdXRfcGFja1RyYW5zZm9ybShyb290LCB3IC8gMiwgaCAvIDIsIHJhZGl1cyA/IDEgOiAxIC8gTWF0aC5tYXgoMiAqIHJvb3QuciAvIHcsIDIgKiByb290LnIgLyBoKSk7XG4gICAgICByZXR1cm4gbm9kZXM7XG4gICAgfVxuICAgIHBhY2suc2l6ZSA9IGZ1bmN0aW9uKF8pIHtcbiAgICAgIGlmICghYXJndW1lbnRzLmxlbmd0aCkgcmV0dXJuIHNpemU7XG4gICAgICBzaXplID0gXztcbiAgICAgIHJldHVybiBwYWNrO1xuICAgIH07XG4gICAgcGFjay5yYWRpdXMgPSBmdW5jdGlvbihfKSB7XG4gICAgICBpZiAoIWFyZ3VtZW50cy5sZW5ndGgpIHJldHVybiByYWRpdXM7XG4gICAgICByYWRpdXMgPSBfID09IG51bGwgfHwgdHlwZW9mIF8gPT09IFwiZnVuY3Rpb25cIiA/IF8gOiArXztcbiAgICAgIHJldHVybiBwYWNrO1xuICAgIH07XG4gICAgcGFjay5wYWRkaW5nID0gZnVuY3Rpb24oXykge1xuICAgICAgaWYgKCFhcmd1bWVudHMubGVuZ3RoKSByZXR1cm4gcGFkZGluZztcbiAgICAgIHBhZGRpbmcgPSArXztcbiAgICAgIHJldHVybiBwYWNrO1xuICAgIH07XG4gICAgcmV0dXJuIGQzX2xheW91dF9oaWVyYXJjaHlSZWJpbmQocGFjaywgaGllcmFyY2h5KTtcbiAgfTtcbiAgZnVuY3Rpb24gZDNfbGF5b3V0X3BhY2tTb3J0KGEsIGIpIHtcbiAgICByZXR1cm4gYS52YWx1ZSAtIGIudmFsdWU7XG4gIH1cbiAgZnVuY3Rpb24gZDNfbGF5b3V0X3BhY2tJbnNlcnQoYSwgYikge1xuICAgIHZhciBjID0gYS5fcGFja19uZXh0O1xuICAgIGEuX3BhY2tfbmV4dCA9IGI7XG4gICAgYi5fcGFja19wcmV2ID0gYTtcbiAgICBiLl9wYWNrX25leHQgPSBjO1xuICAgIGMuX3BhY2tfcHJldiA9IGI7XG4gIH1cbiAgZnVuY3Rpb24gZDNfbGF5b3V0X3BhY2tTcGxpY2UoYSwgYikge1xuICAgIGEuX3BhY2tfbmV4dCA9IGI7XG4gICAgYi5fcGFja19wcmV2ID0gYTtcbiAgfVxuICBmdW5jdGlvbiBkM19sYXlvdXRfcGFja0ludGVyc2VjdHMoYSwgYikge1xuICAgIHZhciBkeCA9IGIueCAtIGEueCwgZHkgPSBiLnkgLSBhLnksIGRyID0gYS5yICsgYi5yO1xuICAgIHJldHVybiAuOTk5ICogZHIgKiBkciA+IGR4ICogZHggKyBkeSAqIGR5O1xuICB9XG4gIGZ1bmN0aW9uIGQzX2xheW91dF9wYWNrU2libGluZ3Mobm9kZSkge1xuICAgIGlmICghKG5vZGVzID0gbm9kZS5jaGlsZHJlbikgfHwgIShuID0gbm9kZXMubGVuZ3RoKSkgcmV0dXJuO1xuICAgIHZhciBub2RlcywgeE1pbiA9IEluZmluaXR5LCB4TWF4ID0gLUluZmluaXR5LCB5TWluID0gSW5maW5pdHksIHlNYXggPSAtSW5maW5pdHksIGEsIGIsIGMsIGksIGosIGssIG47XG4gICAgZnVuY3Rpb24gYm91bmQobm9kZSkge1xuICAgICAgeE1pbiA9IE1hdGgubWluKG5vZGUueCAtIG5vZGUuciwgeE1pbik7XG4gICAgICB4TWF4ID0gTWF0aC5tYXgobm9kZS54ICsgbm9kZS5yLCB4TWF4KTtcbiAgICAgIHlNaW4gPSBNYXRoLm1pbihub2RlLnkgLSBub2RlLnIsIHlNaW4pO1xuICAgICAgeU1heCA9IE1hdGgubWF4KG5vZGUueSArIG5vZGUuciwgeU1heCk7XG4gICAgfVxuICAgIG5vZGVzLmZvckVhY2goZDNfbGF5b3V0X3BhY2tMaW5rKTtcbiAgICBhID0gbm9kZXNbMF07XG4gICAgYS54ID0gLWEucjtcbiAgICBhLnkgPSAwO1xuICAgIGJvdW5kKGEpO1xuICAgIGlmIChuID4gMSkge1xuICAgICAgYiA9IG5vZGVzWzFdO1xuICAgICAgYi54ID0gYi5yO1xuICAgICAgYi55ID0gMDtcbiAgICAgIGJvdW5kKGIpO1xuICAgICAgaWYgKG4gPiAyKSB7XG4gICAgICAgIGMgPSBub2Rlc1syXTtcbiAgICAgICAgZDNfbGF5b3V0X3BhY2tQbGFjZShhLCBiLCBjKTtcbiAgICAgICAgYm91bmQoYyk7XG4gICAgICAgIGQzX2xheW91dF9wYWNrSW5zZXJ0KGEsIGMpO1xuICAgICAgICBhLl9wYWNrX3ByZXYgPSBjO1xuICAgICAgICBkM19sYXlvdXRfcGFja0luc2VydChjLCBiKTtcbiAgICAgICAgYiA9IGEuX3BhY2tfbmV4dDtcbiAgICAgICAgZm9yIChpID0gMzsgaSA8IG47IGkrKykge1xuICAgICAgICAgIGQzX2xheW91dF9wYWNrUGxhY2UoYSwgYiwgYyA9IG5vZGVzW2ldKTtcbiAgICAgICAgICB2YXIgaXNlY3QgPSAwLCBzMSA9IDEsIHMyID0gMTtcbiAgICAgICAgICBmb3IgKGogPSBiLl9wYWNrX25leHQ7IGogIT09IGI7IGogPSBqLl9wYWNrX25leHQsIHMxKyspIHtcbiAgICAgICAgICAgIGlmIChkM19sYXlvdXRfcGFja0ludGVyc2VjdHMoaiwgYykpIHtcbiAgICAgICAgICAgICAgaXNlY3QgPSAxO1xuICAgICAgICAgICAgICBicmVhaztcbiAgICAgICAgICAgIH1cbiAgICAgICAgICB9XG4gICAgICAgICAgaWYgKGlzZWN0ID09IDEpIHtcbiAgICAgICAgICAgIGZvciAoayA9IGEuX3BhY2tfcHJldjsgayAhPT0gai5fcGFja19wcmV2OyBrID0gay5fcGFja19wcmV2LCBzMisrKSB7XG4gICAgICAgICAgICAgIGlmIChkM19sYXlvdXRfcGFja0ludGVyc2VjdHMoaywgYykpIHtcbiAgICAgICAgICAgICAgICBicmVhaztcbiAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgfVxuICAgICAgICAgIH1cbiAgICAgICAgICBpZiAoaXNlY3QpIHtcbiAgICAgICAgICAgIGlmIChzMSA8IHMyIHx8IHMxID09IHMyICYmIGIuciA8IGEucikgZDNfbGF5b3V0X3BhY2tTcGxpY2UoYSwgYiA9IGopOyBlbHNlIGQzX2xheW91dF9wYWNrU3BsaWNlKGEgPSBrLCBiKTtcbiAgICAgICAgICAgIGktLTtcbiAgICAgICAgICB9IGVsc2Uge1xuICAgICAgICAgICAgZDNfbGF5b3V0X3BhY2tJbnNlcnQoYSwgYyk7XG4gICAgICAgICAgICBiID0gYztcbiAgICAgICAgICAgIGJvdW5kKGMpO1xuICAgICAgICAgIH1cbiAgICAgICAgfVxuICAgICAgfVxuICAgIH1cbiAgICB2YXIgY3ggPSAoeE1pbiArIHhNYXgpIC8gMiwgY3kgPSAoeU1pbiArIHlNYXgpIC8gMiwgY3IgPSAwO1xuICAgIGZvciAoaSA9IDA7IGkgPCBuOyBpKyspIHtcbiAgICAgIGMgPSBub2Rlc1tpXTtcbiAgICAgIGMueCAtPSBjeDtcbiAgICAgIGMueSAtPSBjeTtcbiAgICAgIGNyID0gTWF0aC5tYXgoY3IsIGMuciArIE1hdGguc3FydChjLnggKiBjLnggKyBjLnkgKiBjLnkpKTtcbiAgICB9XG4gICAgbm9kZS5yID0gY3I7XG4gICAgbm9kZXMuZm9yRWFjaChkM19sYXlvdXRfcGFja1VubGluayk7XG4gIH1cbiAgZnVuY3Rpb24gZDNfbGF5b3V0X3BhY2tMaW5rKG5vZGUpIHtcbiAgICBub2RlLl9wYWNrX25leHQgPSBub2RlLl9wYWNrX3ByZXYgPSBub2RlO1xuICB9XG4gIGZ1bmN0aW9uIGQzX2xheW91dF9wYWNrVW5saW5rKG5vZGUpIHtcbiAgICBkZWxldGUgbm9kZS5fcGFja19uZXh0O1xuICAgIGRlbGV0ZSBub2RlLl9wYWNrX3ByZXY7XG4gIH1cbiAgZnVuY3Rpb24gZDNfbGF5b3V0X3BhY2tUcmFuc2Zvcm0obm9kZSwgeCwgeSwgaykge1xuICAgIHZhciBjaGlsZHJlbiA9IG5vZGUuY2hpbGRyZW47XG4gICAgbm9kZS54ID0geCArPSBrICogbm9kZS54O1xuICAgIG5vZGUueSA9IHkgKz0gayAqIG5vZGUueTtcbiAgICBub2RlLnIgKj0gaztcbiAgICBpZiAoY2hpbGRyZW4pIHtcbiAgICAgIHZhciBpID0gLTEsIG4gPSBjaGlsZHJlbi5sZW5ndGg7XG4gICAgICB3aGlsZSAoKytpIDwgbikgZDNfbGF5b3V0X3BhY2tUcmFuc2Zvcm0oY2hpbGRyZW5baV0sIHgsIHksIGspO1xuICAgIH1cbiAgfVxuICBmdW5jdGlvbiBkM19sYXlvdXRfcGFja1BsYWNlKGEsIGIsIGMpIHtcbiAgICB2YXIgZGIgPSBhLnIgKyBjLnIsIGR4ID0gYi54IC0gYS54LCBkeSA9IGIueSAtIGEueTtcbiAgICBpZiAoZGIgJiYgKGR4IHx8IGR5KSkge1xuICAgICAgdmFyIGRhID0gYi5yICsgYy5yLCBkYyA9IGR4ICogZHggKyBkeSAqIGR5O1xuICAgICAgZGEgKj0gZGE7XG4gICAgICBkYiAqPSBkYjtcbiAgICAgIHZhciB4ID0gLjUgKyAoZGIgLSBkYSkgLyAoMiAqIGRjKSwgeSA9IE1hdGguc3FydChNYXRoLm1heCgwLCAyICogZGEgKiAoZGIgKyBkYykgLSAoZGIgLT0gZGMpICogZGIgLSBkYSAqIGRhKSkgLyAoMiAqIGRjKTtcbiAgICAgIGMueCA9IGEueCArIHggKiBkeCArIHkgKiBkeTtcbiAgICAgIGMueSA9IGEueSArIHggKiBkeSAtIHkgKiBkeDtcbiAgICB9IGVsc2Uge1xuICAgICAgYy54ID0gYS54ICsgZGI7XG4gICAgICBjLnkgPSBhLnk7XG4gICAgfVxuICB9XG4gIGQzLmxheW91dC50cmVlID0gZnVuY3Rpb24oKSB7XG4gICAgdmFyIGhpZXJhcmNoeSA9IGQzLmxheW91dC5oaWVyYXJjaHkoKS5zb3J0KG51bGwpLnZhbHVlKG51bGwpLCBzZXBhcmF0aW9uID0gZDNfbGF5b3V0X3RyZWVTZXBhcmF0aW9uLCBzaXplID0gWyAxLCAxIF0sIG5vZGVTaXplID0gbnVsbDtcbiAgICBmdW5jdGlvbiB0cmVlKGQsIGkpIHtcbiAgICAgIHZhciBub2RlcyA9IGhpZXJhcmNoeS5jYWxsKHRoaXMsIGQsIGkpLCByb290MCA9IG5vZGVzWzBdLCByb290MSA9IHdyYXBUcmVlKHJvb3QwKTtcbiAgICAgIGQzX2xheW91dF9oaWVyYXJjaHlWaXNpdEFmdGVyKHJvb3QxLCBmaXJzdFdhbGspLCByb290MS5wYXJlbnQubSA9IC1yb290MS56O1xuICAgICAgZDNfbGF5b3V0X2hpZXJhcmNoeVZpc2l0QmVmb3JlKHJvb3QxLCBzZWNvbmRXYWxrKTtcbiAgICAgIGlmIChub2RlU2l6ZSkgZDNfbGF5b3V0X2hpZXJhcmNoeVZpc2l0QmVmb3JlKHJvb3QwLCBzaXplTm9kZSk7IGVsc2Uge1xuICAgICAgICB2YXIgbGVmdCA9IHJvb3QwLCByaWdodCA9IHJvb3QwLCBib3R0b20gPSByb290MDtcbiAgICAgICAgZDNfbGF5b3V0X2hpZXJhcmNoeVZpc2l0QmVmb3JlKHJvb3QwLCBmdW5jdGlvbihub2RlKSB7XG4gICAgICAgICAgaWYgKG5vZGUueCA8IGxlZnQueCkgbGVmdCA9IG5vZGU7XG4gICAgICAgICAgaWYgKG5vZGUueCA+IHJpZ2h0LngpIHJpZ2h0ID0gbm9kZTtcbiAgICAgICAgICBpZiAobm9kZS5kZXB0aCA+IGJvdHRvbS5kZXB0aCkgYm90dG9tID0gbm9kZTtcbiAgICAgICAgfSk7XG4gICAgICAgIHZhciB0eCA9IHNlcGFyYXRpb24obGVmdCwgcmlnaHQpIC8gMiAtIGxlZnQueCwga3ggPSBzaXplWzBdIC8gKHJpZ2h0LnggKyBzZXBhcmF0aW9uKHJpZ2h0LCBsZWZ0KSAvIDIgKyB0eCksIGt5ID0gc2l6ZVsxXSAvIChib3R0b20uZGVwdGggfHwgMSk7XG4gICAgICAgIGQzX2xheW91dF9oaWVyYXJjaHlWaXNpdEJlZm9yZShyb290MCwgZnVuY3Rpb24obm9kZSkge1xuICAgICAgICAgIG5vZGUueCA9IChub2RlLnggKyB0eCkgKiBreDtcbiAgICAgICAgICBub2RlLnkgPSBub2RlLmRlcHRoICoga3k7XG4gICAgICAgIH0pO1xuICAgICAgfVxuICAgICAgcmV0dXJuIG5vZGVzO1xuICAgIH1cbiAgICBmdW5jdGlvbiB3cmFwVHJlZShyb290MCkge1xuICAgICAgdmFyIHJvb3QxID0ge1xuICAgICAgICBBOiBudWxsLFxuICAgICAgICBjaGlsZHJlbjogWyByb290MCBdXG4gICAgICB9LCBxdWV1ZSA9IFsgcm9vdDEgXSwgbm9kZTE7XG4gICAgICB3aGlsZSAoKG5vZGUxID0gcXVldWUucG9wKCkpICE9IG51bGwpIHtcbiAgICAgICAgZm9yICh2YXIgY2hpbGRyZW4gPSBub2RlMS5jaGlsZHJlbiwgY2hpbGQsIGkgPSAwLCBuID0gY2hpbGRyZW4ubGVuZ3RoOyBpIDwgbjsgKytpKSB7XG4gICAgICAgICAgcXVldWUucHVzaCgoY2hpbGRyZW5baV0gPSBjaGlsZCA9IHtcbiAgICAgICAgICAgIF86IGNoaWxkcmVuW2ldLFxuICAgICAgICAgICAgcGFyZW50OiBub2RlMSxcbiAgICAgICAgICAgIGNoaWxkcmVuOiAoY2hpbGQgPSBjaGlsZHJlbltpXS5jaGlsZHJlbikgJiYgY2hpbGQuc2xpY2UoKSB8fCBbXSxcbiAgICAgICAgICAgIEE6IG51bGwsXG4gICAgICAgICAgICBhOiBudWxsLFxuICAgICAgICAgICAgejogMCxcbiAgICAgICAgICAgIG06IDAsXG4gICAgICAgICAgICBjOiAwLFxuICAgICAgICAgICAgczogMCxcbiAgICAgICAgICAgIHQ6IG51bGwsXG4gICAgICAgICAgICBpOiBpXG4gICAgICAgICAgfSkuYSA9IGNoaWxkKTtcbiAgICAgICAgfVxuICAgICAgfVxuICAgICAgcmV0dXJuIHJvb3QxLmNoaWxkcmVuWzBdO1xuICAgIH1cbiAgICBmdW5jdGlvbiBmaXJzdFdhbGsodikge1xuICAgICAgdmFyIGNoaWxkcmVuID0gdi5jaGlsZHJlbiwgc2libGluZ3MgPSB2LnBhcmVudC5jaGlsZHJlbiwgdyA9IHYuaSA/IHNpYmxpbmdzW3YuaSAtIDFdIDogbnVsbDtcbiAgICAgIGlmIChjaGlsZHJlbi5sZW5ndGgpIHtcbiAgICAgICAgZDNfbGF5b3V0X3RyZWVTaGlmdCh2KTtcbiAgICAgICAgdmFyIG1pZHBvaW50ID0gKGNoaWxkcmVuWzBdLnogKyBjaGlsZHJlbltjaGlsZHJlbi5sZW5ndGggLSAxXS56KSAvIDI7XG4gICAgICAgIGlmICh3KSB7XG4gICAgICAgICAgdi56ID0gdy56ICsgc2VwYXJhdGlvbih2Ll8sIHcuXyk7XG4gICAgICAgICAgdi5tID0gdi56IC0gbWlkcG9pbnQ7XG4gICAgICAgIH0gZWxzZSB7XG4gICAgICAgICAgdi56ID0gbWlkcG9pbnQ7XG4gICAgICAgIH1cbiAgICAgIH0gZWxzZSBpZiAodykge1xuICAgICAgICB2LnogPSB3LnogKyBzZXBhcmF0aW9uKHYuXywgdy5fKTtcbiAgICAgIH1cbiAgICAgIHYucGFyZW50LkEgPSBhcHBvcnRpb24odiwgdywgdi5wYXJlbnQuQSB8fCBzaWJsaW5nc1swXSk7XG4gICAgfVxuICAgIGZ1bmN0aW9uIHNlY29uZFdhbGsodikge1xuICAgICAgdi5fLnggPSB2LnogKyB2LnBhcmVudC5tO1xuICAgICAgdi5tICs9IHYucGFyZW50Lm07XG4gICAgfVxuICAgIGZ1bmN0aW9uIGFwcG9ydGlvbih2LCB3LCBhbmNlc3Rvcikge1xuICAgICAgaWYgKHcpIHtcbiAgICAgICAgdmFyIHZpcCA9IHYsIHZvcCA9IHYsIHZpbSA9IHcsIHZvbSA9IHZpcC5wYXJlbnQuY2hpbGRyZW5bMF0sIHNpcCA9IHZpcC5tLCBzb3AgPSB2b3AubSwgc2ltID0gdmltLm0sIHNvbSA9IHZvbS5tLCBzaGlmdDtcbiAgICAgICAgd2hpbGUgKHZpbSA9IGQzX2xheW91dF90cmVlUmlnaHQodmltKSwgdmlwID0gZDNfbGF5b3V0X3RyZWVMZWZ0KHZpcCksIHZpbSAmJiB2aXApIHtcbiAgICAgICAgICB2b20gPSBkM19sYXlvdXRfdHJlZUxlZnQodm9tKTtcbiAgICAgICAgICB2b3AgPSBkM19sYXlvdXRfdHJlZVJpZ2h0KHZvcCk7XG4gICAgICAgICAgdm9wLmEgPSB2O1xuICAgICAgICAgIHNoaWZ0ID0gdmltLnogKyBzaW0gLSB2aXAueiAtIHNpcCArIHNlcGFyYXRpb24odmltLl8sIHZpcC5fKTtcbiAgICAgICAgICBpZiAoc2hpZnQgPiAwKSB7XG4gICAgICAgICAgICBkM19sYXlvdXRfdHJlZU1vdmUoZDNfbGF5b3V0X3RyZWVBbmNlc3Rvcih2aW0sIHYsIGFuY2VzdG9yKSwgdiwgc2hpZnQpO1xuICAgICAgICAgICAgc2lwICs9IHNoaWZ0O1xuICAgICAgICAgICAgc29wICs9IHNoaWZ0O1xuICAgICAgICAgIH1cbiAgICAgICAgICBzaW0gKz0gdmltLm07XG4gICAgICAgICAgc2lwICs9IHZpcC5tO1xuICAgICAgICAgIHNvbSArPSB2b20ubTtcbiAgICAgICAgICBzb3AgKz0gdm9wLm07XG4gICAgICAgIH1cbiAgICAgICAgaWYgKHZpbSAmJiAhZDNfbGF5b3V0X3RyZWVSaWdodCh2b3ApKSB7XG4gICAgICAgICAgdm9wLnQgPSB2aW07XG4gICAgICAgICAgdm9wLm0gKz0gc2ltIC0gc29wO1xuICAgICAgICB9XG4gICAgICAgIGlmICh2aXAgJiYgIWQzX2xheW91dF90cmVlTGVmdCh2b20pKSB7XG4gICAgICAgICAgdm9tLnQgPSB2aXA7XG4gICAgICAgICAgdm9tLm0gKz0gc2lwIC0gc29tO1xuICAgICAgICAgIGFuY2VzdG9yID0gdjtcbiAgICAgICAgfVxuICAgICAgfVxuICAgICAgcmV0dXJuIGFuY2VzdG9yO1xuICAgIH1cbiAgICBmdW5jdGlvbiBzaXplTm9kZShub2RlKSB7XG4gICAgICBub2RlLnggKj0gc2l6ZVswXTtcbiAgICAgIG5vZGUueSA9IG5vZGUuZGVwdGggKiBzaXplWzFdO1xuICAgIH1cbiAgICB0cmVlLnNlcGFyYXRpb24gPSBmdW5jdGlvbih4KSB7XG4gICAgICBpZiAoIWFyZ3VtZW50cy5sZW5ndGgpIHJldHVybiBzZXBhcmF0aW9uO1xuICAgICAgc2VwYXJhdGlvbiA9IHg7XG4gICAgICByZXR1cm4gdHJlZTtcbiAgICB9O1xuICAgIHRyZWUuc2l6ZSA9IGZ1bmN0aW9uKHgpIHtcbiAgICAgIGlmICghYXJndW1lbnRzLmxlbmd0aCkgcmV0dXJuIG5vZGVTaXplID8gbnVsbCA6IHNpemU7XG4gICAgICBub2RlU2l6ZSA9IChzaXplID0geCkgPT0gbnVsbCA/IHNpemVOb2RlIDogbnVsbDtcbiAgICAgIHJldHVybiB0cmVlO1xuICAgIH07XG4gICAgdHJlZS5ub2RlU2l6ZSA9IGZ1bmN0aW9uKHgpIHtcbiAgICAgIGlmICghYXJndW1lbnRzLmxlbmd0aCkgcmV0dXJuIG5vZGVTaXplID8gc2l6ZSA6IG51bGw7XG4gICAgICBub2RlU2l6ZSA9IChzaXplID0geCkgPT0gbnVsbCA/IG51bGwgOiBzaXplTm9kZTtcbiAgICAgIHJldHVybiB0cmVlO1xuICAgIH07XG4gICAgcmV0dXJuIGQzX2xheW91dF9oaWVyYXJjaHlSZWJpbmQodHJlZSwgaGllcmFyY2h5KTtcbiAgfTtcbiAgZnVuY3Rpb24gZDNfbGF5b3V0X3RyZWVTZXBhcmF0aW9uKGEsIGIpIHtcbiAgICByZXR1cm4gYS5wYXJlbnQgPT0gYi5wYXJlbnQgPyAxIDogMjtcbiAgfVxuICBmdW5jdGlvbiBkM19sYXlvdXRfdHJlZUxlZnQodikge1xuICAgIHZhciBjaGlsZHJlbiA9IHYuY2hpbGRyZW47XG4gICAgcmV0dXJuIGNoaWxkcmVuLmxlbmd0aCA/IGNoaWxkcmVuWzBdIDogdi50O1xuICB9XG4gIGZ1bmN0aW9uIGQzX2xheW91dF90cmVlUmlnaHQodikge1xuICAgIHZhciBjaGlsZHJlbiA9IHYuY2hpbGRyZW4sIG47XG4gICAgcmV0dXJuIChuID0gY2hpbGRyZW4ubGVuZ3RoKSA/IGNoaWxkcmVuW24gLSAxXSA6IHYudDtcbiAgfVxuICBmdW5jdGlvbiBkM19sYXlvdXRfdHJlZU1vdmUod20sIHdwLCBzaGlmdCkge1xuICAgIHZhciBjaGFuZ2UgPSBzaGlmdCAvICh3cC5pIC0gd20uaSk7XG4gICAgd3AuYyAtPSBjaGFuZ2U7XG4gICAgd3AucyArPSBzaGlmdDtcbiAgICB3bS5jICs9IGNoYW5nZTtcbiAgICB3cC56ICs9IHNoaWZ0O1xuICAgIHdwLm0gKz0gc2hpZnQ7XG4gIH1cbiAgZnVuY3Rpb24gZDNfbGF5b3V0X3RyZWVTaGlmdCh2KSB7XG4gICAgdmFyIHNoaWZ0ID0gMCwgY2hhbmdlID0gMCwgY2hpbGRyZW4gPSB2LmNoaWxkcmVuLCBpID0gY2hpbGRyZW4ubGVuZ3RoLCB3O1xuICAgIHdoaWxlICgtLWkgPj0gMCkge1xuICAgICAgdyA9IGNoaWxkcmVuW2ldO1xuICAgICAgdy56ICs9IHNoaWZ0O1xuICAgICAgdy5tICs9IHNoaWZ0O1xuICAgICAgc2hpZnQgKz0gdy5zICsgKGNoYW5nZSArPSB3LmMpO1xuICAgIH1cbiAgfVxuICBmdW5jdGlvbiBkM19sYXlvdXRfdHJlZUFuY2VzdG9yKHZpbSwgdiwgYW5jZXN0b3IpIHtcbiAgICByZXR1cm4gdmltLmEucGFyZW50ID09PSB2LnBhcmVudCA/IHZpbS5hIDogYW5jZXN0b3I7XG4gIH1cbiAgZDMubGF5b3V0LmNsdXN0ZXIgPSBmdW5jdGlvbigpIHtcbiAgICB2YXIgaGllcmFyY2h5ID0gZDMubGF5b3V0LmhpZXJhcmNoeSgpLnNvcnQobnVsbCkudmFsdWUobnVsbCksIHNlcGFyYXRpb24gPSBkM19sYXlvdXRfdHJlZVNlcGFyYXRpb24sIHNpemUgPSBbIDEsIDEgXSwgbm9kZVNpemUgPSBmYWxzZTtcbiAgICBmdW5jdGlvbiBjbHVzdGVyKGQsIGkpIHtcbiAgICAgIHZhciBub2RlcyA9IGhpZXJhcmNoeS5jYWxsKHRoaXMsIGQsIGkpLCByb290ID0gbm9kZXNbMF0sIHByZXZpb3VzTm9kZSwgeCA9IDA7XG4gICAgICBkM19sYXlvdXRfaGllcmFyY2h5VmlzaXRBZnRlcihyb290LCBmdW5jdGlvbihub2RlKSB7XG4gICAgICAgIHZhciBjaGlsZHJlbiA9IG5vZGUuY2hpbGRyZW47XG4gICAgICAgIGlmIChjaGlsZHJlbiAmJiBjaGlsZHJlbi5sZW5ndGgpIHtcbiAgICAgICAgICBub2RlLnggPSBkM19sYXlvdXRfY2x1c3RlclgoY2hpbGRyZW4pO1xuICAgICAgICAgIG5vZGUueSA9IGQzX2xheW91dF9jbHVzdGVyWShjaGlsZHJlbik7XG4gICAgICAgIH0gZWxzZSB7XG4gICAgICAgICAgbm9kZS54ID0gcHJldmlvdXNOb2RlID8geCArPSBzZXBhcmF0aW9uKG5vZGUsIHByZXZpb3VzTm9kZSkgOiAwO1xuICAgICAgICAgIG5vZGUueSA9IDA7XG4gICAgICAgICAgcHJldmlvdXNOb2RlID0gbm9kZTtcbiAgICAgICAgfVxuICAgICAgfSk7XG4gICAgICB2YXIgbGVmdCA9IGQzX2xheW91dF9jbHVzdGVyTGVmdChyb290KSwgcmlnaHQgPSBkM19sYXlvdXRfY2x1c3RlclJpZ2h0KHJvb3QpLCB4MCA9IGxlZnQueCAtIHNlcGFyYXRpb24obGVmdCwgcmlnaHQpIC8gMiwgeDEgPSByaWdodC54ICsgc2VwYXJhdGlvbihyaWdodCwgbGVmdCkgLyAyO1xuICAgICAgZDNfbGF5b3V0X2hpZXJhcmNoeVZpc2l0QWZ0ZXIocm9vdCwgbm9kZVNpemUgPyBmdW5jdGlvbihub2RlKSB7XG4gICAgICAgIG5vZGUueCA9IChub2RlLnggLSByb290LngpICogc2l6ZVswXTtcbiAgICAgICAgbm9kZS55ID0gKHJvb3QueSAtIG5vZGUueSkgKiBzaXplWzFdO1xuICAgICAgfSA6IGZ1bmN0aW9uKG5vZGUpIHtcbiAgICAgICAgbm9kZS54ID0gKG5vZGUueCAtIHgwKSAvICh4MSAtIHgwKSAqIHNpemVbMF07XG4gICAgICAgIG5vZGUueSA9ICgxIC0gKHJvb3QueSA/IG5vZGUueSAvIHJvb3QueSA6IDEpKSAqIHNpemVbMV07XG4gICAgICB9KTtcbiAgICAgIHJldHVybiBub2RlcztcbiAgICB9XG4gICAgY2x1c3Rlci5zZXBhcmF0aW9uID0gZnVuY3Rpb24oeCkge1xuICAgICAgaWYgKCFhcmd1bWVudHMubGVuZ3RoKSByZXR1cm4gc2VwYXJhdGlvbjtcbiAgICAgIHNlcGFyYXRpb24gPSB4O1xuICAgICAgcmV0dXJuIGNsdXN0ZXI7XG4gICAgfTtcbiAgICBjbHVzdGVyLnNpemUgPSBmdW5jdGlvbih4KSB7XG4gICAgICBpZiAoIWFyZ3VtZW50cy5sZW5ndGgpIHJldHVybiBub2RlU2l6ZSA/IG51bGwgOiBzaXplO1xuICAgICAgbm9kZVNpemUgPSAoc2l6ZSA9IHgpID09IG51bGw7XG4gICAgICByZXR1cm4gY2x1c3RlcjtcbiAgICB9O1xuICAgIGNsdXN0ZXIubm9kZVNpemUgPSBmdW5jdGlvbih4KSB7XG4gICAgICBpZiAoIWFyZ3VtZW50cy5sZW5ndGgpIHJldHVybiBub2RlU2l6ZSA/IHNpemUgOiBudWxsO1xuICAgICAgbm9kZVNpemUgPSAoc2l6ZSA9IHgpICE9IG51bGw7XG4gICAgICByZXR1cm4gY2x1c3RlcjtcbiAgICB9O1xuICAgIHJldHVybiBkM19sYXlvdXRfaGllcmFyY2h5UmViaW5kKGNsdXN0ZXIsIGhpZXJhcmNoeSk7XG4gIH07XG4gIGZ1bmN0aW9uIGQzX2xheW91dF9jbHVzdGVyWShjaGlsZHJlbikge1xuICAgIHJldHVybiAxICsgZDMubWF4KGNoaWxkcmVuLCBmdW5jdGlvbihjaGlsZCkge1xuICAgICAgcmV0dXJuIGNoaWxkLnk7XG4gICAgfSk7XG4gIH1cbiAgZnVuY3Rpb24gZDNfbGF5b3V0X2NsdXN0ZXJYKGNoaWxkcmVuKSB7XG4gICAgcmV0dXJuIGNoaWxkcmVuLnJlZHVjZShmdW5jdGlvbih4LCBjaGlsZCkge1xuICAgICAgcmV0dXJuIHggKyBjaGlsZC54O1xuICAgIH0sIDApIC8gY2hpbGRyZW4ubGVuZ3RoO1xuICB9XG4gIGZ1bmN0aW9uIGQzX2xheW91dF9jbHVzdGVyTGVmdChub2RlKSB7XG4gICAgdmFyIGNoaWxkcmVuID0gbm9kZS5jaGlsZHJlbjtcbiAgICByZXR1cm4gY2hpbGRyZW4gJiYgY2hpbGRyZW4ubGVuZ3RoID8gZDNfbGF5b3V0X2NsdXN0ZXJMZWZ0KGNoaWxkcmVuWzBdKSA6IG5vZGU7XG4gIH1cbiAgZnVuY3Rpb24gZDNfbGF5b3V0X2NsdXN0ZXJSaWdodChub2RlKSB7XG4gICAgdmFyIGNoaWxkcmVuID0gbm9kZS5jaGlsZHJlbiwgbjtcbiAgICByZXR1cm4gY2hpbGRyZW4gJiYgKG4gPSBjaGlsZHJlbi5sZW5ndGgpID8gZDNfbGF5b3V0X2NsdXN0ZXJSaWdodChjaGlsZHJlbltuIC0gMV0pIDogbm9kZTtcbiAgfVxuICBkMy5sYXlvdXQudHJlZW1hcCA9IGZ1bmN0aW9uKCkge1xuICAgIHZhciBoaWVyYXJjaHkgPSBkMy5sYXlvdXQuaGllcmFyY2h5KCksIHJvdW5kID0gTWF0aC5yb3VuZCwgc2l6ZSA9IFsgMSwgMSBdLCBwYWRkaW5nID0gbnVsbCwgcGFkID0gZDNfbGF5b3V0X3RyZWVtYXBQYWROdWxsLCBzdGlja3kgPSBmYWxzZSwgc3RpY2tpZXMsIG1vZGUgPSBcInNxdWFyaWZ5XCIsIHJhdGlvID0gLjUgKiAoMSArIE1hdGguc3FydCg1KSk7XG4gICAgZnVuY3Rpb24gc2NhbGUoY2hpbGRyZW4sIGspIHtcbiAgICAgIHZhciBpID0gLTEsIG4gPSBjaGlsZHJlbi5sZW5ndGgsIGNoaWxkLCBhcmVhO1xuICAgICAgd2hpbGUgKCsraSA8IG4pIHtcbiAgICAgICAgYXJlYSA9IChjaGlsZCA9IGNoaWxkcmVuW2ldKS52YWx1ZSAqIChrIDwgMCA/IDAgOiBrKTtcbiAgICAgICAgY2hpbGQuYXJlYSA9IGlzTmFOKGFyZWEpIHx8IGFyZWEgPD0gMCA/IDAgOiBhcmVhO1xuICAgICAgfVxuICAgIH1cbiAgICBmdW5jdGlvbiBzcXVhcmlmeShub2RlKSB7XG4gICAgICB2YXIgY2hpbGRyZW4gPSBub2RlLmNoaWxkcmVuO1xuICAgICAgaWYgKGNoaWxkcmVuICYmIGNoaWxkcmVuLmxlbmd0aCkge1xuICAgICAgICB2YXIgcmVjdCA9IHBhZChub2RlKSwgcm93ID0gW10sIHJlbWFpbmluZyA9IGNoaWxkcmVuLnNsaWNlKCksIGNoaWxkLCBiZXN0ID0gSW5maW5pdHksIHNjb3JlLCB1ID0gbW9kZSA9PT0gXCJzbGljZVwiID8gcmVjdC5keCA6IG1vZGUgPT09IFwiZGljZVwiID8gcmVjdC5keSA6IG1vZGUgPT09IFwic2xpY2UtZGljZVwiID8gbm9kZS5kZXB0aCAmIDEgPyByZWN0LmR5IDogcmVjdC5keCA6IE1hdGgubWluKHJlY3QuZHgsIHJlY3QuZHkpLCBuO1xuICAgICAgICBzY2FsZShyZW1haW5pbmcsIHJlY3QuZHggKiByZWN0LmR5IC8gbm9kZS52YWx1ZSk7XG4gICAgICAgIHJvdy5hcmVhID0gMDtcbiAgICAgICAgd2hpbGUgKChuID0gcmVtYWluaW5nLmxlbmd0aCkgPiAwKSB7XG4gICAgICAgICAgcm93LnB1c2goY2hpbGQgPSByZW1haW5pbmdbbiAtIDFdKTtcbiAgICAgICAgICByb3cuYXJlYSArPSBjaGlsZC5hcmVhO1xuICAgICAgICAgIGlmIChtb2RlICE9PSBcInNxdWFyaWZ5XCIgfHwgKHNjb3JlID0gd29yc3Qocm93LCB1KSkgPD0gYmVzdCkge1xuICAgICAgICAgICAgcmVtYWluaW5nLnBvcCgpO1xuICAgICAgICAgICAgYmVzdCA9IHNjb3JlO1xuICAgICAgICAgIH0gZWxzZSB7XG4gICAgICAgICAgICByb3cuYXJlYSAtPSByb3cucG9wKCkuYXJlYTtcbiAgICAgICAgICAgIHBvc2l0aW9uKHJvdywgdSwgcmVjdCwgZmFsc2UpO1xuICAgICAgICAgICAgdSA9IE1hdGgubWluKHJlY3QuZHgsIHJlY3QuZHkpO1xuICAgICAgICAgICAgcm93Lmxlbmd0aCA9IHJvdy5hcmVhID0gMDtcbiAgICAgICAgICAgIGJlc3QgPSBJbmZpbml0eTtcbiAgICAgICAgICB9XG4gICAgICAgIH1cbiAgICAgICAgaWYgKHJvdy5sZW5ndGgpIHtcbiAgICAgICAgICBwb3NpdGlvbihyb3csIHUsIHJlY3QsIHRydWUpO1xuICAgICAgICAgIHJvdy5sZW5ndGggPSByb3cuYXJlYSA9IDA7XG4gICAgICAgIH1cbiAgICAgICAgY2hpbGRyZW4uZm9yRWFjaChzcXVhcmlmeSk7XG4gICAgICB9XG4gICAgfVxuICAgIGZ1bmN0aW9uIHN0aWNraWZ5KG5vZGUpIHtcbiAgICAgIHZhciBjaGlsZHJlbiA9IG5vZGUuY2hpbGRyZW47XG4gICAgICBpZiAoY2hpbGRyZW4gJiYgY2hpbGRyZW4ubGVuZ3RoKSB7XG4gICAgICAgIHZhciByZWN0ID0gcGFkKG5vZGUpLCByZW1haW5pbmcgPSBjaGlsZHJlbi5zbGljZSgpLCBjaGlsZCwgcm93ID0gW107XG4gICAgICAgIHNjYWxlKHJlbWFpbmluZywgcmVjdC5keCAqIHJlY3QuZHkgLyBub2RlLnZhbHVlKTtcbiAgICAgICAgcm93LmFyZWEgPSAwO1xuICAgICAgICB3aGlsZSAoY2hpbGQgPSByZW1haW5pbmcucG9wKCkpIHtcbiAgICAgICAgICByb3cucHVzaChjaGlsZCk7XG4gICAgICAgICAgcm93LmFyZWEgKz0gY2hpbGQuYXJlYTtcbiAgICAgICAgICBpZiAoY2hpbGQueiAhPSBudWxsKSB7XG4gICAgICAgICAgICBwb3NpdGlvbihyb3csIGNoaWxkLnogPyByZWN0LmR4IDogcmVjdC5keSwgcmVjdCwgIXJlbWFpbmluZy5sZW5ndGgpO1xuICAgICAgICAgICAgcm93Lmxlbmd0aCA9IHJvdy5hcmVhID0gMDtcbiAgICAgICAgICB9XG4gICAgICAgIH1cbiAgICAgICAgY2hpbGRyZW4uZm9yRWFjaChzdGlja2lmeSk7XG4gICAgICB9XG4gICAgfVxuICAgIGZ1bmN0aW9uIHdvcnN0KHJvdywgdSkge1xuICAgICAgdmFyIHMgPSByb3cuYXJlYSwgciwgcm1heCA9IDAsIHJtaW4gPSBJbmZpbml0eSwgaSA9IC0xLCBuID0gcm93Lmxlbmd0aDtcbiAgICAgIHdoaWxlICgrK2kgPCBuKSB7XG4gICAgICAgIGlmICghKHIgPSByb3dbaV0uYXJlYSkpIGNvbnRpbnVlO1xuICAgICAgICBpZiAociA8IHJtaW4pIHJtaW4gPSByO1xuICAgICAgICBpZiAociA+IHJtYXgpIHJtYXggPSByO1xuICAgICAgfVxuICAgICAgcyAqPSBzO1xuICAgICAgdSAqPSB1O1xuICAgICAgcmV0dXJuIHMgPyBNYXRoLm1heCh1ICogcm1heCAqIHJhdGlvIC8gcywgcyAvICh1ICogcm1pbiAqIHJhdGlvKSkgOiBJbmZpbml0eTtcbiAgICB9XG4gICAgZnVuY3Rpb24gcG9zaXRpb24ocm93LCB1LCByZWN0LCBmbHVzaCkge1xuICAgICAgdmFyIGkgPSAtMSwgbiA9IHJvdy5sZW5ndGgsIHggPSByZWN0LngsIHkgPSByZWN0LnksIHYgPSB1ID8gcm91bmQocm93LmFyZWEgLyB1KSA6IDAsIG87XG4gICAgICBpZiAodSA9PSByZWN0LmR4KSB7XG4gICAgICAgIGlmIChmbHVzaCB8fCB2ID4gcmVjdC5keSkgdiA9IHJlY3QuZHk7XG4gICAgICAgIHdoaWxlICgrK2kgPCBuKSB7XG4gICAgICAgICAgbyA9IHJvd1tpXTtcbiAgICAgICAgICBvLnggPSB4O1xuICAgICAgICAgIG8ueSA9IHk7XG4gICAgICAgICAgby5keSA9IHY7XG4gICAgICAgICAgeCArPSBvLmR4ID0gTWF0aC5taW4ocmVjdC54ICsgcmVjdC5keCAtIHgsIHYgPyByb3VuZChvLmFyZWEgLyB2KSA6IDApO1xuICAgICAgICB9XG4gICAgICAgIG8ueiA9IHRydWU7XG4gICAgICAgIG8uZHggKz0gcmVjdC54ICsgcmVjdC5keCAtIHg7XG4gICAgICAgIHJlY3QueSArPSB2O1xuICAgICAgICByZWN0LmR5IC09IHY7XG4gICAgICB9IGVsc2Uge1xuICAgICAgICBpZiAoZmx1c2ggfHwgdiA+IHJlY3QuZHgpIHYgPSByZWN0LmR4O1xuICAgICAgICB3aGlsZSAoKytpIDwgbikge1xuICAgICAgICAgIG8gPSByb3dbaV07XG4gICAgICAgICAgby54ID0geDtcbiAgICAgICAgICBvLnkgPSB5O1xuICAgICAgICAgIG8uZHggPSB2O1xuICAgICAgICAgIHkgKz0gby5keSA9IE1hdGgubWluKHJlY3QueSArIHJlY3QuZHkgLSB5LCB2ID8gcm91bmQoby5hcmVhIC8gdikgOiAwKTtcbiAgICAgICAgfVxuICAgICAgICBvLnogPSBmYWxzZTtcbiAgICAgICAgby5keSArPSByZWN0LnkgKyByZWN0LmR5IC0geTtcbiAgICAgICAgcmVjdC54ICs9IHY7XG4gICAgICAgIHJlY3QuZHggLT0gdjtcbiAgICAgIH1cbiAgICB9XG4gICAgZnVuY3Rpb24gdHJlZW1hcChkKSB7XG4gICAgICB2YXIgbm9kZXMgPSBzdGlja2llcyB8fCBoaWVyYXJjaHkoZCksIHJvb3QgPSBub2Rlc1swXTtcbiAgICAgIHJvb3QueCA9IHJvb3QueSA9IDA7XG4gICAgICBpZiAocm9vdC52YWx1ZSkgcm9vdC5keCA9IHNpemVbMF0sIHJvb3QuZHkgPSBzaXplWzFdOyBlbHNlIHJvb3QuZHggPSByb290LmR5ID0gMDtcbiAgICAgIGlmIChzdGlja2llcykgaGllcmFyY2h5LnJldmFsdWUocm9vdCk7XG4gICAgICBzY2FsZShbIHJvb3QgXSwgcm9vdC5keCAqIHJvb3QuZHkgLyByb290LnZhbHVlKTtcbiAgICAgIChzdGlja2llcyA/IHN0aWNraWZ5IDogc3F1YXJpZnkpKHJvb3QpO1xuICAgICAgaWYgKHN0aWNreSkgc3RpY2tpZXMgPSBub2RlcztcbiAgICAgIHJldHVybiBub2RlcztcbiAgICB9XG4gICAgdHJlZW1hcC5zaXplID0gZnVuY3Rpb24oeCkge1xuICAgICAgaWYgKCFhcmd1bWVudHMubGVuZ3RoKSByZXR1cm4gc2l6ZTtcbiAgICAgIHNpemUgPSB4O1xuICAgICAgcmV0dXJuIHRyZWVtYXA7XG4gICAgfTtcbiAgICB0cmVlbWFwLnBhZGRpbmcgPSBmdW5jdGlvbih4KSB7XG4gICAgICBpZiAoIWFyZ3VtZW50cy5sZW5ndGgpIHJldHVybiBwYWRkaW5nO1xuICAgICAgZnVuY3Rpb24gcGFkRnVuY3Rpb24obm9kZSkge1xuICAgICAgICB2YXIgcCA9IHguY2FsbCh0cmVlbWFwLCBub2RlLCBub2RlLmRlcHRoKTtcbiAgICAgICAgcmV0dXJuIHAgPT0gbnVsbCA/IGQzX2xheW91dF90cmVlbWFwUGFkTnVsbChub2RlKSA6IGQzX2xheW91dF90cmVlbWFwUGFkKG5vZGUsIHR5cGVvZiBwID09PSBcIm51bWJlclwiID8gWyBwLCBwLCBwLCBwIF0gOiBwKTtcbiAgICAgIH1cbiAgICAgIGZ1bmN0aW9uIHBhZENvbnN0YW50KG5vZGUpIHtcbiAgICAgICAgcmV0dXJuIGQzX2xheW91dF90cmVlbWFwUGFkKG5vZGUsIHgpO1xuICAgICAgfVxuICAgICAgdmFyIHR5cGU7XG4gICAgICBwYWQgPSAocGFkZGluZyA9IHgpID09IG51bGwgPyBkM19sYXlvdXRfdHJlZW1hcFBhZE51bGwgOiAodHlwZSA9IHR5cGVvZiB4KSA9PT0gXCJmdW5jdGlvblwiID8gcGFkRnVuY3Rpb24gOiB0eXBlID09PSBcIm51bWJlclwiID8gKHggPSBbIHgsIHgsIHgsIHggXSwgXG4gICAgICBwYWRDb25zdGFudCkgOiBwYWRDb25zdGFudDtcbiAgICAgIHJldHVybiB0cmVlbWFwO1xuICAgIH07XG4gICAgdHJlZW1hcC5yb3VuZCA9IGZ1bmN0aW9uKHgpIHtcbiAgICAgIGlmICghYXJndW1lbnRzLmxlbmd0aCkgcmV0dXJuIHJvdW5kICE9IE51bWJlcjtcbiAgICAgIHJvdW5kID0geCA/IE1hdGgucm91bmQgOiBOdW1iZXI7XG4gICAgICByZXR1cm4gdHJlZW1hcDtcbiAgICB9O1xuICAgIHRyZWVtYXAuc3RpY2t5ID0gZnVuY3Rpb24oeCkge1xuICAgICAgaWYgKCFhcmd1bWVudHMubGVuZ3RoKSByZXR1cm4gc3RpY2t5O1xuICAgICAgc3RpY2t5ID0geDtcbiAgICAgIHN0aWNraWVzID0gbnVsbDtcbiAgICAgIHJldHVybiB0cmVlbWFwO1xuICAgIH07XG4gICAgdHJlZW1hcC5yYXRpbyA9IGZ1bmN0aW9uKHgpIHtcbiAgICAgIGlmICghYXJndW1lbnRzLmxlbmd0aCkgcmV0dXJuIHJhdGlvO1xuICAgICAgcmF0aW8gPSB4O1xuICAgICAgcmV0dXJuIHRyZWVtYXA7XG4gICAgfTtcbiAgICB0cmVlbWFwLm1vZGUgPSBmdW5jdGlvbih4KSB7XG4gICAgICBpZiAoIWFyZ3VtZW50cy5sZW5ndGgpIHJldHVybiBtb2RlO1xuICAgICAgbW9kZSA9IHggKyBcIlwiO1xuICAgICAgcmV0dXJuIHRyZWVtYXA7XG4gICAgfTtcbiAgICByZXR1cm4gZDNfbGF5b3V0X2hpZXJhcmNoeVJlYmluZCh0cmVlbWFwLCBoaWVyYXJjaHkpO1xuICB9O1xuICBmdW5jdGlvbiBkM19sYXlvdXRfdHJlZW1hcFBhZE51bGwobm9kZSkge1xuICAgIHJldHVybiB7XG4gICAgICB4OiBub2RlLngsXG4gICAgICB5OiBub2RlLnksXG4gICAgICBkeDogbm9kZS5keCxcbiAgICAgIGR5OiBub2RlLmR5XG4gICAgfTtcbiAgfVxuICBmdW5jdGlvbiBkM19sYXlvdXRfdHJlZW1hcFBhZChub2RlLCBwYWRkaW5nKSB7XG4gICAgdmFyIHggPSBub2RlLnggKyBwYWRkaW5nWzNdLCB5ID0gbm9kZS55ICsgcGFkZGluZ1swXSwgZHggPSBub2RlLmR4IC0gcGFkZGluZ1sxXSAtIHBhZGRpbmdbM10sIGR5ID0gbm9kZS5keSAtIHBhZGRpbmdbMF0gLSBwYWRkaW5nWzJdO1xuICAgIGlmIChkeCA8IDApIHtcbiAgICAgIHggKz0gZHggLyAyO1xuICAgICAgZHggPSAwO1xuICAgIH1cbiAgICBpZiAoZHkgPCAwKSB7XG4gICAgICB5ICs9IGR5IC8gMjtcbiAgICAgIGR5ID0gMDtcbiAgICB9XG4gICAgcmV0dXJuIHtcbiAgICAgIHg6IHgsXG4gICAgICB5OiB5LFxuICAgICAgZHg6IGR4LFxuICAgICAgZHk6IGR5XG4gICAgfTtcbiAgfVxuICBkMy5yYW5kb20gPSB7XG4gICAgbm9ybWFsOiBmdW5jdGlvbijCtSwgz4MpIHtcbiAgICAgIHZhciBuID0gYXJndW1lbnRzLmxlbmd0aDtcbiAgICAgIGlmIChuIDwgMikgz4MgPSAxO1xuICAgICAgaWYgKG4gPCAxKSDCtSA9IDA7XG4gICAgICByZXR1cm4gZnVuY3Rpb24oKSB7XG4gICAgICAgIHZhciB4LCB5LCByO1xuICAgICAgICBkbyB7XG4gICAgICAgICAgeCA9IE1hdGgucmFuZG9tKCkgKiAyIC0gMTtcbiAgICAgICAgICB5ID0gTWF0aC5yYW5kb20oKSAqIDIgLSAxO1xuICAgICAgICAgIHIgPSB4ICogeCArIHkgKiB5O1xuICAgICAgICB9IHdoaWxlICghciB8fCByID4gMSk7XG4gICAgICAgIHJldHVybiDCtSArIM+DICogeCAqIE1hdGguc3FydCgtMiAqIE1hdGgubG9nKHIpIC8gcik7XG4gICAgICB9O1xuICAgIH0sXG4gICAgbG9nTm9ybWFsOiBmdW5jdGlvbigpIHtcbiAgICAgIHZhciByYW5kb20gPSBkMy5yYW5kb20ubm9ybWFsLmFwcGx5KGQzLCBhcmd1bWVudHMpO1xuICAgICAgcmV0dXJuIGZ1bmN0aW9uKCkge1xuICAgICAgICByZXR1cm4gTWF0aC5leHAocmFuZG9tKCkpO1xuICAgICAgfTtcbiAgICB9LFxuICAgIGJhdGVzOiBmdW5jdGlvbihtKSB7XG4gICAgICB2YXIgcmFuZG9tID0gZDMucmFuZG9tLmlyd2luSGFsbChtKTtcbiAgICAgIHJldHVybiBmdW5jdGlvbigpIHtcbiAgICAgICAgcmV0dXJuIHJhbmRvbSgpIC8gbTtcbiAgICAgIH07XG4gICAgfSxcbiAgICBpcndpbkhhbGw6IGZ1bmN0aW9uKG0pIHtcbiAgICAgIHJldHVybiBmdW5jdGlvbigpIHtcbiAgICAgICAgZm9yICh2YXIgcyA9IDAsIGogPSAwOyBqIDwgbTsgaisrKSBzICs9IE1hdGgucmFuZG9tKCk7XG4gICAgICAgIHJldHVybiBzO1xuICAgICAgfTtcbiAgICB9XG4gIH07XG4gIGQzLnNjYWxlID0ge307XG4gIGZ1bmN0aW9uIGQzX3NjYWxlRXh0ZW50KGRvbWFpbikge1xuICAgIHZhciBzdGFydCA9IGRvbWFpblswXSwgc3RvcCA9IGRvbWFpbltkb21haW4ubGVuZ3RoIC0gMV07XG4gICAgcmV0dXJuIHN0YXJ0IDwgc3RvcCA/IFsgc3RhcnQsIHN0b3AgXSA6IFsgc3RvcCwgc3RhcnQgXTtcbiAgfVxuICBmdW5jdGlvbiBkM19zY2FsZVJhbmdlKHNjYWxlKSB7XG4gICAgcmV0dXJuIHNjYWxlLnJhbmdlRXh0ZW50ID8gc2NhbGUucmFuZ2VFeHRlbnQoKSA6IGQzX3NjYWxlRXh0ZW50KHNjYWxlLnJhbmdlKCkpO1xuICB9XG4gIGZ1bmN0aW9uIGQzX3NjYWxlX2JpbGluZWFyKGRvbWFpbiwgcmFuZ2UsIHVuaW50ZXJwb2xhdGUsIGludGVycG9sYXRlKSB7XG4gICAgdmFyIHUgPSB1bmludGVycG9sYXRlKGRvbWFpblswXSwgZG9tYWluWzFdKSwgaSA9IGludGVycG9sYXRlKHJhbmdlWzBdLCByYW5nZVsxXSk7XG4gICAgcmV0dXJuIGZ1bmN0aW9uKHgpIHtcbiAgICAgIHJldHVybiBpKHUoeCkpO1xuICAgIH07XG4gIH1cbiAgZnVuY3Rpb24gZDNfc2NhbGVfbmljZShkb21haW4sIG5pY2UpIHtcbiAgICB2YXIgaTAgPSAwLCBpMSA9IGRvbWFpbi5sZW5ndGggLSAxLCB4MCA9IGRvbWFpbltpMF0sIHgxID0gZG9tYWluW2kxXSwgZHg7XG4gICAgaWYgKHgxIDwgeDApIHtcbiAgICAgIGR4ID0gaTAsIGkwID0gaTEsIGkxID0gZHg7XG4gICAgICBkeCA9IHgwLCB4MCA9IHgxLCB4MSA9IGR4O1xuICAgIH1cbiAgICBkb21haW5baTBdID0gbmljZS5mbG9vcih4MCk7XG4gICAgZG9tYWluW2kxXSA9IG5pY2UuY2VpbCh4MSk7XG4gICAgcmV0dXJuIGRvbWFpbjtcbiAgfVxuICBmdW5jdGlvbiBkM19zY2FsZV9uaWNlU3RlcChzdGVwKSB7XG4gICAgcmV0dXJuIHN0ZXAgPyB7XG4gICAgICBmbG9vcjogZnVuY3Rpb24oeCkge1xuICAgICAgICByZXR1cm4gTWF0aC5mbG9vcih4IC8gc3RlcCkgKiBzdGVwO1xuICAgICAgfSxcbiAgICAgIGNlaWw6IGZ1bmN0aW9uKHgpIHtcbiAgICAgICAgcmV0dXJuIE1hdGguY2VpbCh4IC8gc3RlcCkgKiBzdGVwO1xuICAgICAgfVxuICAgIH0gOiBkM19zY2FsZV9uaWNlSWRlbnRpdHk7XG4gIH1cbiAgdmFyIGQzX3NjYWxlX25pY2VJZGVudGl0eSA9IHtcbiAgICBmbG9vcjogZDNfaWRlbnRpdHksXG4gICAgY2VpbDogZDNfaWRlbnRpdHlcbiAgfTtcbiAgZnVuY3Rpb24gZDNfc2NhbGVfcG9seWxpbmVhcihkb21haW4sIHJhbmdlLCB1bmludGVycG9sYXRlLCBpbnRlcnBvbGF0ZSkge1xuICAgIHZhciB1ID0gW10sIGkgPSBbXSwgaiA9IDAsIGsgPSBNYXRoLm1pbihkb21haW4ubGVuZ3RoLCByYW5nZS5sZW5ndGgpIC0gMTtcbiAgICBpZiAoZG9tYWluW2tdIDwgZG9tYWluWzBdKSB7XG4gICAgICBkb21haW4gPSBkb21haW4uc2xpY2UoKS5yZXZlcnNlKCk7XG4gICAgICByYW5nZSA9IHJhbmdlLnNsaWNlKCkucmV2ZXJzZSgpO1xuICAgIH1cbiAgICB3aGlsZSAoKytqIDw9IGspIHtcbiAgICAgIHUucHVzaCh1bmludGVycG9sYXRlKGRvbWFpbltqIC0gMV0sIGRvbWFpbltqXSkpO1xuICAgICAgaS5wdXNoKGludGVycG9sYXRlKHJhbmdlW2ogLSAxXSwgcmFuZ2Vbal0pKTtcbiAgICB9XG4gICAgcmV0dXJuIGZ1bmN0aW9uKHgpIHtcbiAgICAgIHZhciBqID0gZDMuYmlzZWN0KGRvbWFpbiwgeCwgMSwgaykgLSAxO1xuICAgICAgcmV0dXJuIGlbal0odVtqXSh4KSk7XG4gICAgfTtcbiAgfVxuICBkMy5zY2FsZS5saW5lYXIgPSBmdW5jdGlvbigpIHtcbiAgICByZXR1cm4gZDNfc2NhbGVfbGluZWFyKFsgMCwgMSBdLCBbIDAsIDEgXSwgZDNfaW50ZXJwb2xhdGUsIGZhbHNlKTtcbiAgfTtcbiAgZnVuY3Rpb24gZDNfc2NhbGVfbGluZWFyKGRvbWFpbiwgcmFuZ2UsIGludGVycG9sYXRlLCBjbGFtcCkge1xuICAgIHZhciBvdXRwdXQsIGlucHV0O1xuICAgIGZ1bmN0aW9uIHJlc2NhbGUoKSB7XG4gICAgICB2YXIgbGluZWFyID0gTWF0aC5taW4oZG9tYWluLmxlbmd0aCwgcmFuZ2UubGVuZ3RoKSA+IDIgPyBkM19zY2FsZV9wb2x5bGluZWFyIDogZDNfc2NhbGVfYmlsaW5lYXIsIHVuaW50ZXJwb2xhdGUgPSBjbGFtcCA/IGQzX3VuaW50ZXJwb2xhdGVDbGFtcCA6IGQzX3VuaW50ZXJwb2xhdGVOdW1iZXI7XG4gICAgICBvdXRwdXQgPSBsaW5lYXIoZG9tYWluLCByYW5nZSwgdW5pbnRlcnBvbGF0ZSwgaW50ZXJwb2xhdGUpO1xuICAgICAgaW5wdXQgPSBsaW5lYXIocmFuZ2UsIGRvbWFpbiwgdW5pbnRlcnBvbGF0ZSwgZDNfaW50ZXJwb2xhdGUpO1xuICAgICAgcmV0dXJuIHNjYWxlO1xuICAgIH1cbiAgICBmdW5jdGlvbiBzY2FsZSh4KSB7XG4gICAgICByZXR1cm4gb3V0cHV0KHgpO1xuICAgIH1cbiAgICBzY2FsZS5pbnZlcnQgPSBmdW5jdGlvbih5KSB7XG4gICAgICByZXR1cm4gaW5wdXQoeSk7XG4gICAgfTtcbiAgICBzY2FsZS5kb21haW4gPSBmdW5jdGlvbih4KSB7XG4gICAgICBpZiAoIWFyZ3VtZW50cy5sZW5ndGgpIHJldHVybiBkb21haW47XG4gICAgICBkb21haW4gPSB4Lm1hcChOdW1iZXIpO1xuICAgICAgcmV0dXJuIHJlc2NhbGUoKTtcbiAgICB9O1xuICAgIHNjYWxlLnJhbmdlID0gZnVuY3Rpb24oeCkge1xuICAgICAgaWYgKCFhcmd1bWVudHMubGVuZ3RoKSByZXR1cm4gcmFuZ2U7XG4gICAgICByYW5nZSA9IHg7XG4gICAgICByZXR1cm4gcmVzY2FsZSgpO1xuICAgIH07XG4gICAgc2NhbGUucmFuZ2VSb3VuZCA9IGZ1bmN0aW9uKHgpIHtcbiAgICAgIHJldHVybiBzY2FsZS5yYW5nZSh4KS5pbnRlcnBvbGF0ZShkM19pbnRlcnBvbGF0ZVJvdW5kKTtcbiAgICB9O1xuICAgIHNjYWxlLmNsYW1wID0gZnVuY3Rpb24oeCkge1xuICAgICAgaWYgKCFhcmd1bWVudHMubGVuZ3RoKSByZXR1cm4gY2xhbXA7XG4gICAgICBjbGFtcCA9IHg7XG4gICAgICByZXR1cm4gcmVzY2FsZSgpO1xuICAgIH07XG4gICAgc2NhbGUuaW50ZXJwb2xhdGUgPSBmdW5jdGlvbih4KSB7XG4gICAgICBpZiAoIWFyZ3VtZW50cy5sZW5ndGgpIHJldHVybiBpbnRlcnBvbGF0ZTtcbiAgICAgIGludGVycG9sYXRlID0geDtcbiAgICAgIHJldHVybiByZXNjYWxlKCk7XG4gICAgfTtcbiAgICBzY2FsZS50aWNrcyA9IGZ1bmN0aW9uKG0pIHtcbiAgICAgIHJldHVybiBkM19zY2FsZV9saW5lYXJUaWNrcyhkb21haW4sIG0pO1xuICAgIH07XG4gICAgc2NhbGUudGlja0Zvcm1hdCA9IGZ1bmN0aW9uKG0sIGZvcm1hdCkge1xuICAgICAgcmV0dXJuIGQzX3NjYWxlX2xpbmVhclRpY2tGb3JtYXQoZG9tYWluLCBtLCBmb3JtYXQpO1xuICAgIH07XG4gICAgc2NhbGUubmljZSA9IGZ1bmN0aW9uKG0pIHtcbiAgICAgIGQzX3NjYWxlX2xpbmVhck5pY2UoZG9tYWluLCBtKTtcbiAgICAgIHJldHVybiByZXNjYWxlKCk7XG4gICAgfTtcbiAgICBzY2FsZS5jb3B5ID0gZnVuY3Rpb24oKSB7XG4gICAgICByZXR1cm4gZDNfc2NhbGVfbGluZWFyKGRvbWFpbiwgcmFuZ2UsIGludGVycG9sYXRlLCBjbGFtcCk7XG4gICAgfTtcbiAgICByZXR1cm4gcmVzY2FsZSgpO1xuICB9XG4gIGZ1bmN0aW9uIGQzX3NjYWxlX2xpbmVhclJlYmluZChzY2FsZSwgbGluZWFyKSB7XG4gICAgcmV0dXJuIGQzLnJlYmluZChzY2FsZSwgbGluZWFyLCBcInJhbmdlXCIsIFwicmFuZ2VSb3VuZFwiLCBcImludGVycG9sYXRlXCIsIFwiY2xhbXBcIik7XG4gIH1cbiAgZnVuY3Rpb24gZDNfc2NhbGVfbGluZWFyTmljZShkb21haW4sIG0pIHtcbiAgICBkM19zY2FsZV9uaWNlKGRvbWFpbiwgZDNfc2NhbGVfbmljZVN0ZXAoZDNfc2NhbGVfbGluZWFyVGlja1JhbmdlKGRvbWFpbiwgbSlbMl0pKTtcbiAgICBkM19zY2FsZV9uaWNlKGRvbWFpbiwgZDNfc2NhbGVfbmljZVN0ZXAoZDNfc2NhbGVfbGluZWFyVGlja1JhbmdlKGRvbWFpbiwgbSlbMl0pKTtcbiAgICByZXR1cm4gZG9tYWluO1xuICB9XG4gIGZ1bmN0aW9uIGQzX3NjYWxlX2xpbmVhclRpY2tSYW5nZShkb21haW4sIG0pIHtcbiAgICBpZiAobSA9PSBudWxsKSBtID0gMTA7XG4gICAgdmFyIGV4dGVudCA9IGQzX3NjYWxlRXh0ZW50KGRvbWFpbiksIHNwYW4gPSBleHRlbnRbMV0gLSBleHRlbnRbMF0sIHN0ZXAgPSBNYXRoLnBvdygxMCwgTWF0aC5mbG9vcihNYXRoLmxvZyhzcGFuIC8gbSkgLyBNYXRoLkxOMTApKSwgZXJyID0gbSAvIHNwYW4gKiBzdGVwO1xuICAgIGlmIChlcnIgPD0gLjE1KSBzdGVwICo9IDEwOyBlbHNlIGlmIChlcnIgPD0gLjM1KSBzdGVwICo9IDU7IGVsc2UgaWYgKGVyciA8PSAuNzUpIHN0ZXAgKj0gMjtcbiAgICBleHRlbnRbMF0gPSBNYXRoLmNlaWwoZXh0ZW50WzBdIC8gc3RlcCkgKiBzdGVwO1xuICAgIGV4dGVudFsxXSA9IE1hdGguZmxvb3IoZXh0ZW50WzFdIC8gc3RlcCkgKiBzdGVwICsgc3RlcCAqIC41O1xuICAgIGV4dGVudFsyXSA9IHN0ZXA7XG4gICAgcmV0dXJuIGV4dGVudDtcbiAgfVxuICBmdW5jdGlvbiBkM19zY2FsZV9saW5lYXJUaWNrcyhkb21haW4sIG0pIHtcbiAgICByZXR1cm4gZDMucmFuZ2UuYXBwbHkoZDMsIGQzX3NjYWxlX2xpbmVhclRpY2tSYW5nZShkb21haW4sIG0pKTtcbiAgfVxuICBmdW5jdGlvbiBkM19zY2FsZV9saW5lYXJUaWNrRm9ybWF0KGRvbWFpbiwgbSwgZm9ybWF0KSB7XG4gICAgdmFyIHJhbmdlID0gZDNfc2NhbGVfbGluZWFyVGlja1JhbmdlKGRvbWFpbiwgbSk7XG4gICAgaWYgKGZvcm1hdCkge1xuICAgICAgdmFyIG1hdGNoID0gZDNfZm9ybWF0X3JlLmV4ZWMoZm9ybWF0KTtcbiAgICAgIG1hdGNoLnNoaWZ0KCk7XG4gICAgICBpZiAobWF0Y2hbOF0gPT09IFwic1wiKSB7XG4gICAgICAgIHZhciBwcmVmaXggPSBkMy5mb3JtYXRQcmVmaXgoTWF0aC5tYXgoYWJzKHJhbmdlWzBdKSwgYWJzKHJhbmdlWzFdKSkpO1xuICAgICAgICBpZiAoIW1hdGNoWzddKSBtYXRjaFs3XSA9IFwiLlwiICsgZDNfc2NhbGVfbGluZWFyUHJlY2lzaW9uKHByZWZpeC5zY2FsZShyYW5nZVsyXSkpO1xuICAgICAgICBtYXRjaFs4XSA9IFwiZlwiO1xuICAgICAgICBmb3JtYXQgPSBkMy5mb3JtYXQobWF0Y2guam9pbihcIlwiKSk7XG4gICAgICAgIHJldHVybiBmdW5jdGlvbihkKSB7XG4gICAgICAgICAgcmV0dXJuIGZvcm1hdChwcmVmaXguc2NhbGUoZCkpICsgcHJlZml4LnN5bWJvbDtcbiAgICAgICAgfTtcbiAgICAgIH1cbiAgICAgIGlmICghbWF0Y2hbN10pIG1hdGNoWzddID0gXCIuXCIgKyBkM19zY2FsZV9saW5lYXJGb3JtYXRQcmVjaXNpb24obWF0Y2hbOF0sIHJhbmdlKTtcbiAgICAgIGZvcm1hdCA9IG1hdGNoLmpvaW4oXCJcIik7XG4gICAgfSBlbHNlIHtcbiAgICAgIGZvcm1hdCA9IFwiLC5cIiArIGQzX3NjYWxlX2xpbmVhclByZWNpc2lvbihyYW5nZVsyXSkgKyBcImZcIjtcbiAgICB9XG4gICAgcmV0dXJuIGQzLmZvcm1hdChmb3JtYXQpO1xuICB9XG4gIHZhciBkM19zY2FsZV9saW5lYXJGb3JtYXRTaWduaWZpY2FudCA9IHtcbiAgICBzOiAxLFxuICAgIGc6IDEsXG4gICAgcDogMSxcbiAgICByOiAxLFxuICAgIGU6IDFcbiAgfTtcbiAgZnVuY3Rpb24gZDNfc2NhbGVfbGluZWFyUHJlY2lzaW9uKHZhbHVlKSB7XG4gICAgcmV0dXJuIC1NYXRoLmZsb29yKE1hdGgubG9nKHZhbHVlKSAvIE1hdGguTE4xMCArIC4wMSk7XG4gIH1cbiAgZnVuY3Rpb24gZDNfc2NhbGVfbGluZWFyRm9ybWF0UHJlY2lzaW9uKHR5cGUsIHJhbmdlKSB7XG4gICAgdmFyIHAgPSBkM19zY2FsZV9saW5lYXJQcmVjaXNpb24ocmFuZ2VbMl0pO1xuICAgIHJldHVybiB0eXBlIGluIGQzX3NjYWxlX2xpbmVhckZvcm1hdFNpZ25pZmljYW50ID8gTWF0aC5hYnMocCAtIGQzX3NjYWxlX2xpbmVhclByZWNpc2lvbihNYXRoLm1heChhYnMocmFuZ2VbMF0pLCBhYnMocmFuZ2VbMV0pKSkpICsgKyh0eXBlICE9PSBcImVcIikgOiBwIC0gKHR5cGUgPT09IFwiJVwiKSAqIDI7XG4gIH1cbiAgZDMuc2NhbGUubG9nID0gZnVuY3Rpb24oKSB7XG4gICAgcmV0dXJuIGQzX3NjYWxlX2xvZyhkMy5zY2FsZS5saW5lYXIoKS5kb21haW4oWyAwLCAxIF0pLCAxMCwgdHJ1ZSwgWyAxLCAxMCBdKTtcbiAgfTtcbiAgZnVuY3Rpb24gZDNfc2NhbGVfbG9nKGxpbmVhciwgYmFzZSwgcG9zaXRpdmUsIGRvbWFpbikge1xuICAgIGZ1bmN0aW9uIGxvZyh4KSB7XG4gICAgICByZXR1cm4gKHBvc2l0aXZlID8gTWF0aC5sb2coeCA8IDAgPyAwIDogeCkgOiAtTWF0aC5sb2coeCA+IDAgPyAwIDogLXgpKSAvIE1hdGgubG9nKGJhc2UpO1xuICAgIH1cbiAgICBmdW5jdGlvbiBwb3coeCkge1xuICAgICAgcmV0dXJuIHBvc2l0aXZlID8gTWF0aC5wb3coYmFzZSwgeCkgOiAtTWF0aC5wb3coYmFzZSwgLXgpO1xuICAgIH1cbiAgICBmdW5jdGlvbiBzY2FsZSh4KSB7XG4gICAgICByZXR1cm4gbGluZWFyKGxvZyh4KSk7XG4gICAgfVxuICAgIHNjYWxlLmludmVydCA9IGZ1bmN0aW9uKHgpIHtcbiAgICAgIHJldHVybiBwb3cobGluZWFyLmludmVydCh4KSk7XG4gICAgfTtcbiAgICBzY2FsZS5kb21haW4gPSBmdW5jdGlvbih4KSB7XG4gICAgICBpZiAoIWFyZ3VtZW50cy5sZW5ndGgpIHJldHVybiBkb21haW47XG4gICAgICBwb3NpdGl2ZSA9IHhbMF0gPj0gMDtcbiAgICAgIGxpbmVhci5kb21haW4oKGRvbWFpbiA9IHgubWFwKE51bWJlcikpLm1hcChsb2cpKTtcbiAgICAgIHJldHVybiBzY2FsZTtcbiAgICB9O1xuICAgIHNjYWxlLmJhc2UgPSBmdW5jdGlvbihfKSB7XG4gICAgICBpZiAoIWFyZ3VtZW50cy5sZW5ndGgpIHJldHVybiBiYXNlO1xuICAgICAgYmFzZSA9ICtfO1xuICAgICAgbGluZWFyLmRvbWFpbihkb21haW4ubWFwKGxvZykpO1xuICAgICAgcmV0dXJuIHNjYWxlO1xuICAgIH07XG4gICAgc2NhbGUubmljZSA9IGZ1bmN0aW9uKCkge1xuICAgICAgdmFyIG5pY2VkID0gZDNfc2NhbGVfbmljZShkb21haW4ubWFwKGxvZyksIHBvc2l0aXZlID8gTWF0aCA6IGQzX3NjYWxlX2xvZ05pY2VOZWdhdGl2ZSk7XG4gICAgICBsaW5lYXIuZG9tYWluKG5pY2VkKTtcbiAgICAgIGRvbWFpbiA9IG5pY2VkLm1hcChwb3cpO1xuICAgICAgcmV0dXJuIHNjYWxlO1xuICAgIH07XG4gICAgc2NhbGUudGlja3MgPSBmdW5jdGlvbigpIHtcbiAgICAgIHZhciBleHRlbnQgPSBkM19zY2FsZUV4dGVudChkb21haW4pLCB0aWNrcyA9IFtdLCB1ID0gZXh0ZW50WzBdLCB2ID0gZXh0ZW50WzFdLCBpID0gTWF0aC5mbG9vcihsb2codSkpLCBqID0gTWF0aC5jZWlsKGxvZyh2KSksIG4gPSBiYXNlICUgMSA/IDIgOiBiYXNlO1xuICAgICAgaWYgKGlzRmluaXRlKGogLSBpKSkge1xuICAgICAgICBpZiAocG9zaXRpdmUpIHtcbiAgICAgICAgICBmb3IgKDtpIDwgajsgaSsrKSBmb3IgKHZhciBrID0gMTsgayA8IG47IGsrKykgdGlja3MucHVzaChwb3coaSkgKiBrKTtcbiAgICAgICAgICB0aWNrcy5wdXNoKHBvdyhpKSk7XG4gICAgICAgIH0gZWxzZSB7XG4gICAgICAgICAgdGlja3MucHVzaChwb3coaSkpO1xuICAgICAgICAgIGZvciAoO2krKyA8IGo7ICkgZm9yICh2YXIgayA9IG4gLSAxOyBrID4gMDsgay0tKSB0aWNrcy5wdXNoKHBvdyhpKSAqIGspO1xuICAgICAgICB9XG4gICAgICAgIGZvciAoaSA9IDA7IHRpY2tzW2ldIDwgdTsgaSsrKSB7fVxuICAgICAgICBmb3IgKGogPSB0aWNrcy5sZW5ndGg7IHRpY2tzW2ogLSAxXSA+IHY7IGotLSkge31cbiAgICAgICAgdGlja3MgPSB0aWNrcy5zbGljZShpLCBqKTtcbiAgICAgIH1cbiAgICAgIHJldHVybiB0aWNrcztcbiAgICB9O1xuICAgIHNjYWxlLnRpY2tGb3JtYXQgPSBmdW5jdGlvbihuLCBmb3JtYXQpIHtcbiAgICAgIGlmICghYXJndW1lbnRzLmxlbmd0aCkgcmV0dXJuIGQzX3NjYWxlX2xvZ0Zvcm1hdDtcbiAgICAgIGlmIChhcmd1bWVudHMubGVuZ3RoIDwgMikgZm9ybWF0ID0gZDNfc2NhbGVfbG9nRm9ybWF0OyBlbHNlIGlmICh0eXBlb2YgZm9ybWF0ICE9PSBcImZ1bmN0aW9uXCIpIGZvcm1hdCA9IGQzLmZvcm1hdChmb3JtYXQpO1xuICAgICAgdmFyIGsgPSBNYXRoLm1heCgxLCBiYXNlICogbiAvIHNjYWxlLnRpY2tzKCkubGVuZ3RoKTtcbiAgICAgIHJldHVybiBmdW5jdGlvbihkKSB7XG4gICAgICAgIHZhciBpID0gZCAvIHBvdyhNYXRoLnJvdW5kKGxvZyhkKSkpO1xuICAgICAgICBpZiAoaSAqIGJhc2UgPCBiYXNlIC0gLjUpIGkgKj0gYmFzZTtcbiAgICAgICAgcmV0dXJuIGkgPD0gayA/IGZvcm1hdChkKSA6IFwiXCI7XG4gICAgICB9O1xuICAgIH07XG4gICAgc2NhbGUuY29weSA9IGZ1bmN0aW9uKCkge1xuICAgICAgcmV0dXJuIGQzX3NjYWxlX2xvZyhsaW5lYXIuY29weSgpLCBiYXNlLCBwb3NpdGl2ZSwgZG9tYWluKTtcbiAgICB9O1xuICAgIHJldHVybiBkM19zY2FsZV9saW5lYXJSZWJpbmQoc2NhbGUsIGxpbmVhcik7XG4gIH1cbiAgdmFyIGQzX3NjYWxlX2xvZ0Zvcm1hdCA9IGQzLmZvcm1hdChcIi4wZVwiKSwgZDNfc2NhbGVfbG9nTmljZU5lZ2F0aXZlID0ge1xuICAgIGZsb29yOiBmdW5jdGlvbih4KSB7XG4gICAgICByZXR1cm4gLU1hdGguY2VpbCgteCk7XG4gICAgfSxcbiAgICBjZWlsOiBmdW5jdGlvbih4KSB7XG4gICAgICByZXR1cm4gLU1hdGguZmxvb3IoLXgpO1xuICAgIH1cbiAgfTtcbiAgZDMuc2NhbGUucG93ID0gZnVuY3Rpb24oKSB7XG4gICAgcmV0dXJuIGQzX3NjYWxlX3BvdyhkMy5zY2FsZS5saW5lYXIoKSwgMSwgWyAwLCAxIF0pO1xuICB9O1xuICBmdW5jdGlvbiBkM19zY2FsZV9wb3cobGluZWFyLCBleHBvbmVudCwgZG9tYWluKSB7XG4gICAgdmFyIHBvd3AgPSBkM19zY2FsZV9wb3dQb3coZXhwb25lbnQpLCBwb3diID0gZDNfc2NhbGVfcG93UG93KDEgLyBleHBvbmVudCk7XG4gICAgZnVuY3Rpb24gc2NhbGUoeCkge1xuICAgICAgcmV0dXJuIGxpbmVhcihwb3dwKHgpKTtcbiAgICB9XG4gICAgc2NhbGUuaW52ZXJ0ID0gZnVuY3Rpb24oeCkge1xuICAgICAgcmV0dXJuIHBvd2IobGluZWFyLmludmVydCh4KSk7XG4gICAgfTtcbiAgICBzY2FsZS5kb21haW4gPSBmdW5jdGlvbih4KSB7XG4gICAgICBpZiAoIWFyZ3VtZW50cy5sZW5ndGgpIHJldHVybiBkb21haW47XG4gICAgICBsaW5lYXIuZG9tYWluKChkb21haW4gPSB4Lm1hcChOdW1iZXIpKS5tYXAocG93cCkpO1xuICAgICAgcmV0dXJuIHNjYWxlO1xuICAgIH07XG4gICAgc2NhbGUudGlja3MgPSBmdW5jdGlvbihtKSB7XG4gICAgICByZXR1cm4gZDNfc2NhbGVfbGluZWFyVGlja3MoZG9tYWluLCBtKTtcbiAgICB9O1xuICAgIHNjYWxlLnRpY2tGb3JtYXQgPSBmdW5jdGlvbihtLCBmb3JtYXQpIHtcbiAgICAgIHJldHVybiBkM19zY2FsZV9saW5lYXJUaWNrRm9ybWF0KGRvbWFpbiwgbSwgZm9ybWF0KTtcbiAgICB9O1xuICAgIHNjYWxlLm5pY2UgPSBmdW5jdGlvbihtKSB7XG4gICAgICByZXR1cm4gc2NhbGUuZG9tYWluKGQzX3NjYWxlX2xpbmVhck5pY2UoZG9tYWluLCBtKSk7XG4gICAgfTtcbiAgICBzY2FsZS5leHBvbmVudCA9IGZ1bmN0aW9uKHgpIHtcbiAgICAgIGlmICghYXJndW1lbnRzLmxlbmd0aCkgcmV0dXJuIGV4cG9uZW50O1xuICAgICAgcG93cCA9IGQzX3NjYWxlX3Bvd1BvdyhleHBvbmVudCA9IHgpO1xuICAgICAgcG93YiA9IGQzX3NjYWxlX3Bvd1BvdygxIC8gZXhwb25lbnQpO1xuICAgICAgbGluZWFyLmRvbWFpbihkb21haW4ubWFwKHBvd3ApKTtcbiAgICAgIHJldHVybiBzY2FsZTtcbiAgICB9O1xuICAgIHNjYWxlLmNvcHkgPSBmdW5jdGlvbigpIHtcbiAgICAgIHJldHVybiBkM19zY2FsZV9wb3cobGluZWFyLmNvcHkoKSwgZXhwb25lbnQsIGRvbWFpbik7XG4gICAgfTtcbiAgICByZXR1cm4gZDNfc2NhbGVfbGluZWFyUmViaW5kKHNjYWxlLCBsaW5lYXIpO1xuICB9XG4gIGZ1bmN0aW9uIGQzX3NjYWxlX3Bvd1BvdyhlKSB7XG4gICAgcmV0dXJuIGZ1bmN0aW9uKHgpIHtcbiAgICAgIHJldHVybiB4IDwgMCA/IC1NYXRoLnBvdygteCwgZSkgOiBNYXRoLnBvdyh4LCBlKTtcbiAgICB9O1xuICB9XG4gIGQzLnNjYWxlLnNxcnQgPSBmdW5jdGlvbigpIHtcbiAgICByZXR1cm4gZDMuc2NhbGUucG93KCkuZXhwb25lbnQoLjUpO1xuICB9O1xuICBkMy5zY2FsZS5vcmRpbmFsID0gZnVuY3Rpb24oKSB7XG4gICAgcmV0dXJuIGQzX3NjYWxlX29yZGluYWwoW10sIHtcbiAgICAgIHQ6IFwicmFuZ2VcIixcbiAgICAgIGE6IFsgW10gXVxuICAgIH0pO1xuICB9O1xuICBmdW5jdGlvbiBkM19zY2FsZV9vcmRpbmFsKGRvbWFpbiwgcmFuZ2VyKSB7XG4gICAgdmFyIGluZGV4LCByYW5nZSwgcmFuZ2VCYW5kO1xuICAgIGZ1bmN0aW9uIHNjYWxlKHgpIHtcbiAgICAgIHJldHVybiByYW5nZVsoKGluZGV4LmdldCh4KSB8fCAocmFuZ2VyLnQgPT09IFwicmFuZ2VcIiA/IGluZGV4LnNldCh4LCBkb21haW4ucHVzaCh4KSkgOiBOYU4pKSAtIDEpICUgcmFuZ2UubGVuZ3RoXTtcbiAgICB9XG4gICAgZnVuY3Rpb24gc3RlcHMoc3RhcnQsIHN0ZXApIHtcbiAgICAgIHJldHVybiBkMy5yYW5nZShkb21haW4ubGVuZ3RoKS5tYXAoZnVuY3Rpb24oaSkge1xuICAgICAgICByZXR1cm4gc3RhcnQgKyBzdGVwICogaTtcbiAgICAgIH0pO1xuICAgIH1cbiAgICBzY2FsZS5kb21haW4gPSBmdW5jdGlvbih4KSB7XG4gICAgICBpZiAoIWFyZ3VtZW50cy5sZW5ndGgpIHJldHVybiBkb21haW47XG4gICAgICBkb21haW4gPSBbXTtcbiAgICAgIGluZGV4ID0gbmV3IGQzX01hcCgpO1xuICAgICAgdmFyIGkgPSAtMSwgbiA9IHgubGVuZ3RoLCB4aTtcbiAgICAgIHdoaWxlICgrK2kgPCBuKSBpZiAoIWluZGV4Lmhhcyh4aSA9IHhbaV0pKSBpbmRleC5zZXQoeGksIGRvbWFpbi5wdXNoKHhpKSk7XG4gICAgICByZXR1cm4gc2NhbGVbcmFuZ2VyLnRdLmFwcGx5KHNjYWxlLCByYW5nZXIuYSk7XG4gICAgfTtcbiAgICBzY2FsZS5yYW5nZSA9IGZ1bmN0aW9uKHgpIHtcbiAgICAgIGlmICghYXJndW1lbnRzLmxlbmd0aCkgcmV0dXJuIHJhbmdlO1xuICAgICAgcmFuZ2UgPSB4O1xuICAgICAgcmFuZ2VCYW5kID0gMDtcbiAgICAgIHJhbmdlciA9IHtcbiAgICAgICAgdDogXCJyYW5nZVwiLFxuICAgICAgICBhOiBhcmd1bWVudHNcbiAgICAgIH07XG4gICAgICByZXR1cm4gc2NhbGU7XG4gICAgfTtcbiAgICBzY2FsZS5yYW5nZVBvaW50cyA9IGZ1bmN0aW9uKHgsIHBhZGRpbmcpIHtcbiAgICAgIGlmIChhcmd1bWVudHMubGVuZ3RoIDwgMikgcGFkZGluZyA9IDA7XG4gICAgICB2YXIgc3RhcnQgPSB4WzBdLCBzdG9wID0geFsxXSwgc3RlcCA9IGRvbWFpbi5sZW5ndGggPCAyID8gKHN0YXJ0ID0gKHN0YXJ0ICsgc3RvcCkgLyAyLCBcbiAgICAgIDApIDogKHN0b3AgLSBzdGFydCkgLyAoZG9tYWluLmxlbmd0aCAtIDEgKyBwYWRkaW5nKTtcbiAgICAgIHJhbmdlID0gc3RlcHMoc3RhcnQgKyBzdGVwICogcGFkZGluZyAvIDIsIHN0ZXApO1xuICAgICAgcmFuZ2VCYW5kID0gMDtcbiAgICAgIHJhbmdlciA9IHtcbiAgICAgICAgdDogXCJyYW5nZVBvaW50c1wiLFxuICAgICAgICBhOiBhcmd1bWVudHNcbiAgICAgIH07XG4gICAgICByZXR1cm4gc2NhbGU7XG4gICAgfTtcbiAgICBzY2FsZS5yYW5nZVJvdW5kUG9pbnRzID0gZnVuY3Rpb24oeCwgcGFkZGluZykge1xuICAgICAgaWYgKGFyZ3VtZW50cy5sZW5ndGggPCAyKSBwYWRkaW5nID0gMDtcbiAgICAgIHZhciBzdGFydCA9IHhbMF0sIHN0b3AgPSB4WzFdLCBzdGVwID0gZG9tYWluLmxlbmd0aCA8IDIgPyAoc3RhcnQgPSBzdG9wID0gTWF0aC5yb3VuZCgoc3RhcnQgKyBzdG9wKSAvIDIpLCBcbiAgICAgIDApIDogKHN0b3AgLSBzdGFydCkgLyAoZG9tYWluLmxlbmd0aCAtIDEgKyBwYWRkaW5nKSB8IDA7XG4gICAgICByYW5nZSA9IHN0ZXBzKHN0YXJ0ICsgTWF0aC5yb3VuZChzdGVwICogcGFkZGluZyAvIDIgKyAoc3RvcCAtIHN0YXJ0IC0gKGRvbWFpbi5sZW5ndGggLSAxICsgcGFkZGluZykgKiBzdGVwKSAvIDIpLCBzdGVwKTtcbiAgICAgIHJhbmdlQmFuZCA9IDA7XG4gICAgICByYW5nZXIgPSB7XG4gICAgICAgIHQ6IFwicmFuZ2VSb3VuZFBvaW50c1wiLFxuICAgICAgICBhOiBhcmd1bWVudHNcbiAgICAgIH07XG4gICAgICByZXR1cm4gc2NhbGU7XG4gICAgfTtcbiAgICBzY2FsZS5yYW5nZUJhbmRzID0gZnVuY3Rpb24oeCwgcGFkZGluZywgb3V0ZXJQYWRkaW5nKSB7XG4gICAgICBpZiAoYXJndW1lbnRzLmxlbmd0aCA8IDIpIHBhZGRpbmcgPSAwO1xuICAgICAgaWYgKGFyZ3VtZW50cy5sZW5ndGggPCAzKSBvdXRlclBhZGRpbmcgPSBwYWRkaW5nO1xuICAgICAgdmFyIHJldmVyc2UgPSB4WzFdIDwgeFswXSwgc3RhcnQgPSB4W3JldmVyc2UgLSAwXSwgc3RvcCA9IHhbMSAtIHJldmVyc2VdLCBzdGVwID0gKHN0b3AgLSBzdGFydCkgLyAoZG9tYWluLmxlbmd0aCAtIHBhZGRpbmcgKyAyICogb3V0ZXJQYWRkaW5nKTtcbiAgICAgIHJhbmdlID0gc3RlcHMoc3RhcnQgKyBzdGVwICogb3V0ZXJQYWRkaW5nLCBzdGVwKTtcbiAgICAgIGlmIChyZXZlcnNlKSByYW5nZS5yZXZlcnNlKCk7XG4gICAgICByYW5nZUJhbmQgPSBzdGVwICogKDEgLSBwYWRkaW5nKTtcbiAgICAgIHJhbmdlciA9IHtcbiAgICAgICAgdDogXCJyYW5nZUJhbmRzXCIsXG4gICAgICAgIGE6IGFyZ3VtZW50c1xuICAgICAgfTtcbiAgICAgIHJldHVybiBzY2FsZTtcbiAgICB9O1xuICAgIHNjYWxlLnJhbmdlUm91bmRCYW5kcyA9IGZ1bmN0aW9uKHgsIHBhZGRpbmcsIG91dGVyUGFkZGluZykge1xuICAgICAgaWYgKGFyZ3VtZW50cy5sZW5ndGggPCAyKSBwYWRkaW5nID0gMDtcbiAgICAgIGlmIChhcmd1bWVudHMubGVuZ3RoIDwgMykgb3V0ZXJQYWRkaW5nID0gcGFkZGluZztcbiAgICAgIHZhciByZXZlcnNlID0geFsxXSA8IHhbMF0sIHN0YXJ0ID0geFtyZXZlcnNlIC0gMF0sIHN0b3AgPSB4WzEgLSByZXZlcnNlXSwgc3RlcCA9IE1hdGguZmxvb3IoKHN0b3AgLSBzdGFydCkgLyAoZG9tYWluLmxlbmd0aCAtIHBhZGRpbmcgKyAyICogb3V0ZXJQYWRkaW5nKSk7XG4gICAgICByYW5nZSA9IHN0ZXBzKHN0YXJ0ICsgTWF0aC5yb3VuZCgoc3RvcCAtIHN0YXJ0IC0gKGRvbWFpbi5sZW5ndGggLSBwYWRkaW5nKSAqIHN0ZXApIC8gMiksIHN0ZXApO1xuICAgICAgaWYgKHJldmVyc2UpIHJhbmdlLnJldmVyc2UoKTtcbiAgICAgIHJhbmdlQmFuZCA9IE1hdGgucm91bmQoc3RlcCAqICgxIC0gcGFkZGluZykpO1xuICAgICAgcmFuZ2VyID0ge1xuICAgICAgICB0OiBcInJhbmdlUm91bmRCYW5kc1wiLFxuICAgICAgICBhOiBhcmd1bWVudHNcbiAgICAgIH07XG4gICAgICByZXR1cm4gc2NhbGU7XG4gICAgfTtcbiAgICBzY2FsZS5yYW5nZUJhbmQgPSBmdW5jdGlvbigpIHtcbiAgICAgIHJldHVybiByYW5nZUJhbmQ7XG4gICAgfTtcbiAgICBzY2FsZS5yYW5nZUV4dGVudCA9IGZ1bmN0aW9uKCkge1xuICAgICAgcmV0dXJuIGQzX3NjYWxlRXh0ZW50KHJhbmdlci5hWzBdKTtcbiAgICB9O1xuICAgIHNjYWxlLmNvcHkgPSBmdW5jdGlvbigpIHtcbiAgICAgIHJldHVybiBkM19zY2FsZV9vcmRpbmFsKGRvbWFpbiwgcmFuZ2VyKTtcbiAgICB9O1xuICAgIHJldHVybiBzY2FsZS5kb21haW4oZG9tYWluKTtcbiAgfVxuICBkMy5zY2FsZS5jYXRlZ29yeTEwID0gZnVuY3Rpb24oKSB7XG4gICAgcmV0dXJuIGQzLnNjYWxlLm9yZGluYWwoKS5yYW5nZShkM19jYXRlZ29yeTEwKTtcbiAgfTtcbiAgZDMuc2NhbGUuY2F0ZWdvcnkyMCA9IGZ1bmN0aW9uKCkge1xuICAgIHJldHVybiBkMy5zY2FsZS5vcmRpbmFsKCkucmFuZ2UoZDNfY2F0ZWdvcnkyMCk7XG4gIH07XG4gIGQzLnNjYWxlLmNhdGVnb3J5MjBiID0gZnVuY3Rpb24oKSB7XG4gICAgcmV0dXJuIGQzLnNjYWxlLm9yZGluYWwoKS5yYW5nZShkM19jYXRlZ29yeTIwYik7XG4gIH07XG4gIGQzLnNjYWxlLmNhdGVnb3J5MjBjID0gZnVuY3Rpb24oKSB7XG4gICAgcmV0dXJuIGQzLnNjYWxlLm9yZGluYWwoKS5yYW5nZShkM19jYXRlZ29yeTIwYyk7XG4gIH07XG4gIHZhciBkM19jYXRlZ29yeTEwID0gWyAyMDYyMjYwLCAxNjc0NDIwNiwgMjkyNDU4OCwgMTQwMzQ3MjgsIDk3MjU4ODUsIDkxOTcxMzEsIDE0OTA3MzMwLCA4MzU1NzExLCAxMjM2OTE4NiwgMTU1NjE3NSBdLm1hcChkM19yZ2JTdHJpbmcpO1xuICB2YXIgZDNfY2F0ZWdvcnkyMCA9IFsgMjA2MjI2MCwgMTE0NTQ0NDAsIDE2NzQ0MjA2LCAxNjc1OTY3MiwgMjkyNDU4OCwgMTAwMTg2OTgsIDE0MDM0NzI4LCAxNjc1MDc0MiwgOTcyNTg4NSwgMTI5NTU4NjEsIDkxOTcxMzEsIDEyODg1MTQwLCAxNDkwNzMzMCwgMTYyMzQxOTQsIDgzNTU3MTEsIDEzMDkyODA3LCAxMjM2OTE4NiwgMTQ0MDg1ODksIDE1NTYxNzUsIDEwNDEwNzI1IF0ubWFwKGQzX3JnYlN0cmluZyk7XG4gIHZhciBkM19jYXRlZ29yeTIwYiA9IFsgMzc1MDc3NywgNTM5NTYxOSwgNzA0MDcxOSwgMTAyNjQyODYsIDY1MTkwOTcsIDkyMTY1OTQsIDExOTE1MTE1LCAxMzU1NjYzNiwgOTIwMjk5MywgMTI0MjY4MDksIDE1MTg2NTE0LCAxNTE5MDkzMiwgODY2NjE2OSwgMTEzNTY0OTAsIDE0MDQ5NjQzLCAxNTE3NzM3MiwgODA3NzY4MywgMTA4MzQzMjQsIDEzNTI4NTA5LCAxNDU4OTY1NCBdLm1hcChkM19yZ2JTdHJpbmcpO1xuICB2YXIgZDNfY2F0ZWdvcnkyMGMgPSBbIDMyNDQ3MzMsIDcwNTcxMTAsIDEwNDA2NjI1LCAxMzAzMjQzMSwgMTUwOTUwNTMsIDE2NjE2NzY0LCAxNjYyNTI1OSwgMTY2MzQwMTgsIDMyNTMwNzYsIDc2NTI0NzAsIDEwNjA3MDAzLCAxMzEwMTUwNCwgNzY5NTI4MSwgMTAzOTQzMTIsIDEyMzY5MzcyLCAxNDM0Mjg5MSwgNjUxMzUwNywgOTg2ODk1MCwgMTI0MzQ4NzcsIDE0Mjc3MDgxIF0ubWFwKGQzX3JnYlN0cmluZyk7XG4gIGQzLnNjYWxlLnF1YW50aWxlID0gZnVuY3Rpb24oKSB7XG4gICAgcmV0dXJuIGQzX3NjYWxlX3F1YW50aWxlKFtdLCBbXSk7XG4gIH07XG4gIGZ1bmN0aW9uIGQzX3NjYWxlX3F1YW50aWxlKGRvbWFpbiwgcmFuZ2UpIHtcbiAgICB2YXIgdGhyZXNob2xkcztcbiAgICBmdW5jdGlvbiByZXNjYWxlKCkge1xuICAgICAgdmFyIGsgPSAwLCBxID0gcmFuZ2UubGVuZ3RoO1xuICAgICAgdGhyZXNob2xkcyA9IFtdO1xuICAgICAgd2hpbGUgKCsrayA8IHEpIHRocmVzaG9sZHNbayAtIDFdID0gZDMucXVhbnRpbGUoZG9tYWluLCBrIC8gcSk7XG4gICAgICByZXR1cm4gc2NhbGU7XG4gICAgfVxuICAgIGZ1bmN0aW9uIHNjYWxlKHgpIHtcbiAgICAgIGlmICghaXNOYU4oeCA9ICt4KSkgcmV0dXJuIHJhbmdlW2QzLmJpc2VjdCh0aHJlc2hvbGRzLCB4KV07XG4gICAgfVxuICAgIHNjYWxlLmRvbWFpbiA9IGZ1bmN0aW9uKHgpIHtcbiAgICAgIGlmICghYXJndW1lbnRzLmxlbmd0aCkgcmV0dXJuIGRvbWFpbjtcbiAgICAgIGRvbWFpbiA9IHgubWFwKGQzX251bWJlcikuZmlsdGVyKGQzX251bWVyaWMpLnNvcnQoZDNfYXNjZW5kaW5nKTtcbiAgICAgIHJldHVybiByZXNjYWxlKCk7XG4gICAgfTtcbiAgICBzY2FsZS5yYW5nZSA9IGZ1bmN0aW9uKHgpIHtcbiAgICAgIGlmICghYXJndW1lbnRzLmxlbmd0aCkgcmV0dXJuIHJhbmdlO1xuICAgICAgcmFuZ2UgPSB4O1xuICAgICAgcmV0dXJuIHJlc2NhbGUoKTtcbiAgICB9O1xuICAgIHNjYWxlLnF1YW50aWxlcyA9IGZ1bmN0aW9uKCkge1xuICAgICAgcmV0dXJuIHRocmVzaG9sZHM7XG4gICAgfTtcbiAgICBzY2FsZS5pbnZlcnRFeHRlbnQgPSBmdW5jdGlvbih5KSB7XG4gICAgICB5ID0gcmFuZ2UuaW5kZXhPZih5KTtcbiAgICAgIHJldHVybiB5IDwgMCA/IFsgTmFOLCBOYU4gXSA6IFsgeSA+IDAgPyB0aHJlc2hvbGRzW3kgLSAxXSA6IGRvbWFpblswXSwgeSA8IHRocmVzaG9sZHMubGVuZ3RoID8gdGhyZXNob2xkc1t5XSA6IGRvbWFpbltkb21haW4ubGVuZ3RoIC0gMV0gXTtcbiAgICB9O1xuICAgIHNjYWxlLmNvcHkgPSBmdW5jdGlvbigpIHtcbiAgICAgIHJldHVybiBkM19zY2FsZV9xdWFudGlsZShkb21haW4sIHJhbmdlKTtcbiAgICB9O1xuICAgIHJldHVybiByZXNjYWxlKCk7XG4gIH1cbiAgZDMuc2NhbGUucXVhbnRpemUgPSBmdW5jdGlvbigpIHtcbiAgICByZXR1cm4gZDNfc2NhbGVfcXVhbnRpemUoMCwgMSwgWyAwLCAxIF0pO1xuICB9O1xuICBmdW5jdGlvbiBkM19zY2FsZV9xdWFudGl6ZSh4MCwgeDEsIHJhbmdlKSB7XG4gICAgdmFyIGt4LCBpO1xuICAgIGZ1bmN0aW9uIHNjYWxlKHgpIHtcbiAgICAgIHJldHVybiByYW5nZVtNYXRoLm1heCgwLCBNYXRoLm1pbihpLCBNYXRoLmZsb29yKGt4ICogKHggLSB4MCkpKSldO1xuICAgIH1cbiAgICBmdW5jdGlvbiByZXNjYWxlKCkge1xuICAgICAga3ggPSByYW5nZS5sZW5ndGggLyAoeDEgLSB4MCk7XG4gICAgICBpID0gcmFuZ2UubGVuZ3RoIC0gMTtcbiAgICAgIHJldHVybiBzY2FsZTtcbiAgICB9XG4gICAgc2NhbGUuZG9tYWluID0gZnVuY3Rpb24oeCkge1xuICAgICAgaWYgKCFhcmd1bWVudHMubGVuZ3RoKSByZXR1cm4gWyB4MCwgeDEgXTtcbiAgICAgIHgwID0gK3hbMF07XG4gICAgICB4MSA9ICt4W3gubGVuZ3RoIC0gMV07XG4gICAgICByZXR1cm4gcmVzY2FsZSgpO1xuICAgIH07XG4gICAgc2NhbGUucmFuZ2UgPSBmdW5jdGlvbih4KSB7XG4gICAgICBpZiAoIWFyZ3VtZW50cy5sZW5ndGgpIHJldHVybiByYW5nZTtcbiAgICAgIHJhbmdlID0geDtcbiAgICAgIHJldHVybiByZXNjYWxlKCk7XG4gICAgfTtcbiAgICBzY2FsZS5pbnZlcnRFeHRlbnQgPSBmdW5jdGlvbih5KSB7XG4gICAgICB5ID0gcmFuZ2UuaW5kZXhPZih5KTtcbiAgICAgIHkgPSB5IDwgMCA/IE5hTiA6IHkgLyBreCArIHgwO1xuICAgICAgcmV0dXJuIFsgeSwgeSArIDEgLyBreCBdO1xuICAgIH07XG4gICAgc2NhbGUuY29weSA9IGZ1bmN0aW9uKCkge1xuICAgICAgcmV0dXJuIGQzX3NjYWxlX3F1YW50aXplKHgwLCB4MSwgcmFuZ2UpO1xuICAgIH07XG4gICAgcmV0dXJuIHJlc2NhbGUoKTtcbiAgfVxuICBkMy5zY2FsZS50aHJlc2hvbGQgPSBmdW5jdGlvbigpIHtcbiAgICByZXR1cm4gZDNfc2NhbGVfdGhyZXNob2xkKFsgLjUgXSwgWyAwLCAxIF0pO1xuICB9O1xuICBmdW5jdGlvbiBkM19zY2FsZV90aHJlc2hvbGQoZG9tYWluLCByYW5nZSkge1xuICAgIGZ1bmN0aW9uIHNjYWxlKHgpIHtcbiAgICAgIGlmICh4IDw9IHgpIHJldHVybiByYW5nZVtkMy5iaXNlY3QoZG9tYWluLCB4KV07XG4gICAgfVxuICAgIHNjYWxlLmRvbWFpbiA9IGZ1bmN0aW9uKF8pIHtcbiAgICAgIGlmICghYXJndW1lbnRzLmxlbmd0aCkgcmV0dXJuIGRvbWFpbjtcbiAgICAgIGRvbWFpbiA9IF87XG4gICAgICByZXR1cm4gc2NhbGU7XG4gICAgfTtcbiAgICBzY2FsZS5yYW5nZSA9IGZ1bmN0aW9uKF8pIHtcbiAgICAgIGlmICghYXJndW1lbnRzLmxlbmd0aCkgcmV0dXJuIHJhbmdlO1xuICAgICAgcmFuZ2UgPSBfO1xuICAgICAgcmV0dXJuIHNjYWxlO1xuICAgIH07XG4gICAgc2NhbGUuaW52ZXJ0RXh0ZW50ID0gZnVuY3Rpb24oeSkge1xuICAgICAgeSA9IHJhbmdlLmluZGV4T2YoeSk7XG4gICAgICByZXR1cm4gWyBkb21haW5beSAtIDFdLCBkb21haW5beV0gXTtcbiAgICB9O1xuICAgIHNjYWxlLmNvcHkgPSBmdW5jdGlvbigpIHtcbiAgICAgIHJldHVybiBkM19zY2FsZV90aHJlc2hvbGQoZG9tYWluLCByYW5nZSk7XG4gICAgfTtcbiAgICByZXR1cm4gc2NhbGU7XG4gIH1cbiAgZDMuc2NhbGUuaWRlbnRpdHkgPSBmdW5jdGlvbigpIHtcbiAgICByZXR1cm4gZDNfc2NhbGVfaWRlbnRpdHkoWyAwLCAxIF0pO1xuICB9O1xuICBmdW5jdGlvbiBkM19zY2FsZV9pZGVudGl0eShkb21haW4pIHtcbiAgICBmdW5jdGlvbiBpZGVudGl0eSh4KSB7XG4gICAgICByZXR1cm4gK3g7XG4gICAgfVxuICAgIGlkZW50aXR5LmludmVydCA9IGlkZW50aXR5O1xuICAgIGlkZW50aXR5LmRvbWFpbiA9IGlkZW50aXR5LnJhbmdlID0gZnVuY3Rpb24oeCkge1xuICAgICAgaWYgKCFhcmd1bWVudHMubGVuZ3RoKSByZXR1cm4gZG9tYWluO1xuICAgICAgZG9tYWluID0geC5tYXAoaWRlbnRpdHkpO1xuICAgICAgcmV0dXJuIGlkZW50aXR5O1xuICAgIH07XG4gICAgaWRlbnRpdHkudGlja3MgPSBmdW5jdGlvbihtKSB7XG4gICAgICByZXR1cm4gZDNfc2NhbGVfbGluZWFyVGlja3MoZG9tYWluLCBtKTtcbiAgICB9O1xuICAgIGlkZW50aXR5LnRpY2tGb3JtYXQgPSBmdW5jdGlvbihtLCBmb3JtYXQpIHtcbiAgICAgIHJldHVybiBkM19zY2FsZV9saW5lYXJUaWNrRm9ybWF0KGRvbWFpbiwgbSwgZm9ybWF0KTtcbiAgICB9O1xuICAgIGlkZW50aXR5LmNvcHkgPSBmdW5jdGlvbigpIHtcbiAgICAgIHJldHVybiBkM19zY2FsZV9pZGVudGl0eShkb21haW4pO1xuICAgIH07XG4gICAgcmV0dXJuIGlkZW50aXR5O1xuICB9XG4gIGQzLnN2ZyA9IHt9O1xuICBmdW5jdGlvbiBkM196ZXJvKCkge1xuICAgIHJldHVybiAwO1xuICB9XG4gIGQzLnN2Zy5hcmMgPSBmdW5jdGlvbigpIHtcbiAgICB2YXIgaW5uZXJSYWRpdXMgPSBkM19zdmdfYXJjSW5uZXJSYWRpdXMsIG91dGVyUmFkaXVzID0gZDNfc3ZnX2FyY091dGVyUmFkaXVzLCBjb3JuZXJSYWRpdXMgPSBkM196ZXJvLCBwYWRSYWRpdXMgPSBkM19zdmdfYXJjQXV0bywgc3RhcnRBbmdsZSA9IGQzX3N2Z19hcmNTdGFydEFuZ2xlLCBlbmRBbmdsZSA9IGQzX3N2Z19hcmNFbmRBbmdsZSwgcGFkQW5nbGUgPSBkM19zdmdfYXJjUGFkQW5nbGU7XG4gICAgZnVuY3Rpb24gYXJjKCkge1xuICAgICAgdmFyIHIwID0gTWF0aC5tYXgoMCwgK2lubmVyUmFkaXVzLmFwcGx5KHRoaXMsIGFyZ3VtZW50cykpLCByMSA9IE1hdGgubWF4KDAsICtvdXRlclJhZGl1cy5hcHBseSh0aGlzLCBhcmd1bWVudHMpKSwgYTAgPSBzdGFydEFuZ2xlLmFwcGx5KHRoaXMsIGFyZ3VtZW50cykgLSBoYWxmz4AsIGExID0gZW5kQW5nbGUuYXBwbHkodGhpcywgYXJndW1lbnRzKSAtIGhhbGbPgCwgZGEgPSBNYXRoLmFicyhhMSAtIGEwKSwgY3cgPSBhMCA+IGExID8gMCA6IDE7XG4gICAgICBpZiAocjEgPCByMCkgcmMgPSByMSwgcjEgPSByMCwgcjAgPSByYztcbiAgICAgIGlmIChkYSA+PSDPhM61KSByZXR1cm4gY2lyY2xlU2VnbWVudChyMSwgY3cpICsgKHIwID8gY2lyY2xlU2VnbWVudChyMCwgMSAtIGN3KSA6IFwiXCIpICsgXCJaXCI7XG4gICAgICB2YXIgcmMsIGNyLCBycCwgYXAsIHAwID0gMCwgcDEgPSAwLCB4MCwgeTAsIHgxLCB5MSwgeDIsIHkyLCB4MywgeTMsIHBhdGggPSBbXTtcbiAgICAgIGlmIChhcCA9ICgrcGFkQW5nbGUuYXBwbHkodGhpcywgYXJndW1lbnRzKSB8fCAwKSAvIDIpIHtcbiAgICAgICAgcnAgPSBwYWRSYWRpdXMgPT09IGQzX3N2Z19hcmNBdXRvID8gTWF0aC5zcXJ0KHIwICogcjAgKyByMSAqIHIxKSA6ICtwYWRSYWRpdXMuYXBwbHkodGhpcywgYXJndW1lbnRzKTtcbiAgICAgICAgaWYgKCFjdykgcDEgKj0gLTE7XG4gICAgICAgIGlmIChyMSkgcDEgPSBkM19hc2luKHJwIC8gcjEgKiBNYXRoLnNpbihhcCkpO1xuICAgICAgICBpZiAocjApIHAwID0gZDNfYXNpbihycCAvIHIwICogTWF0aC5zaW4oYXApKTtcbiAgICAgIH1cbiAgICAgIGlmIChyMSkge1xuICAgICAgICB4MCA9IHIxICogTWF0aC5jb3MoYTAgKyBwMSk7XG4gICAgICAgIHkwID0gcjEgKiBNYXRoLnNpbihhMCArIHAxKTtcbiAgICAgICAgeDEgPSByMSAqIE1hdGguY29zKGExIC0gcDEpO1xuICAgICAgICB5MSA9IHIxICogTWF0aC5zaW4oYTEgLSBwMSk7XG4gICAgICAgIHZhciBsMSA9IE1hdGguYWJzKGExIC0gYTAgLSAyICogcDEpIDw9IM+AID8gMCA6IDE7XG4gICAgICAgIGlmIChwMSAmJiBkM19zdmdfYXJjU3dlZXAoeDAsIHkwLCB4MSwgeTEpID09PSBjdyBeIGwxKSB7XG4gICAgICAgICAgdmFyIGgxID0gKGEwICsgYTEpIC8gMjtcbiAgICAgICAgICB4MCA9IHIxICogTWF0aC5jb3MoaDEpO1xuICAgICAgICAgIHkwID0gcjEgKiBNYXRoLnNpbihoMSk7XG4gICAgICAgICAgeDEgPSB5MSA9IG51bGw7XG4gICAgICAgIH1cbiAgICAgIH0gZWxzZSB7XG4gICAgICAgIHgwID0geTAgPSAwO1xuICAgICAgfVxuICAgICAgaWYgKHIwKSB7XG4gICAgICAgIHgyID0gcjAgKiBNYXRoLmNvcyhhMSAtIHAwKTtcbiAgICAgICAgeTIgPSByMCAqIE1hdGguc2luKGExIC0gcDApO1xuICAgICAgICB4MyA9IHIwICogTWF0aC5jb3MoYTAgKyBwMCk7XG4gICAgICAgIHkzID0gcjAgKiBNYXRoLnNpbihhMCArIHAwKTtcbiAgICAgICAgdmFyIGwwID0gTWF0aC5hYnMoYTAgLSBhMSArIDIgKiBwMCkgPD0gz4AgPyAwIDogMTtcbiAgICAgICAgaWYgKHAwICYmIGQzX3N2Z19hcmNTd2VlcCh4MiwgeTIsIHgzLCB5MykgPT09IDEgLSBjdyBeIGwwKSB7XG4gICAgICAgICAgdmFyIGgwID0gKGEwICsgYTEpIC8gMjtcbiAgICAgICAgICB4MiA9IHIwICogTWF0aC5jb3MoaDApO1xuICAgICAgICAgIHkyID0gcjAgKiBNYXRoLnNpbihoMCk7XG4gICAgICAgICAgeDMgPSB5MyA9IG51bGw7XG4gICAgICAgIH1cbiAgICAgIH0gZWxzZSB7XG4gICAgICAgIHgyID0geTIgPSAwO1xuICAgICAgfVxuICAgICAgaWYgKGRhID4gzrUgJiYgKHJjID0gTWF0aC5taW4oTWF0aC5hYnMocjEgLSByMCkgLyAyLCArY29ybmVyUmFkaXVzLmFwcGx5KHRoaXMsIGFyZ3VtZW50cykpKSA+IC4wMDEpIHtcbiAgICAgICAgY3IgPSByMCA8IHIxIF4gY3cgPyAwIDogMTtcbiAgICAgICAgdmFyIHJjMSA9IHJjLCByYzAgPSByYztcbiAgICAgICAgaWYgKGRhIDwgz4ApIHtcbiAgICAgICAgICB2YXIgb2MgPSB4MyA9PSBudWxsID8gWyB4MiwgeTIgXSA6IHgxID09IG51bGwgPyBbIHgwLCB5MCBdIDogZDNfZ2VvbV9wb2x5Z29uSW50ZXJzZWN0KFsgeDAsIHkwIF0sIFsgeDMsIHkzIF0sIFsgeDEsIHkxIF0sIFsgeDIsIHkyIF0pLCBheCA9IHgwIC0gb2NbMF0sIGF5ID0geTAgLSBvY1sxXSwgYnggPSB4MSAtIG9jWzBdLCBieSA9IHkxIC0gb2NbMV0sIGtjID0gMSAvIE1hdGguc2luKE1hdGguYWNvcygoYXggKiBieCArIGF5ICogYnkpIC8gKE1hdGguc3FydChheCAqIGF4ICsgYXkgKiBheSkgKiBNYXRoLnNxcnQoYnggKiBieCArIGJ5ICogYnkpKSkgLyAyKSwgbGMgPSBNYXRoLnNxcnQob2NbMF0gKiBvY1swXSArIG9jWzFdICogb2NbMV0pO1xuICAgICAgICAgIHJjMCA9IE1hdGgubWluKHJjLCAocjAgLSBsYykgLyAoa2MgLSAxKSk7XG4gICAgICAgICAgcmMxID0gTWF0aC5taW4ocmMsIChyMSAtIGxjKSAvIChrYyArIDEpKTtcbiAgICAgICAgfVxuICAgICAgICBpZiAoeDEgIT0gbnVsbCkge1xuICAgICAgICAgIHZhciB0MzAgPSBkM19zdmdfYXJjQ29ybmVyVGFuZ2VudHMoeDMgPT0gbnVsbCA/IFsgeDIsIHkyIF0gOiBbIHgzLCB5MyBdLCBbIHgwLCB5MCBdLCByMSwgcmMxLCBjdyksIHQxMiA9IGQzX3N2Z19hcmNDb3JuZXJUYW5nZW50cyhbIHgxLCB5MSBdLCBbIHgyLCB5MiBdLCByMSwgcmMxLCBjdyk7XG4gICAgICAgICAgaWYgKHJjID09PSByYzEpIHtcbiAgICAgICAgICAgIHBhdGgucHVzaChcIk1cIiwgdDMwWzBdLCBcIkFcIiwgcmMxLCBcIixcIiwgcmMxLCBcIiAwIDAsXCIsIGNyLCBcIiBcIiwgdDMwWzFdLCBcIkFcIiwgcjEsIFwiLFwiLCByMSwgXCIgMCBcIiwgMSAtIGN3IF4gZDNfc3ZnX2FyY1N3ZWVwKHQzMFsxXVswXSwgdDMwWzFdWzFdLCB0MTJbMV1bMF0sIHQxMlsxXVsxXSksIFwiLFwiLCBjdywgXCIgXCIsIHQxMlsxXSwgXCJBXCIsIHJjMSwgXCIsXCIsIHJjMSwgXCIgMCAwLFwiLCBjciwgXCIgXCIsIHQxMlswXSk7XG4gICAgICAgICAgfSBlbHNlIHtcbiAgICAgICAgICAgIHBhdGgucHVzaChcIk1cIiwgdDMwWzBdLCBcIkFcIiwgcmMxLCBcIixcIiwgcmMxLCBcIiAwIDEsXCIsIGNyLCBcIiBcIiwgdDEyWzBdKTtcbiAgICAgICAgICB9XG4gICAgICAgIH0gZWxzZSB7XG4gICAgICAgICAgcGF0aC5wdXNoKFwiTVwiLCB4MCwgXCIsXCIsIHkwKTtcbiAgICAgICAgfVxuICAgICAgICBpZiAoeDMgIT0gbnVsbCkge1xuICAgICAgICAgIHZhciB0MDMgPSBkM19zdmdfYXJjQ29ybmVyVGFuZ2VudHMoWyB4MCwgeTAgXSwgWyB4MywgeTMgXSwgcjAsIC1yYzAsIGN3KSwgdDIxID0gZDNfc3ZnX2FyY0Nvcm5lclRhbmdlbnRzKFsgeDIsIHkyIF0sIHgxID09IG51bGwgPyBbIHgwLCB5MCBdIDogWyB4MSwgeTEgXSwgcjAsIC1yYzAsIGN3KTtcbiAgICAgICAgICBpZiAocmMgPT09IHJjMCkge1xuICAgICAgICAgICAgcGF0aC5wdXNoKFwiTFwiLCB0MjFbMF0sIFwiQVwiLCByYzAsIFwiLFwiLCByYzAsIFwiIDAgMCxcIiwgY3IsIFwiIFwiLCB0MjFbMV0sIFwiQVwiLCByMCwgXCIsXCIsIHIwLCBcIiAwIFwiLCBjdyBeIGQzX3N2Z19hcmNTd2VlcCh0MjFbMV1bMF0sIHQyMVsxXVsxXSwgdDAzWzFdWzBdLCB0MDNbMV1bMV0pLCBcIixcIiwgMSAtIGN3LCBcIiBcIiwgdDAzWzFdLCBcIkFcIiwgcmMwLCBcIixcIiwgcmMwLCBcIiAwIDAsXCIsIGNyLCBcIiBcIiwgdDAzWzBdKTtcbiAgICAgICAgICB9IGVsc2Uge1xuICAgICAgICAgICAgcGF0aC5wdXNoKFwiTFwiLCB0MjFbMF0sIFwiQVwiLCByYzAsIFwiLFwiLCByYzAsIFwiIDAgMCxcIiwgY3IsIFwiIFwiLCB0MDNbMF0pO1xuICAgICAgICAgIH1cbiAgICAgICAgfSBlbHNlIHtcbiAgICAgICAgICBwYXRoLnB1c2goXCJMXCIsIHgyLCBcIixcIiwgeTIpO1xuICAgICAgICB9XG4gICAgICB9IGVsc2Uge1xuICAgICAgICBwYXRoLnB1c2goXCJNXCIsIHgwLCBcIixcIiwgeTApO1xuICAgICAgICBpZiAoeDEgIT0gbnVsbCkgcGF0aC5wdXNoKFwiQVwiLCByMSwgXCIsXCIsIHIxLCBcIiAwIFwiLCBsMSwgXCIsXCIsIGN3LCBcIiBcIiwgeDEsIFwiLFwiLCB5MSk7XG4gICAgICAgIHBhdGgucHVzaChcIkxcIiwgeDIsIFwiLFwiLCB5Mik7XG4gICAgICAgIGlmICh4MyAhPSBudWxsKSBwYXRoLnB1c2goXCJBXCIsIHIwLCBcIixcIiwgcjAsIFwiIDAgXCIsIGwwLCBcIixcIiwgMSAtIGN3LCBcIiBcIiwgeDMsIFwiLFwiLCB5Myk7XG4gICAgICB9XG4gICAgICBwYXRoLnB1c2goXCJaXCIpO1xuICAgICAgcmV0dXJuIHBhdGguam9pbihcIlwiKTtcbiAgICB9XG4gICAgZnVuY3Rpb24gY2lyY2xlU2VnbWVudChyMSwgY3cpIHtcbiAgICAgIHJldHVybiBcIk0wLFwiICsgcjEgKyBcIkFcIiArIHIxICsgXCIsXCIgKyByMSArIFwiIDAgMSxcIiArIGN3ICsgXCIgMCxcIiArIC1yMSArIFwiQVwiICsgcjEgKyBcIixcIiArIHIxICsgXCIgMCAxLFwiICsgY3cgKyBcIiAwLFwiICsgcjE7XG4gICAgfVxuICAgIGFyYy5pbm5lclJhZGl1cyA9IGZ1bmN0aW9uKHYpIHtcbiAgICAgIGlmICghYXJndW1lbnRzLmxlbmd0aCkgcmV0dXJuIGlubmVyUmFkaXVzO1xuICAgICAgaW5uZXJSYWRpdXMgPSBkM19mdW5jdG9yKHYpO1xuICAgICAgcmV0dXJuIGFyYztcbiAgICB9O1xuICAgIGFyYy5vdXRlclJhZGl1cyA9IGZ1bmN0aW9uKHYpIHtcbiAgICAgIGlmICghYXJndW1lbnRzLmxlbmd0aCkgcmV0dXJuIG91dGVyUmFkaXVzO1xuICAgICAgb3V0ZXJSYWRpdXMgPSBkM19mdW5jdG9yKHYpO1xuICAgICAgcmV0dXJuIGFyYztcbiAgICB9O1xuICAgIGFyYy5jb3JuZXJSYWRpdXMgPSBmdW5jdGlvbih2KSB7XG4gICAgICBpZiAoIWFyZ3VtZW50cy5sZW5ndGgpIHJldHVybiBjb3JuZXJSYWRpdXM7XG4gICAgICBjb3JuZXJSYWRpdXMgPSBkM19mdW5jdG9yKHYpO1xuICAgICAgcmV0dXJuIGFyYztcbiAgICB9O1xuICAgIGFyYy5wYWRSYWRpdXMgPSBmdW5jdGlvbih2KSB7XG4gICAgICBpZiAoIWFyZ3VtZW50cy5sZW5ndGgpIHJldHVybiBwYWRSYWRpdXM7XG4gICAgICBwYWRSYWRpdXMgPSB2ID09IGQzX3N2Z19hcmNBdXRvID8gZDNfc3ZnX2FyY0F1dG8gOiBkM19mdW5jdG9yKHYpO1xuICAgICAgcmV0dXJuIGFyYztcbiAgICB9O1xuICAgIGFyYy5zdGFydEFuZ2xlID0gZnVuY3Rpb24odikge1xuICAgICAgaWYgKCFhcmd1bWVudHMubGVuZ3RoKSByZXR1cm4gc3RhcnRBbmdsZTtcbiAgICAgIHN0YXJ0QW5nbGUgPSBkM19mdW5jdG9yKHYpO1xuICAgICAgcmV0dXJuIGFyYztcbiAgICB9O1xuICAgIGFyYy5lbmRBbmdsZSA9IGZ1bmN0aW9uKHYpIHtcbiAgICAgIGlmICghYXJndW1lbnRzLmxlbmd0aCkgcmV0dXJuIGVuZEFuZ2xlO1xuICAgICAgZW5kQW5nbGUgPSBkM19mdW5jdG9yKHYpO1xuICAgICAgcmV0dXJuIGFyYztcbiAgICB9O1xuICAgIGFyYy5wYWRBbmdsZSA9IGZ1bmN0aW9uKHYpIHtcbiAgICAgIGlmICghYXJndW1lbnRzLmxlbmd0aCkgcmV0dXJuIHBhZEFuZ2xlO1xuICAgICAgcGFkQW5nbGUgPSBkM19mdW5jdG9yKHYpO1xuICAgICAgcmV0dXJuIGFyYztcbiAgICB9O1xuICAgIGFyYy5jZW50cm9pZCA9IGZ1bmN0aW9uKCkge1xuICAgICAgdmFyIHIgPSAoK2lubmVyUmFkaXVzLmFwcGx5KHRoaXMsIGFyZ3VtZW50cykgKyArb3V0ZXJSYWRpdXMuYXBwbHkodGhpcywgYXJndW1lbnRzKSkgLyAyLCBhID0gKCtzdGFydEFuZ2xlLmFwcGx5KHRoaXMsIGFyZ3VtZW50cykgKyArZW5kQW5nbGUuYXBwbHkodGhpcywgYXJndW1lbnRzKSkgLyAyIC0gaGFsZs+AO1xuICAgICAgcmV0dXJuIFsgTWF0aC5jb3MoYSkgKiByLCBNYXRoLnNpbihhKSAqIHIgXTtcbiAgICB9O1xuICAgIHJldHVybiBhcmM7XG4gIH07XG4gIHZhciBkM19zdmdfYXJjQXV0byA9IFwiYXV0b1wiO1xuICBmdW5jdGlvbiBkM19zdmdfYXJjSW5uZXJSYWRpdXMoZCkge1xuICAgIHJldHVybiBkLmlubmVyUmFkaXVzO1xuICB9XG4gIGZ1bmN0aW9uIGQzX3N2Z19hcmNPdXRlclJhZGl1cyhkKSB7XG4gICAgcmV0dXJuIGQub3V0ZXJSYWRpdXM7XG4gIH1cbiAgZnVuY3Rpb24gZDNfc3ZnX2FyY1N0YXJ0QW5nbGUoZCkge1xuICAgIHJldHVybiBkLnN0YXJ0QW5nbGU7XG4gIH1cbiAgZnVuY3Rpb24gZDNfc3ZnX2FyY0VuZEFuZ2xlKGQpIHtcbiAgICByZXR1cm4gZC5lbmRBbmdsZTtcbiAgfVxuICBmdW5jdGlvbiBkM19zdmdfYXJjUGFkQW5nbGUoZCkge1xuICAgIHJldHVybiBkICYmIGQucGFkQW5nbGU7XG4gIH1cbiAgZnVuY3Rpb24gZDNfc3ZnX2FyY1N3ZWVwKHgwLCB5MCwgeDEsIHkxKSB7XG4gICAgcmV0dXJuICh4MCAtIHgxKSAqIHkwIC0gKHkwIC0geTEpICogeDAgPiAwID8gMCA6IDE7XG4gIH1cbiAgZnVuY3Rpb24gZDNfc3ZnX2FyY0Nvcm5lclRhbmdlbnRzKHAwLCBwMSwgcjEsIHJjLCBjdykge1xuICAgIHZhciB4MDEgPSBwMFswXSAtIHAxWzBdLCB5MDEgPSBwMFsxXSAtIHAxWzFdLCBsbyA9IChjdyA/IHJjIDogLXJjKSAvIE1hdGguc3FydCh4MDEgKiB4MDEgKyB5MDEgKiB5MDEpLCBveCA9IGxvICogeTAxLCBveSA9IC1sbyAqIHgwMSwgeDEgPSBwMFswXSArIG94LCB5MSA9IHAwWzFdICsgb3ksIHgyID0gcDFbMF0gKyBveCwgeTIgPSBwMVsxXSArIG95LCB4MyA9ICh4MSArIHgyKSAvIDIsIHkzID0gKHkxICsgeTIpIC8gMiwgZHggPSB4MiAtIHgxLCBkeSA9IHkyIC0geTEsIGQyID0gZHggKiBkeCArIGR5ICogZHksIHIgPSByMSAtIHJjLCBEID0geDEgKiB5MiAtIHgyICogeTEsIGQgPSAoZHkgPCAwID8gLTEgOiAxKSAqIE1hdGguc3FydChNYXRoLm1heCgwLCByICogciAqIGQyIC0gRCAqIEQpKSwgY3gwID0gKEQgKiBkeSAtIGR4ICogZCkgLyBkMiwgY3kwID0gKC1EICogZHggLSBkeSAqIGQpIC8gZDIsIGN4MSA9IChEICogZHkgKyBkeCAqIGQpIC8gZDIsIGN5MSA9ICgtRCAqIGR4ICsgZHkgKiBkKSAvIGQyLCBkeDAgPSBjeDAgLSB4MywgZHkwID0gY3kwIC0geTMsIGR4MSA9IGN4MSAtIHgzLCBkeTEgPSBjeTEgLSB5MztcbiAgICBpZiAoZHgwICogZHgwICsgZHkwICogZHkwID4gZHgxICogZHgxICsgZHkxICogZHkxKSBjeDAgPSBjeDEsIGN5MCA9IGN5MTtcbiAgICByZXR1cm4gWyBbIGN4MCAtIG94LCBjeTAgLSBveSBdLCBbIGN4MCAqIHIxIC8gciwgY3kwICogcjEgLyByIF0gXTtcbiAgfVxuICBmdW5jdGlvbiBkM19zdmdfbGluZShwcm9qZWN0aW9uKSB7XG4gICAgdmFyIHggPSBkM19nZW9tX3BvaW50WCwgeSA9IGQzX2dlb21fcG9pbnRZLCBkZWZpbmVkID0gZDNfdHJ1ZSwgaW50ZXJwb2xhdGUgPSBkM19zdmdfbGluZUxpbmVhciwgaW50ZXJwb2xhdGVLZXkgPSBpbnRlcnBvbGF0ZS5rZXksIHRlbnNpb24gPSAuNztcbiAgICBmdW5jdGlvbiBsaW5lKGRhdGEpIHtcbiAgICAgIHZhciBzZWdtZW50cyA9IFtdLCBwb2ludHMgPSBbXSwgaSA9IC0xLCBuID0gZGF0YS5sZW5ndGgsIGQsIGZ4ID0gZDNfZnVuY3Rvcih4KSwgZnkgPSBkM19mdW5jdG9yKHkpO1xuICAgICAgZnVuY3Rpb24gc2VnbWVudCgpIHtcbiAgICAgICAgc2VnbWVudHMucHVzaChcIk1cIiwgaW50ZXJwb2xhdGUocHJvamVjdGlvbihwb2ludHMpLCB0ZW5zaW9uKSk7XG4gICAgICB9XG4gICAgICB3aGlsZSAoKytpIDwgbikge1xuICAgICAgICBpZiAoZGVmaW5lZC5jYWxsKHRoaXMsIGQgPSBkYXRhW2ldLCBpKSkge1xuICAgICAgICAgIHBvaW50cy5wdXNoKFsgK2Z4LmNhbGwodGhpcywgZCwgaSksICtmeS5jYWxsKHRoaXMsIGQsIGkpIF0pO1xuICAgICAgICB9IGVsc2UgaWYgKHBvaW50cy5sZW5ndGgpIHtcbiAgICAgICAgICBzZWdtZW50KCk7XG4gICAgICAgICAgcG9pbnRzID0gW107XG4gICAgICAgIH1cbiAgICAgIH1cbiAgICAgIGlmIChwb2ludHMubGVuZ3RoKSBzZWdtZW50KCk7XG4gICAgICByZXR1cm4gc2VnbWVudHMubGVuZ3RoID8gc2VnbWVudHMuam9pbihcIlwiKSA6IG51bGw7XG4gICAgfVxuICAgIGxpbmUueCA9IGZ1bmN0aW9uKF8pIHtcbiAgICAgIGlmICghYXJndW1lbnRzLmxlbmd0aCkgcmV0dXJuIHg7XG4gICAgICB4ID0gXztcbiAgICAgIHJldHVybiBsaW5lO1xuICAgIH07XG4gICAgbGluZS55ID0gZnVuY3Rpb24oXykge1xuICAgICAgaWYgKCFhcmd1bWVudHMubGVuZ3RoKSByZXR1cm4geTtcbiAgICAgIHkgPSBfO1xuICAgICAgcmV0dXJuIGxpbmU7XG4gICAgfTtcbiAgICBsaW5lLmRlZmluZWQgPSBmdW5jdGlvbihfKSB7XG4gICAgICBpZiAoIWFyZ3VtZW50cy5sZW5ndGgpIHJldHVybiBkZWZpbmVkO1xuICAgICAgZGVmaW5lZCA9IF87XG4gICAgICByZXR1cm4gbGluZTtcbiAgICB9O1xuICAgIGxpbmUuaW50ZXJwb2xhdGUgPSBmdW5jdGlvbihfKSB7XG4gICAgICBpZiAoIWFyZ3VtZW50cy5sZW5ndGgpIHJldHVybiBpbnRlcnBvbGF0ZUtleTtcbiAgICAgIGlmICh0eXBlb2YgXyA9PT0gXCJmdW5jdGlvblwiKSBpbnRlcnBvbGF0ZUtleSA9IGludGVycG9sYXRlID0gXzsgZWxzZSBpbnRlcnBvbGF0ZUtleSA9IChpbnRlcnBvbGF0ZSA9IGQzX3N2Z19saW5lSW50ZXJwb2xhdG9ycy5nZXQoXykgfHwgZDNfc3ZnX2xpbmVMaW5lYXIpLmtleTtcbiAgICAgIHJldHVybiBsaW5lO1xuICAgIH07XG4gICAgbGluZS50ZW5zaW9uID0gZnVuY3Rpb24oXykge1xuICAgICAgaWYgKCFhcmd1bWVudHMubGVuZ3RoKSByZXR1cm4gdGVuc2lvbjtcbiAgICAgIHRlbnNpb24gPSBfO1xuICAgICAgcmV0dXJuIGxpbmU7XG4gICAgfTtcbiAgICByZXR1cm4gbGluZTtcbiAgfVxuICBkMy5zdmcubGluZSA9IGZ1bmN0aW9uKCkge1xuICAgIHJldHVybiBkM19zdmdfbGluZShkM19pZGVudGl0eSk7XG4gIH07XG4gIHZhciBkM19zdmdfbGluZUludGVycG9sYXRvcnMgPSBkMy5tYXAoe1xuICAgIGxpbmVhcjogZDNfc3ZnX2xpbmVMaW5lYXIsXG4gICAgXCJsaW5lYXItY2xvc2VkXCI6IGQzX3N2Z19saW5lTGluZWFyQ2xvc2VkLFxuICAgIHN0ZXA6IGQzX3N2Z19saW5lU3RlcCxcbiAgICBcInN0ZXAtYmVmb3JlXCI6IGQzX3N2Z19saW5lU3RlcEJlZm9yZSxcbiAgICBcInN0ZXAtYWZ0ZXJcIjogZDNfc3ZnX2xpbmVTdGVwQWZ0ZXIsXG4gICAgYmFzaXM6IGQzX3N2Z19saW5lQmFzaXMsXG4gICAgXCJiYXNpcy1vcGVuXCI6IGQzX3N2Z19saW5lQmFzaXNPcGVuLFxuICAgIFwiYmFzaXMtY2xvc2VkXCI6IGQzX3N2Z19saW5lQmFzaXNDbG9zZWQsXG4gICAgYnVuZGxlOiBkM19zdmdfbGluZUJ1bmRsZSxcbiAgICBjYXJkaW5hbDogZDNfc3ZnX2xpbmVDYXJkaW5hbCxcbiAgICBcImNhcmRpbmFsLW9wZW5cIjogZDNfc3ZnX2xpbmVDYXJkaW5hbE9wZW4sXG4gICAgXCJjYXJkaW5hbC1jbG9zZWRcIjogZDNfc3ZnX2xpbmVDYXJkaW5hbENsb3NlZCxcbiAgICBtb25vdG9uZTogZDNfc3ZnX2xpbmVNb25vdG9uZVxuICB9KTtcbiAgZDNfc3ZnX2xpbmVJbnRlcnBvbGF0b3JzLmZvckVhY2goZnVuY3Rpb24oa2V5LCB2YWx1ZSkge1xuICAgIHZhbHVlLmtleSA9IGtleTtcbiAgICB2YWx1ZS5jbG9zZWQgPSAvLWNsb3NlZCQvLnRlc3Qoa2V5KTtcbiAgfSk7XG4gIGZ1bmN0aW9uIGQzX3N2Z19saW5lTGluZWFyKHBvaW50cykge1xuICAgIHJldHVybiBwb2ludHMubGVuZ3RoID4gMSA/IHBvaW50cy5qb2luKFwiTFwiKSA6IHBvaW50cyArIFwiWlwiO1xuICB9XG4gIGZ1bmN0aW9uIGQzX3N2Z19saW5lTGluZWFyQ2xvc2VkKHBvaW50cykge1xuICAgIHJldHVybiBwb2ludHMuam9pbihcIkxcIikgKyBcIlpcIjtcbiAgfVxuICBmdW5jdGlvbiBkM19zdmdfbGluZVN0ZXAocG9pbnRzKSB7XG4gICAgdmFyIGkgPSAwLCBuID0gcG9pbnRzLmxlbmd0aCwgcCA9IHBvaW50c1swXSwgcGF0aCA9IFsgcFswXSwgXCIsXCIsIHBbMV0gXTtcbiAgICB3aGlsZSAoKytpIDwgbikgcGF0aC5wdXNoKFwiSFwiLCAocFswXSArIChwID0gcG9pbnRzW2ldKVswXSkgLyAyLCBcIlZcIiwgcFsxXSk7XG4gICAgaWYgKG4gPiAxKSBwYXRoLnB1c2goXCJIXCIsIHBbMF0pO1xuICAgIHJldHVybiBwYXRoLmpvaW4oXCJcIik7XG4gIH1cbiAgZnVuY3Rpb24gZDNfc3ZnX2xpbmVTdGVwQmVmb3JlKHBvaW50cykge1xuICAgIHZhciBpID0gMCwgbiA9IHBvaW50cy5sZW5ndGgsIHAgPSBwb2ludHNbMF0sIHBhdGggPSBbIHBbMF0sIFwiLFwiLCBwWzFdIF07XG4gICAgd2hpbGUgKCsraSA8IG4pIHBhdGgucHVzaChcIlZcIiwgKHAgPSBwb2ludHNbaV0pWzFdLCBcIkhcIiwgcFswXSk7XG4gICAgcmV0dXJuIHBhdGguam9pbihcIlwiKTtcbiAgfVxuICBmdW5jdGlvbiBkM19zdmdfbGluZVN0ZXBBZnRlcihwb2ludHMpIHtcbiAgICB2YXIgaSA9IDAsIG4gPSBwb2ludHMubGVuZ3RoLCBwID0gcG9pbnRzWzBdLCBwYXRoID0gWyBwWzBdLCBcIixcIiwgcFsxXSBdO1xuICAgIHdoaWxlICgrK2kgPCBuKSBwYXRoLnB1c2goXCJIXCIsIChwID0gcG9pbnRzW2ldKVswXSwgXCJWXCIsIHBbMV0pO1xuICAgIHJldHVybiBwYXRoLmpvaW4oXCJcIik7XG4gIH1cbiAgZnVuY3Rpb24gZDNfc3ZnX2xpbmVDYXJkaW5hbE9wZW4ocG9pbnRzLCB0ZW5zaW9uKSB7XG4gICAgcmV0dXJuIHBvaW50cy5sZW5ndGggPCA0ID8gZDNfc3ZnX2xpbmVMaW5lYXIocG9pbnRzKSA6IHBvaW50c1sxXSArIGQzX3N2Z19saW5lSGVybWl0ZShwb2ludHMuc2xpY2UoMSwgLTEpLCBkM19zdmdfbGluZUNhcmRpbmFsVGFuZ2VudHMocG9pbnRzLCB0ZW5zaW9uKSk7XG4gIH1cbiAgZnVuY3Rpb24gZDNfc3ZnX2xpbmVDYXJkaW5hbENsb3NlZChwb2ludHMsIHRlbnNpb24pIHtcbiAgICByZXR1cm4gcG9pbnRzLmxlbmd0aCA8IDMgPyBkM19zdmdfbGluZUxpbmVhckNsb3NlZChwb2ludHMpIDogcG9pbnRzWzBdICsgZDNfc3ZnX2xpbmVIZXJtaXRlKChwb2ludHMucHVzaChwb2ludHNbMF0pLCBcbiAgICBwb2ludHMpLCBkM19zdmdfbGluZUNhcmRpbmFsVGFuZ2VudHMoWyBwb2ludHNbcG9pbnRzLmxlbmd0aCAtIDJdIF0uY29uY2F0KHBvaW50cywgWyBwb2ludHNbMV0gXSksIHRlbnNpb24pKTtcbiAgfVxuICBmdW5jdGlvbiBkM19zdmdfbGluZUNhcmRpbmFsKHBvaW50cywgdGVuc2lvbikge1xuICAgIHJldHVybiBwb2ludHMubGVuZ3RoIDwgMyA/IGQzX3N2Z19saW5lTGluZWFyKHBvaW50cykgOiBwb2ludHNbMF0gKyBkM19zdmdfbGluZUhlcm1pdGUocG9pbnRzLCBkM19zdmdfbGluZUNhcmRpbmFsVGFuZ2VudHMocG9pbnRzLCB0ZW5zaW9uKSk7XG4gIH1cbiAgZnVuY3Rpb24gZDNfc3ZnX2xpbmVIZXJtaXRlKHBvaW50cywgdGFuZ2VudHMpIHtcbiAgICBpZiAodGFuZ2VudHMubGVuZ3RoIDwgMSB8fCBwb2ludHMubGVuZ3RoICE9IHRhbmdlbnRzLmxlbmd0aCAmJiBwb2ludHMubGVuZ3RoICE9IHRhbmdlbnRzLmxlbmd0aCArIDIpIHtcbiAgICAgIHJldHVybiBkM19zdmdfbGluZUxpbmVhcihwb2ludHMpO1xuICAgIH1cbiAgICB2YXIgcXVhZCA9IHBvaW50cy5sZW5ndGggIT0gdGFuZ2VudHMubGVuZ3RoLCBwYXRoID0gXCJcIiwgcDAgPSBwb2ludHNbMF0sIHAgPSBwb2ludHNbMV0sIHQwID0gdGFuZ2VudHNbMF0sIHQgPSB0MCwgcGkgPSAxO1xuICAgIGlmIChxdWFkKSB7XG4gICAgICBwYXRoICs9IFwiUVwiICsgKHBbMF0gLSB0MFswXSAqIDIgLyAzKSArIFwiLFwiICsgKHBbMV0gLSB0MFsxXSAqIDIgLyAzKSArIFwiLFwiICsgcFswXSArIFwiLFwiICsgcFsxXTtcbiAgICAgIHAwID0gcG9pbnRzWzFdO1xuICAgICAgcGkgPSAyO1xuICAgIH1cbiAgICBpZiAodGFuZ2VudHMubGVuZ3RoID4gMSkge1xuICAgICAgdCA9IHRhbmdlbnRzWzFdO1xuICAgICAgcCA9IHBvaW50c1twaV07XG4gICAgICBwaSsrO1xuICAgICAgcGF0aCArPSBcIkNcIiArIChwMFswXSArIHQwWzBdKSArIFwiLFwiICsgKHAwWzFdICsgdDBbMV0pICsgXCIsXCIgKyAocFswXSAtIHRbMF0pICsgXCIsXCIgKyAocFsxXSAtIHRbMV0pICsgXCIsXCIgKyBwWzBdICsgXCIsXCIgKyBwWzFdO1xuICAgICAgZm9yICh2YXIgaSA9IDI7IGkgPCB0YW5nZW50cy5sZW5ndGg7IGkrKywgcGkrKykge1xuICAgICAgICBwID0gcG9pbnRzW3BpXTtcbiAgICAgICAgdCA9IHRhbmdlbnRzW2ldO1xuICAgICAgICBwYXRoICs9IFwiU1wiICsgKHBbMF0gLSB0WzBdKSArIFwiLFwiICsgKHBbMV0gLSB0WzFdKSArIFwiLFwiICsgcFswXSArIFwiLFwiICsgcFsxXTtcbiAgICAgIH1cbiAgICB9XG4gICAgaWYgKHF1YWQpIHtcbiAgICAgIHZhciBscCA9IHBvaW50c1twaV07XG4gICAgICBwYXRoICs9IFwiUVwiICsgKHBbMF0gKyB0WzBdICogMiAvIDMpICsgXCIsXCIgKyAocFsxXSArIHRbMV0gKiAyIC8gMykgKyBcIixcIiArIGxwWzBdICsgXCIsXCIgKyBscFsxXTtcbiAgICB9XG4gICAgcmV0dXJuIHBhdGg7XG4gIH1cbiAgZnVuY3Rpb24gZDNfc3ZnX2xpbmVDYXJkaW5hbFRhbmdlbnRzKHBvaW50cywgdGVuc2lvbikge1xuICAgIHZhciB0YW5nZW50cyA9IFtdLCBhID0gKDEgLSB0ZW5zaW9uKSAvIDIsIHAwLCBwMSA9IHBvaW50c1swXSwgcDIgPSBwb2ludHNbMV0sIGkgPSAxLCBuID0gcG9pbnRzLmxlbmd0aDtcbiAgICB3aGlsZSAoKytpIDwgbikge1xuICAgICAgcDAgPSBwMTtcbiAgICAgIHAxID0gcDI7XG4gICAgICBwMiA9IHBvaW50c1tpXTtcbiAgICAgIHRhbmdlbnRzLnB1c2goWyBhICogKHAyWzBdIC0gcDBbMF0pLCBhICogKHAyWzFdIC0gcDBbMV0pIF0pO1xuICAgIH1cbiAgICByZXR1cm4gdGFuZ2VudHM7XG4gIH1cbiAgZnVuY3Rpb24gZDNfc3ZnX2xpbmVCYXNpcyhwb2ludHMpIHtcbiAgICBpZiAocG9pbnRzLmxlbmd0aCA8IDMpIHJldHVybiBkM19zdmdfbGluZUxpbmVhcihwb2ludHMpO1xuICAgIHZhciBpID0gMSwgbiA9IHBvaW50cy5sZW5ndGgsIHBpID0gcG9pbnRzWzBdLCB4MCA9IHBpWzBdLCB5MCA9IHBpWzFdLCBweCA9IFsgeDAsIHgwLCB4MCwgKHBpID0gcG9pbnRzWzFdKVswXSBdLCBweSA9IFsgeTAsIHkwLCB5MCwgcGlbMV0gXSwgcGF0aCA9IFsgeDAsIFwiLFwiLCB5MCwgXCJMXCIsIGQzX3N2Z19saW5lRG90NChkM19zdmdfbGluZUJhc2lzQmV6aWVyMywgcHgpLCBcIixcIiwgZDNfc3ZnX2xpbmVEb3Q0KGQzX3N2Z19saW5lQmFzaXNCZXppZXIzLCBweSkgXTtcbiAgICBwb2ludHMucHVzaChwb2ludHNbbiAtIDFdKTtcbiAgICB3aGlsZSAoKytpIDw9IG4pIHtcbiAgICAgIHBpID0gcG9pbnRzW2ldO1xuICAgICAgcHguc2hpZnQoKTtcbiAgICAgIHB4LnB1c2gocGlbMF0pO1xuICAgICAgcHkuc2hpZnQoKTtcbiAgICAgIHB5LnB1c2gocGlbMV0pO1xuICAgICAgZDNfc3ZnX2xpbmVCYXNpc0JlemllcihwYXRoLCBweCwgcHkpO1xuICAgIH1cbiAgICBwb2ludHMucG9wKCk7XG4gICAgcGF0aC5wdXNoKFwiTFwiLCBwaSk7XG4gICAgcmV0dXJuIHBhdGguam9pbihcIlwiKTtcbiAgfVxuICBmdW5jdGlvbiBkM19zdmdfbGluZUJhc2lzT3Blbihwb2ludHMpIHtcbiAgICBpZiAocG9pbnRzLmxlbmd0aCA8IDQpIHJldHVybiBkM19zdmdfbGluZUxpbmVhcihwb2ludHMpO1xuICAgIHZhciBwYXRoID0gW10sIGkgPSAtMSwgbiA9IHBvaW50cy5sZW5ndGgsIHBpLCBweCA9IFsgMCBdLCBweSA9IFsgMCBdO1xuICAgIHdoaWxlICgrK2kgPCAzKSB7XG4gICAgICBwaSA9IHBvaW50c1tpXTtcbiAgICAgIHB4LnB1c2gocGlbMF0pO1xuICAgICAgcHkucHVzaChwaVsxXSk7XG4gICAgfVxuICAgIHBhdGgucHVzaChkM19zdmdfbGluZURvdDQoZDNfc3ZnX2xpbmVCYXNpc0JlemllcjMsIHB4KSArIFwiLFwiICsgZDNfc3ZnX2xpbmVEb3Q0KGQzX3N2Z19saW5lQmFzaXNCZXppZXIzLCBweSkpO1xuICAgIC0taTtcbiAgICB3aGlsZSAoKytpIDwgbikge1xuICAgICAgcGkgPSBwb2ludHNbaV07XG4gICAgICBweC5zaGlmdCgpO1xuICAgICAgcHgucHVzaChwaVswXSk7XG4gICAgICBweS5zaGlmdCgpO1xuICAgICAgcHkucHVzaChwaVsxXSk7XG4gICAgICBkM19zdmdfbGluZUJhc2lzQmV6aWVyKHBhdGgsIHB4LCBweSk7XG4gICAgfVxuICAgIHJldHVybiBwYXRoLmpvaW4oXCJcIik7XG4gIH1cbiAgZnVuY3Rpb24gZDNfc3ZnX2xpbmVCYXNpc0Nsb3NlZChwb2ludHMpIHtcbiAgICB2YXIgcGF0aCwgaSA9IC0xLCBuID0gcG9pbnRzLmxlbmd0aCwgbSA9IG4gKyA0LCBwaSwgcHggPSBbXSwgcHkgPSBbXTtcbiAgICB3aGlsZSAoKytpIDwgNCkge1xuICAgICAgcGkgPSBwb2ludHNbaSAlIG5dO1xuICAgICAgcHgucHVzaChwaVswXSk7XG4gICAgICBweS5wdXNoKHBpWzFdKTtcbiAgICB9XG4gICAgcGF0aCA9IFsgZDNfc3ZnX2xpbmVEb3Q0KGQzX3N2Z19saW5lQmFzaXNCZXppZXIzLCBweCksIFwiLFwiLCBkM19zdmdfbGluZURvdDQoZDNfc3ZnX2xpbmVCYXNpc0JlemllcjMsIHB5KSBdO1xuICAgIC0taTtcbiAgICB3aGlsZSAoKytpIDwgbSkge1xuICAgICAgcGkgPSBwb2ludHNbaSAlIG5dO1xuICAgICAgcHguc2hpZnQoKTtcbiAgICAgIHB4LnB1c2gocGlbMF0pO1xuICAgICAgcHkuc2hpZnQoKTtcbiAgICAgIHB5LnB1c2gocGlbMV0pO1xuICAgICAgZDNfc3ZnX2xpbmVCYXNpc0JlemllcihwYXRoLCBweCwgcHkpO1xuICAgIH1cbiAgICByZXR1cm4gcGF0aC5qb2luKFwiXCIpO1xuICB9XG4gIGZ1bmN0aW9uIGQzX3N2Z19saW5lQnVuZGxlKHBvaW50cywgdGVuc2lvbikge1xuICAgIHZhciBuID0gcG9pbnRzLmxlbmd0aCAtIDE7XG4gICAgaWYgKG4pIHtcbiAgICAgIHZhciB4MCA9IHBvaW50c1swXVswXSwgeTAgPSBwb2ludHNbMF1bMV0sIGR4ID0gcG9pbnRzW25dWzBdIC0geDAsIGR5ID0gcG9pbnRzW25dWzFdIC0geTAsIGkgPSAtMSwgcCwgdDtcbiAgICAgIHdoaWxlICgrK2kgPD0gbikge1xuICAgICAgICBwID0gcG9pbnRzW2ldO1xuICAgICAgICB0ID0gaSAvIG47XG4gICAgICAgIHBbMF0gPSB0ZW5zaW9uICogcFswXSArICgxIC0gdGVuc2lvbikgKiAoeDAgKyB0ICogZHgpO1xuICAgICAgICBwWzFdID0gdGVuc2lvbiAqIHBbMV0gKyAoMSAtIHRlbnNpb24pICogKHkwICsgdCAqIGR5KTtcbiAgICAgIH1cbiAgICB9XG4gICAgcmV0dXJuIGQzX3N2Z19saW5lQmFzaXMocG9pbnRzKTtcbiAgfVxuICBmdW5jdGlvbiBkM19zdmdfbGluZURvdDQoYSwgYikge1xuICAgIHJldHVybiBhWzBdICogYlswXSArIGFbMV0gKiBiWzFdICsgYVsyXSAqIGJbMl0gKyBhWzNdICogYlszXTtcbiAgfVxuICB2YXIgZDNfc3ZnX2xpbmVCYXNpc0JlemllcjEgPSBbIDAsIDIgLyAzLCAxIC8gMywgMCBdLCBkM19zdmdfbGluZUJhc2lzQmV6aWVyMiA9IFsgMCwgMSAvIDMsIDIgLyAzLCAwIF0sIGQzX3N2Z19saW5lQmFzaXNCZXppZXIzID0gWyAwLCAxIC8gNiwgMiAvIDMsIDEgLyA2IF07XG4gIGZ1bmN0aW9uIGQzX3N2Z19saW5lQmFzaXNCZXppZXIocGF0aCwgeCwgeSkge1xuICAgIHBhdGgucHVzaChcIkNcIiwgZDNfc3ZnX2xpbmVEb3Q0KGQzX3N2Z19saW5lQmFzaXNCZXppZXIxLCB4KSwgXCIsXCIsIGQzX3N2Z19saW5lRG90NChkM19zdmdfbGluZUJhc2lzQmV6aWVyMSwgeSksIFwiLFwiLCBkM19zdmdfbGluZURvdDQoZDNfc3ZnX2xpbmVCYXNpc0JlemllcjIsIHgpLCBcIixcIiwgZDNfc3ZnX2xpbmVEb3Q0KGQzX3N2Z19saW5lQmFzaXNCZXppZXIyLCB5KSwgXCIsXCIsIGQzX3N2Z19saW5lRG90NChkM19zdmdfbGluZUJhc2lzQmV6aWVyMywgeCksIFwiLFwiLCBkM19zdmdfbGluZURvdDQoZDNfc3ZnX2xpbmVCYXNpc0JlemllcjMsIHkpKTtcbiAgfVxuICBmdW5jdGlvbiBkM19zdmdfbGluZVNsb3BlKHAwLCBwMSkge1xuICAgIHJldHVybiAocDFbMV0gLSBwMFsxXSkgLyAocDFbMF0gLSBwMFswXSk7XG4gIH1cbiAgZnVuY3Rpb24gZDNfc3ZnX2xpbmVGaW5pdGVEaWZmZXJlbmNlcyhwb2ludHMpIHtcbiAgICB2YXIgaSA9IDAsIGogPSBwb2ludHMubGVuZ3RoIC0gMSwgbSA9IFtdLCBwMCA9IHBvaW50c1swXSwgcDEgPSBwb2ludHNbMV0sIGQgPSBtWzBdID0gZDNfc3ZnX2xpbmVTbG9wZShwMCwgcDEpO1xuICAgIHdoaWxlICgrK2kgPCBqKSB7XG4gICAgICBtW2ldID0gKGQgKyAoZCA9IGQzX3N2Z19saW5lU2xvcGUocDAgPSBwMSwgcDEgPSBwb2ludHNbaSArIDFdKSkpIC8gMjtcbiAgICB9XG4gICAgbVtpXSA9IGQ7XG4gICAgcmV0dXJuIG07XG4gIH1cbiAgZnVuY3Rpb24gZDNfc3ZnX2xpbmVNb25vdG9uZVRhbmdlbnRzKHBvaW50cykge1xuICAgIHZhciB0YW5nZW50cyA9IFtdLCBkLCBhLCBiLCBzLCBtID0gZDNfc3ZnX2xpbmVGaW5pdGVEaWZmZXJlbmNlcyhwb2ludHMpLCBpID0gLTEsIGogPSBwb2ludHMubGVuZ3RoIC0gMTtcbiAgICB3aGlsZSAoKytpIDwgaikge1xuICAgICAgZCA9IGQzX3N2Z19saW5lU2xvcGUocG9pbnRzW2ldLCBwb2ludHNbaSArIDFdKTtcbiAgICAgIGlmIChhYnMoZCkgPCDOtSkge1xuICAgICAgICBtW2ldID0gbVtpICsgMV0gPSAwO1xuICAgICAgfSBlbHNlIHtcbiAgICAgICAgYSA9IG1baV0gLyBkO1xuICAgICAgICBiID0gbVtpICsgMV0gLyBkO1xuICAgICAgICBzID0gYSAqIGEgKyBiICogYjtcbiAgICAgICAgaWYgKHMgPiA5KSB7XG4gICAgICAgICAgcyA9IGQgKiAzIC8gTWF0aC5zcXJ0KHMpO1xuICAgICAgICAgIG1baV0gPSBzICogYTtcbiAgICAgICAgICBtW2kgKyAxXSA9IHMgKiBiO1xuICAgICAgICB9XG4gICAgICB9XG4gICAgfVxuICAgIGkgPSAtMTtcbiAgICB3aGlsZSAoKytpIDw9IGopIHtcbiAgICAgIHMgPSAocG9pbnRzW01hdGgubWluKGosIGkgKyAxKV1bMF0gLSBwb2ludHNbTWF0aC5tYXgoMCwgaSAtIDEpXVswXSkgLyAoNiAqICgxICsgbVtpXSAqIG1baV0pKTtcbiAgICAgIHRhbmdlbnRzLnB1c2goWyBzIHx8IDAsIG1baV0gKiBzIHx8IDAgXSk7XG4gICAgfVxuICAgIHJldHVybiB0YW5nZW50cztcbiAgfVxuICBmdW5jdGlvbiBkM19zdmdfbGluZU1vbm90b25lKHBvaW50cykge1xuICAgIHJldHVybiBwb2ludHMubGVuZ3RoIDwgMyA/IGQzX3N2Z19saW5lTGluZWFyKHBvaW50cykgOiBwb2ludHNbMF0gKyBkM19zdmdfbGluZUhlcm1pdGUocG9pbnRzLCBkM19zdmdfbGluZU1vbm90b25lVGFuZ2VudHMocG9pbnRzKSk7XG4gIH1cbiAgZDMuc3ZnLmxpbmUucmFkaWFsID0gZnVuY3Rpb24oKSB7XG4gICAgdmFyIGxpbmUgPSBkM19zdmdfbGluZShkM19zdmdfbGluZVJhZGlhbCk7XG4gICAgbGluZS5yYWRpdXMgPSBsaW5lLngsIGRlbGV0ZSBsaW5lLng7XG4gICAgbGluZS5hbmdsZSA9IGxpbmUueSwgZGVsZXRlIGxpbmUueTtcbiAgICByZXR1cm4gbGluZTtcbiAgfTtcbiAgZnVuY3Rpb24gZDNfc3ZnX2xpbmVSYWRpYWwocG9pbnRzKSB7XG4gICAgdmFyIHBvaW50LCBpID0gLTEsIG4gPSBwb2ludHMubGVuZ3RoLCByLCBhO1xuICAgIHdoaWxlICgrK2kgPCBuKSB7XG4gICAgICBwb2ludCA9IHBvaW50c1tpXTtcbiAgICAgIHIgPSBwb2ludFswXTtcbiAgICAgIGEgPSBwb2ludFsxXSAtIGhhbGbPgDtcbiAgICAgIHBvaW50WzBdID0gciAqIE1hdGguY29zKGEpO1xuICAgICAgcG9pbnRbMV0gPSByICogTWF0aC5zaW4oYSk7XG4gICAgfVxuICAgIHJldHVybiBwb2ludHM7XG4gIH1cbiAgZnVuY3Rpb24gZDNfc3ZnX2FyZWEocHJvamVjdGlvbikge1xuICAgIHZhciB4MCA9IGQzX2dlb21fcG9pbnRYLCB4MSA9IGQzX2dlb21fcG9pbnRYLCB5MCA9IDAsIHkxID0gZDNfZ2VvbV9wb2ludFksIGRlZmluZWQgPSBkM190cnVlLCBpbnRlcnBvbGF0ZSA9IGQzX3N2Z19saW5lTGluZWFyLCBpbnRlcnBvbGF0ZUtleSA9IGludGVycG9sYXRlLmtleSwgaW50ZXJwb2xhdGVSZXZlcnNlID0gaW50ZXJwb2xhdGUsIEwgPSBcIkxcIiwgdGVuc2lvbiA9IC43O1xuICAgIGZ1bmN0aW9uIGFyZWEoZGF0YSkge1xuICAgICAgdmFyIHNlZ21lbnRzID0gW10sIHBvaW50czAgPSBbXSwgcG9pbnRzMSA9IFtdLCBpID0gLTEsIG4gPSBkYXRhLmxlbmd0aCwgZCwgZngwID0gZDNfZnVuY3Rvcih4MCksIGZ5MCA9IGQzX2Z1bmN0b3IoeTApLCBmeDEgPSB4MCA9PT0geDEgPyBmdW5jdGlvbigpIHtcbiAgICAgICAgcmV0dXJuIHg7XG4gICAgICB9IDogZDNfZnVuY3Rvcih4MSksIGZ5MSA9IHkwID09PSB5MSA/IGZ1bmN0aW9uKCkge1xuICAgICAgICByZXR1cm4geTtcbiAgICAgIH0gOiBkM19mdW5jdG9yKHkxKSwgeCwgeTtcbiAgICAgIGZ1bmN0aW9uIHNlZ21lbnQoKSB7XG4gICAgICAgIHNlZ21lbnRzLnB1c2goXCJNXCIsIGludGVycG9sYXRlKHByb2plY3Rpb24ocG9pbnRzMSksIHRlbnNpb24pLCBMLCBpbnRlcnBvbGF0ZVJldmVyc2UocHJvamVjdGlvbihwb2ludHMwLnJldmVyc2UoKSksIHRlbnNpb24pLCBcIlpcIik7XG4gICAgICB9XG4gICAgICB3aGlsZSAoKytpIDwgbikge1xuICAgICAgICBpZiAoZGVmaW5lZC5jYWxsKHRoaXMsIGQgPSBkYXRhW2ldLCBpKSkge1xuICAgICAgICAgIHBvaW50czAucHVzaChbIHggPSArZngwLmNhbGwodGhpcywgZCwgaSksIHkgPSArZnkwLmNhbGwodGhpcywgZCwgaSkgXSk7XG4gICAgICAgICAgcG9pbnRzMS5wdXNoKFsgK2Z4MS5jYWxsKHRoaXMsIGQsIGkpLCArZnkxLmNhbGwodGhpcywgZCwgaSkgXSk7XG4gICAgICAgIH0gZWxzZSBpZiAocG9pbnRzMC5sZW5ndGgpIHtcbiAgICAgICAgICBzZWdtZW50KCk7XG4gICAgICAgICAgcG9pbnRzMCA9IFtdO1xuICAgICAgICAgIHBvaW50czEgPSBbXTtcbiAgICAgICAgfVxuICAgICAgfVxuICAgICAgaWYgKHBvaW50czAubGVuZ3RoKSBzZWdtZW50KCk7XG4gICAgICByZXR1cm4gc2VnbWVudHMubGVuZ3RoID8gc2VnbWVudHMuam9pbihcIlwiKSA6IG51bGw7XG4gICAgfVxuICAgIGFyZWEueCA9IGZ1bmN0aW9uKF8pIHtcbiAgICAgIGlmICghYXJndW1lbnRzLmxlbmd0aCkgcmV0dXJuIHgxO1xuICAgICAgeDAgPSB4MSA9IF87XG4gICAgICByZXR1cm4gYXJlYTtcbiAgICB9O1xuICAgIGFyZWEueDAgPSBmdW5jdGlvbihfKSB7XG4gICAgICBpZiAoIWFyZ3VtZW50cy5sZW5ndGgpIHJldHVybiB4MDtcbiAgICAgIHgwID0gXztcbiAgICAgIHJldHVybiBhcmVhO1xuICAgIH07XG4gICAgYXJlYS54MSA9IGZ1bmN0aW9uKF8pIHtcbiAgICAgIGlmICghYXJndW1lbnRzLmxlbmd0aCkgcmV0dXJuIHgxO1xuICAgICAgeDEgPSBfO1xuICAgICAgcmV0dXJuIGFyZWE7XG4gICAgfTtcbiAgICBhcmVhLnkgPSBmdW5jdGlvbihfKSB7XG4gICAgICBpZiAoIWFyZ3VtZW50cy5sZW5ndGgpIHJldHVybiB5MTtcbiAgICAgIHkwID0geTEgPSBfO1xuICAgICAgcmV0dXJuIGFyZWE7XG4gICAgfTtcbiAgICBhcmVhLnkwID0gZnVuY3Rpb24oXykge1xuICAgICAgaWYgKCFhcmd1bWVudHMubGVuZ3RoKSByZXR1cm4geTA7XG4gICAgICB5MCA9IF87XG4gICAgICByZXR1cm4gYXJlYTtcbiAgICB9O1xuICAgIGFyZWEueTEgPSBmdW5jdGlvbihfKSB7XG4gICAgICBpZiAoIWFyZ3VtZW50cy5sZW5ndGgpIHJldHVybiB5MTtcbiAgICAgIHkxID0gXztcbiAgICAgIHJldHVybiBhcmVhO1xuICAgIH07XG4gICAgYXJlYS5kZWZpbmVkID0gZnVuY3Rpb24oXykge1xuICAgICAgaWYgKCFhcmd1bWVudHMubGVuZ3RoKSByZXR1cm4gZGVmaW5lZDtcbiAgICAgIGRlZmluZWQgPSBfO1xuICAgICAgcmV0dXJuIGFyZWE7XG4gICAgfTtcbiAgICBhcmVhLmludGVycG9sYXRlID0gZnVuY3Rpb24oXykge1xuICAgICAgaWYgKCFhcmd1bWVudHMubGVuZ3RoKSByZXR1cm4gaW50ZXJwb2xhdGVLZXk7XG4gICAgICBpZiAodHlwZW9mIF8gPT09IFwiZnVuY3Rpb25cIikgaW50ZXJwb2xhdGVLZXkgPSBpbnRlcnBvbGF0ZSA9IF87IGVsc2UgaW50ZXJwb2xhdGVLZXkgPSAoaW50ZXJwb2xhdGUgPSBkM19zdmdfbGluZUludGVycG9sYXRvcnMuZ2V0KF8pIHx8IGQzX3N2Z19saW5lTGluZWFyKS5rZXk7XG4gICAgICBpbnRlcnBvbGF0ZVJldmVyc2UgPSBpbnRlcnBvbGF0ZS5yZXZlcnNlIHx8IGludGVycG9sYXRlO1xuICAgICAgTCA9IGludGVycG9sYXRlLmNsb3NlZCA/IFwiTVwiIDogXCJMXCI7XG4gICAgICByZXR1cm4gYXJlYTtcbiAgICB9O1xuICAgIGFyZWEudGVuc2lvbiA9IGZ1bmN0aW9uKF8pIHtcbiAgICAgIGlmICghYXJndW1lbnRzLmxlbmd0aCkgcmV0dXJuIHRlbnNpb247XG4gICAgICB0ZW5zaW9uID0gXztcbiAgICAgIHJldHVybiBhcmVhO1xuICAgIH07XG4gICAgcmV0dXJuIGFyZWE7XG4gIH1cbiAgZDNfc3ZnX2xpbmVTdGVwQmVmb3JlLnJldmVyc2UgPSBkM19zdmdfbGluZVN0ZXBBZnRlcjtcbiAgZDNfc3ZnX2xpbmVTdGVwQWZ0ZXIucmV2ZXJzZSA9IGQzX3N2Z19saW5lU3RlcEJlZm9yZTtcbiAgZDMuc3ZnLmFyZWEgPSBmdW5jdGlvbigpIHtcbiAgICByZXR1cm4gZDNfc3ZnX2FyZWEoZDNfaWRlbnRpdHkpO1xuICB9O1xuICBkMy5zdmcuYXJlYS5yYWRpYWwgPSBmdW5jdGlvbigpIHtcbiAgICB2YXIgYXJlYSA9IGQzX3N2Z19hcmVhKGQzX3N2Z19saW5lUmFkaWFsKTtcbiAgICBhcmVhLnJhZGl1cyA9IGFyZWEueCwgZGVsZXRlIGFyZWEueDtcbiAgICBhcmVhLmlubmVyUmFkaXVzID0gYXJlYS54MCwgZGVsZXRlIGFyZWEueDA7XG4gICAgYXJlYS5vdXRlclJhZGl1cyA9IGFyZWEueDEsIGRlbGV0ZSBhcmVhLngxO1xuICAgIGFyZWEuYW5nbGUgPSBhcmVhLnksIGRlbGV0ZSBhcmVhLnk7XG4gICAgYXJlYS5zdGFydEFuZ2xlID0gYXJlYS55MCwgZGVsZXRlIGFyZWEueTA7XG4gICAgYXJlYS5lbmRBbmdsZSA9IGFyZWEueTEsIGRlbGV0ZSBhcmVhLnkxO1xuICAgIHJldHVybiBhcmVhO1xuICB9O1xuICBkMy5zdmcuY2hvcmQgPSBmdW5jdGlvbigpIHtcbiAgICB2YXIgc291cmNlID0gZDNfc291cmNlLCB0YXJnZXQgPSBkM190YXJnZXQsIHJhZGl1cyA9IGQzX3N2Z19jaG9yZFJhZGl1cywgc3RhcnRBbmdsZSA9IGQzX3N2Z19hcmNTdGFydEFuZ2xlLCBlbmRBbmdsZSA9IGQzX3N2Z19hcmNFbmRBbmdsZTtcbiAgICBmdW5jdGlvbiBjaG9yZChkLCBpKSB7XG4gICAgICB2YXIgcyA9IHN1Ymdyb3VwKHRoaXMsIHNvdXJjZSwgZCwgaSksIHQgPSBzdWJncm91cCh0aGlzLCB0YXJnZXQsIGQsIGkpO1xuICAgICAgcmV0dXJuIFwiTVwiICsgcy5wMCArIGFyYyhzLnIsIHMucDEsIHMuYTEgLSBzLmEwKSArIChlcXVhbHMocywgdCkgPyBjdXJ2ZShzLnIsIHMucDEsIHMuciwgcy5wMCkgOiBjdXJ2ZShzLnIsIHMucDEsIHQuciwgdC5wMCkgKyBhcmModC5yLCB0LnAxLCB0LmExIC0gdC5hMCkgKyBjdXJ2ZSh0LnIsIHQucDEsIHMuciwgcy5wMCkpICsgXCJaXCI7XG4gICAgfVxuICAgIGZ1bmN0aW9uIHN1Ymdyb3VwKHNlbGYsIGYsIGQsIGkpIHtcbiAgICAgIHZhciBzdWJncm91cCA9IGYuY2FsbChzZWxmLCBkLCBpKSwgciA9IHJhZGl1cy5jYWxsKHNlbGYsIHN1Ymdyb3VwLCBpKSwgYTAgPSBzdGFydEFuZ2xlLmNhbGwoc2VsZiwgc3ViZ3JvdXAsIGkpIC0gaGFsZs+ALCBhMSA9IGVuZEFuZ2xlLmNhbGwoc2VsZiwgc3ViZ3JvdXAsIGkpIC0gaGFsZs+AO1xuICAgICAgcmV0dXJuIHtcbiAgICAgICAgcjogcixcbiAgICAgICAgYTA6IGEwLFxuICAgICAgICBhMTogYTEsXG4gICAgICAgIHAwOiBbIHIgKiBNYXRoLmNvcyhhMCksIHIgKiBNYXRoLnNpbihhMCkgXSxcbiAgICAgICAgcDE6IFsgciAqIE1hdGguY29zKGExKSwgciAqIE1hdGguc2luKGExKSBdXG4gICAgICB9O1xuICAgIH1cbiAgICBmdW5jdGlvbiBlcXVhbHMoYSwgYikge1xuICAgICAgcmV0dXJuIGEuYTAgPT0gYi5hMCAmJiBhLmExID09IGIuYTE7XG4gICAgfVxuICAgIGZ1bmN0aW9uIGFyYyhyLCBwLCBhKSB7XG4gICAgICByZXR1cm4gXCJBXCIgKyByICsgXCIsXCIgKyByICsgXCIgMCBcIiArICsoYSA+IM+AKSArIFwiLDEgXCIgKyBwO1xuICAgIH1cbiAgICBmdW5jdGlvbiBjdXJ2ZShyMCwgcDAsIHIxLCBwMSkge1xuICAgICAgcmV0dXJuIFwiUSAwLDAgXCIgKyBwMTtcbiAgICB9XG4gICAgY2hvcmQucmFkaXVzID0gZnVuY3Rpb24odikge1xuICAgICAgaWYgKCFhcmd1bWVudHMubGVuZ3RoKSByZXR1cm4gcmFkaXVzO1xuICAgICAgcmFkaXVzID0gZDNfZnVuY3Rvcih2KTtcbiAgICAgIHJldHVybiBjaG9yZDtcbiAgICB9O1xuICAgIGNob3JkLnNvdXJjZSA9IGZ1bmN0aW9uKHYpIHtcbiAgICAgIGlmICghYXJndW1lbnRzLmxlbmd0aCkgcmV0dXJuIHNvdXJjZTtcbiAgICAgIHNvdXJjZSA9IGQzX2Z1bmN0b3Iodik7XG4gICAgICByZXR1cm4gY2hvcmQ7XG4gICAgfTtcbiAgICBjaG9yZC50YXJnZXQgPSBmdW5jdGlvbih2KSB7XG4gICAgICBpZiAoIWFyZ3VtZW50cy5sZW5ndGgpIHJldHVybiB0YXJnZXQ7XG4gICAgICB0YXJnZXQgPSBkM19mdW5jdG9yKHYpO1xuICAgICAgcmV0dXJuIGNob3JkO1xuICAgIH07XG4gICAgY2hvcmQuc3RhcnRBbmdsZSA9IGZ1bmN0aW9uKHYpIHtcbiAgICAgIGlmICghYXJndW1lbnRzLmxlbmd0aCkgcmV0dXJuIHN0YXJ0QW5nbGU7XG4gICAgICBzdGFydEFuZ2xlID0gZDNfZnVuY3Rvcih2KTtcbiAgICAgIHJldHVybiBjaG9yZDtcbiAgICB9O1xuICAgIGNob3JkLmVuZEFuZ2xlID0gZnVuY3Rpb24odikge1xuICAgICAgaWYgKCFhcmd1bWVudHMubGVuZ3RoKSByZXR1cm4gZW5kQW5nbGU7XG4gICAgICBlbmRBbmdsZSA9IGQzX2Z1bmN0b3Iodik7XG4gICAgICByZXR1cm4gY2hvcmQ7XG4gICAgfTtcbiAgICByZXR1cm4gY2hvcmQ7XG4gIH07XG4gIGZ1bmN0aW9uIGQzX3N2Z19jaG9yZFJhZGl1cyhkKSB7XG4gICAgcmV0dXJuIGQucmFkaXVzO1xuICB9XG4gIGQzLnN2Zy5kaWFnb25hbCA9IGZ1bmN0aW9uKCkge1xuICAgIHZhciBzb3VyY2UgPSBkM19zb3VyY2UsIHRhcmdldCA9IGQzX3RhcmdldCwgcHJvamVjdGlvbiA9IGQzX3N2Z19kaWFnb25hbFByb2plY3Rpb247XG4gICAgZnVuY3Rpb24gZGlhZ29uYWwoZCwgaSkge1xuICAgICAgdmFyIHAwID0gc291cmNlLmNhbGwodGhpcywgZCwgaSksIHAzID0gdGFyZ2V0LmNhbGwodGhpcywgZCwgaSksIG0gPSAocDAueSArIHAzLnkpIC8gMiwgcCA9IFsgcDAsIHtcbiAgICAgICAgeDogcDAueCxcbiAgICAgICAgeTogbVxuICAgICAgfSwge1xuICAgICAgICB4OiBwMy54LFxuICAgICAgICB5OiBtXG4gICAgICB9LCBwMyBdO1xuICAgICAgcCA9IHAubWFwKHByb2plY3Rpb24pO1xuICAgICAgcmV0dXJuIFwiTVwiICsgcFswXSArIFwiQ1wiICsgcFsxXSArIFwiIFwiICsgcFsyXSArIFwiIFwiICsgcFszXTtcbiAgICB9XG4gICAgZGlhZ29uYWwuc291cmNlID0gZnVuY3Rpb24oeCkge1xuICAgICAgaWYgKCFhcmd1bWVudHMubGVuZ3RoKSByZXR1cm4gc291cmNlO1xuICAgICAgc291cmNlID0gZDNfZnVuY3Rvcih4KTtcbiAgICAgIHJldHVybiBkaWFnb25hbDtcbiAgICB9O1xuICAgIGRpYWdvbmFsLnRhcmdldCA9IGZ1bmN0aW9uKHgpIHtcbiAgICAgIGlmICghYXJndW1lbnRzLmxlbmd0aCkgcmV0dXJuIHRhcmdldDtcbiAgICAgIHRhcmdldCA9IGQzX2Z1bmN0b3IoeCk7XG4gICAgICByZXR1cm4gZGlhZ29uYWw7XG4gICAgfTtcbiAgICBkaWFnb25hbC5wcm9qZWN0aW9uID0gZnVuY3Rpb24oeCkge1xuICAgICAgaWYgKCFhcmd1bWVudHMubGVuZ3RoKSByZXR1cm4gcHJvamVjdGlvbjtcbiAgICAgIHByb2plY3Rpb24gPSB4O1xuICAgICAgcmV0dXJuIGRpYWdvbmFsO1xuICAgIH07XG4gICAgcmV0dXJuIGRpYWdvbmFsO1xuICB9O1xuICBmdW5jdGlvbiBkM19zdmdfZGlhZ29uYWxQcm9qZWN0aW9uKGQpIHtcbiAgICByZXR1cm4gWyBkLngsIGQueSBdO1xuICB9XG4gIGQzLnN2Zy5kaWFnb25hbC5yYWRpYWwgPSBmdW5jdGlvbigpIHtcbiAgICB2YXIgZGlhZ29uYWwgPSBkMy5zdmcuZGlhZ29uYWwoKSwgcHJvamVjdGlvbiA9IGQzX3N2Z19kaWFnb25hbFByb2plY3Rpb24sIHByb2plY3Rpb25fID0gZGlhZ29uYWwucHJvamVjdGlvbjtcbiAgICBkaWFnb25hbC5wcm9qZWN0aW9uID0gZnVuY3Rpb24oeCkge1xuICAgICAgcmV0dXJuIGFyZ3VtZW50cy5sZW5ndGggPyBwcm9qZWN0aW9uXyhkM19zdmdfZGlhZ29uYWxSYWRpYWxQcm9qZWN0aW9uKHByb2plY3Rpb24gPSB4KSkgOiBwcm9qZWN0aW9uO1xuICAgIH07XG4gICAgcmV0dXJuIGRpYWdvbmFsO1xuICB9O1xuICBmdW5jdGlvbiBkM19zdmdfZGlhZ29uYWxSYWRpYWxQcm9qZWN0aW9uKHByb2plY3Rpb24pIHtcbiAgICByZXR1cm4gZnVuY3Rpb24oKSB7XG4gICAgICB2YXIgZCA9IHByb2plY3Rpb24uYXBwbHkodGhpcywgYXJndW1lbnRzKSwgciA9IGRbMF0sIGEgPSBkWzFdIC0gaGFsZs+AO1xuICAgICAgcmV0dXJuIFsgciAqIE1hdGguY29zKGEpLCByICogTWF0aC5zaW4oYSkgXTtcbiAgICB9O1xuICB9XG4gIGQzLnN2Zy5zeW1ib2wgPSBmdW5jdGlvbigpIHtcbiAgICB2YXIgdHlwZSA9IGQzX3N2Z19zeW1ib2xUeXBlLCBzaXplID0gZDNfc3ZnX3N5bWJvbFNpemU7XG4gICAgZnVuY3Rpb24gc3ltYm9sKGQsIGkpIHtcbiAgICAgIHJldHVybiAoZDNfc3ZnX3N5bWJvbHMuZ2V0KHR5cGUuY2FsbCh0aGlzLCBkLCBpKSkgfHwgZDNfc3ZnX3N5bWJvbENpcmNsZSkoc2l6ZS5jYWxsKHRoaXMsIGQsIGkpKTtcbiAgICB9XG4gICAgc3ltYm9sLnR5cGUgPSBmdW5jdGlvbih4KSB7XG4gICAgICBpZiAoIWFyZ3VtZW50cy5sZW5ndGgpIHJldHVybiB0eXBlO1xuICAgICAgdHlwZSA9IGQzX2Z1bmN0b3IoeCk7XG4gICAgICByZXR1cm4gc3ltYm9sO1xuICAgIH07XG4gICAgc3ltYm9sLnNpemUgPSBmdW5jdGlvbih4KSB7XG4gICAgICBpZiAoIWFyZ3VtZW50cy5sZW5ndGgpIHJldHVybiBzaXplO1xuICAgICAgc2l6ZSA9IGQzX2Z1bmN0b3IoeCk7XG4gICAgICByZXR1cm4gc3ltYm9sO1xuICAgIH07XG4gICAgcmV0dXJuIHN5bWJvbDtcbiAgfTtcbiAgZnVuY3Rpb24gZDNfc3ZnX3N5bWJvbFNpemUoKSB7XG4gICAgcmV0dXJuIDY0O1xuICB9XG4gIGZ1bmN0aW9uIGQzX3N2Z19zeW1ib2xUeXBlKCkge1xuICAgIHJldHVybiBcImNpcmNsZVwiO1xuICB9XG4gIGZ1bmN0aW9uIGQzX3N2Z19zeW1ib2xDaXJjbGUoc2l6ZSkge1xuICAgIHZhciByID0gTWF0aC5zcXJ0KHNpemUgLyDPgCk7XG4gICAgcmV0dXJuIFwiTTAsXCIgKyByICsgXCJBXCIgKyByICsgXCIsXCIgKyByICsgXCIgMCAxLDEgMCxcIiArIC1yICsgXCJBXCIgKyByICsgXCIsXCIgKyByICsgXCIgMCAxLDEgMCxcIiArIHIgKyBcIlpcIjtcbiAgfVxuICB2YXIgZDNfc3ZnX3N5bWJvbHMgPSBkMy5tYXAoe1xuICAgIGNpcmNsZTogZDNfc3ZnX3N5bWJvbENpcmNsZSxcbiAgICBjcm9zczogZnVuY3Rpb24oc2l6ZSkge1xuICAgICAgdmFyIHIgPSBNYXRoLnNxcnQoc2l6ZSAvIDUpIC8gMjtcbiAgICAgIHJldHVybiBcIk1cIiArIC0zICogciArIFwiLFwiICsgLXIgKyBcIkhcIiArIC1yICsgXCJWXCIgKyAtMyAqIHIgKyBcIkhcIiArIHIgKyBcIlZcIiArIC1yICsgXCJIXCIgKyAzICogciArIFwiVlwiICsgciArIFwiSFwiICsgciArIFwiVlwiICsgMyAqIHIgKyBcIkhcIiArIC1yICsgXCJWXCIgKyByICsgXCJIXCIgKyAtMyAqIHIgKyBcIlpcIjtcbiAgICB9LFxuICAgIGRpYW1vbmQ6IGZ1bmN0aW9uKHNpemUpIHtcbiAgICAgIHZhciByeSA9IE1hdGguc3FydChzaXplIC8gKDIgKiBkM19zdmdfc3ltYm9sVGFuMzApKSwgcnggPSByeSAqIGQzX3N2Z19zeW1ib2xUYW4zMDtcbiAgICAgIHJldHVybiBcIk0wLFwiICsgLXJ5ICsgXCJMXCIgKyByeCArIFwiLDBcIiArIFwiIDAsXCIgKyByeSArIFwiIFwiICsgLXJ4ICsgXCIsMFwiICsgXCJaXCI7XG4gICAgfSxcbiAgICBzcXVhcmU6IGZ1bmN0aW9uKHNpemUpIHtcbiAgICAgIHZhciByID0gTWF0aC5zcXJ0KHNpemUpIC8gMjtcbiAgICAgIHJldHVybiBcIk1cIiArIC1yICsgXCIsXCIgKyAtciArIFwiTFwiICsgciArIFwiLFwiICsgLXIgKyBcIiBcIiArIHIgKyBcIixcIiArIHIgKyBcIiBcIiArIC1yICsgXCIsXCIgKyByICsgXCJaXCI7XG4gICAgfSxcbiAgICBcInRyaWFuZ2xlLWRvd25cIjogZnVuY3Rpb24oc2l6ZSkge1xuICAgICAgdmFyIHJ4ID0gTWF0aC5zcXJ0KHNpemUgLyBkM19zdmdfc3ltYm9sU3FydDMpLCByeSA9IHJ4ICogZDNfc3ZnX3N5bWJvbFNxcnQzIC8gMjtcbiAgICAgIHJldHVybiBcIk0wLFwiICsgcnkgKyBcIkxcIiArIHJ4ICsgXCIsXCIgKyAtcnkgKyBcIiBcIiArIC1yeCArIFwiLFwiICsgLXJ5ICsgXCJaXCI7XG4gICAgfSxcbiAgICBcInRyaWFuZ2xlLXVwXCI6IGZ1bmN0aW9uKHNpemUpIHtcbiAgICAgIHZhciByeCA9IE1hdGguc3FydChzaXplIC8gZDNfc3ZnX3N5bWJvbFNxcnQzKSwgcnkgPSByeCAqIGQzX3N2Z19zeW1ib2xTcXJ0MyAvIDI7XG4gICAgICByZXR1cm4gXCJNMCxcIiArIC1yeSArIFwiTFwiICsgcnggKyBcIixcIiArIHJ5ICsgXCIgXCIgKyAtcnggKyBcIixcIiArIHJ5ICsgXCJaXCI7XG4gICAgfVxuICB9KTtcbiAgZDMuc3ZnLnN5bWJvbFR5cGVzID0gZDNfc3ZnX3N5bWJvbHMua2V5cygpO1xuICB2YXIgZDNfc3ZnX3N5bWJvbFNxcnQzID0gTWF0aC5zcXJ0KDMpLCBkM19zdmdfc3ltYm9sVGFuMzAgPSBNYXRoLnRhbigzMCAqIGQzX3JhZGlhbnMpO1xuICBkM19zZWxlY3Rpb25Qcm90b3R5cGUudHJhbnNpdGlvbiA9IGZ1bmN0aW9uKG5hbWUpIHtcbiAgICB2YXIgaWQgPSBkM190cmFuc2l0aW9uSW5oZXJpdElkIHx8ICsrZDNfdHJhbnNpdGlvbklkLCBucyA9IGQzX3RyYW5zaXRpb25OYW1lc3BhY2UobmFtZSksIHN1Ymdyb3VwcyA9IFtdLCBzdWJncm91cCwgbm9kZSwgdHJhbnNpdGlvbiA9IGQzX3RyYW5zaXRpb25Jbmhlcml0IHx8IHtcbiAgICAgIHRpbWU6IERhdGUubm93KCksXG4gICAgICBlYXNlOiBkM19lYXNlX2N1YmljSW5PdXQsXG4gICAgICBkZWxheTogMCxcbiAgICAgIGR1cmF0aW9uOiAyNTBcbiAgICB9O1xuICAgIGZvciAodmFyIGogPSAtMSwgbSA9IHRoaXMubGVuZ3RoOyArK2ogPCBtOyApIHtcbiAgICAgIHN1Ymdyb3Vwcy5wdXNoKHN1Ymdyb3VwID0gW10pO1xuICAgICAgZm9yICh2YXIgZ3JvdXAgPSB0aGlzW2pdLCBpID0gLTEsIG4gPSBncm91cC5sZW5ndGg7ICsraSA8IG47ICkge1xuICAgICAgICBpZiAobm9kZSA9IGdyb3VwW2ldKSBkM190cmFuc2l0aW9uTm9kZShub2RlLCBpLCBucywgaWQsIHRyYW5zaXRpb24pO1xuICAgICAgICBzdWJncm91cC5wdXNoKG5vZGUpO1xuICAgICAgfVxuICAgIH1cbiAgICByZXR1cm4gZDNfdHJhbnNpdGlvbihzdWJncm91cHMsIG5zLCBpZCk7XG4gIH07XG4gIGQzX3NlbGVjdGlvblByb3RvdHlwZS5pbnRlcnJ1cHQgPSBmdW5jdGlvbihuYW1lKSB7XG4gICAgcmV0dXJuIHRoaXMuZWFjaChuYW1lID09IG51bGwgPyBkM19zZWxlY3Rpb25faW50ZXJydXB0IDogZDNfc2VsZWN0aW9uX2ludGVycnVwdE5TKGQzX3RyYW5zaXRpb25OYW1lc3BhY2UobmFtZSkpKTtcbiAgfTtcbiAgdmFyIGQzX3NlbGVjdGlvbl9pbnRlcnJ1cHQgPSBkM19zZWxlY3Rpb25faW50ZXJydXB0TlMoZDNfdHJhbnNpdGlvbk5hbWVzcGFjZSgpKTtcbiAgZnVuY3Rpb24gZDNfc2VsZWN0aW9uX2ludGVycnVwdE5TKG5zKSB7XG4gICAgcmV0dXJuIGZ1bmN0aW9uKCkge1xuICAgICAgdmFyIGxvY2ssIGFjdGl2ZUlkLCBhY3RpdmU7XG4gICAgICBpZiAoKGxvY2sgPSB0aGlzW25zXSkgJiYgKGFjdGl2ZSA9IGxvY2tbYWN0aXZlSWQgPSBsb2NrLmFjdGl2ZV0pKSB7XG4gICAgICAgIGFjdGl2ZS50aW1lci5jID0gbnVsbDtcbiAgICAgICAgYWN0aXZlLnRpbWVyLnQgPSBOYU47XG4gICAgICAgIGlmICgtLWxvY2suY291bnQpIGRlbGV0ZSBsb2NrW2FjdGl2ZUlkXTsgZWxzZSBkZWxldGUgdGhpc1tuc107XG4gICAgICAgIGxvY2suYWN0aXZlICs9IC41O1xuICAgICAgICBhY3RpdmUuZXZlbnQgJiYgYWN0aXZlLmV2ZW50LmludGVycnVwdC5jYWxsKHRoaXMsIHRoaXMuX19kYXRhX18sIGFjdGl2ZS5pbmRleCk7XG4gICAgICB9XG4gICAgfTtcbiAgfVxuICBmdW5jdGlvbiBkM190cmFuc2l0aW9uKGdyb3VwcywgbnMsIGlkKSB7XG4gICAgZDNfc3ViY2xhc3MoZ3JvdXBzLCBkM190cmFuc2l0aW9uUHJvdG90eXBlKTtcbiAgICBncm91cHMubmFtZXNwYWNlID0gbnM7XG4gICAgZ3JvdXBzLmlkID0gaWQ7XG4gICAgcmV0dXJuIGdyb3VwcztcbiAgfVxuICB2YXIgZDNfdHJhbnNpdGlvblByb3RvdHlwZSA9IFtdLCBkM190cmFuc2l0aW9uSWQgPSAwLCBkM190cmFuc2l0aW9uSW5oZXJpdElkLCBkM190cmFuc2l0aW9uSW5oZXJpdDtcbiAgZDNfdHJhbnNpdGlvblByb3RvdHlwZS5jYWxsID0gZDNfc2VsZWN0aW9uUHJvdG90eXBlLmNhbGw7XG4gIGQzX3RyYW5zaXRpb25Qcm90b3R5cGUuZW1wdHkgPSBkM19zZWxlY3Rpb25Qcm90b3R5cGUuZW1wdHk7XG4gIGQzX3RyYW5zaXRpb25Qcm90b3R5cGUubm9kZSA9IGQzX3NlbGVjdGlvblByb3RvdHlwZS5ub2RlO1xuICBkM190cmFuc2l0aW9uUHJvdG90eXBlLnNpemUgPSBkM19zZWxlY3Rpb25Qcm90b3R5cGUuc2l6ZTtcbiAgZDMudHJhbnNpdGlvbiA9IGZ1bmN0aW9uKHNlbGVjdGlvbiwgbmFtZSkge1xuICAgIHJldHVybiBzZWxlY3Rpb24gJiYgc2VsZWN0aW9uLnRyYW5zaXRpb24gPyBkM190cmFuc2l0aW9uSW5oZXJpdElkID8gc2VsZWN0aW9uLnRyYW5zaXRpb24obmFtZSkgOiBzZWxlY3Rpb24gOiBkMy5zZWxlY3Rpb24oKS50cmFuc2l0aW9uKHNlbGVjdGlvbik7XG4gIH07XG4gIGQzLnRyYW5zaXRpb24ucHJvdG90eXBlID0gZDNfdHJhbnNpdGlvblByb3RvdHlwZTtcbiAgZDNfdHJhbnNpdGlvblByb3RvdHlwZS5zZWxlY3QgPSBmdW5jdGlvbihzZWxlY3Rvcikge1xuICAgIHZhciBpZCA9IHRoaXMuaWQsIG5zID0gdGhpcy5uYW1lc3BhY2UsIHN1Ymdyb3VwcyA9IFtdLCBzdWJncm91cCwgc3Vibm9kZSwgbm9kZTtcbiAgICBzZWxlY3RvciA9IGQzX3NlbGVjdGlvbl9zZWxlY3RvcihzZWxlY3Rvcik7XG4gICAgZm9yICh2YXIgaiA9IC0xLCBtID0gdGhpcy5sZW5ndGg7ICsraiA8IG07ICkge1xuICAgICAgc3ViZ3JvdXBzLnB1c2goc3ViZ3JvdXAgPSBbXSk7XG4gICAgICBmb3IgKHZhciBncm91cCA9IHRoaXNbal0sIGkgPSAtMSwgbiA9IGdyb3VwLmxlbmd0aDsgKytpIDwgbjsgKSB7XG4gICAgICAgIGlmICgobm9kZSA9IGdyb3VwW2ldKSAmJiAoc3Vibm9kZSA9IHNlbGVjdG9yLmNhbGwobm9kZSwgbm9kZS5fX2RhdGFfXywgaSwgaikpKSB7XG4gICAgICAgICAgaWYgKFwiX19kYXRhX19cIiBpbiBub2RlKSBzdWJub2RlLl9fZGF0YV9fID0gbm9kZS5fX2RhdGFfXztcbiAgICAgICAgICBkM190cmFuc2l0aW9uTm9kZShzdWJub2RlLCBpLCBucywgaWQsIG5vZGVbbnNdW2lkXSk7XG4gICAgICAgICAgc3ViZ3JvdXAucHVzaChzdWJub2RlKTtcbiAgICAgICAgfSBlbHNlIHtcbiAgICAgICAgICBzdWJncm91cC5wdXNoKG51bGwpO1xuICAgICAgICB9XG4gICAgICB9XG4gICAgfVxuICAgIHJldHVybiBkM190cmFuc2l0aW9uKHN1Ymdyb3VwcywgbnMsIGlkKTtcbiAgfTtcbiAgZDNfdHJhbnNpdGlvblByb3RvdHlwZS5zZWxlY3RBbGwgPSBmdW5jdGlvbihzZWxlY3Rvcikge1xuICAgIHZhciBpZCA9IHRoaXMuaWQsIG5zID0gdGhpcy5uYW1lc3BhY2UsIHN1Ymdyb3VwcyA9IFtdLCBzdWJncm91cCwgc3Vibm9kZXMsIG5vZGUsIHN1Ym5vZGUsIHRyYW5zaXRpb247XG4gICAgc2VsZWN0b3IgPSBkM19zZWxlY3Rpb25fc2VsZWN0b3JBbGwoc2VsZWN0b3IpO1xuICAgIGZvciAodmFyIGogPSAtMSwgbSA9IHRoaXMubGVuZ3RoOyArK2ogPCBtOyApIHtcbiAgICAgIGZvciAodmFyIGdyb3VwID0gdGhpc1tqXSwgaSA9IC0xLCBuID0gZ3JvdXAubGVuZ3RoOyArK2kgPCBuOyApIHtcbiAgICAgICAgaWYgKG5vZGUgPSBncm91cFtpXSkge1xuICAgICAgICAgIHRyYW5zaXRpb24gPSBub2RlW25zXVtpZF07XG4gICAgICAgICAgc3Vibm9kZXMgPSBzZWxlY3Rvci5jYWxsKG5vZGUsIG5vZGUuX19kYXRhX18sIGksIGopO1xuICAgICAgICAgIHN1Ymdyb3Vwcy5wdXNoKHN1Ymdyb3VwID0gW10pO1xuICAgICAgICAgIGZvciAodmFyIGsgPSAtMSwgbyA9IHN1Ym5vZGVzLmxlbmd0aDsgKytrIDwgbzsgKSB7XG4gICAgICAgICAgICBpZiAoc3Vibm9kZSA9IHN1Ym5vZGVzW2tdKSBkM190cmFuc2l0aW9uTm9kZShzdWJub2RlLCBrLCBucywgaWQsIHRyYW5zaXRpb24pO1xuICAgICAgICAgICAgc3ViZ3JvdXAucHVzaChzdWJub2RlKTtcbiAgICAgICAgICB9XG4gICAgICAgIH1cbiAgICAgIH1cbiAgICB9XG4gICAgcmV0dXJuIGQzX3RyYW5zaXRpb24oc3ViZ3JvdXBzLCBucywgaWQpO1xuICB9O1xuICBkM190cmFuc2l0aW9uUHJvdG90eXBlLmZpbHRlciA9IGZ1bmN0aW9uKGZpbHRlcikge1xuICAgIHZhciBzdWJncm91cHMgPSBbXSwgc3ViZ3JvdXAsIGdyb3VwLCBub2RlO1xuICAgIGlmICh0eXBlb2YgZmlsdGVyICE9PSBcImZ1bmN0aW9uXCIpIGZpbHRlciA9IGQzX3NlbGVjdGlvbl9maWx0ZXIoZmlsdGVyKTtcbiAgICBmb3IgKHZhciBqID0gMCwgbSA9IHRoaXMubGVuZ3RoOyBqIDwgbTsgaisrKSB7XG4gICAgICBzdWJncm91cHMucHVzaChzdWJncm91cCA9IFtdKTtcbiAgICAgIGZvciAodmFyIGdyb3VwID0gdGhpc1tqXSwgaSA9IDAsIG4gPSBncm91cC5sZW5ndGg7IGkgPCBuOyBpKyspIHtcbiAgICAgICAgaWYgKChub2RlID0gZ3JvdXBbaV0pICYmIGZpbHRlci5jYWxsKG5vZGUsIG5vZGUuX19kYXRhX18sIGksIGopKSB7XG4gICAgICAgICAgc3ViZ3JvdXAucHVzaChub2RlKTtcbiAgICAgICAgfVxuICAgICAgfVxuICAgIH1cbiAgICByZXR1cm4gZDNfdHJhbnNpdGlvbihzdWJncm91cHMsIHRoaXMubmFtZXNwYWNlLCB0aGlzLmlkKTtcbiAgfTtcbiAgZDNfdHJhbnNpdGlvblByb3RvdHlwZS50d2VlbiA9IGZ1bmN0aW9uKG5hbWUsIHR3ZWVuKSB7XG4gICAgdmFyIGlkID0gdGhpcy5pZCwgbnMgPSB0aGlzLm5hbWVzcGFjZTtcbiAgICBpZiAoYXJndW1lbnRzLmxlbmd0aCA8IDIpIHJldHVybiB0aGlzLm5vZGUoKVtuc11baWRdLnR3ZWVuLmdldChuYW1lKTtcbiAgICByZXR1cm4gZDNfc2VsZWN0aW9uX2VhY2godGhpcywgdHdlZW4gPT0gbnVsbCA/IGZ1bmN0aW9uKG5vZGUpIHtcbiAgICAgIG5vZGVbbnNdW2lkXS50d2Vlbi5yZW1vdmUobmFtZSk7XG4gICAgfSA6IGZ1bmN0aW9uKG5vZGUpIHtcbiAgICAgIG5vZGVbbnNdW2lkXS50d2Vlbi5zZXQobmFtZSwgdHdlZW4pO1xuICAgIH0pO1xuICB9O1xuICBmdW5jdGlvbiBkM190cmFuc2l0aW9uX3R3ZWVuKGdyb3VwcywgbmFtZSwgdmFsdWUsIHR3ZWVuKSB7XG4gICAgdmFyIGlkID0gZ3JvdXBzLmlkLCBucyA9IGdyb3Vwcy5uYW1lc3BhY2U7XG4gICAgcmV0dXJuIGQzX3NlbGVjdGlvbl9lYWNoKGdyb3VwcywgdHlwZW9mIHZhbHVlID09PSBcImZ1bmN0aW9uXCIgPyBmdW5jdGlvbihub2RlLCBpLCBqKSB7XG4gICAgICBub2RlW25zXVtpZF0udHdlZW4uc2V0KG5hbWUsIHR3ZWVuKHZhbHVlLmNhbGwobm9kZSwgbm9kZS5fX2RhdGFfXywgaSwgaikpKTtcbiAgICB9IDogKHZhbHVlID0gdHdlZW4odmFsdWUpLCBmdW5jdGlvbihub2RlKSB7XG4gICAgICBub2RlW25zXVtpZF0udHdlZW4uc2V0KG5hbWUsIHZhbHVlKTtcbiAgICB9KSk7XG4gIH1cbiAgZDNfdHJhbnNpdGlvblByb3RvdHlwZS5hdHRyID0gZnVuY3Rpb24obmFtZU5TLCB2YWx1ZSkge1xuICAgIGlmIChhcmd1bWVudHMubGVuZ3RoIDwgMikge1xuICAgICAgZm9yICh2YWx1ZSBpbiBuYW1lTlMpIHRoaXMuYXR0cih2YWx1ZSwgbmFtZU5TW3ZhbHVlXSk7XG4gICAgICByZXR1cm4gdGhpcztcbiAgICB9XG4gICAgdmFyIGludGVycG9sYXRlID0gbmFtZU5TID09IFwidHJhbnNmb3JtXCIgPyBkM19pbnRlcnBvbGF0ZVRyYW5zZm9ybSA6IGQzX2ludGVycG9sYXRlLCBuYW1lID0gZDMubnMucXVhbGlmeShuYW1lTlMpO1xuICAgIGZ1bmN0aW9uIGF0dHJOdWxsKCkge1xuICAgICAgdGhpcy5yZW1vdmVBdHRyaWJ1dGUobmFtZSk7XG4gICAgfVxuICAgIGZ1bmN0aW9uIGF0dHJOdWxsTlMoKSB7XG4gICAgICB0aGlzLnJlbW92ZUF0dHJpYnV0ZU5TKG5hbWUuc3BhY2UsIG5hbWUubG9jYWwpO1xuICAgIH1cbiAgICBmdW5jdGlvbiBhdHRyVHdlZW4oYikge1xuICAgICAgcmV0dXJuIGIgPT0gbnVsbCA/IGF0dHJOdWxsIDogKGIgKz0gXCJcIiwgZnVuY3Rpb24oKSB7XG4gICAgICAgIHZhciBhID0gdGhpcy5nZXRBdHRyaWJ1dGUobmFtZSksIGk7XG4gICAgICAgIHJldHVybiBhICE9PSBiICYmIChpID0gaW50ZXJwb2xhdGUoYSwgYiksIGZ1bmN0aW9uKHQpIHtcbiAgICAgICAgICB0aGlzLnNldEF0dHJpYnV0ZShuYW1lLCBpKHQpKTtcbiAgICAgICAgfSk7XG4gICAgICB9KTtcbiAgICB9XG4gICAgZnVuY3Rpb24gYXR0clR3ZWVuTlMoYikge1xuICAgICAgcmV0dXJuIGIgPT0gbnVsbCA/IGF0dHJOdWxsTlMgOiAoYiArPSBcIlwiLCBmdW5jdGlvbigpIHtcbiAgICAgICAgdmFyIGEgPSB0aGlzLmdldEF0dHJpYnV0ZU5TKG5hbWUuc3BhY2UsIG5hbWUubG9jYWwpLCBpO1xuICAgICAgICByZXR1cm4gYSAhPT0gYiAmJiAoaSA9IGludGVycG9sYXRlKGEsIGIpLCBmdW5jdGlvbih0KSB7XG4gICAgICAgICAgdGhpcy5zZXRBdHRyaWJ1dGVOUyhuYW1lLnNwYWNlLCBuYW1lLmxvY2FsLCBpKHQpKTtcbiAgICAgICAgfSk7XG4gICAgICB9KTtcbiAgICB9XG4gICAgcmV0dXJuIGQzX3RyYW5zaXRpb25fdHdlZW4odGhpcywgXCJhdHRyLlwiICsgbmFtZU5TLCB2YWx1ZSwgbmFtZS5sb2NhbCA/IGF0dHJUd2Vlbk5TIDogYXR0clR3ZWVuKTtcbiAgfTtcbiAgZDNfdHJhbnNpdGlvblByb3RvdHlwZS5hdHRyVHdlZW4gPSBmdW5jdGlvbihuYW1lTlMsIHR3ZWVuKSB7XG4gICAgdmFyIG5hbWUgPSBkMy5ucy5xdWFsaWZ5KG5hbWVOUyk7XG4gICAgZnVuY3Rpb24gYXR0clR3ZWVuKGQsIGkpIHtcbiAgICAgIHZhciBmID0gdHdlZW4uY2FsbCh0aGlzLCBkLCBpLCB0aGlzLmdldEF0dHJpYnV0ZShuYW1lKSk7XG4gICAgICByZXR1cm4gZiAmJiBmdW5jdGlvbih0KSB7XG4gICAgICAgIHRoaXMuc2V0QXR0cmlidXRlKG5hbWUsIGYodCkpO1xuICAgICAgfTtcbiAgICB9XG4gICAgZnVuY3Rpb24gYXR0clR3ZWVuTlMoZCwgaSkge1xuICAgICAgdmFyIGYgPSB0d2Vlbi5jYWxsKHRoaXMsIGQsIGksIHRoaXMuZ2V0QXR0cmlidXRlTlMobmFtZS5zcGFjZSwgbmFtZS5sb2NhbCkpO1xuICAgICAgcmV0dXJuIGYgJiYgZnVuY3Rpb24odCkge1xuICAgICAgICB0aGlzLnNldEF0dHJpYnV0ZU5TKG5hbWUuc3BhY2UsIG5hbWUubG9jYWwsIGYodCkpO1xuICAgICAgfTtcbiAgICB9XG4gICAgcmV0dXJuIHRoaXMudHdlZW4oXCJhdHRyLlwiICsgbmFtZU5TLCBuYW1lLmxvY2FsID8gYXR0clR3ZWVuTlMgOiBhdHRyVHdlZW4pO1xuICB9O1xuICBkM190cmFuc2l0aW9uUHJvdG90eXBlLnN0eWxlID0gZnVuY3Rpb24obmFtZSwgdmFsdWUsIHByaW9yaXR5KSB7XG4gICAgdmFyIG4gPSBhcmd1bWVudHMubGVuZ3RoO1xuICAgIGlmIChuIDwgMykge1xuICAgICAgaWYgKHR5cGVvZiBuYW1lICE9PSBcInN0cmluZ1wiKSB7XG4gICAgICAgIGlmIChuIDwgMikgdmFsdWUgPSBcIlwiO1xuICAgICAgICBmb3IgKHByaW9yaXR5IGluIG5hbWUpIHRoaXMuc3R5bGUocHJpb3JpdHksIG5hbWVbcHJpb3JpdHldLCB2YWx1ZSk7XG4gICAgICAgIHJldHVybiB0aGlzO1xuICAgICAgfVxuICAgICAgcHJpb3JpdHkgPSBcIlwiO1xuICAgIH1cbiAgICBmdW5jdGlvbiBzdHlsZU51bGwoKSB7XG4gICAgICB0aGlzLnN0eWxlLnJlbW92ZVByb3BlcnR5KG5hbWUpO1xuICAgIH1cbiAgICBmdW5jdGlvbiBzdHlsZVN0cmluZyhiKSB7XG4gICAgICByZXR1cm4gYiA9PSBudWxsID8gc3R5bGVOdWxsIDogKGIgKz0gXCJcIiwgZnVuY3Rpb24oKSB7XG4gICAgICAgIHZhciBhID0gZDNfd2luZG93KHRoaXMpLmdldENvbXB1dGVkU3R5bGUodGhpcywgbnVsbCkuZ2V0UHJvcGVydHlWYWx1ZShuYW1lKSwgaTtcbiAgICAgICAgcmV0dXJuIGEgIT09IGIgJiYgKGkgPSBkM19pbnRlcnBvbGF0ZShhLCBiKSwgZnVuY3Rpb24odCkge1xuICAgICAgICAgIHRoaXMuc3R5bGUuc2V0UHJvcGVydHkobmFtZSwgaSh0KSwgcHJpb3JpdHkpO1xuICAgICAgICB9KTtcbiAgICAgIH0pO1xuICAgIH1cbiAgICByZXR1cm4gZDNfdHJhbnNpdGlvbl90d2Vlbih0aGlzLCBcInN0eWxlLlwiICsgbmFtZSwgdmFsdWUsIHN0eWxlU3RyaW5nKTtcbiAgfTtcbiAgZDNfdHJhbnNpdGlvblByb3RvdHlwZS5zdHlsZVR3ZWVuID0gZnVuY3Rpb24obmFtZSwgdHdlZW4sIHByaW9yaXR5KSB7XG4gICAgaWYgKGFyZ3VtZW50cy5sZW5ndGggPCAzKSBwcmlvcml0eSA9IFwiXCI7XG4gICAgZnVuY3Rpb24gc3R5bGVUd2VlbihkLCBpKSB7XG4gICAgICB2YXIgZiA9IHR3ZWVuLmNhbGwodGhpcywgZCwgaSwgZDNfd2luZG93KHRoaXMpLmdldENvbXB1dGVkU3R5bGUodGhpcywgbnVsbCkuZ2V0UHJvcGVydHlWYWx1ZShuYW1lKSk7XG4gICAgICByZXR1cm4gZiAmJiBmdW5jdGlvbih0KSB7XG4gICAgICAgIHRoaXMuc3R5bGUuc2V0UHJvcGVydHkobmFtZSwgZih0KSwgcHJpb3JpdHkpO1xuICAgICAgfTtcbiAgICB9XG4gICAgcmV0dXJuIHRoaXMudHdlZW4oXCJzdHlsZS5cIiArIG5hbWUsIHN0eWxlVHdlZW4pO1xuICB9O1xuICBkM190cmFuc2l0aW9uUHJvdG90eXBlLnRleHQgPSBmdW5jdGlvbih2YWx1ZSkge1xuICAgIHJldHVybiBkM190cmFuc2l0aW9uX3R3ZWVuKHRoaXMsIFwidGV4dFwiLCB2YWx1ZSwgZDNfdHJhbnNpdGlvbl90ZXh0KTtcbiAgfTtcbiAgZnVuY3Rpb24gZDNfdHJhbnNpdGlvbl90ZXh0KGIpIHtcbiAgICBpZiAoYiA9PSBudWxsKSBiID0gXCJcIjtcbiAgICByZXR1cm4gZnVuY3Rpb24oKSB7XG4gICAgICB0aGlzLnRleHRDb250ZW50ID0gYjtcbiAgICB9O1xuICB9XG4gIGQzX3RyYW5zaXRpb25Qcm90b3R5cGUucmVtb3ZlID0gZnVuY3Rpb24oKSB7XG4gICAgdmFyIG5zID0gdGhpcy5uYW1lc3BhY2U7XG4gICAgcmV0dXJuIHRoaXMuZWFjaChcImVuZC50cmFuc2l0aW9uXCIsIGZ1bmN0aW9uKCkge1xuICAgICAgdmFyIHA7XG4gICAgICBpZiAodGhpc1tuc10uY291bnQgPCAyICYmIChwID0gdGhpcy5wYXJlbnROb2RlKSkgcC5yZW1vdmVDaGlsZCh0aGlzKTtcbiAgICB9KTtcbiAgfTtcbiAgZDNfdHJhbnNpdGlvblByb3RvdHlwZS5lYXNlID0gZnVuY3Rpb24odmFsdWUpIHtcbiAgICB2YXIgaWQgPSB0aGlzLmlkLCBucyA9IHRoaXMubmFtZXNwYWNlO1xuICAgIGlmIChhcmd1bWVudHMubGVuZ3RoIDwgMSkgcmV0dXJuIHRoaXMubm9kZSgpW25zXVtpZF0uZWFzZTtcbiAgICBpZiAodHlwZW9mIHZhbHVlICE9PSBcImZ1bmN0aW9uXCIpIHZhbHVlID0gZDMuZWFzZS5hcHBseShkMywgYXJndW1lbnRzKTtcbiAgICByZXR1cm4gZDNfc2VsZWN0aW9uX2VhY2godGhpcywgZnVuY3Rpb24obm9kZSkge1xuICAgICAgbm9kZVtuc11baWRdLmVhc2UgPSB2YWx1ZTtcbiAgICB9KTtcbiAgfTtcbiAgZDNfdHJhbnNpdGlvblByb3RvdHlwZS5kZWxheSA9IGZ1bmN0aW9uKHZhbHVlKSB7XG4gICAgdmFyIGlkID0gdGhpcy5pZCwgbnMgPSB0aGlzLm5hbWVzcGFjZTtcbiAgICBpZiAoYXJndW1lbnRzLmxlbmd0aCA8IDEpIHJldHVybiB0aGlzLm5vZGUoKVtuc11baWRdLmRlbGF5O1xuICAgIHJldHVybiBkM19zZWxlY3Rpb25fZWFjaCh0aGlzLCB0eXBlb2YgdmFsdWUgPT09IFwiZnVuY3Rpb25cIiA/IGZ1bmN0aW9uKG5vZGUsIGksIGopIHtcbiAgICAgIG5vZGVbbnNdW2lkXS5kZWxheSA9ICt2YWx1ZS5jYWxsKG5vZGUsIG5vZGUuX19kYXRhX18sIGksIGopO1xuICAgIH0gOiAodmFsdWUgPSArdmFsdWUsIGZ1bmN0aW9uKG5vZGUpIHtcbiAgICAgIG5vZGVbbnNdW2lkXS5kZWxheSA9IHZhbHVlO1xuICAgIH0pKTtcbiAgfTtcbiAgZDNfdHJhbnNpdGlvblByb3RvdHlwZS5kdXJhdGlvbiA9IGZ1bmN0aW9uKHZhbHVlKSB7XG4gICAgdmFyIGlkID0gdGhpcy5pZCwgbnMgPSB0aGlzLm5hbWVzcGFjZTtcbiAgICBpZiAoYXJndW1lbnRzLmxlbmd0aCA8IDEpIHJldHVybiB0aGlzLm5vZGUoKVtuc11baWRdLmR1cmF0aW9uO1xuICAgIHJldHVybiBkM19zZWxlY3Rpb25fZWFjaCh0aGlzLCB0eXBlb2YgdmFsdWUgPT09IFwiZnVuY3Rpb25cIiA/IGZ1bmN0aW9uKG5vZGUsIGksIGopIHtcbiAgICAgIG5vZGVbbnNdW2lkXS5kdXJhdGlvbiA9IE1hdGgubWF4KDEsIHZhbHVlLmNhbGwobm9kZSwgbm9kZS5fX2RhdGFfXywgaSwgaikpO1xuICAgIH0gOiAodmFsdWUgPSBNYXRoLm1heCgxLCB2YWx1ZSksIGZ1bmN0aW9uKG5vZGUpIHtcbiAgICAgIG5vZGVbbnNdW2lkXS5kdXJhdGlvbiA9IHZhbHVlO1xuICAgIH0pKTtcbiAgfTtcbiAgZDNfdHJhbnNpdGlvblByb3RvdHlwZS5lYWNoID0gZnVuY3Rpb24odHlwZSwgbGlzdGVuZXIpIHtcbiAgICB2YXIgaWQgPSB0aGlzLmlkLCBucyA9IHRoaXMubmFtZXNwYWNlO1xuICAgIGlmIChhcmd1bWVudHMubGVuZ3RoIDwgMikge1xuICAgICAgdmFyIGluaGVyaXQgPSBkM190cmFuc2l0aW9uSW5oZXJpdCwgaW5oZXJpdElkID0gZDNfdHJhbnNpdGlvbkluaGVyaXRJZDtcbiAgICAgIHRyeSB7XG4gICAgICAgIGQzX3RyYW5zaXRpb25Jbmhlcml0SWQgPSBpZDtcbiAgICAgICAgZDNfc2VsZWN0aW9uX2VhY2godGhpcywgZnVuY3Rpb24obm9kZSwgaSwgaikge1xuICAgICAgICAgIGQzX3RyYW5zaXRpb25Jbmhlcml0ID0gbm9kZVtuc11baWRdO1xuICAgICAgICAgIHR5cGUuY2FsbChub2RlLCBub2RlLl9fZGF0YV9fLCBpLCBqKTtcbiAgICAgICAgfSk7XG4gICAgICB9IGZpbmFsbHkge1xuICAgICAgICBkM190cmFuc2l0aW9uSW5oZXJpdCA9IGluaGVyaXQ7XG4gICAgICAgIGQzX3RyYW5zaXRpb25Jbmhlcml0SWQgPSBpbmhlcml0SWQ7XG4gICAgICB9XG4gICAgfSBlbHNlIHtcbiAgICAgIGQzX3NlbGVjdGlvbl9lYWNoKHRoaXMsIGZ1bmN0aW9uKG5vZGUpIHtcbiAgICAgICAgdmFyIHRyYW5zaXRpb24gPSBub2RlW25zXVtpZF07XG4gICAgICAgICh0cmFuc2l0aW9uLmV2ZW50IHx8ICh0cmFuc2l0aW9uLmV2ZW50ID0gZDMuZGlzcGF0Y2goXCJzdGFydFwiLCBcImVuZFwiLCBcImludGVycnVwdFwiKSkpLm9uKHR5cGUsIGxpc3RlbmVyKTtcbiAgICAgIH0pO1xuICAgIH1cbiAgICByZXR1cm4gdGhpcztcbiAgfTtcbiAgZDNfdHJhbnNpdGlvblByb3RvdHlwZS50cmFuc2l0aW9uID0gZnVuY3Rpb24oKSB7XG4gICAgdmFyIGlkMCA9IHRoaXMuaWQsIGlkMSA9ICsrZDNfdHJhbnNpdGlvbklkLCBucyA9IHRoaXMubmFtZXNwYWNlLCBzdWJncm91cHMgPSBbXSwgc3ViZ3JvdXAsIGdyb3VwLCBub2RlLCB0cmFuc2l0aW9uO1xuICAgIGZvciAodmFyIGogPSAwLCBtID0gdGhpcy5sZW5ndGg7IGogPCBtOyBqKyspIHtcbiAgICAgIHN1Ymdyb3Vwcy5wdXNoKHN1Ymdyb3VwID0gW10pO1xuICAgICAgZm9yICh2YXIgZ3JvdXAgPSB0aGlzW2pdLCBpID0gMCwgbiA9IGdyb3VwLmxlbmd0aDsgaSA8IG47IGkrKykge1xuICAgICAgICBpZiAobm9kZSA9IGdyb3VwW2ldKSB7XG4gICAgICAgICAgdHJhbnNpdGlvbiA9IG5vZGVbbnNdW2lkMF07XG4gICAgICAgICAgZDNfdHJhbnNpdGlvbk5vZGUobm9kZSwgaSwgbnMsIGlkMSwge1xuICAgICAgICAgICAgdGltZTogdHJhbnNpdGlvbi50aW1lLFxuICAgICAgICAgICAgZWFzZTogdHJhbnNpdGlvbi5lYXNlLFxuICAgICAgICAgICAgZGVsYXk6IHRyYW5zaXRpb24uZGVsYXkgKyB0cmFuc2l0aW9uLmR1cmF0aW9uLFxuICAgICAgICAgICAgZHVyYXRpb246IHRyYW5zaXRpb24uZHVyYXRpb25cbiAgICAgICAgICB9KTtcbiAgICAgICAgfVxuICAgICAgICBzdWJncm91cC5wdXNoKG5vZGUpO1xuICAgICAgfVxuICAgIH1cbiAgICByZXR1cm4gZDNfdHJhbnNpdGlvbihzdWJncm91cHMsIG5zLCBpZDEpO1xuICB9O1xuICBmdW5jdGlvbiBkM190cmFuc2l0aW9uTmFtZXNwYWNlKG5hbWUpIHtcbiAgICByZXR1cm4gbmFtZSA9PSBudWxsID8gXCJfX3RyYW5zaXRpb25fX1wiIDogXCJfX3RyYW5zaXRpb25fXCIgKyBuYW1lICsgXCJfX1wiO1xuICB9XG4gIGZ1bmN0aW9uIGQzX3RyYW5zaXRpb25Ob2RlKG5vZGUsIGksIG5zLCBpZCwgaW5oZXJpdCkge1xuICAgIHZhciBsb2NrID0gbm9kZVtuc10gfHwgKG5vZGVbbnNdID0ge1xuICAgICAgYWN0aXZlOiAwLFxuICAgICAgY291bnQ6IDBcbiAgICB9KSwgdHJhbnNpdGlvbiA9IGxvY2tbaWRdLCB0aW1lLCB0aW1lciwgZHVyYXRpb24sIGVhc2UsIHR3ZWVucztcbiAgICBmdW5jdGlvbiBzY2hlZHVsZShlbGFwc2VkKSB7XG4gICAgICB2YXIgZGVsYXkgPSB0cmFuc2l0aW9uLmRlbGF5O1xuICAgICAgdGltZXIudCA9IGRlbGF5ICsgdGltZTtcbiAgICAgIGlmIChkZWxheSA8PSBlbGFwc2VkKSByZXR1cm4gc3RhcnQoZWxhcHNlZCAtIGRlbGF5KTtcbiAgICAgIHRpbWVyLmMgPSBzdGFydDtcbiAgICB9XG4gICAgZnVuY3Rpb24gc3RhcnQoZWxhcHNlZCkge1xuICAgICAgdmFyIGFjdGl2ZUlkID0gbG9jay5hY3RpdmUsIGFjdGl2ZSA9IGxvY2tbYWN0aXZlSWRdO1xuICAgICAgaWYgKGFjdGl2ZSkge1xuICAgICAgICBhY3RpdmUudGltZXIuYyA9IG51bGw7XG4gICAgICAgIGFjdGl2ZS50aW1lci50ID0gTmFOO1xuICAgICAgICAtLWxvY2suY291bnQ7XG4gICAgICAgIGRlbGV0ZSBsb2NrW2FjdGl2ZUlkXTtcbiAgICAgICAgYWN0aXZlLmV2ZW50ICYmIGFjdGl2ZS5ldmVudC5pbnRlcnJ1cHQuY2FsbChub2RlLCBub2RlLl9fZGF0YV9fLCBhY3RpdmUuaW5kZXgpO1xuICAgICAgfVxuICAgICAgZm9yICh2YXIgY2FuY2VsSWQgaW4gbG9jaykge1xuICAgICAgICBpZiAoK2NhbmNlbElkIDwgaWQpIHtcbiAgICAgICAgICB2YXIgY2FuY2VsID0gbG9ja1tjYW5jZWxJZF07XG4gICAgICAgICAgY2FuY2VsLnRpbWVyLmMgPSBudWxsO1xuICAgICAgICAgIGNhbmNlbC50aW1lci50ID0gTmFOO1xuICAgICAgICAgIC0tbG9jay5jb3VudDtcbiAgICAgICAgICBkZWxldGUgbG9ja1tjYW5jZWxJZF07XG4gICAgICAgIH1cbiAgICAgIH1cbiAgICAgIHRpbWVyLmMgPSB0aWNrO1xuICAgICAgZDNfdGltZXIoZnVuY3Rpb24oKSB7XG4gICAgICAgIGlmICh0aW1lci5jICYmIHRpY2soZWxhcHNlZCB8fCAxKSkge1xuICAgICAgICAgIHRpbWVyLmMgPSBudWxsO1xuICAgICAgICAgIHRpbWVyLnQgPSBOYU47XG4gICAgICAgIH1cbiAgICAgICAgcmV0dXJuIDE7XG4gICAgICB9LCAwLCB0aW1lKTtcbiAgICAgIGxvY2suYWN0aXZlID0gaWQ7XG4gICAgICB0cmFuc2l0aW9uLmV2ZW50ICYmIHRyYW5zaXRpb24uZXZlbnQuc3RhcnQuY2FsbChub2RlLCBub2RlLl9fZGF0YV9fLCBpKTtcbiAgICAgIHR3ZWVucyA9IFtdO1xuICAgICAgdHJhbnNpdGlvbi50d2Vlbi5mb3JFYWNoKGZ1bmN0aW9uKGtleSwgdmFsdWUpIHtcbiAgICAgICAgaWYgKHZhbHVlID0gdmFsdWUuY2FsbChub2RlLCBub2RlLl9fZGF0YV9fLCBpKSkge1xuICAgICAgICAgIHR3ZWVucy5wdXNoKHZhbHVlKTtcbiAgICAgICAgfVxuICAgICAgfSk7XG4gICAgICBlYXNlID0gdHJhbnNpdGlvbi5lYXNlO1xuICAgICAgZHVyYXRpb24gPSB0cmFuc2l0aW9uLmR1cmF0aW9uO1xuICAgIH1cbiAgICBmdW5jdGlvbiB0aWNrKGVsYXBzZWQpIHtcbiAgICAgIHZhciB0ID0gZWxhcHNlZCAvIGR1cmF0aW9uLCBlID0gZWFzZSh0KSwgbiA9IHR3ZWVucy5sZW5ndGg7XG4gICAgICB3aGlsZSAobiA+IDApIHtcbiAgICAgICAgdHdlZW5zWy0tbl0uY2FsbChub2RlLCBlKTtcbiAgICAgIH1cbiAgICAgIGlmICh0ID49IDEpIHtcbiAgICAgICAgdHJhbnNpdGlvbi5ldmVudCAmJiB0cmFuc2l0aW9uLmV2ZW50LmVuZC5jYWxsKG5vZGUsIG5vZGUuX19kYXRhX18sIGkpO1xuICAgICAgICBpZiAoLS1sb2NrLmNvdW50KSBkZWxldGUgbG9ja1tpZF07IGVsc2UgZGVsZXRlIG5vZGVbbnNdO1xuICAgICAgICByZXR1cm4gMTtcbiAgICAgIH1cbiAgICB9XG4gICAgaWYgKCF0cmFuc2l0aW9uKSB7XG4gICAgICB0aW1lID0gaW5oZXJpdC50aW1lO1xuICAgICAgdGltZXIgPSBkM190aW1lcihzY2hlZHVsZSwgMCwgdGltZSk7XG4gICAgICB0cmFuc2l0aW9uID0gbG9ja1tpZF0gPSB7XG4gICAgICAgIHR3ZWVuOiBuZXcgZDNfTWFwKCksXG4gICAgICAgIHRpbWU6IHRpbWUsXG4gICAgICAgIHRpbWVyOiB0aW1lcixcbiAgICAgICAgZGVsYXk6IGluaGVyaXQuZGVsYXksXG4gICAgICAgIGR1cmF0aW9uOiBpbmhlcml0LmR1cmF0aW9uLFxuICAgICAgICBlYXNlOiBpbmhlcml0LmVhc2UsXG4gICAgICAgIGluZGV4OiBpXG4gICAgICB9O1xuICAgICAgaW5oZXJpdCA9IG51bGw7XG4gICAgICArK2xvY2suY291bnQ7XG4gICAgfVxuICB9XG4gIGQzLnN2Zy5heGlzID0gZnVuY3Rpb24oKSB7XG4gICAgdmFyIHNjYWxlID0gZDMuc2NhbGUubGluZWFyKCksIG9yaWVudCA9IGQzX3N2Z19heGlzRGVmYXVsdE9yaWVudCwgaW5uZXJUaWNrU2l6ZSA9IDYsIG91dGVyVGlja1NpemUgPSA2LCB0aWNrUGFkZGluZyA9IDMsIHRpY2tBcmd1bWVudHNfID0gWyAxMCBdLCB0aWNrVmFsdWVzID0gbnVsbCwgdGlja0Zvcm1hdF87XG4gICAgZnVuY3Rpb24gYXhpcyhnKSB7XG4gICAgICBnLmVhY2goZnVuY3Rpb24oKSB7XG4gICAgICAgIHZhciBnID0gZDMuc2VsZWN0KHRoaXMpO1xuICAgICAgICB2YXIgc2NhbGUwID0gdGhpcy5fX2NoYXJ0X18gfHwgc2NhbGUsIHNjYWxlMSA9IHRoaXMuX19jaGFydF9fID0gc2NhbGUuY29weSgpO1xuICAgICAgICB2YXIgdGlja3MgPSB0aWNrVmFsdWVzID09IG51bGwgPyBzY2FsZTEudGlja3MgPyBzY2FsZTEudGlja3MuYXBwbHkoc2NhbGUxLCB0aWNrQXJndW1lbnRzXykgOiBzY2FsZTEuZG9tYWluKCkgOiB0aWNrVmFsdWVzLCB0aWNrRm9ybWF0ID0gdGlja0Zvcm1hdF8gPT0gbnVsbCA/IHNjYWxlMS50aWNrRm9ybWF0ID8gc2NhbGUxLnRpY2tGb3JtYXQuYXBwbHkoc2NhbGUxLCB0aWNrQXJndW1lbnRzXykgOiBkM19pZGVudGl0eSA6IHRpY2tGb3JtYXRfLCB0aWNrID0gZy5zZWxlY3RBbGwoXCIudGlja1wiKS5kYXRhKHRpY2tzLCBzY2FsZTEpLCB0aWNrRW50ZXIgPSB0aWNrLmVudGVyKCkuaW5zZXJ0KFwiZ1wiLCBcIi5kb21haW5cIikuYXR0cihcImNsYXNzXCIsIFwidGlja1wiKS5zdHlsZShcIm9wYWNpdHlcIiwgzrUpLCB0aWNrRXhpdCA9IGQzLnRyYW5zaXRpb24odGljay5leGl0KCkpLnN0eWxlKFwib3BhY2l0eVwiLCDOtSkucmVtb3ZlKCksIHRpY2tVcGRhdGUgPSBkMy50cmFuc2l0aW9uKHRpY2sub3JkZXIoKSkuc3R5bGUoXCJvcGFjaXR5XCIsIDEpLCB0aWNrU3BhY2luZyA9IE1hdGgubWF4KGlubmVyVGlja1NpemUsIDApICsgdGlja1BhZGRpbmcsIHRpY2tUcmFuc2Zvcm07XG4gICAgICAgIHZhciByYW5nZSA9IGQzX3NjYWxlUmFuZ2Uoc2NhbGUxKSwgcGF0aCA9IGcuc2VsZWN0QWxsKFwiLmRvbWFpblwiKS5kYXRhKFsgMCBdKSwgcGF0aFVwZGF0ZSA9IChwYXRoLmVudGVyKCkuYXBwZW5kKFwicGF0aFwiKS5hdHRyKFwiY2xhc3NcIiwgXCJkb21haW5cIiksIFxuICAgICAgICBkMy50cmFuc2l0aW9uKHBhdGgpKTtcbiAgICAgICAgdGlja0VudGVyLmFwcGVuZChcImxpbmVcIik7XG4gICAgICAgIHRpY2tFbnRlci5hcHBlbmQoXCJ0ZXh0XCIpO1xuICAgICAgICB2YXIgbGluZUVudGVyID0gdGlja0VudGVyLnNlbGVjdChcImxpbmVcIiksIGxpbmVVcGRhdGUgPSB0aWNrVXBkYXRlLnNlbGVjdChcImxpbmVcIiksIHRleHQgPSB0aWNrLnNlbGVjdChcInRleHRcIikudGV4dCh0aWNrRm9ybWF0KSwgdGV4dEVudGVyID0gdGlja0VudGVyLnNlbGVjdChcInRleHRcIiksIHRleHRVcGRhdGUgPSB0aWNrVXBkYXRlLnNlbGVjdChcInRleHRcIiksIHNpZ24gPSBvcmllbnQgPT09IFwidG9wXCIgfHwgb3JpZW50ID09PSBcImxlZnRcIiA/IC0xIDogMSwgeDEsIHgyLCB5MSwgeTI7XG4gICAgICAgIGlmIChvcmllbnQgPT09IFwiYm90dG9tXCIgfHwgb3JpZW50ID09PSBcInRvcFwiKSB7XG4gICAgICAgICAgdGlja1RyYW5zZm9ybSA9IGQzX3N2Z19heGlzWCwgeDEgPSBcInhcIiwgeTEgPSBcInlcIiwgeDIgPSBcIngyXCIsIHkyID0gXCJ5MlwiO1xuICAgICAgICAgIHRleHQuYXR0cihcImR5XCIsIHNpZ24gPCAwID8gXCIwZW1cIiA6IFwiLjcxZW1cIikuc3R5bGUoXCJ0ZXh0LWFuY2hvclwiLCBcIm1pZGRsZVwiKTtcbiAgICAgICAgICBwYXRoVXBkYXRlLmF0dHIoXCJkXCIsIFwiTVwiICsgcmFuZ2VbMF0gKyBcIixcIiArIHNpZ24gKiBvdXRlclRpY2tTaXplICsgXCJWMEhcIiArIHJhbmdlWzFdICsgXCJWXCIgKyBzaWduICogb3V0ZXJUaWNrU2l6ZSk7XG4gICAgICAgIH0gZWxzZSB7XG4gICAgICAgICAgdGlja1RyYW5zZm9ybSA9IGQzX3N2Z19heGlzWSwgeDEgPSBcInlcIiwgeTEgPSBcInhcIiwgeDIgPSBcInkyXCIsIHkyID0gXCJ4MlwiO1xuICAgICAgICAgIHRleHQuYXR0cihcImR5XCIsIFwiLjMyZW1cIikuc3R5bGUoXCJ0ZXh0LWFuY2hvclwiLCBzaWduIDwgMCA/IFwiZW5kXCIgOiBcInN0YXJ0XCIpO1xuICAgICAgICAgIHBhdGhVcGRhdGUuYXR0cihcImRcIiwgXCJNXCIgKyBzaWduICogb3V0ZXJUaWNrU2l6ZSArIFwiLFwiICsgcmFuZ2VbMF0gKyBcIkgwVlwiICsgcmFuZ2VbMV0gKyBcIkhcIiArIHNpZ24gKiBvdXRlclRpY2tTaXplKTtcbiAgICAgICAgfVxuICAgICAgICBsaW5lRW50ZXIuYXR0cih5Miwgc2lnbiAqIGlubmVyVGlja1NpemUpO1xuICAgICAgICB0ZXh0RW50ZXIuYXR0cih5MSwgc2lnbiAqIHRpY2tTcGFjaW5nKTtcbiAgICAgICAgbGluZVVwZGF0ZS5hdHRyKHgyLCAwKS5hdHRyKHkyLCBzaWduICogaW5uZXJUaWNrU2l6ZSk7XG4gICAgICAgIHRleHRVcGRhdGUuYXR0cih4MSwgMCkuYXR0cih5MSwgc2lnbiAqIHRpY2tTcGFjaW5nKTtcbiAgICAgICAgaWYgKHNjYWxlMS5yYW5nZUJhbmQpIHtcbiAgICAgICAgICB2YXIgeCA9IHNjYWxlMSwgZHggPSB4LnJhbmdlQmFuZCgpIC8gMjtcbiAgICAgICAgICBzY2FsZTAgPSBzY2FsZTEgPSBmdW5jdGlvbihkKSB7XG4gICAgICAgICAgICByZXR1cm4geChkKSArIGR4O1xuICAgICAgICAgIH07XG4gICAgICAgIH0gZWxzZSBpZiAoc2NhbGUwLnJhbmdlQmFuZCkge1xuICAgICAgICAgIHNjYWxlMCA9IHNjYWxlMTtcbiAgICAgICAgfSBlbHNlIHtcbiAgICAgICAgICB0aWNrRXhpdC5jYWxsKHRpY2tUcmFuc2Zvcm0sIHNjYWxlMSwgc2NhbGUwKTtcbiAgICAgICAgfVxuICAgICAgICB0aWNrRW50ZXIuY2FsbCh0aWNrVHJhbnNmb3JtLCBzY2FsZTAsIHNjYWxlMSk7XG4gICAgICAgIHRpY2tVcGRhdGUuY2FsbCh0aWNrVHJhbnNmb3JtLCBzY2FsZTEsIHNjYWxlMSk7XG4gICAgICB9KTtcbiAgICB9XG4gICAgYXhpcy5zY2FsZSA9IGZ1bmN0aW9uKHgpIHtcbiAgICAgIGlmICghYXJndW1lbnRzLmxlbmd0aCkgcmV0dXJuIHNjYWxlO1xuICAgICAgc2NhbGUgPSB4O1xuICAgICAgcmV0dXJuIGF4aXM7XG4gICAgfTtcbiAgICBheGlzLm9yaWVudCA9IGZ1bmN0aW9uKHgpIHtcbiAgICAgIGlmICghYXJndW1lbnRzLmxlbmd0aCkgcmV0dXJuIG9yaWVudDtcbiAgICAgIG9yaWVudCA9IHggaW4gZDNfc3ZnX2F4aXNPcmllbnRzID8geCArIFwiXCIgOiBkM19zdmdfYXhpc0RlZmF1bHRPcmllbnQ7XG4gICAgICByZXR1cm4gYXhpcztcbiAgICB9O1xuICAgIGF4aXMudGlja3MgPSBmdW5jdGlvbigpIHtcbiAgICAgIGlmICghYXJndW1lbnRzLmxlbmd0aCkgcmV0dXJuIHRpY2tBcmd1bWVudHNfO1xuICAgICAgdGlja0FyZ3VtZW50c18gPSBkM19hcnJheShhcmd1bWVudHMpO1xuICAgICAgcmV0dXJuIGF4aXM7XG4gICAgfTtcbiAgICBheGlzLnRpY2tWYWx1ZXMgPSBmdW5jdGlvbih4KSB7XG4gICAgICBpZiAoIWFyZ3VtZW50cy5sZW5ndGgpIHJldHVybiB0aWNrVmFsdWVzO1xuICAgICAgdGlja1ZhbHVlcyA9IHg7XG4gICAgICByZXR1cm4gYXhpcztcbiAgICB9O1xuICAgIGF4aXMudGlja0Zvcm1hdCA9IGZ1bmN0aW9uKHgpIHtcbiAgICAgIGlmICghYXJndW1lbnRzLmxlbmd0aCkgcmV0dXJuIHRpY2tGb3JtYXRfO1xuICAgICAgdGlja0Zvcm1hdF8gPSB4O1xuICAgICAgcmV0dXJuIGF4aXM7XG4gICAgfTtcbiAgICBheGlzLnRpY2tTaXplID0gZnVuY3Rpb24oeCkge1xuICAgICAgdmFyIG4gPSBhcmd1bWVudHMubGVuZ3RoO1xuICAgICAgaWYgKCFuKSByZXR1cm4gaW5uZXJUaWNrU2l6ZTtcbiAgICAgIGlubmVyVGlja1NpemUgPSAreDtcbiAgICAgIG91dGVyVGlja1NpemUgPSArYXJndW1lbnRzW24gLSAxXTtcbiAgICAgIHJldHVybiBheGlzO1xuICAgIH07XG4gICAgYXhpcy5pbm5lclRpY2tTaXplID0gZnVuY3Rpb24oeCkge1xuICAgICAgaWYgKCFhcmd1bWVudHMubGVuZ3RoKSByZXR1cm4gaW5uZXJUaWNrU2l6ZTtcbiAgICAgIGlubmVyVGlja1NpemUgPSAreDtcbiAgICAgIHJldHVybiBheGlzO1xuICAgIH07XG4gICAgYXhpcy5vdXRlclRpY2tTaXplID0gZnVuY3Rpb24oeCkge1xuICAgICAgaWYgKCFhcmd1bWVudHMubGVuZ3RoKSByZXR1cm4gb3V0ZXJUaWNrU2l6ZTtcbiAgICAgIG91dGVyVGlja1NpemUgPSAreDtcbiAgICAgIHJldHVybiBheGlzO1xuICAgIH07XG4gICAgYXhpcy50aWNrUGFkZGluZyA9IGZ1bmN0aW9uKHgpIHtcbiAgICAgIGlmICghYXJndW1lbnRzLmxlbmd0aCkgcmV0dXJuIHRpY2tQYWRkaW5nO1xuICAgICAgdGlja1BhZGRpbmcgPSAreDtcbiAgICAgIHJldHVybiBheGlzO1xuICAgIH07XG4gICAgYXhpcy50aWNrU3ViZGl2aWRlID0gZnVuY3Rpb24oKSB7XG4gICAgICByZXR1cm4gYXJndW1lbnRzLmxlbmd0aCAmJiBheGlzO1xuICAgIH07XG4gICAgcmV0dXJuIGF4aXM7XG4gIH07XG4gIHZhciBkM19zdmdfYXhpc0RlZmF1bHRPcmllbnQgPSBcImJvdHRvbVwiLCBkM19zdmdfYXhpc09yaWVudHMgPSB7XG4gICAgdG9wOiAxLFxuICAgIHJpZ2h0OiAxLFxuICAgIGJvdHRvbTogMSxcbiAgICBsZWZ0OiAxXG4gIH07XG4gIGZ1bmN0aW9uIGQzX3N2Z19heGlzWChzZWxlY3Rpb24sIHgwLCB4MSkge1xuICAgIHNlbGVjdGlvbi5hdHRyKFwidHJhbnNmb3JtXCIsIGZ1bmN0aW9uKGQpIHtcbiAgICAgIHZhciB2MCA9IHgwKGQpO1xuICAgICAgcmV0dXJuIFwidHJhbnNsYXRlKFwiICsgKGlzRmluaXRlKHYwKSA/IHYwIDogeDEoZCkpICsgXCIsMClcIjtcbiAgICB9KTtcbiAgfVxuICBmdW5jdGlvbiBkM19zdmdfYXhpc1koc2VsZWN0aW9uLCB5MCwgeTEpIHtcbiAgICBzZWxlY3Rpb24uYXR0cihcInRyYW5zZm9ybVwiLCBmdW5jdGlvbihkKSB7XG4gICAgICB2YXIgdjAgPSB5MChkKTtcbiAgICAgIHJldHVybiBcInRyYW5zbGF0ZSgwLFwiICsgKGlzRmluaXRlKHYwKSA/IHYwIDogeTEoZCkpICsgXCIpXCI7XG4gICAgfSk7XG4gIH1cbiAgZDMuc3ZnLmJydXNoID0gZnVuY3Rpb24oKSB7XG4gICAgdmFyIGV2ZW50ID0gZDNfZXZlbnREaXNwYXRjaChicnVzaCwgXCJicnVzaHN0YXJ0XCIsIFwiYnJ1c2hcIiwgXCJicnVzaGVuZFwiKSwgeCA9IG51bGwsIHkgPSBudWxsLCB4RXh0ZW50ID0gWyAwLCAwIF0sIHlFeHRlbnQgPSBbIDAsIDAgXSwgeEV4dGVudERvbWFpbiwgeUV4dGVudERvbWFpbiwgeENsYW1wID0gdHJ1ZSwgeUNsYW1wID0gdHJ1ZSwgcmVzaXplcyA9IGQzX3N2Z19icnVzaFJlc2l6ZXNbMF07XG4gICAgZnVuY3Rpb24gYnJ1c2goZykge1xuICAgICAgZy5lYWNoKGZ1bmN0aW9uKCkge1xuICAgICAgICB2YXIgZyA9IGQzLnNlbGVjdCh0aGlzKS5zdHlsZShcInBvaW50ZXItZXZlbnRzXCIsIFwiYWxsXCIpLnN0eWxlKFwiLXdlYmtpdC10YXAtaGlnaGxpZ2h0LWNvbG9yXCIsIFwicmdiYSgwLDAsMCwwKVwiKS5vbihcIm1vdXNlZG93bi5icnVzaFwiLCBicnVzaHN0YXJ0KS5vbihcInRvdWNoc3RhcnQuYnJ1c2hcIiwgYnJ1c2hzdGFydCk7XG4gICAgICAgIHZhciBiYWNrZ3JvdW5kID0gZy5zZWxlY3RBbGwoXCIuYmFja2dyb3VuZFwiKS5kYXRhKFsgMCBdKTtcbiAgICAgICAgYmFja2dyb3VuZC5lbnRlcigpLmFwcGVuZChcInJlY3RcIikuYXR0cihcImNsYXNzXCIsIFwiYmFja2dyb3VuZFwiKS5zdHlsZShcInZpc2liaWxpdHlcIiwgXCJoaWRkZW5cIikuc3R5bGUoXCJjdXJzb3JcIiwgXCJjcm9zc2hhaXJcIik7XG4gICAgICAgIGcuc2VsZWN0QWxsKFwiLmV4dGVudFwiKS5kYXRhKFsgMCBdKS5lbnRlcigpLmFwcGVuZChcInJlY3RcIikuYXR0cihcImNsYXNzXCIsIFwiZXh0ZW50XCIpLnN0eWxlKFwiY3Vyc29yXCIsIFwibW92ZVwiKTtcbiAgICAgICAgdmFyIHJlc2l6ZSA9IGcuc2VsZWN0QWxsKFwiLnJlc2l6ZVwiKS5kYXRhKHJlc2l6ZXMsIGQzX2lkZW50aXR5KTtcbiAgICAgICAgcmVzaXplLmV4aXQoKS5yZW1vdmUoKTtcbiAgICAgICAgcmVzaXplLmVudGVyKCkuYXBwZW5kKFwiZ1wiKS5hdHRyKFwiY2xhc3NcIiwgZnVuY3Rpb24oZCkge1xuICAgICAgICAgIHJldHVybiBcInJlc2l6ZSBcIiArIGQ7XG4gICAgICAgIH0pLnN0eWxlKFwiY3Vyc29yXCIsIGZ1bmN0aW9uKGQpIHtcbiAgICAgICAgICByZXR1cm4gZDNfc3ZnX2JydXNoQ3Vyc29yW2RdO1xuICAgICAgICB9KS5hcHBlbmQoXCJyZWN0XCIpLmF0dHIoXCJ4XCIsIGZ1bmN0aW9uKGQpIHtcbiAgICAgICAgICByZXR1cm4gL1tld10kLy50ZXN0KGQpID8gLTMgOiBudWxsO1xuICAgICAgICB9KS5hdHRyKFwieVwiLCBmdW5jdGlvbihkKSB7XG4gICAgICAgICAgcmV0dXJuIC9eW25zXS8udGVzdChkKSA/IC0zIDogbnVsbDtcbiAgICAgICAgfSkuYXR0cihcIndpZHRoXCIsIDYpLmF0dHIoXCJoZWlnaHRcIiwgNikuc3R5bGUoXCJ2aXNpYmlsaXR5XCIsIFwiaGlkZGVuXCIpO1xuICAgICAgICByZXNpemUuc3R5bGUoXCJkaXNwbGF5XCIsIGJydXNoLmVtcHR5KCkgPyBcIm5vbmVcIiA6IG51bGwpO1xuICAgICAgICB2YXIgZ1VwZGF0ZSA9IGQzLnRyYW5zaXRpb24oZyksIGJhY2tncm91bmRVcGRhdGUgPSBkMy50cmFuc2l0aW9uKGJhY2tncm91bmQpLCByYW5nZTtcbiAgICAgICAgaWYgKHgpIHtcbiAgICAgICAgICByYW5nZSA9IGQzX3NjYWxlUmFuZ2UoeCk7XG4gICAgICAgICAgYmFja2dyb3VuZFVwZGF0ZS5hdHRyKFwieFwiLCByYW5nZVswXSkuYXR0cihcIndpZHRoXCIsIHJhbmdlWzFdIC0gcmFuZ2VbMF0pO1xuICAgICAgICAgIHJlZHJhd1goZ1VwZGF0ZSk7XG4gICAgICAgIH1cbiAgICAgICAgaWYgKHkpIHtcbiAgICAgICAgICByYW5nZSA9IGQzX3NjYWxlUmFuZ2UoeSk7XG4gICAgICAgICAgYmFja2dyb3VuZFVwZGF0ZS5hdHRyKFwieVwiLCByYW5nZVswXSkuYXR0cihcImhlaWdodFwiLCByYW5nZVsxXSAtIHJhbmdlWzBdKTtcbiAgICAgICAgICByZWRyYXdZKGdVcGRhdGUpO1xuICAgICAgICB9XG4gICAgICAgIHJlZHJhdyhnVXBkYXRlKTtcbiAgICAgIH0pO1xuICAgIH1cbiAgICBicnVzaC5ldmVudCA9IGZ1bmN0aW9uKGcpIHtcbiAgICAgIGcuZWFjaChmdW5jdGlvbigpIHtcbiAgICAgICAgdmFyIGV2ZW50XyA9IGV2ZW50Lm9mKHRoaXMsIGFyZ3VtZW50cyksIGV4dGVudDEgPSB7XG4gICAgICAgICAgeDogeEV4dGVudCxcbiAgICAgICAgICB5OiB5RXh0ZW50LFxuICAgICAgICAgIGk6IHhFeHRlbnREb21haW4sXG4gICAgICAgICAgajogeUV4dGVudERvbWFpblxuICAgICAgICB9LCBleHRlbnQwID0gdGhpcy5fX2NoYXJ0X18gfHwgZXh0ZW50MTtcbiAgICAgICAgdGhpcy5fX2NoYXJ0X18gPSBleHRlbnQxO1xuICAgICAgICBpZiAoZDNfdHJhbnNpdGlvbkluaGVyaXRJZCkge1xuICAgICAgICAgIGQzLnNlbGVjdCh0aGlzKS50cmFuc2l0aW9uKCkuZWFjaChcInN0YXJ0LmJydXNoXCIsIGZ1bmN0aW9uKCkge1xuICAgICAgICAgICAgeEV4dGVudERvbWFpbiA9IGV4dGVudDAuaTtcbiAgICAgICAgICAgIHlFeHRlbnREb21haW4gPSBleHRlbnQwLmo7XG4gICAgICAgICAgICB4RXh0ZW50ID0gZXh0ZW50MC54O1xuICAgICAgICAgICAgeUV4dGVudCA9IGV4dGVudDAueTtcbiAgICAgICAgICAgIGV2ZW50Xyh7XG4gICAgICAgICAgICAgIHR5cGU6IFwiYnJ1c2hzdGFydFwiXG4gICAgICAgICAgICB9KTtcbiAgICAgICAgICB9KS50d2VlbihcImJydXNoOmJydXNoXCIsIGZ1bmN0aW9uKCkge1xuICAgICAgICAgICAgdmFyIHhpID0gZDNfaW50ZXJwb2xhdGVBcnJheSh4RXh0ZW50LCBleHRlbnQxLngpLCB5aSA9IGQzX2ludGVycG9sYXRlQXJyYXkoeUV4dGVudCwgZXh0ZW50MS55KTtcbiAgICAgICAgICAgIHhFeHRlbnREb21haW4gPSB5RXh0ZW50RG9tYWluID0gbnVsbDtcbiAgICAgICAgICAgIHJldHVybiBmdW5jdGlvbih0KSB7XG4gICAgICAgICAgICAgIHhFeHRlbnQgPSBleHRlbnQxLnggPSB4aSh0KTtcbiAgICAgICAgICAgICAgeUV4dGVudCA9IGV4dGVudDEueSA9IHlpKHQpO1xuICAgICAgICAgICAgICBldmVudF8oe1xuICAgICAgICAgICAgICAgIHR5cGU6IFwiYnJ1c2hcIixcbiAgICAgICAgICAgICAgICBtb2RlOiBcInJlc2l6ZVwiXG4gICAgICAgICAgICAgIH0pO1xuICAgICAgICAgICAgfTtcbiAgICAgICAgICB9KS5lYWNoKFwiZW5kLmJydXNoXCIsIGZ1bmN0aW9uKCkge1xuICAgICAgICAgICAgeEV4dGVudERvbWFpbiA9IGV4dGVudDEuaTtcbiAgICAgICAgICAgIHlFeHRlbnREb21haW4gPSBleHRlbnQxLmo7XG4gICAgICAgICAgICBldmVudF8oe1xuICAgICAgICAgICAgICB0eXBlOiBcImJydXNoXCIsXG4gICAgICAgICAgICAgIG1vZGU6IFwicmVzaXplXCJcbiAgICAgICAgICAgIH0pO1xuICAgICAgICAgICAgZXZlbnRfKHtcbiAgICAgICAgICAgICAgdHlwZTogXCJicnVzaGVuZFwiXG4gICAgICAgICAgICB9KTtcbiAgICAgICAgICB9KTtcbiAgICAgICAgfSBlbHNlIHtcbiAgICAgICAgICBldmVudF8oe1xuICAgICAgICAgICAgdHlwZTogXCJicnVzaHN0YXJ0XCJcbiAgICAgICAgICB9KTtcbiAgICAgICAgICBldmVudF8oe1xuICAgICAgICAgICAgdHlwZTogXCJicnVzaFwiLFxuICAgICAgICAgICAgbW9kZTogXCJyZXNpemVcIlxuICAgICAgICAgIH0pO1xuICAgICAgICAgIGV2ZW50Xyh7XG4gICAgICAgICAgICB0eXBlOiBcImJydXNoZW5kXCJcbiAgICAgICAgICB9KTtcbiAgICAgICAgfVxuICAgICAgfSk7XG4gICAgfTtcbiAgICBmdW5jdGlvbiByZWRyYXcoZykge1xuICAgICAgZy5zZWxlY3RBbGwoXCIucmVzaXplXCIpLmF0dHIoXCJ0cmFuc2Zvcm1cIiwgZnVuY3Rpb24oZCkge1xuICAgICAgICByZXR1cm4gXCJ0cmFuc2xhdGUoXCIgKyB4RXh0ZW50WysvZSQvLnRlc3QoZCldICsgXCIsXCIgKyB5RXh0ZW50WysvXnMvLnRlc3QoZCldICsgXCIpXCI7XG4gICAgICB9KTtcbiAgICB9XG4gICAgZnVuY3Rpb24gcmVkcmF3WChnKSB7XG4gICAgICBnLnNlbGVjdChcIi5leHRlbnRcIikuYXR0cihcInhcIiwgeEV4dGVudFswXSk7XG4gICAgICBnLnNlbGVjdEFsbChcIi5leHRlbnQsLm4+cmVjdCwucz5yZWN0XCIpLmF0dHIoXCJ3aWR0aFwiLCB4RXh0ZW50WzFdIC0geEV4dGVudFswXSk7XG4gICAgfVxuICAgIGZ1bmN0aW9uIHJlZHJhd1koZykge1xuICAgICAgZy5zZWxlY3QoXCIuZXh0ZW50XCIpLmF0dHIoXCJ5XCIsIHlFeHRlbnRbMF0pO1xuICAgICAgZy5zZWxlY3RBbGwoXCIuZXh0ZW50LC5lPnJlY3QsLnc+cmVjdFwiKS5hdHRyKFwiaGVpZ2h0XCIsIHlFeHRlbnRbMV0gLSB5RXh0ZW50WzBdKTtcbiAgICB9XG4gICAgZnVuY3Rpb24gYnJ1c2hzdGFydCgpIHtcbiAgICAgIHZhciB0YXJnZXQgPSB0aGlzLCBldmVudFRhcmdldCA9IGQzLnNlbGVjdChkMy5ldmVudC50YXJnZXQpLCBldmVudF8gPSBldmVudC5vZih0YXJnZXQsIGFyZ3VtZW50cyksIGcgPSBkMy5zZWxlY3QodGFyZ2V0KSwgcmVzaXppbmcgPSBldmVudFRhcmdldC5kYXR1bSgpLCByZXNpemluZ1ggPSAhL14obnxzKSQvLnRlc3QocmVzaXppbmcpICYmIHgsIHJlc2l6aW5nWSA9ICEvXihlfHcpJC8udGVzdChyZXNpemluZykgJiYgeSwgZHJhZ2dpbmcgPSBldmVudFRhcmdldC5jbGFzc2VkKFwiZXh0ZW50XCIpLCBkcmFnUmVzdG9yZSA9IGQzX2V2ZW50X2RyYWdTdXBwcmVzcyh0YXJnZXQpLCBjZW50ZXIsIG9yaWdpbiA9IGQzLm1vdXNlKHRhcmdldCksIG9mZnNldDtcbiAgICAgIHZhciB3ID0gZDMuc2VsZWN0KGQzX3dpbmRvdyh0YXJnZXQpKS5vbihcImtleWRvd24uYnJ1c2hcIiwga2V5ZG93bikub24oXCJrZXl1cC5icnVzaFwiLCBrZXl1cCk7XG4gICAgICBpZiAoZDMuZXZlbnQuY2hhbmdlZFRvdWNoZXMpIHtcbiAgICAgICAgdy5vbihcInRvdWNobW92ZS5icnVzaFwiLCBicnVzaG1vdmUpLm9uKFwidG91Y2hlbmQuYnJ1c2hcIiwgYnJ1c2hlbmQpO1xuICAgICAgfSBlbHNlIHtcbiAgICAgICAgdy5vbihcIm1vdXNlbW92ZS5icnVzaFwiLCBicnVzaG1vdmUpLm9uKFwibW91c2V1cC5icnVzaFwiLCBicnVzaGVuZCk7XG4gICAgICB9XG4gICAgICBnLmludGVycnVwdCgpLnNlbGVjdEFsbChcIipcIikuaW50ZXJydXB0KCk7XG4gICAgICBpZiAoZHJhZ2dpbmcpIHtcbiAgICAgICAgb3JpZ2luWzBdID0geEV4dGVudFswXSAtIG9yaWdpblswXTtcbiAgICAgICAgb3JpZ2luWzFdID0geUV4dGVudFswXSAtIG9yaWdpblsxXTtcbiAgICAgIH0gZWxzZSBpZiAocmVzaXppbmcpIHtcbiAgICAgICAgdmFyIGV4ID0gKy93JC8udGVzdChyZXNpemluZyksIGV5ID0gKy9ebi8udGVzdChyZXNpemluZyk7XG4gICAgICAgIG9mZnNldCA9IFsgeEV4dGVudFsxIC0gZXhdIC0gb3JpZ2luWzBdLCB5RXh0ZW50WzEgLSBleV0gLSBvcmlnaW5bMV0gXTtcbiAgICAgICAgb3JpZ2luWzBdID0geEV4dGVudFtleF07XG4gICAgICAgIG9yaWdpblsxXSA9IHlFeHRlbnRbZXldO1xuICAgICAgfSBlbHNlIGlmIChkMy5ldmVudC5hbHRLZXkpIGNlbnRlciA9IG9yaWdpbi5zbGljZSgpO1xuICAgICAgZy5zdHlsZShcInBvaW50ZXItZXZlbnRzXCIsIFwibm9uZVwiKS5zZWxlY3RBbGwoXCIucmVzaXplXCIpLnN0eWxlKFwiZGlzcGxheVwiLCBudWxsKTtcbiAgICAgIGQzLnNlbGVjdChcImJvZHlcIikuc3R5bGUoXCJjdXJzb3JcIiwgZXZlbnRUYXJnZXQuc3R5bGUoXCJjdXJzb3JcIikpO1xuICAgICAgZXZlbnRfKHtcbiAgICAgICAgdHlwZTogXCJicnVzaHN0YXJ0XCJcbiAgICAgIH0pO1xuICAgICAgYnJ1c2htb3ZlKCk7XG4gICAgICBmdW5jdGlvbiBrZXlkb3duKCkge1xuICAgICAgICBpZiAoZDMuZXZlbnQua2V5Q29kZSA9PSAzMikge1xuICAgICAgICAgIGlmICghZHJhZ2dpbmcpIHtcbiAgICAgICAgICAgIGNlbnRlciA9IG51bGw7XG4gICAgICAgICAgICBvcmlnaW5bMF0gLT0geEV4dGVudFsxXTtcbiAgICAgICAgICAgIG9yaWdpblsxXSAtPSB5RXh0ZW50WzFdO1xuICAgICAgICAgICAgZHJhZ2dpbmcgPSAyO1xuICAgICAgICAgIH1cbiAgICAgICAgICBkM19ldmVudFByZXZlbnREZWZhdWx0KCk7XG4gICAgICAgIH1cbiAgICAgIH1cbiAgICAgIGZ1bmN0aW9uIGtleXVwKCkge1xuICAgICAgICBpZiAoZDMuZXZlbnQua2V5Q29kZSA9PSAzMiAmJiBkcmFnZ2luZyA9PSAyKSB7XG4gICAgICAgICAgb3JpZ2luWzBdICs9IHhFeHRlbnRbMV07XG4gICAgICAgICAgb3JpZ2luWzFdICs9IHlFeHRlbnRbMV07XG4gICAgICAgICAgZHJhZ2dpbmcgPSAwO1xuICAgICAgICAgIGQzX2V2ZW50UHJldmVudERlZmF1bHQoKTtcbiAgICAgICAgfVxuICAgICAgfVxuICAgICAgZnVuY3Rpb24gYnJ1c2htb3ZlKCkge1xuICAgICAgICB2YXIgcG9pbnQgPSBkMy5tb3VzZSh0YXJnZXQpLCBtb3ZlZCA9IGZhbHNlO1xuICAgICAgICBpZiAob2Zmc2V0KSB7XG4gICAgICAgICAgcG9pbnRbMF0gKz0gb2Zmc2V0WzBdO1xuICAgICAgICAgIHBvaW50WzFdICs9IG9mZnNldFsxXTtcbiAgICAgICAgfVxuICAgICAgICBpZiAoIWRyYWdnaW5nKSB7XG4gICAgICAgICAgaWYgKGQzLmV2ZW50LmFsdEtleSkge1xuICAgICAgICAgICAgaWYgKCFjZW50ZXIpIGNlbnRlciA9IFsgKHhFeHRlbnRbMF0gKyB4RXh0ZW50WzFdKSAvIDIsICh5RXh0ZW50WzBdICsgeUV4dGVudFsxXSkgLyAyIF07XG4gICAgICAgICAgICBvcmlnaW5bMF0gPSB4RXh0ZW50WysocG9pbnRbMF0gPCBjZW50ZXJbMF0pXTtcbiAgICAgICAgICAgIG9yaWdpblsxXSA9IHlFeHRlbnRbKyhwb2ludFsxXSA8IGNlbnRlclsxXSldO1xuICAgICAgICAgIH0gZWxzZSBjZW50ZXIgPSBudWxsO1xuICAgICAgICB9XG4gICAgICAgIGlmIChyZXNpemluZ1ggJiYgbW92ZTEocG9pbnQsIHgsIDApKSB7XG4gICAgICAgICAgcmVkcmF3WChnKTtcbiAgICAgICAgICBtb3ZlZCA9IHRydWU7XG4gICAgICAgIH1cbiAgICAgICAgaWYgKHJlc2l6aW5nWSAmJiBtb3ZlMShwb2ludCwgeSwgMSkpIHtcbiAgICAgICAgICByZWRyYXdZKGcpO1xuICAgICAgICAgIG1vdmVkID0gdHJ1ZTtcbiAgICAgICAgfVxuICAgICAgICBpZiAobW92ZWQpIHtcbiAgICAgICAgICByZWRyYXcoZyk7XG4gICAgICAgICAgZXZlbnRfKHtcbiAgICAgICAgICAgIHR5cGU6IFwiYnJ1c2hcIixcbiAgICAgICAgICAgIG1vZGU6IGRyYWdnaW5nID8gXCJtb3ZlXCIgOiBcInJlc2l6ZVwiXG4gICAgICAgICAgfSk7XG4gICAgICAgIH1cbiAgICAgIH1cbiAgICAgIGZ1bmN0aW9uIG1vdmUxKHBvaW50LCBzY2FsZSwgaSkge1xuICAgICAgICB2YXIgcmFuZ2UgPSBkM19zY2FsZVJhbmdlKHNjYWxlKSwgcjAgPSByYW5nZVswXSwgcjEgPSByYW5nZVsxXSwgcG9zaXRpb24gPSBvcmlnaW5baV0sIGV4dGVudCA9IGkgPyB5RXh0ZW50IDogeEV4dGVudCwgc2l6ZSA9IGV4dGVudFsxXSAtIGV4dGVudFswXSwgbWluLCBtYXg7XG4gICAgICAgIGlmIChkcmFnZ2luZykge1xuICAgICAgICAgIHIwIC09IHBvc2l0aW9uO1xuICAgICAgICAgIHIxIC09IHNpemUgKyBwb3NpdGlvbjtcbiAgICAgICAgfVxuICAgICAgICBtaW4gPSAoaSA/IHlDbGFtcCA6IHhDbGFtcCkgPyBNYXRoLm1heChyMCwgTWF0aC5taW4ocjEsIHBvaW50W2ldKSkgOiBwb2ludFtpXTtcbiAgICAgICAgaWYgKGRyYWdnaW5nKSB7XG4gICAgICAgICAgbWF4ID0gKG1pbiArPSBwb3NpdGlvbikgKyBzaXplO1xuICAgICAgICB9IGVsc2Uge1xuICAgICAgICAgIGlmIChjZW50ZXIpIHBvc2l0aW9uID0gTWF0aC5tYXgocjAsIE1hdGgubWluKHIxLCAyICogY2VudGVyW2ldIC0gbWluKSk7XG4gICAgICAgICAgaWYgKHBvc2l0aW9uIDwgbWluKSB7XG4gICAgICAgICAgICBtYXggPSBtaW47XG4gICAgICAgICAgICBtaW4gPSBwb3NpdGlvbjtcbiAgICAgICAgICB9IGVsc2Uge1xuICAgICAgICAgICAgbWF4ID0gcG9zaXRpb247XG4gICAgICAgICAgfVxuICAgICAgICB9XG4gICAgICAgIGlmIChleHRlbnRbMF0gIT0gbWluIHx8IGV4dGVudFsxXSAhPSBtYXgpIHtcbiAgICAgICAgICBpZiAoaSkgeUV4dGVudERvbWFpbiA9IG51bGw7IGVsc2UgeEV4dGVudERvbWFpbiA9IG51bGw7XG4gICAgICAgICAgZXh0ZW50WzBdID0gbWluO1xuICAgICAgICAgIGV4dGVudFsxXSA9IG1heDtcbiAgICAgICAgICByZXR1cm4gdHJ1ZTtcbiAgICAgICAgfVxuICAgICAgfVxuICAgICAgZnVuY3Rpb24gYnJ1c2hlbmQoKSB7XG4gICAgICAgIGJydXNobW92ZSgpO1xuICAgICAgICBnLnN0eWxlKFwicG9pbnRlci1ldmVudHNcIiwgXCJhbGxcIikuc2VsZWN0QWxsKFwiLnJlc2l6ZVwiKS5zdHlsZShcImRpc3BsYXlcIiwgYnJ1c2guZW1wdHkoKSA/IFwibm9uZVwiIDogbnVsbCk7XG4gICAgICAgIGQzLnNlbGVjdChcImJvZHlcIikuc3R5bGUoXCJjdXJzb3JcIiwgbnVsbCk7XG4gICAgICAgIHcub24oXCJtb3VzZW1vdmUuYnJ1c2hcIiwgbnVsbCkub24oXCJtb3VzZXVwLmJydXNoXCIsIG51bGwpLm9uKFwidG91Y2htb3ZlLmJydXNoXCIsIG51bGwpLm9uKFwidG91Y2hlbmQuYnJ1c2hcIiwgbnVsbCkub24oXCJrZXlkb3duLmJydXNoXCIsIG51bGwpLm9uKFwia2V5dXAuYnJ1c2hcIiwgbnVsbCk7XG4gICAgICAgIGRyYWdSZXN0b3JlKCk7XG4gICAgICAgIGV2ZW50Xyh7XG4gICAgICAgICAgdHlwZTogXCJicnVzaGVuZFwiXG4gICAgICAgIH0pO1xuICAgICAgfVxuICAgIH1cbiAgICBicnVzaC54ID0gZnVuY3Rpb24oeikge1xuICAgICAgaWYgKCFhcmd1bWVudHMubGVuZ3RoKSByZXR1cm4geDtcbiAgICAgIHggPSB6O1xuICAgICAgcmVzaXplcyA9IGQzX3N2Z19icnVzaFJlc2l6ZXNbIXggPDwgMSB8ICF5XTtcbiAgICAgIHJldHVybiBicnVzaDtcbiAgICB9O1xuICAgIGJydXNoLnkgPSBmdW5jdGlvbih6KSB7XG4gICAgICBpZiAoIWFyZ3VtZW50cy5sZW5ndGgpIHJldHVybiB5O1xuICAgICAgeSA9IHo7XG4gICAgICByZXNpemVzID0gZDNfc3ZnX2JydXNoUmVzaXplc1sheCA8PCAxIHwgIXldO1xuICAgICAgcmV0dXJuIGJydXNoO1xuICAgIH07XG4gICAgYnJ1c2guY2xhbXAgPSBmdW5jdGlvbih6KSB7XG4gICAgICBpZiAoIWFyZ3VtZW50cy5sZW5ndGgpIHJldHVybiB4ICYmIHkgPyBbIHhDbGFtcCwgeUNsYW1wIF0gOiB4ID8geENsYW1wIDogeSA/IHlDbGFtcCA6IG51bGw7XG4gICAgICBpZiAoeCAmJiB5KSB4Q2xhbXAgPSAhIXpbMF0sIHlDbGFtcCA9ICEhelsxXTsgZWxzZSBpZiAoeCkgeENsYW1wID0gISF6OyBlbHNlIGlmICh5KSB5Q2xhbXAgPSAhIXo7XG4gICAgICByZXR1cm4gYnJ1c2g7XG4gICAgfTtcbiAgICBicnVzaC5leHRlbnQgPSBmdW5jdGlvbih6KSB7XG4gICAgICB2YXIgeDAsIHgxLCB5MCwgeTEsIHQ7XG4gICAgICBpZiAoIWFyZ3VtZW50cy5sZW5ndGgpIHtcbiAgICAgICAgaWYgKHgpIHtcbiAgICAgICAgICBpZiAoeEV4dGVudERvbWFpbikge1xuICAgICAgICAgICAgeDAgPSB4RXh0ZW50RG9tYWluWzBdLCB4MSA9IHhFeHRlbnREb21haW5bMV07XG4gICAgICAgICAgfSBlbHNlIHtcbiAgICAgICAgICAgIHgwID0geEV4dGVudFswXSwgeDEgPSB4RXh0ZW50WzFdO1xuICAgICAgICAgICAgaWYgKHguaW52ZXJ0KSB4MCA9IHguaW52ZXJ0KHgwKSwgeDEgPSB4LmludmVydCh4MSk7XG4gICAgICAgICAgICBpZiAoeDEgPCB4MCkgdCA9IHgwLCB4MCA9IHgxLCB4MSA9IHQ7XG4gICAgICAgICAgfVxuICAgICAgICB9XG4gICAgICAgIGlmICh5KSB7XG4gICAgICAgICAgaWYgKHlFeHRlbnREb21haW4pIHtcbiAgICAgICAgICAgIHkwID0geUV4dGVudERvbWFpblswXSwgeTEgPSB5RXh0ZW50RG9tYWluWzFdO1xuICAgICAgICAgIH0gZWxzZSB7XG4gICAgICAgICAgICB5MCA9IHlFeHRlbnRbMF0sIHkxID0geUV4dGVudFsxXTtcbiAgICAgICAgICAgIGlmICh5LmludmVydCkgeTAgPSB5LmludmVydCh5MCksIHkxID0geS5pbnZlcnQoeTEpO1xuICAgICAgICAgICAgaWYgKHkxIDwgeTApIHQgPSB5MCwgeTAgPSB5MSwgeTEgPSB0O1xuICAgICAgICAgIH1cbiAgICAgICAgfVxuICAgICAgICByZXR1cm4geCAmJiB5ID8gWyBbIHgwLCB5MCBdLCBbIHgxLCB5MSBdIF0gOiB4ID8gWyB4MCwgeDEgXSA6IHkgJiYgWyB5MCwgeTEgXTtcbiAgICAgIH1cbiAgICAgIGlmICh4KSB7XG4gICAgICAgIHgwID0gelswXSwgeDEgPSB6WzFdO1xuICAgICAgICBpZiAoeSkgeDAgPSB4MFswXSwgeDEgPSB4MVswXTtcbiAgICAgICAgeEV4dGVudERvbWFpbiA9IFsgeDAsIHgxIF07XG4gICAgICAgIGlmICh4LmludmVydCkgeDAgPSB4KHgwKSwgeDEgPSB4KHgxKTtcbiAgICAgICAgaWYgKHgxIDwgeDApIHQgPSB4MCwgeDAgPSB4MSwgeDEgPSB0O1xuICAgICAgICBpZiAoeDAgIT0geEV4dGVudFswXSB8fCB4MSAhPSB4RXh0ZW50WzFdKSB4RXh0ZW50ID0gWyB4MCwgeDEgXTtcbiAgICAgIH1cbiAgICAgIGlmICh5KSB7XG4gICAgICAgIHkwID0gelswXSwgeTEgPSB6WzFdO1xuICAgICAgICBpZiAoeCkgeTAgPSB5MFsxXSwgeTEgPSB5MVsxXTtcbiAgICAgICAgeUV4dGVudERvbWFpbiA9IFsgeTAsIHkxIF07XG4gICAgICAgIGlmICh5LmludmVydCkgeTAgPSB5KHkwKSwgeTEgPSB5KHkxKTtcbiAgICAgICAgaWYgKHkxIDwgeTApIHQgPSB5MCwgeTAgPSB5MSwgeTEgPSB0O1xuICAgICAgICBpZiAoeTAgIT0geUV4dGVudFswXSB8fCB5MSAhPSB5RXh0ZW50WzFdKSB5RXh0ZW50ID0gWyB5MCwgeTEgXTtcbiAgICAgIH1cbiAgICAgIHJldHVybiBicnVzaDtcbiAgICB9O1xuICAgIGJydXNoLmNsZWFyID0gZnVuY3Rpb24oKSB7XG4gICAgICBpZiAoIWJydXNoLmVtcHR5KCkpIHtcbiAgICAgICAgeEV4dGVudCA9IFsgMCwgMCBdLCB5RXh0ZW50ID0gWyAwLCAwIF07XG4gICAgICAgIHhFeHRlbnREb21haW4gPSB5RXh0ZW50RG9tYWluID0gbnVsbDtcbiAgICAgIH1cbiAgICAgIHJldHVybiBicnVzaDtcbiAgICB9O1xuICAgIGJydXNoLmVtcHR5ID0gZnVuY3Rpb24oKSB7XG4gICAgICByZXR1cm4gISF4ICYmIHhFeHRlbnRbMF0gPT0geEV4dGVudFsxXSB8fCAhIXkgJiYgeUV4dGVudFswXSA9PSB5RXh0ZW50WzFdO1xuICAgIH07XG4gICAgcmV0dXJuIGQzLnJlYmluZChicnVzaCwgZXZlbnQsIFwib25cIik7XG4gIH07XG4gIHZhciBkM19zdmdfYnJ1c2hDdXJzb3IgPSB7XG4gICAgbjogXCJucy1yZXNpemVcIixcbiAgICBlOiBcImV3LXJlc2l6ZVwiLFxuICAgIHM6IFwibnMtcmVzaXplXCIsXG4gICAgdzogXCJldy1yZXNpemVcIixcbiAgICBudzogXCJud3NlLXJlc2l6ZVwiLFxuICAgIG5lOiBcIm5lc3ctcmVzaXplXCIsXG4gICAgc2U6IFwibndzZS1yZXNpemVcIixcbiAgICBzdzogXCJuZXN3LXJlc2l6ZVwiXG4gIH07XG4gIHZhciBkM19zdmdfYnJ1c2hSZXNpemVzID0gWyBbIFwiblwiLCBcImVcIiwgXCJzXCIsIFwid1wiLCBcIm53XCIsIFwibmVcIiwgXCJzZVwiLCBcInN3XCIgXSwgWyBcImVcIiwgXCJ3XCIgXSwgWyBcIm5cIiwgXCJzXCIgXSwgW10gXTtcbiAgdmFyIGQzX3RpbWVfZm9ybWF0ID0gZDNfdGltZS5mb3JtYXQgPSBkM19sb2NhbGVfZW5VUy50aW1lRm9ybWF0O1xuICB2YXIgZDNfdGltZV9mb3JtYXRVdGMgPSBkM190aW1lX2Zvcm1hdC51dGM7XG4gIHZhciBkM190aW1lX2Zvcm1hdElzbyA9IGQzX3RpbWVfZm9ybWF0VXRjKFwiJVktJW0tJWRUJUg6JU06JVMuJUxaXCIpO1xuICBkM190aW1lX2Zvcm1hdC5pc28gPSBEYXRlLnByb3RvdHlwZS50b0lTT1N0cmluZyAmJiArbmV3IERhdGUoXCIyMDAwLTAxLTAxVDAwOjAwOjAwLjAwMFpcIikgPyBkM190aW1lX2Zvcm1hdElzb05hdGl2ZSA6IGQzX3RpbWVfZm9ybWF0SXNvO1xuICBmdW5jdGlvbiBkM190aW1lX2Zvcm1hdElzb05hdGl2ZShkYXRlKSB7XG4gICAgcmV0dXJuIGRhdGUudG9JU09TdHJpbmcoKTtcbiAgfVxuICBkM190aW1lX2Zvcm1hdElzb05hdGl2ZS5wYXJzZSA9IGZ1bmN0aW9uKHN0cmluZykge1xuICAgIHZhciBkYXRlID0gbmV3IERhdGUoc3RyaW5nKTtcbiAgICByZXR1cm4gaXNOYU4oZGF0ZSkgPyBudWxsIDogZGF0ZTtcbiAgfTtcbiAgZDNfdGltZV9mb3JtYXRJc29OYXRpdmUudG9TdHJpbmcgPSBkM190aW1lX2Zvcm1hdElzby50b1N0cmluZztcbiAgZDNfdGltZS5zZWNvbmQgPSBkM190aW1lX2ludGVydmFsKGZ1bmN0aW9uKGRhdGUpIHtcbiAgICByZXR1cm4gbmV3IGQzX2RhdGUoTWF0aC5mbG9vcihkYXRlIC8gMWUzKSAqIDFlMyk7XG4gIH0sIGZ1bmN0aW9uKGRhdGUsIG9mZnNldCkge1xuICAgIGRhdGUuc2V0VGltZShkYXRlLmdldFRpbWUoKSArIE1hdGguZmxvb3Iob2Zmc2V0KSAqIDFlMyk7XG4gIH0sIGZ1bmN0aW9uKGRhdGUpIHtcbiAgICByZXR1cm4gZGF0ZS5nZXRTZWNvbmRzKCk7XG4gIH0pO1xuICBkM190aW1lLnNlY29uZHMgPSBkM190aW1lLnNlY29uZC5yYW5nZTtcbiAgZDNfdGltZS5zZWNvbmRzLnV0YyA9IGQzX3RpbWUuc2Vjb25kLnV0Yy5yYW5nZTtcbiAgZDNfdGltZS5taW51dGUgPSBkM190aW1lX2ludGVydmFsKGZ1bmN0aW9uKGRhdGUpIHtcbiAgICByZXR1cm4gbmV3IGQzX2RhdGUoTWF0aC5mbG9vcihkYXRlIC8gNmU0KSAqIDZlNCk7XG4gIH0sIGZ1bmN0aW9uKGRhdGUsIG9mZnNldCkge1xuICAgIGRhdGUuc2V0VGltZShkYXRlLmdldFRpbWUoKSArIE1hdGguZmxvb3Iob2Zmc2V0KSAqIDZlNCk7XG4gIH0sIGZ1bmN0aW9uKGRhdGUpIHtcbiAgICByZXR1cm4gZGF0ZS5nZXRNaW51dGVzKCk7XG4gIH0pO1xuICBkM190aW1lLm1pbnV0ZXMgPSBkM190aW1lLm1pbnV0ZS5yYW5nZTtcbiAgZDNfdGltZS5taW51dGVzLnV0YyA9IGQzX3RpbWUubWludXRlLnV0Yy5yYW5nZTtcbiAgZDNfdGltZS5ob3VyID0gZDNfdGltZV9pbnRlcnZhbChmdW5jdGlvbihkYXRlKSB7XG4gICAgdmFyIHRpbWV6b25lID0gZGF0ZS5nZXRUaW1lem9uZU9mZnNldCgpIC8gNjA7XG4gICAgcmV0dXJuIG5ldyBkM19kYXRlKChNYXRoLmZsb29yKGRhdGUgLyAzNmU1IC0gdGltZXpvbmUpICsgdGltZXpvbmUpICogMzZlNSk7XG4gIH0sIGZ1bmN0aW9uKGRhdGUsIG9mZnNldCkge1xuICAgIGRhdGUuc2V0VGltZShkYXRlLmdldFRpbWUoKSArIE1hdGguZmxvb3Iob2Zmc2V0KSAqIDM2ZTUpO1xuICB9LCBmdW5jdGlvbihkYXRlKSB7XG4gICAgcmV0dXJuIGRhdGUuZ2V0SG91cnMoKTtcbiAgfSk7XG4gIGQzX3RpbWUuaG91cnMgPSBkM190aW1lLmhvdXIucmFuZ2U7XG4gIGQzX3RpbWUuaG91cnMudXRjID0gZDNfdGltZS5ob3VyLnV0Yy5yYW5nZTtcbiAgZDNfdGltZS5tb250aCA9IGQzX3RpbWVfaW50ZXJ2YWwoZnVuY3Rpb24oZGF0ZSkge1xuICAgIGRhdGUgPSBkM190aW1lLmRheShkYXRlKTtcbiAgICBkYXRlLnNldERhdGUoMSk7XG4gICAgcmV0dXJuIGRhdGU7XG4gIH0sIGZ1bmN0aW9uKGRhdGUsIG9mZnNldCkge1xuICAgIGRhdGUuc2V0TW9udGgoZGF0ZS5nZXRNb250aCgpICsgb2Zmc2V0KTtcbiAgfSwgZnVuY3Rpb24oZGF0ZSkge1xuICAgIHJldHVybiBkYXRlLmdldE1vbnRoKCk7XG4gIH0pO1xuICBkM190aW1lLm1vbnRocyA9IGQzX3RpbWUubW9udGgucmFuZ2U7XG4gIGQzX3RpbWUubW9udGhzLnV0YyA9IGQzX3RpbWUubW9udGgudXRjLnJhbmdlO1xuICBmdW5jdGlvbiBkM190aW1lX3NjYWxlKGxpbmVhciwgbWV0aG9kcywgZm9ybWF0KSB7XG4gICAgZnVuY3Rpb24gc2NhbGUoeCkge1xuICAgICAgcmV0dXJuIGxpbmVhcih4KTtcbiAgICB9XG4gICAgc2NhbGUuaW52ZXJ0ID0gZnVuY3Rpb24oeCkge1xuICAgICAgcmV0dXJuIGQzX3RpbWVfc2NhbGVEYXRlKGxpbmVhci5pbnZlcnQoeCkpO1xuICAgIH07XG4gICAgc2NhbGUuZG9tYWluID0gZnVuY3Rpb24oeCkge1xuICAgICAgaWYgKCFhcmd1bWVudHMubGVuZ3RoKSByZXR1cm4gbGluZWFyLmRvbWFpbigpLm1hcChkM190aW1lX3NjYWxlRGF0ZSk7XG4gICAgICBsaW5lYXIuZG9tYWluKHgpO1xuICAgICAgcmV0dXJuIHNjYWxlO1xuICAgIH07XG4gICAgZnVuY3Rpb24gdGlja01ldGhvZChleHRlbnQsIGNvdW50KSB7XG4gICAgICB2YXIgc3BhbiA9IGV4dGVudFsxXSAtIGV4dGVudFswXSwgdGFyZ2V0ID0gc3BhbiAvIGNvdW50LCBpID0gZDMuYmlzZWN0KGQzX3RpbWVfc2NhbGVTdGVwcywgdGFyZ2V0KTtcbiAgICAgIHJldHVybiBpID09IGQzX3RpbWVfc2NhbGVTdGVwcy5sZW5ndGggPyBbIG1ldGhvZHMueWVhciwgZDNfc2NhbGVfbGluZWFyVGlja1JhbmdlKGV4dGVudC5tYXAoZnVuY3Rpb24oZCkge1xuICAgICAgICByZXR1cm4gZCAvIDMxNTM2ZTY7XG4gICAgICB9KSwgY291bnQpWzJdIF0gOiAhaSA/IFsgZDNfdGltZV9zY2FsZU1pbGxpc2Vjb25kcywgZDNfc2NhbGVfbGluZWFyVGlja1JhbmdlKGV4dGVudCwgY291bnQpWzJdIF0gOiBtZXRob2RzW3RhcmdldCAvIGQzX3RpbWVfc2NhbGVTdGVwc1tpIC0gMV0gPCBkM190aW1lX3NjYWxlU3RlcHNbaV0gLyB0YXJnZXQgPyBpIC0gMSA6IGldO1xuICAgIH1cbiAgICBzY2FsZS5uaWNlID0gZnVuY3Rpb24oaW50ZXJ2YWwsIHNraXApIHtcbiAgICAgIHZhciBkb21haW4gPSBzY2FsZS5kb21haW4oKSwgZXh0ZW50ID0gZDNfc2NhbGVFeHRlbnQoZG9tYWluKSwgbWV0aG9kID0gaW50ZXJ2YWwgPT0gbnVsbCA/IHRpY2tNZXRob2QoZXh0ZW50LCAxMCkgOiB0eXBlb2YgaW50ZXJ2YWwgPT09IFwibnVtYmVyXCIgJiYgdGlja01ldGhvZChleHRlbnQsIGludGVydmFsKTtcbiAgICAgIGlmIChtZXRob2QpIGludGVydmFsID0gbWV0aG9kWzBdLCBza2lwID0gbWV0aG9kWzFdO1xuICAgICAgZnVuY3Rpb24gc2tpcHBlZChkYXRlKSB7XG4gICAgICAgIHJldHVybiAhaXNOYU4oZGF0ZSkgJiYgIWludGVydmFsLnJhbmdlKGRhdGUsIGQzX3RpbWVfc2NhbGVEYXRlKCtkYXRlICsgMSksIHNraXApLmxlbmd0aDtcbiAgICAgIH1cbiAgICAgIHJldHVybiBzY2FsZS5kb21haW4oZDNfc2NhbGVfbmljZShkb21haW4sIHNraXAgPiAxID8ge1xuICAgICAgICBmbG9vcjogZnVuY3Rpb24oZGF0ZSkge1xuICAgICAgICAgIHdoaWxlIChza2lwcGVkKGRhdGUgPSBpbnRlcnZhbC5mbG9vcihkYXRlKSkpIGRhdGUgPSBkM190aW1lX3NjYWxlRGF0ZShkYXRlIC0gMSk7XG4gICAgICAgICAgcmV0dXJuIGRhdGU7XG4gICAgICAgIH0sXG4gICAgICAgIGNlaWw6IGZ1bmN0aW9uKGRhdGUpIHtcbiAgICAgICAgICB3aGlsZSAoc2tpcHBlZChkYXRlID0gaW50ZXJ2YWwuY2VpbChkYXRlKSkpIGRhdGUgPSBkM190aW1lX3NjYWxlRGF0ZSgrZGF0ZSArIDEpO1xuICAgICAgICAgIHJldHVybiBkYXRlO1xuICAgICAgICB9XG4gICAgICB9IDogaW50ZXJ2YWwpKTtcbiAgICB9O1xuICAgIHNjYWxlLnRpY2tzID0gZnVuY3Rpb24oaW50ZXJ2YWwsIHNraXApIHtcbiAgICAgIHZhciBleHRlbnQgPSBkM19zY2FsZUV4dGVudChzY2FsZS5kb21haW4oKSksIG1ldGhvZCA9IGludGVydmFsID09IG51bGwgPyB0aWNrTWV0aG9kKGV4dGVudCwgMTApIDogdHlwZW9mIGludGVydmFsID09PSBcIm51bWJlclwiID8gdGlja01ldGhvZChleHRlbnQsIGludGVydmFsKSA6ICFpbnRlcnZhbC5yYW5nZSAmJiBbIHtcbiAgICAgICAgcmFuZ2U6IGludGVydmFsXG4gICAgICB9LCBza2lwIF07XG4gICAgICBpZiAobWV0aG9kKSBpbnRlcnZhbCA9IG1ldGhvZFswXSwgc2tpcCA9IG1ldGhvZFsxXTtcbiAgICAgIHJldHVybiBpbnRlcnZhbC5yYW5nZShleHRlbnRbMF0sIGQzX3RpbWVfc2NhbGVEYXRlKCtleHRlbnRbMV0gKyAxKSwgc2tpcCA8IDEgPyAxIDogc2tpcCk7XG4gICAgfTtcbiAgICBzY2FsZS50aWNrRm9ybWF0ID0gZnVuY3Rpb24oKSB7XG4gICAgICByZXR1cm4gZm9ybWF0O1xuICAgIH07XG4gICAgc2NhbGUuY29weSA9IGZ1bmN0aW9uKCkge1xuICAgICAgcmV0dXJuIGQzX3RpbWVfc2NhbGUobGluZWFyLmNvcHkoKSwgbWV0aG9kcywgZm9ybWF0KTtcbiAgICB9O1xuICAgIHJldHVybiBkM19zY2FsZV9saW5lYXJSZWJpbmQoc2NhbGUsIGxpbmVhcik7XG4gIH1cbiAgZnVuY3Rpb24gZDNfdGltZV9zY2FsZURhdGUodCkge1xuICAgIHJldHVybiBuZXcgRGF0ZSh0KTtcbiAgfVxuICB2YXIgZDNfdGltZV9zY2FsZVN0ZXBzID0gWyAxZTMsIDVlMywgMTVlMywgM2U0LCA2ZTQsIDNlNSwgOWU1LCAxOGU1LCAzNmU1LCAxMDhlNSwgMjE2ZTUsIDQzMmU1LCA4NjRlNSwgMTcyOGU1LCA2MDQ4ZTUsIDI1OTJlNiwgNzc3NmU2LCAzMTUzNmU2IF07XG4gIHZhciBkM190aW1lX3NjYWxlTG9jYWxNZXRob2RzID0gWyBbIGQzX3RpbWUuc2Vjb25kLCAxIF0sIFsgZDNfdGltZS5zZWNvbmQsIDUgXSwgWyBkM190aW1lLnNlY29uZCwgMTUgXSwgWyBkM190aW1lLnNlY29uZCwgMzAgXSwgWyBkM190aW1lLm1pbnV0ZSwgMSBdLCBbIGQzX3RpbWUubWludXRlLCA1IF0sIFsgZDNfdGltZS5taW51dGUsIDE1IF0sIFsgZDNfdGltZS5taW51dGUsIDMwIF0sIFsgZDNfdGltZS5ob3VyLCAxIF0sIFsgZDNfdGltZS5ob3VyLCAzIF0sIFsgZDNfdGltZS5ob3VyLCA2IF0sIFsgZDNfdGltZS5ob3VyLCAxMiBdLCBbIGQzX3RpbWUuZGF5LCAxIF0sIFsgZDNfdGltZS5kYXksIDIgXSwgWyBkM190aW1lLndlZWssIDEgXSwgWyBkM190aW1lLm1vbnRoLCAxIF0sIFsgZDNfdGltZS5tb250aCwgMyBdLCBbIGQzX3RpbWUueWVhciwgMSBdIF07XG4gIHZhciBkM190aW1lX3NjYWxlTG9jYWxGb3JtYXQgPSBkM190aW1lX2Zvcm1hdC5tdWx0aShbIFsgXCIuJUxcIiwgZnVuY3Rpb24oZCkge1xuICAgIHJldHVybiBkLmdldE1pbGxpc2Vjb25kcygpO1xuICB9IF0sIFsgXCI6JVNcIiwgZnVuY3Rpb24oZCkge1xuICAgIHJldHVybiBkLmdldFNlY29uZHMoKTtcbiAgfSBdLCBbIFwiJUk6JU1cIiwgZnVuY3Rpb24oZCkge1xuICAgIHJldHVybiBkLmdldE1pbnV0ZXMoKTtcbiAgfSBdLCBbIFwiJUkgJXBcIiwgZnVuY3Rpb24oZCkge1xuICAgIHJldHVybiBkLmdldEhvdXJzKCk7XG4gIH0gXSwgWyBcIiVhICVkXCIsIGZ1bmN0aW9uKGQpIHtcbiAgICByZXR1cm4gZC5nZXREYXkoKSAmJiBkLmdldERhdGUoKSAhPSAxO1xuICB9IF0sIFsgXCIlYiAlZFwiLCBmdW5jdGlvbihkKSB7XG4gICAgcmV0dXJuIGQuZ2V0RGF0ZSgpICE9IDE7XG4gIH0gXSwgWyBcIiVCXCIsIGZ1bmN0aW9uKGQpIHtcbiAgICByZXR1cm4gZC5nZXRNb250aCgpO1xuICB9IF0sIFsgXCIlWVwiLCBkM190cnVlIF0gXSk7XG4gIHZhciBkM190aW1lX3NjYWxlTWlsbGlzZWNvbmRzID0ge1xuICAgIHJhbmdlOiBmdW5jdGlvbihzdGFydCwgc3RvcCwgc3RlcCkge1xuICAgICAgcmV0dXJuIGQzLnJhbmdlKE1hdGguY2VpbChzdGFydCAvIHN0ZXApICogc3RlcCwgK3N0b3AsIHN0ZXApLm1hcChkM190aW1lX3NjYWxlRGF0ZSk7XG4gICAgfSxcbiAgICBmbG9vcjogZDNfaWRlbnRpdHksXG4gICAgY2VpbDogZDNfaWRlbnRpdHlcbiAgfTtcbiAgZDNfdGltZV9zY2FsZUxvY2FsTWV0aG9kcy55ZWFyID0gZDNfdGltZS55ZWFyO1xuICBkM190aW1lLnNjYWxlID0gZnVuY3Rpb24oKSB7XG4gICAgcmV0dXJuIGQzX3RpbWVfc2NhbGUoZDMuc2NhbGUubGluZWFyKCksIGQzX3RpbWVfc2NhbGVMb2NhbE1ldGhvZHMsIGQzX3RpbWVfc2NhbGVMb2NhbEZvcm1hdCk7XG4gIH07XG4gIHZhciBkM190aW1lX3NjYWxlVXRjTWV0aG9kcyA9IGQzX3RpbWVfc2NhbGVMb2NhbE1ldGhvZHMubWFwKGZ1bmN0aW9uKG0pIHtcbiAgICByZXR1cm4gWyBtWzBdLnV0YywgbVsxXSBdO1xuICB9KTtcbiAgdmFyIGQzX3RpbWVfc2NhbGVVdGNGb3JtYXQgPSBkM190aW1lX2Zvcm1hdFV0Yy5tdWx0aShbIFsgXCIuJUxcIiwgZnVuY3Rpb24oZCkge1xuICAgIHJldHVybiBkLmdldFVUQ01pbGxpc2Vjb25kcygpO1xuICB9IF0sIFsgXCI6JVNcIiwgZnVuY3Rpb24oZCkge1xuICAgIHJldHVybiBkLmdldFVUQ1NlY29uZHMoKTtcbiAgfSBdLCBbIFwiJUk6JU1cIiwgZnVuY3Rpb24oZCkge1xuICAgIHJldHVybiBkLmdldFVUQ01pbnV0ZXMoKTtcbiAgfSBdLCBbIFwiJUkgJXBcIiwgZnVuY3Rpb24oZCkge1xuICAgIHJldHVybiBkLmdldFVUQ0hvdXJzKCk7XG4gIH0gXSwgWyBcIiVhICVkXCIsIGZ1bmN0aW9uKGQpIHtcbiAgICByZXR1cm4gZC5nZXRVVENEYXkoKSAmJiBkLmdldFVUQ0RhdGUoKSAhPSAxO1xuICB9IF0sIFsgXCIlYiAlZFwiLCBmdW5jdGlvbihkKSB7XG4gICAgcmV0dXJuIGQuZ2V0VVRDRGF0ZSgpICE9IDE7XG4gIH0gXSwgWyBcIiVCXCIsIGZ1bmN0aW9uKGQpIHtcbiAgICByZXR1cm4gZC5nZXRVVENNb250aCgpO1xuICB9IF0sIFsgXCIlWVwiLCBkM190cnVlIF0gXSk7XG4gIGQzX3RpbWVfc2NhbGVVdGNNZXRob2RzLnllYXIgPSBkM190aW1lLnllYXIudXRjO1xuICBkM190aW1lLnNjYWxlLnV0YyA9IGZ1bmN0aW9uKCkge1xuICAgIHJldHVybiBkM190aW1lX3NjYWxlKGQzLnNjYWxlLmxpbmVhcigpLCBkM190aW1lX3NjYWxlVXRjTWV0aG9kcywgZDNfdGltZV9zY2FsZVV0Y0Zvcm1hdCk7XG4gIH07XG4gIGQzLnRleHQgPSBkM194aHJUeXBlKGZ1bmN0aW9uKHJlcXVlc3QpIHtcbiAgICByZXR1cm4gcmVxdWVzdC5yZXNwb25zZVRleHQ7XG4gIH0pO1xuICBkMy5qc29uID0gZnVuY3Rpb24odXJsLCBjYWxsYmFjaykge1xuICAgIHJldHVybiBkM194aHIodXJsLCBcImFwcGxpY2F0aW9uL2pzb25cIiwgZDNfanNvbiwgY2FsbGJhY2spO1xuICB9O1xuICBmdW5jdGlvbiBkM19qc29uKHJlcXVlc3QpIHtcbiAgICByZXR1cm4gSlNPTi5wYXJzZShyZXF1ZXN0LnJlc3BvbnNlVGV4dCk7XG4gIH1cbiAgZDMuaHRtbCA9IGZ1bmN0aW9uKHVybCwgY2FsbGJhY2spIHtcbiAgICByZXR1cm4gZDNfeGhyKHVybCwgXCJ0ZXh0L2h0bWxcIiwgZDNfaHRtbCwgY2FsbGJhY2spO1xuICB9O1xuICBmdW5jdGlvbiBkM19odG1sKHJlcXVlc3QpIHtcbiAgICB2YXIgcmFuZ2UgPSBkM19kb2N1bWVudC5jcmVhdGVSYW5nZSgpO1xuICAgIHJhbmdlLnNlbGVjdE5vZGUoZDNfZG9jdW1lbnQuYm9keSk7XG4gICAgcmV0dXJuIHJhbmdlLmNyZWF0ZUNvbnRleHR1YWxGcmFnbWVudChyZXF1ZXN0LnJlc3BvbnNlVGV4dCk7XG4gIH1cbiAgZDMueG1sID0gZDNfeGhyVHlwZShmdW5jdGlvbihyZXF1ZXN0KSB7XG4gICAgcmV0dXJuIHJlcXVlc3QucmVzcG9uc2VYTUw7XG4gIH0pO1xuICBpZiAodHlwZW9mIGRlZmluZSA9PT0gXCJmdW5jdGlvblwiICYmIGRlZmluZS5hbWQpIHRoaXMuZDMgPSBkMywgZGVmaW5lKGQzKTsgZWxzZSBpZiAodHlwZW9mIG1vZHVsZSA9PT0gXCJvYmplY3RcIiAmJiBtb2R1bGUuZXhwb3J0cykgbW9kdWxlLmV4cG9ydHMgPSBkMzsgZWxzZSB0aGlzLmQzID0gZDM7XG59KCk7IiwiaW1wb3J0IFJlYWN0IGZyb20gJ3JlYWN0JztcbmltcG9ydCBjbGFzc05hbWVzIGZyb20gJ2NsYXNzbmFtZXMnO1xuXG5leHBvcnQgZGVmYXVsdCBjbGFzcyBNZW51IGV4dGVuZHMgUmVhY3QuQ29tcG9uZW50IHtcblx0Y29uc3RydWN0b3IocHJvcHMpIHtcblx0XHRzdXBlcihwcm9wcyk7XG5cblx0XHRbJ29uU2VsZWN0TW9kZSddLm1hcChrPT4gdGhpc1trXSA9IHRoaXNba10uYmluZCh0aGlzKSk7XG5cblx0XHR0aGlzLnN0YXRlID0ge1xuXHRcdFx0J2NhcmVlcic6ICdtZW51TGVmdCBzZWxlY3RlZCcsXG5cdFx0XHQnY2FsZW5kYXInOiAnJyxcblx0XHRcdCdhZ2UnOiAnbWVudVJpZ2h0ICdcblx0XHR9XG5cdH1cblxuXHRvblNlbGVjdE1vZGUoZSkge1xuXHRcdGUucHJldmVudERlZmF1bHQoKTtcblxuXHRcdGxldCBuZXdTdGF0ZSA9IHtcblx0XHRcdCdjYXJlZXInOiAnbWVudUxlZnQgJyxcblx0XHRcdCdjYWxlbmRhcic6ICcgJyxcblx0XHRcdCdhZ2UnOiAnbWVudVJpZ2h0ICdcblx0XHR9O1xuXG5cdFx0bmV3U3RhdGVbZS50YXJnZXQudmFsdWVdICs9ICdzZWxlY3RlZCc7XG5cblx0XHQvLyB0aGlzLnNldFN0YXRlKG5ld1N0YXRlLCAoKSA9PiB7XG5cdFx0XHR0aGlzLnByb3BzLmNoYW5nZVZpZXdNb2RlKGUudGFyZ2V0LmF0dHJpYnV0ZXMudmFsdWUudmFsdWUpO1x0XG5cdFx0Ly8gfSk7XG5cdH1cblxuXG5cdHJlbmRlcigpIHtcblx0XHRjb25zdCBsYWJlbHMgPSB7XG5cdFx0XHRjYXJlZXI6ICdORkwgU2Vhc29ucycsXG5cdFx0XHRjYWxlbmRhcjogJ0NhbGVuZGFyIFllYXInLFxuXHRcdFx0YWdlOiBcIlBsYXllcidzIEFnZVwiXG5cdFx0fTtcblx0XHRjb25zdCBtZW51T3B0aW9ucyA9IE9iamVjdC5lbnRyaWVzKGxhYmVscykubWFwKChba2V5LGxhYmVsXSkgPT4ge1xuXHRcdFx0Y29uc3QgY2xhc3NlcyA9IGNsYXNzTmFtZXMoe1xuXHRcdFx0XHRtZW51TGVmdDoga2V5ID09PSAnY2FyZWVyJyxcblx0XHRcdFx0bWVudVJpZ2h0OiBrZXkgPT09ICdhZ2UnLFxuXHRcdFx0XHRzZWxlY3RlZDoga2V5ID09PSB0aGlzLnByb3BzLnNlbGVjdGVkXG5cdFx0XHR9KTtcblxuXHRcdFx0cmV0dXJuIChcblx0XHRcdFx0PGRpdiBjbGFzc05hbWU9e2NsYXNzZXN9IG9uQ2xpY2s9e3RoaXMub25TZWxlY3RNb2RlfSB2YWx1ZT17a2V5fT4ge2xhYmVsfSA8L2Rpdj5cblx0XHRcdCk7XG5cdFx0fSk7XG5cblx0XHRyZXR1cm4gKFxuXHRcdFx0PGRpdiBpZD1cIm1lbnVcIj5cblx0XHRcdFx0eyBtZW51T3B0aW9ucyB9XG5cdFx0XHQ8L2Rpdj5cblx0XHQpO1xuXHR9XG59IiwiaW1wb3J0IFJlYWN0IGZyb20gJ3JlYWN0JztcblxuZXhwb3J0IGRlZmF1bHQgY2xhc3MgUGxheWVyIGV4dGVuZHMgUmVhY3QuQ29tcG9uZW50IHtcblxuXHRjb25zdHJ1Y3Rvcihwcm9wcykge1xuXG5cdFx0c3VwZXIocHJvcHMpO1xuXG5cdFx0WydzZWxlY3RQbGF5ZXInLCAnZ2V0UGxheWVySW5pdGlhbHMnXS5tYXAoaz0+IHRoaXNba10gPSB0aGlzW2tdLmJpbmQodGhpcykpO1xuXG5cdFx0dGhpcy5zdGF0ZSA9e307XG5cdH1cblxuXHRjb21wb25lbnREaWRNb3VudCgpIHtcblx0XHR0aGlzLnNldFN0YXRlKHtcblx0XHRcdHNlbGVjdGVkOiB0aGlzLnByb3BzLmlzU2VsZWN0ZWRcblx0XHR9KTtcblx0fVxuXG5cdHNlbGVjdFBsYXllcihlKSB7XG5cdFx0dGhpcy5wcm9wcy5vblBsYXllclNlbGVjdCh0aGlzLnByb3BzLnBsYXllcik7XHRcblx0fVxuXG5cdGdldFBsYXllckluaXRpYWxzKG5hbWUpIHtcblx0XHRjb25zdCBuYW1lcyA9IG5hbWUuc3BsaXQoJyAnKTtcblx0XHRyZXR1cm4gbmFtZXNbMF0uc3Vic3RyKDAsMSkgKyBuYW1lc1sxXS5zdWJzdHIoMCwxKTtcblx0fVxuXG5cdHJlbmRlcigpIHtcblx0XHQvLyBpZiAodGhpcy5wcm9wcy5wbGF5ZXIubmlja25hbWUgPT09ICdrb2JlJylcblx0XHRjb25zdCBpbWcgPSAnaW1nLycrdGhpcy5wcm9wcy5wbGF5ZXIubmlja25hbWUrJ2plcnNleS5wbmcnO1xuXHRcdC8vIGNvbnN0IGltZyA9ICdpbWcvYnJhZHlqZXJzZXkucG5nJztcblx0XHQvLyBlbHNlIFxuXHRcdC8vIFx0dmFyIGltZyA9IHJlcXVpcmUoJy4vaW1nLycrdGhpcy5wcm9wcy5wbGF5ZXIubmlja25hbWUrJ2plcnNleS5wbmcnKTtcblx0XHQvLyBcdHZhciBpbWcgPSByZXF1aXJlKCcuL2ltZy9rb2JlamVyc2V5LnBuZycpO1xuXHRcdFxuXHRcdHJldHVybiAoXG5cblx0XHRcdDxkaXYgY2xhc3NOYW1lPVwicGxheWVyTmFtZXNcIiBpZD17dGhpcy5wcm9wcy5wbGF5ZXIubmlja25hbWV9IG9uQ2xpY2s9e3RoaXMuc2VsZWN0UGxheWVyfSA+XG5cdFx0XHRcdDxpbWcgc3JjPXtpbWd9IGNsYXNzTmFtZT17dGhpcy5wcm9wcy5pc1NlbGVjdGVkfSAvPlxuXHRcdFx0PC9kaXY+XG5cdFx0KVxuXHR9XG59IiwiaW1wb3J0IFJlYWN0IGZyb20gJ3JlYWN0JztcblxuZXhwb3J0IGRlZmF1bHQgY2xhc3MgUGxheWVyUHJvZmlsZSBleHRlbmRzIFJlYWN0LkNvbXBvbmVudCB7XG5cblx0cmVuZGVyKCkge1xuXHRcdGNvbnN0IHBvc2l0aW9uID0gTWF0aC5mbG9vcihNYXRoLnJhbmRvbSgpKiB0aGlzLnByb3BzLnBpY3MubGVuZ3RoKTtcblx0XHRsZXQgaW1hZ2UgPSB0aGlzLnByb3BzLmltYWdlc1t0aGlzLnByb3BzLm5pY2tuYW1lXVtwb3NpdGlvbl07XG5cdFx0Y29uc29sZS5sb2codGhpcy5wcm9wcy5pbWFnZXMpO1xuXHRcdGNvbnNvbGUubG9nKGltYWdlKTtcblx0XHRyZXR1cm4gKFxuXHRcdFx0PGRpdiBjbGFzc05hbWU9XCJwcm9maWxlUGljXCI+XG5cdFx0XHRcdDxpbWcgIHNyYz17aW1hZ2V9IC8+XG5cdFx0XHQ8L2Rpdj5cblx0XHQpO1xuXHR9XG59XG4iLCJpbXBvcnQgUmVhY3QgZnJvbSAncmVhY3QnO1xuXG5leHBvcnQgZGVmYXVsdCBjbGFzcyBQbGF5ZXJBd2FyZHMgZXh0ZW5kcyBSZWFjdC5Db21wb25lbnQge1xuXHRyZW5kZXIoKSB7XG5cdFx0dmFyIHRyb3BoeSA9ICdpbWcvbmZsdHJvcGh5LnBuZyc7XG5cdFx0cmV0dXJuIChcblxuXHRcdFx0PGRpdiBjbGFzc05hbWU9XCJwbGF5ZXJBd2FyZHNcIj5cblx0XHRcdFx0PGRpdiBjbGFzc05hbWU9XCJ0aXRsZXNcIj5cblx0XHRcdFx0XHQ8aW1nIHNyYz17dHJvcGh5fSAvPlxuXHRcdFx0XHRcdDxoMj57dGhpcy5wcm9wcy5jaGFtcGlvbnNoaXBzfTwvaDI+PHNwYW4+U3VwZXIgQm93bCBUaXRsZXM8L3NwYW4+XG5cdFx0XHRcdDwvZGl2PlxuXHRcdFx0XHQ8ZGl2IGNsYXNzTmFtZT1cInNlbGVjdGlvbnNcIj5cblx0XHRcdFx0XHQ8ZGl2IGNsYXNzTmFtZT1cIm12cFwiPjxoMj57dGhpcy5wcm9wcy50b3RhbHMuTVZQfTwvaDI+PHNwYW4+TVZQPC9zcGFuPjwvZGl2PlxuXHRcdFx0XHRcdDxkaXYgY2xhc3NOYW1lPVwib3B5XCI+PGgyPnt0aGlzLnByb3BzLnRvdGFscy5PUH08L2gyPjxzcGFuPk9mZmVuc2l2ZSBQbGF5ZXIgb2YgdGhlIFllYXI8L3NwYW4+PC9kaXY+XG5cdFx0XHRcdFx0PGRpdiBjbGFzc05hbWU9XCJhbGxwcm9cIj48aDI+e3RoaXMucHJvcHMudG90YWxzLkFQfTwvaDI+PHNwYW4+QWxsIFBybzwvc3Bhbj48L2Rpdj5cblx0XHRcdFx0XHQ8ZGl2IGNsYXNzTmFtZT1cInByb2Jvd2xcIj48aDI+e3RoaXMucHJvcHMudG90YWxzLlBCfTwvaDI+PHNwYW4+UHJvIEJvd2w8L3NwYW4+PC9kaXY+XG5cdFx0XHRcdDwvZGl2PlxuXHRcdFx0PC9kaXY+XG5cdFx0KVxuXHR9XG59IiwiaW1wb3J0IFJlYWN0IGZyb20gJ3JlYWN0JztcblxuZXhwb3J0IGRlZmF1bHQgY2xhc3MgUGxheWVyVHJvcGhpZXMgZXh0ZW5kcyBSZWFjdC5Db21wb25lbnQge1xuXHRjb25zdHJ1Y3Rvcihwcm9wcykge1xuXHRcdHN1cGVyKHByb3BzKTtcblxuXHRcdFsnZ2V0UGxheWVyQ2FsZW5kYXJZZWFycycsJ2dldFBsYXllckFnZVllYXJzJywnZ2V0UGxheWVyQ2FyZWVyWWVhcnMnXS5tYXAoayA9PiB0aGlzW2tdID0gdGhpc1trXS5iaW5kKHRoaXMpKVxuXG5cdFx0dGhpcy5zdGF0ZSA9IHtcblx0XHRcdCdwbGF5ZXJDYWxlbmRhclllYXJzJzogW10sXG5cdFx0XHRcInBsYXllckFnZVllYXJzXCI6IFtdLFxuXHRcdFx0XCJwbGF5ZXJDYXJlZXJZZWFyc1wiOiBbXVxuXHRcdH1cblx0fVxuXG5cdGNvbXBvbmVudFdpbGxNb3VudCgpIHtcblx0XHR0aGlzLnNldFN0YXRlKHtcblx0XHRcdCdwbGF5ZXJDYWxlbmRhclllYXJzJzogdGhpcy5nZXRQbGF5ZXJDYWxlbmRhclllYXJzKE9iamVjdC5rZXlzKHRoaXMucHJvcHMucGxheWVyRGF0YS5hd2FyZHMpKSxcblx0XHRcdFwicGxheWVyQWdlWWVhcnNcIjogdGhpcy5nZXRQbGF5ZXJBZ2VZZWFycyh0aGlzLnByb3BzLnJvb2tpZVllYXIsIHRoaXMucHJvcHMuZGVidXRBZ2UsIE9iamVjdC5rZXlzKHRoaXMucHJvcHMucGxheWVyRGF0YS5hd2FyZHMpKSxcblx0XHRcdFwicGxheWVyQ2FyZWVyWWVhcnNcIjogdGhpcy5nZXRQbGF5ZXJDYXJlZXJZZWFycyhPYmplY3Qua2V5cyh0aGlzLnByb3BzLnBsYXllckRhdGEuYXdhcmRzKSlcblx0XHR9KTtcblx0fVxuXG5cdGdldFBsYXllckNhbGVuZGFyWWVhcnMoeWVhcnMpIHtcblx0XHRsZXQgcmVzdWx0ID0gW10sXG5cdFx0XHRsYXN0WWVhciA9IHllYXJzW3llYXJzLmxlbmd0aC0xXTtcblxuXHRcdGZvciAobGV0IHllYXIgPSB5ZWFyc1swXTsgeWVhcjw9bGFzdFllYXI7IHllYXIrKykge1xuXHRcdFx0cmVzdWx0LnB1c2gocGFyc2VJbnQoeWVhcikpO1xuXHRcdH1cblxuXHRcdHJldHVybiByZXN1bHQ7XG5cdH1cblxuXHRnZXRQbGF5ZXJBZ2VZZWFycyhyb29raWVZZWFyLCBkZWJ1dEFnZSwgeWVhcnMpIHtcblx0XHRsZXQgcmVzdWx0ID0gW10sXG5cdFx0XHRhZ2UgPSAwLFxuXHRcdFx0eWVhciA9IDAsXG5cdFx0XHRsYXN0WWVhciA9IHllYXJzW3llYXJzLmxlbmd0aC0xXTtcblxuXHRcdGZvciAodmFyIHkgPSByb29raWVZZWFyOyB5PD1sYXN0WWVhcjsgeSsrKSB7XG5cdFx0XHRhZ2UgPSBkZWJ1dEFnZSArICh5IC0gcm9va2llWWVhcik7XG5cdFx0XHRyZXN1bHQucHVzaChhZ2UpO1xuXHRcdH1cblx0XHRyZXR1cm4gcmVzdWx0O1xuXHR9XG5cblx0Z2V0UGxheWVyQ2FyZWVyWWVhcnMoeWVhcnMpIHtcblx0XHR2YXIgcmVzdWx0ID0gW107XG5cdFx0Zm9yICh2YXIgaSA9IDE7IGk8PXllYXJzLmxlbmd0aDsgaSsrKSB7XG5cdFx0XHRyZXN1bHQucHVzaChpKTtcblx0XHR9XG5cblx0XHRyZXR1cm4gcmVzdWx0O1xuXHR9XG5cblxuXHRyZW5kZXIoKSB7XG5cdFx0dmFyIHNlbGYgPSB0aGlzLFxuXHRcdFx0aW1nID0gJ2ltZy9uZmx0cm9waHkucG5nJztcblxuXHRcdHZhciB4ID0gZDMuc2NhbGUub3JkaW5hbCgpXG5cdFx0XHRcdC5kb21haW4odGhpcy5wcm9wcy55ZWFyc1BsYXllZClcblx0XHRcdFx0LnJhbmdlQmFuZHMoWzEwLDQ1NV0sLjEpO1xuXG5cblx0XHR2YXIgdHJvcGhpZXMgPSB0aGlzLnByb3BzLmNoYW1waW9uc2hpcHMubWFwKGZ1bmN0aW9uKGNoYW1waW9uc2hpcCxpKSB7XG5cdFx0XHRcdHZhciB3aWR0aCA9IHgucmFuZ2VCYW5kKCksXG5cdFx0XHRcdFx0eFBvcywgc3R5bGU7XG5cblx0XHRcdGlmIChzZWxmLnByb3BzLm1vZGUgPT09ICdjYXJlZXInKSB7XG5cdFx0XHRcdHZhciB5ZWFycyA9IE9iamVjdC5rZXlzKHNlbGYucHJvcHMucGxheWVyRGF0YS5hd2FyZHMpO1xuXHRcdFx0XHR4UG9zID0geCh5ZWFycy5pbmRleE9mKGNoYW1waW9uc2hpcC50b1N0cmluZygpKSsxKTtcblx0XHRcdH1cblx0XHRcdGVsc2UgaWYgKHNlbGYucHJvcHMubW9kZSA9PT0gJ2FnZScpIHtcblx0XHRcdFx0dmFyIHBsYXllckFnZSA9IHNlbGYucHJvcHMuZGVidXRBZ2UgKyAoc2VsZi5zdGF0ZS5wbGF5ZXJDYWxlbmRhclllYXJzLmluZGV4T2YoY2hhbXBpb25zaGlwKSk7XG5cdFx0XHRcdHhQb3MgPSB4KHBsYXllckFnZSk7XG5cdFx0XHR9IGVsc2Uge1xuXHRcdFx0XHR4UG9zID0geChjaGFtcGlvbnNoaXApO1xuXHRcdFx0fVxuXG5cdFx0XHR2YXIgaW1nV2lkdGggPSB3aWR0aD4gMTcgPyAxNSA6IHdpZHRoO1xuXG5cdFx0XHRpZiAoaT4wKSB7XG5cdFx0XHRcdHhQb3MgLT0gKGkqaW1nV2lkdGgpO1xuXHRcdFx0fSBcblxuXHRcdFx0cmV0dXJuIChcblx0XHRcdFx0PGRpdiBjbGFzc05hbWU9XCJuZmxUcm9waHlcIiBzdHlsZT17e2xlZnQ6IHhQb3MrJ3B4J319IHdpZHRoPXt3aWR0aH0+XG5cdFx0XHRcdFx0PGltZyBzcmM9e2ltZ30gd2lkdGg9e2ltZ1dpZHRofSAvPlxuXHRcdFx0XHQ8L2Rpdj4gIFxuXHRcdFx0KTtcblx0XHR9KTtcblxuXHRcdHJldHVybiAoXG5cdFx0XHQ8ZGl2IGNsYXNzTmFtZT1cInBsYXllclRyb3BoaWVzXCI+XG5cdFx0XHRcdHt0cm9waGllc31cblx0XHRcdDwvZGl2PlxuXHRcdClcblx0fVxuXG59IiwiaW1wb3J0IFJlYWN0IGZyb20gJ3JlYWN0JztcblxuXG5leHBvcnQgZGVmYXVsdCBjbGFzcyBQbGF5ZXJUaW1lbGluZSBleHRlbmRzIFJlYWN0LkNvbXBvbmVudHtcblxuXHRyZW5kZXIoKSB7XG5cdFx0dmFyIHNlbGYgPSB0aGlzO1xuXHRcdGxldCB5ZWFyc1BsYXllZCA9IHRoaXMucHJvcHMueWVhcnNQbGF5ZWQsIFxuXHRcdFx0cGxheWVyRGF0YTtcblxuXHRcdC8vICBUaGlzIHNob3VsZCBwcm9iYWJseSBiZSBpbiBhbm90aGVyIGZ1bmN0aW9uL2NvbXBvbmVudFxuXHRcdGlmICh0aGlzLnByb3BzLm1vZGUgPT09ICdjYXJlZXInKSB7XG5cdFx0XHQvLyB5ZWFyc1BsYXllZCA9IHRoaXMucHJvcHMudGltZXNwYW4ueWVhcjtcblx0XHRcdHBsYXllckRhdGEgPSB0aGlzLnByb3BzLmRhdGFCeUNhcmVlclllYXI7XG5cdFx0fSBlbHNlIGlmICh0aGlzLnByb3BzLm1vZGUgPT09ICdhZ2UnKSB7XG5cdFx0XHQvLyB5ZWFyc1BsYXllZCA9IHRoaXMucHJvcHMudGltZXNwYW4uYWdlcztcblx0XHRcdHBsYXllckRhdGEgPSB0aGlzLnByb3BzLmRhdGFCeUFnZTtcblx0XHR9XG5cblx0XHR2YXIgeCA9IGQzLnNjYWxlLm9yZGluYWwoKVxuXHRcdFx0XHQuZG9tYWluKHllYXJzUGxheWVkKVxuXHRcdFx0XHQucmFuZ2VCYW5kcyhbMTAsNDU1XSwuMSk7XG5cblx0XHR2YXIgbG9nb3MgPSB0aGlzLnByb3BzLnRlYW1zLm1hcChmdW5jdGlvbih0ZWFtLGkpIHtcblx0XHRcdHZhciBpbWcgPSAnaW1nLycrdGVhbS50ZWFtKycucG5nJyxcblx0XHRcdFx0d2lkdGggPSB4LnJhbmdlQmFuZCgpLFxuXHRcdFx0XHR4UG9zLCBzdHlsZTtcblxuXHRcdFx0aWYgKHNlbGYucHJvcHMubW9kZSA9PT0gJ2NhcmVlcicpXG5cdFx0XHRcdHhQb3MgPSB4KHRlYW0uY2FyZWVyU3RhcnQpO1xuXHRcdFx0ZWxzZSBpZiAoc2VsZi5wcm9wcy5tb2RlID09PSAnYWdlJykge1xuXHRcdFx0XHR2YXIgcGxheWVyQWdlID0gc2VsZi5wcm9wcy5kZWJ1dEFnZSArICh0ZWFtLnN0YXJ0IC0gc2VsZi5wcm9wcy5yb29raWVZZWFyKTtcblx0XHRcdFx0eFBvcyA9IHgocGxheWVyQWdlKTtcblx0XHRcdH0gZWxzZVxuXHRcdFx0XHR4UG9zID0geCh0ZWFtLnN0YXJ0KTtcblxuXHRcdFx0dmFyIGltZ1dpZHRoID0gd2lkdGg+MTcgPyAxNSA6IHdpZHRoO1xuXHRcdFx0aWYgKGk+MCkge1xuXHRcdFx0XHR4UG9zIC09IChpKmltZ1dpZHRoKTtcblx0XHRcdH0gXG5cdFx0XHRcblxuXHRcdFx0cmV0dXJuIChcblx0XHRcdFx0PGRpdiBjbGFzc05hbWU9XCJ0ZWFtTG9nb1wiIHN0eWxlPXt7bGVmdDogeFBvcysncHgnfX0gd2lkdGg9e3dpZHRofT5cblx0XHRcdFx0XHQ8aW1nIHNyYz17aW1nfSB3aWR0aD17aW1nV2lkdGh9IC8+XG5cdFx0XHRcdDwvZGl2PiAgXG5cdFx0XHQpO1xuXHRcdH0pO1xuXG5cdFx0cmV0dXJuIChcblx0XHRcdDxkaXYgY2xhc3NOYW1lPVwicGxheWVyVGltZWxpbmVcIj5cblx0XHRcdFx0e2xvZ29zfVxuXHRcdFx0PC9kaXY+XG5cdFx0KVxuXHR9XG59XG4iLCJpbXBvcnQgUmVhY3QgZnJvbSAncmVhY3QnO1xuaW1wb3J0IFJlYWN0RmF1eERPTSBmcm9tICdyZWFjdC1mYXV4LWRvbSc7XG52YXIgZDMgPSByZXF1aXJlKCdkMycpO1xuXG5pbXBvcnQgUGxheWVyUHJvZmlsZSBmcm9tICcuL1BsYXllclByb2ZpbGUnO1xuaW1wb3J0IFBsYXllckF3YXJkcyBmcm9tICcuL1BsYXllckF3YXJkcyc7XG5pbXBvcnQgUGxheWVyVHJvcGhpZXMgZnJvbSAnLi9QbGF5ZXJUcm9waGllcyc7XG5pbXBvcnQgUGxheWVyVGltZWxpbmUgZnJvbSAnLi9QbGF5ZXJUaW1lbGluZSc7XG5cbmV4cG9ydCBkZWZhdWx0IGNsYXNzIFBsYXllclZpc3VhbGl6YXRpb24gZXh0ZW5kcyBSZWFjdC5Db21wb25lbnQge1xuXHRjb25zdHJ1Y3Rvcihwcm9wcykge1xuXHRcdHN1cGVyKHByb3BzKTtcblxuXHRcdFsnZ2V0QXdhcmRGaWxsJywnZ2V0VGVhbXNQbGF5ZWQnLCdjcmVhdGVQbGF5ZXJWaXN1YWxpemF0aW9uJywnZ2V0UGxheWVySW5pdGlhbHMnXS5tYXAoaz0+IHRoaXNba10gPSB0aGlzW2tdLmJpbmQodGhpcykpO1xuXG5cdFx0dGhpcy5zdGF0ZSA9IHtcblx0XHRcdFwicGxheWVyQXdhcmRzXCI6IFtdLFxuXHRcdFx0XCJ5ZWFyc1BsYXllZFwiOiBbXSxcblx0XHRcdFwiZGF0YUJ5Q2FyZWVyWWVhclwiOiBbXSxcblx0XHRcdFwiZGF0YUJ5Q2FsZW5kYXJZZWFyXCI6IFtdLFxuXHRcdFx0XCJkYXRhQnlBZ2VcIjogW10sXG5cdFx0XHRcInRlYW1zUGxheWVkXCI6IFtdLFxuXHRcdFx0XCJyb29raWVZZWFyXCI6IDAsXG5cdFx0XHRcImRlYnV0QWdlXCI6IDBcblx0XHR9XG5cdH1cblxuXHRjb21wb25lbnREaWRNb3VudCgpIHtcblx0XHR0aGlzLnNldFN0YXRlKHtcblx0XHRcdFwicGxheWVyQXdhcmRzXCI6IHRoaXMucHJvcHMucGxheWVyQXdhcmRzLFxuXHRcdFx0XCJ5ZWFyc1BsYXllZFwiOiB0aGlzLnByb3BzLnllYXJzUGxheWVkLFxuXHRcdFx0Ly8gXCJkYXRhQnlDYXJlZXJZZWFyXCI6IHRoaXMuZ2V0UGxheWVyRGF0YUJ5Q2FyZWVyWWVhcih0aGlzLnByb3BzLnBsYXllckRhdGEuYXdhcmRzLCBPYmplY3Qua2V5cyh0aGlzLnByb3BzLnBsYXllckRhdGEuYXdhcmRzKSksXG5cdFx0XHQvLyBcImRhdGFCeUNhbGVuZGFyWWVhclwiOiB0aGlzLmdldFBsYXllckRhdGFCeUNhbGVuZGFyWWVhcih0aGlzLnByb3BzLnBsYXllckRhdGEuYXdhcmRzLCBPYmplY3Qua2V5cyh0aGlzLnByb3BzLnBsYXllckRhdGEuYXdhcmRzKSksXG5cdFx0XHQvLyBcImRhdGFCeUFnZVwiOiB0aGlzLmdldFBsYXllckRhdGFCeUFnZSh0aGlzLnByb3BzLnBsYXllckRhdGEuYXdhcmRzLCBPYmplY3Qua2V5cyh0aGlzLnByb3BzLnBsYXllckRhdGEuYXdhcmRzKSwgdGhpcy5wcm9wcy5wbGF5ZXJEYXRhLmFnZS5maXJzdCksXG5cdFx0XHRcInBsYXllckRhdGFcIjogdGhpcy5wcm9wcy5wbGF5ZXJEYXRhLFxuXHRcdFx0XCJ0ZWFtc1BsYXllZFwiOiB0aGlzLmdldFRlYW1zUGxheWVkKHRoaXMucHJvcHMucGxheWVyRGF0YS50ZWFtcyksXG5cdFx0XHRcInJvb2tpZVllYXJcIjogT2JqZWN0LmtleXModGhpcy5wcm9wcy5wbGF5ZXJBd2FyZHMpWzBdLFxuXHRcdFx0XCJkZWJ1dEFnZVwiOiB0aGlzLnByb3BzLnBsYXllckRhdGEuYWdlLmZpcnN0XG5cdFx0fSk7XG5cdH1cblx0XG5cblx0Z2V0QXdhcmRGaWxsKGF3YXJkKSB7XG5cdFx0bGV0IGF3YXJkTmFtZSA9IGF3YXJkLnN1YnN0cigwLDIpLFxuXHRcdFx0YXdhcmRUZWFtID0gYXdhcmQuc3Vic3RyKDIsMSksXG5cdFx0XHRmaWxsQ2xhc3MgPSAnYXdhcmQgJztcblxuXHRcdGlmIChhd2FyZE5hbWUgPT09ICdQQicpIHtcblx0XHRcdGZpbGxDbGFzcyArPSAncHJvYm93bCc7XG5cblx0XHR9IGVsc2UgaWYgKGF3YXJkTmFtZSA9PT0gJ09QJykge1xuXHRcdFx0ZmlsbENsYXNzICs9ICdvcHknO1xuXG5cdFx0fSBlbHNlIGlmIChhd2FyZE5hbWUgPT09ICdBUCcpIHtcblx0XHRcdGZpbGxDbGFzcyArPSAnYWxscHJvJztcblxuXHRcdH0gZWxzZSBpZiAoYXdhcmROYW1lID09PSAnU0InKSB7XG5cdFx0XHRmaWxsQ2xhc3MgKz0gJ3N1cGVyYm93bCc7XG5cblx0XHR9IGVsc2Uge1xuXHRcdFx0ZmlsbENsYXNzICs9ICdtdnAnO1xuXHRcdH1cblxuXHRcdGlmIChhd2FyZFRlYW0gPT09ICcyJykge1xuXHRcdFx0ZmlsbENsYXNzICs9ICcgc2Vjb25kdGVhbSc7XG5cblx0XHR9IGVsc2UgaWYgKGF3YXJkVGVhbSA9PT0gJzMnKSB7XG5cdFx0XHRmaWxsQ2xhc3MgKz0gJyB0aGlyZHRlYW0nO1xuXG5cdFx0fSBlbHNlIHtcblx0XHRcdGZpbGxDbGFzcyArPSAnIGZpcnN0dGVhbSc7XG5cdFx0fVxuXG5cdFx0cmV0dXJuIGZpbGxDbGFzcztcblx0fVxuXG5cdGdldFRlYW1zUGxheWVkKHRlYW1zKSB7XG5cdFx0cmV0dXJuIHRlYW1zLm1hcChmdW5jdGlvbih0ZWFtKSB7XG5cdFx0XHRyZXR1cm4gdGVhbTtcblx0XHR9KTtcblx0fVxuXG5cdGNyZWF0ZVBsYXllclZpc3VhbGl6YXRpb24ocGxheWVyKSB7XG5cdFx0bGV0IHNlbGYgPSB0aGlzLFxuXHRcdFx0dml6TW9kZSA9IHNlbGYucHJvcHMubW9kZSxcblx0XHRcdG1hcmdpbiA9IHsgdG9wOiAxMCwgcmlnaHQ6IDEwLCBib3R0b206IDEwLCBsZWZ0OiAxMCB9LFxuXHRcdFx0d2lkdGggPSA1MDAgLSBtYXJnaW4ucmlnaHQgLSBtYXJnaW4ubGVmdCxcblx0XHRcdGhlaWdodCA9IDE4MCAtIG1hcmdpbi50b3AgLSBtYXJnaW4uYm90dG9tLFxuXHRcdFx0bm9kZSA9IFJlYWN0RmF1eERPTS5jcmVhdGVFbGVtZW50KCdzdmcnKSxcblx0XHRcdHBsYXllclN0YXRzID0gdGhpcy5wcm9wcy5wbGF5ZXJTdGF0cyxcblx0XHRcdHllYXJzUGxheWVkID0gdGhpcy5wcm9wcy55ZWFyc1BsYXllZCxcblx0XHRcdGF3YXJkc0xhYmVscyA9IFsnUHJvIEJvd2wnLCdPZmZlbnNpdmUgUGxheWVyJywnQWxsIFBybycsJ01WUCcsICdTdXBlciBCb3dsJ10sXG5cdFx0XHRhd2FyZEFjcm9ueW1zID0gWydQQicsJ09QJywnQVAnLCdNVlAnLCAnU0InXTtcblxuXHRcdC8vICBUaGlzIHNob3VsZCBwcm9iYWJseSBiZSBpbiBhbm90aGVyIGZ1bmN0aW9uL2NvbXBvbmVudFxuXHRcdC8vIGlmICh0aGlzLnByb3BzLm1vZGUgPT09ICdjYXJlZXInKSB7XG5cdFx0Ly8gXHRwbGF5ZXJEYXRhID0gdGhpcy5zdGF0ZS5kYXRhQnlDYXJlZXJZZWFyO1xuXHRcdC8vIH0gZWxzZSBpZiAodGhpcy5wcm9wcy5tb2RlID09PSAnYWdlJykge1xuXHRcdC8vIFx0cGxheWVyRGF0YSA9IHRoaXMuc3RhdGUuZGF0YUJ5QWdlO1xuXHRcdC8vIH1cblxuXHRcdHZhciB4ID0gZDMuc2NhbGUub3JkaW5hbCgpXG5cdFx0XHRcdC5kb21haW4oeWVhcnNQbGF5ZWQpXG5cdFx0XHRcdC5yYW5nZUJhbmRzKFsxMCx3aWR0aC0yNV0sLjEpO1xuXG5cdFx0dmFyIHkgID0gZDMuc2NhbGUub3JkaW5hbCgpXG5cdFx0XHRcdC5kb21haW4oYXdhcmRBY3Jvbnltcylcblx0XHRcdFx0LnJhbmdlQmFuZHMoW2hlaWdodC00MCwwXSwuMDUpO1xuXG5cdFx0dmFyIHhBeGlzID0gZDMuc3ZnLmF4aXMoKVxuXHRcdFx0XHRcdFx0LnNjYWxlKHgpXG5cdFx0XHRcdFx0XHQudGlja1NpemUoMSlcblx0XHRcdFx0XHRcdC5vcmllbnQoJ2JvdHRvbScpO1xuXG5cdFx0dmFyIHlBeGlzID0gZDMuc3ZnLmF4aXMoKVxuXHRcdFx0XHRcdFx0LnNjYWxlKHkpXG5cdFx0XHRcdFx0XHQudGlja1NpemUoMClcblx0XHRcdFx0XHRcdC50aWNrVmFsdWVzKGF3YXJkQWNyb255bXMpXG5cdFx0XHRcdFx0XHQudGlja0Zvcm1hdChmdW5jdGlvbihkLGkpIHtcblx0XHRcdFx0XHRcdFx0cmV0dXJuIGF3YXJkc0xhYmVsc1tpXTtcblx0XHRcdFx0XHRcdH0pXG5cdFx0XHRcdFx0XHQub3JpZW50KCdyaWdodCcpO1xuXG5cdFx0Ly8geCBheGlzXG5cdFx0ZDMuc2VsZWN0KG5vZGUpXG5cdFx0XHQuYXBwZW5kKCdnJylcblx0XHRcdC5hdHRyKCdjbGFzcycsICd4IGF4aXMnKVxuXHRcdFx0LmF0dHIoJ3RyYW5zZm9ybScsJ3RyYW5zbGF0ZSgwLCcrKGhlaWdodC0zOSkrJyknKVxuXHRcdFx0LmNhbGwoeEF4aXMpO1xuXG5cdFx0aWYgKHRoaXMucHJvcHMubW9kZSA9PT0gJ2NhbGVuZGFyJykge1xuXHRcdFx0Ly8gcm90YXRpbmcgeCBheGlzIHRpY2tzIGxhYmVscyBpbiBjYXNlIG9mIGNhbGVuZGFyIHZpZXdcblx0XHRcdGQzLnNlbGVjdChub2RlKVxuXHRcdFx0XHQuc2VsZWN0QWxsKCdnLnguYXhpcyAudGljayB0ZXh0Jylcblx0XHRcdFx0LnN0eWxlKCd0ZXh0LWFuY2hvcicsJ2VuZCcpXG5cdFx0XHRcdC5hdHRyKCd0cmFuc2Zvcm0nLCAndHJhbnNsYXRlKC02LDUpIHJvdGF0ZSgtOTApJyk7XG5cdFx0fSBcblxuXHRcdC8vIGF3YXJkIGdyb3VwXG5cdFx0ZDMuc2VsZWN0KG5vZGUpXG5cdFx0XHQuYXR0cih7XG5cdFx0XHRcdCdoZWlnaHQnOiBoZWlnaHQsXG5cdFx0XHRcdCd3aWR0aCc6IHdpZHRoXG5cdFx0XHR9KVxuXHRcdFx0LnNlbGVjdEFsbCgnLmF3YXJkR3JvdXAnKVxuXHRcdFx0LmRhdGEocGxheWVyU3RhdHMpXG5cdFx0XHQuZW50ZXIoKVxuXHRcdFx0LmFwcGVuZCgnZycpXG5cdFx0XHRcdC5hdHRyKHtcblx0XHRcdFx0XHQnY2xhc3MnOiAnYXdhcmRHcm91cCcsXG5cdFx0XHRcdFx0J3RyYW5zZm9ybSc6IGZ1bmN0aW9uKGQpIHtcblx0XHRcdFx0XHRcdHZhciBkeCA9IHgoZC55ZWFyKTtcblx0XHRcdFx0XHRcdHZhciBkeSA9IGQuYXdhcmQgPT09J01WUCcgPyB5KGQuYXdhcmQpIDogeShkLmF3YXJkLnN1YnN0cigwLDIpKTtcblx0XHRcdFx0XHRcdHJldHVybiAndHJhbnNsYXRlKCcrZHgrJywnK2R5KycpJztcblx0XHRcdFx0XHR9XG5cdFx0XHRcdH0pXG5cdFx0XHQub24oJ21vdXNlb3ZlcicsIGZ1bmN0aW9uKCkge1xuXHRcdFx0XHRkMy5zZWxlY3QodGhpcykuc2VsZWN0KCd0ZXh0Jykuc3R5bGUoJ2Rpc3BsYXknLG51bGwpO1xuXHRcdFx0fSlcblx0XHRcdC5vbignbW91c2VvdXQnLCBmdW5jdGlvbigpIHtcblx0XHRcdFx0ZDMuc2VsZWN0KHRoaXMpLnNlbGVjdCgndGV4dCcpLnN0eWxlKCdkaXNwbGF5JyxcIm5vbmVcIik7XG5cdFx0XHR9KTtcblxuXHRcdGQzLnNlbGVjdChub2RlKVxuXHRcdFx0LnNlbGVjdEFsbCgnZy5hd2FyZEdyb3VwJylcblx0XHRcdC5hcHBlbmQoJ3JlY3QnKVxuXHRcdFx0XHQuYXR0cih7XHRcdFx0XHRcdFxuXHRcdFx0XHRcdCdoZWlnaHQnOiB5LnJhbmdlQmFuZCgpLFxuXHRcdFx0XHRcdCd3aWR0aCc6IHgucmFuZ2VCYW5kKCksXG5cdFx0XHRcdFx0J2NsYXNzJzogZnVuY3Rpb24oZCkge1xuXHRcdFx0XHRcdFx0cmV0dXJuIHNlbGYuZ2V0QXdhcmRGaWxsKGQuYXdhcmQpO1xuXHRcdFx0XHRcdH1cblx0XHRcdFx0fSlcblxuXHRcdGQzLnNlbGVjdChub2RlKVxuXHRcdFx0LnNlbGVjdEFsbCgnZy5hd2FyZEdyb3VwJylcblx0XHRcdC5hcHBlbmQoJ3RleHQnKVxuXHRcdFx0XHQuYXR0cih7XG5cdFx0XHRcdFx0J2R4JzogeC5yYW5nZUJhbmQoKS80LFxuXHRcdFx0XHRcdCdkeSc6ICcxN3B4Jyxcblx0XHRcdFx0fSlcblx0XHRcdFx0LnRleHQoZnVuY3Rpb24oZCkge1xuXHRcdFx0XHRcdGlmIChkLmF3YXJkICE9PSAnTVZQJyAmJiBkLmF3YXJkICE9PSAnQVMnKSB7XG5cdFx0XHRcdFx0XHRyZXR1cm4gZC5hd2FyZC5zdWJzdHIoMiwxKTtcblx0XHRcdFx0XHR9XG5cdFx0XHRcdFx0cmV0dXJuO1xuXHRcdFx0XHR9KVxuXHRcdFx0XHQuc3R5bGUoJ2Rpc3BsYXknLCdub25lJyk7XG5cdFx0XHQgXG5cblx0XHQvL0FkZGluZyB0aGUgcGxheWVyIHRlYW1zXG5cdFx0ZDMuc2VsZWN0KG5vZGUpXG5cdFx0XHQuc2VsZWN0QWxsKCcucGxheWVyVGVhbScpXG5cdFx0XHQuZGF0YSh0aGlzLnN0YXRlLnRlYW1zUGxheWVkKVxuXHRcdFx0LmVudGVyKClcblx0XHRcdC5hcHBlbmQoJ3JlY3QnKVxuXHRcdFx0XHQuYXR0cih7XG5cdFx0XHRcdFx0XCJjbGFzc1wiOiBmdW5jdGlvbihkKSB7XG5cdFx0XHRcdFx0XHRyZXR1cm4gXCJwbGF5ZXJUZWFtIFwiKyBkLnRlYW07XG5cdFx0XHRcdFx0fSxcblx0XHRcdFx0XHRcInhcIjogZnVuY3Rpb24oZCkge1xuXHRcdFx0XHRcdFx0aWYgKHNlbGYucHJvcHMubW9kZSA9PT0nY2FsZW5kYXInKVxuXHRcdFx0XHRcdFx0XHRyZXR1cm4geChkLnN0YXJ0KTtcblx0XHRcdFx0XHRcdGVsc2UgaWYgKHNlbGYucHJvcHMubW9kZSA9PT0gJ2FnZScpIHtcblx0XHRcdFx0XHRcdFx0dmFyIHBsYXllckFnZSA9IHNlbGYuc3RhdGUuZGVidXRBZ2UgKyAoZC5zdGFydCAtIHNlbGYuc3RhdGUucm9va2llWWVhcik7XG5cdFx0XHRcdFx0XHRcdHJldHVybiB4KHBsYXllckFnZSk7XG5cdFx0XHRcdFx0XHR9IGVsc2Vcblx0XHRcdFx0XHRcdFx0cmV0dXJuIHgoZC5jYXJlZXJTdGFydCk7XG5cdFx0XHRcdFx0fSxcblx0XHRcdFx0XHRcInlcIjogaGVpZ2h0LTE1LFxuXHRcdFx0XHRcdFwid2lkdGhcIjogZnVuY3Rpb24oZCkge1xuXHRcdFx0XHRcdFx0aWYgKHNlbGYucHJvcHMubW9kZSA9PT0gJ2NhbGVuZGFyJylcblx0XHRcdFx0XHRcdFx0cmV0dXJuIHgoZC5lbmQpIC0geChkLnN0YXJ0KSArIHgucmFuZ2VCYW5kKCk7XG5cdFx0XHRcdFx0XHRlbHNlIGlmIChzZWxmLnByb3BzLm1vZGUgPT09ICdhZ2UnKSB7XG5cdFx0XHRcdFx0XHRcdHZhciBhZ2VTdGFydCA9IHNlbGYucHJvcHMudGltZXNwYW4uYWdlWzBdICsgKGQuY2FyZWVyU3RhcnQtMSk7XG5cdFx0XHRcdFx0XHRcdHZhciBhZ2VFbmQgPSBkLmNhcmVlckVuZCAtIChkLmNhcmVlclN0YXJ0KSArIGFnZVN0YXJ0O1xuXHRcdFx0XHRcdFx0XHRyZXR1cm4geChhZ2VFbmQpIC0geChhZ2VTdGFydCkgKyB4LnJhbmdlQmFuZCgpO1xuXHRcdFx0XHRcdFx0fSBlbHNlIFxuXHRcdFx0XHRcdFx0XHRyZXR1cm4geCgoZC5jYXJlZXJFbmQrMSkgLSBkLmNhcmVlclN0YXJ0KSArICgoeC5yYW5nZUJhbmQoKS8yKS0yKTtcblx0XHRcdFx0XHR9LFxuXHRcdFx0XHRcdFwiaGVpZ2h0XCI6NCxcblx0XHRcdFx0XHRcImZpbGxcIjogXCJibGFja1wiXG5cdFx0XHRcdH0pO1xuXHRcdHJldHVybiBub2RlLnRvUmVhY3QoKTtcblx0fVxuXG5cdGdldFBsYXllckluaXRpYWxzKG5hbWUpIHtcblx0XHRsZXQgbmFtZXMgPSBuYW1lLnNwbGl0KCcgJyk7XG5cdFx0cmV0dXJuIG5hbWVzWzBdLnN1YnN0cigwLDEpICsgbmFtZXNbMV0uc3Vic3RyKDAsMSk7XG5cdH1cblxuXHRyZW5kZXIoKSB7XG5cdFx0cmV0dXJuIChcblx0XHRcdDxkaXYgY2xhc3NOYW1lPVwiaW5kaXZpZHVhbFBsYXllclZpelwiPlxuXHRcdFx0XHQ8UGxheWVyUHJvZmlsZSBwbGF5ZXI9e3RoaXMucHJvcHMucGxheWVyRGF0YS5uYW1lfSBuaWNrbmFtZT17dGhpcy5wcm9wcy5wbGF5ZXJEYXRhLm5pY2tuYW1lfSBwaWNzPXt0aGlzLnByb3BzLnBsYXllckRhdGEucGljc30gaW1hZ2VzPXt0aGlzLnByb3BzLmltYWdlc30gLz5cblx0XHRcdFx0PGRpdiBjbGFzc05hbWU9XCJpbmRpdmlkdWFsUGxheWVyVml6SW5mb1wiPlxuXHRcdFx0XHRcdDxQbGF5ZXJUcm9waGllcyBcblx0XHRcdFx0XHRcdGNoYW1waW9uc2hpcHM9e3RoaXMucHJvcHMucGxheWVyRGF0YS5jaGFtcGlvbnNoaXBzfSBcblx0XHRcdFx0XHRcdGRhdGFCeUNhbGVuZGFyWWVhcj17dGhpcy5zdGF0ZS5kYXRhQnlDYWxlbmRhclllYXJ9XG5cdFx0XHRcdFx0XHRkYXRhQnlDYXJlZXJZZWFyPXt0aGlzLnN0YXRlLmRhdGFCeUNhcmVlclllYXJ9XG5cdFx0XHRcdFx0XHRkYXRhQnlBZ2U9e3RoaXMuc3RhdGUuZGF0YUJ5QWdlfVxuXHRcdFx0XHRcdFx0bW9kZT17dGhpcy5wcm9wcy5tb2RlfSBcblx0XHRcdFx0XHRcdHRpbWVzcGFuPXt0aGlzLnByb3BzLnRpbWVzcGFufSBcblx0XHRcdFx0XHRcdHJvb2tpZVllYXI9e3RoaXMuc3RhdGUucm9va2llWWVhcn0gXG5cdFx0XHRcdFx0XHRkZWJ1dEFnZT17dGhpcy5zdGF0ZS5kZWJ1dEFnZX1cblx0XHRcdFx0XHRcdHBsYXllckRhdGE9e3RoaXMucHJvcHMucGxheWVyRGF0YX0gXG5cdFx0XHRcdFx0XHR5ZWFyc1BsYXllZD17dGhpcy5wcm9wcy55ZWFyc1BsYXllZH0gLz5cblxuXHRcdFx0XHRcdHt0aGlzLmNyZWF0ZVBsYXllclZpc3VhbGl6YXRpb24odGhpcy5wcm9wcy5wbGF5ZXJEYXRhKX1cblxuXHRcdFx0XHRcdDxQbGF5ZXJBd2FyZHMgXG5cdFx0XHRcdFx0XHR0b3RhbHM9e3RoaXMucHJvcHMucGxheWVyRGF0YS50b3RhbHN9IGNoYW1waW9uc2hpcHM9e3RoaXMucHJvcHMucGxheWVyRGF0YS5jaGFtcGlvbnNoaXBzLmxlbmd0aH0gLz5cblx0XHRcdFx0XHRcblx0XHRcdFx0XHQ8UGxheWVyVGltZWxpbmUgXG5cdFx0XHRcdFx0XHR0ZWFtcz17dGhpcy5wcm9wcy5wbGF5ZXJEYXRhLnRlYW1zfSBcblx0XHRcdFx0XHRcdG1vZGU9e3RoaXMucHJvcHMubW9kZX0gXG5cdFx0XHRcdFx0XHR0aW1lc3Bhbj17dGhpcy5wcm9wcy50aW1lc3Bhbn0gXG5cdFx0XHRcdFx0XHRkYXRhQnlDYXJlZXJZZWFyPXt0aGlzLnN0YXRlLmRhdGFCeUNhcmVlclllYXJ9IFxuXHRcdFx0XHRcdFx0cm9va2llWWVhcj17dGhpcy5zdGF0ZS5yb29raWVZZWFyfSBcblx0XHRcdFx0XHRcdGRlYnV0QWdlPXt0aGlzLnN0YXRlLmRlYnV0QWdlfSBcblx0XHRcdFx0XHRcdHllYXJzUGxheWVkPXt0aGlzLnByb3BzLnllYXJzUGxheWVkfSAvPlxuXG5cdFx0XHRcdFx0XG5cdFx0XHRcdDwvZGl2PlxuXHRcdFx0XHQ8aDM+e3RoaXMucHJvcHMucGxheWVyRGF0YS5uYW1lfTwvaDM+XG5cdFx0XHQ8L2Rpdj5cblx0XHQpO1xuXHR9XG59IiwiaW1wb3J0IFJlYWN0IGZyb20gJ3JlYWN0JztcbmltcG9ydCBQbGF5ZXJWaXN1YWxpemF0aW9uIGZyb20gJy4vUGxheWVyVmlzdWFsaXphdGlvbic7XG5cbmV4cG9ydCBkZWZhdWx0IGNsYXNzIFZpc3VhbGl6YXRpb24gZXh0ZW5kcyBSZWFjdC5Db21wb25lbnQge1xuXG5cdGNvbnN0cnVjdG9yKHByb3BzKSB7XG5cdFx0c3VwZXIocHJvcHMpO1xuXG5cdFx0WydnZXRZZWFyc1JhbmdlJywnZ2V0UGxheWVyRGF0YScsJ2dldFBsYXllckRhdGFCeUNhbGVuZGFyWWVhcicsJ2dldFBsYXllckRhdGFCeUNhcmVlclllYXInLCdnZXRQbGF5ZXJEYXRhQnlBZ2UnXS5tYXAoayA9PiB0aGlzW2tdID0gdGhpc1trXS5iaW5kKHRoaXMpKTtcblx0XHR0aGlzLnN0YXRlID0ge307XG5cdH1cblxuXHRcblx0Z2V0WWVhcnNSYW5nZSgpIHtcblx0XHR2YXIgY2FsZW5kYXIgPSBbXSxcblx0XHRcdHllYXJzID0gW10sXG5cdFx0XHRhZ2VzID0gW107XG5cblx0XHRmb3IgKHZhciBpID0gdGhpcy5wcm9wcy50aW1lc3Bhbi5zdGFydDsgaTw9dGhpcy5wcm9wcy50aW1lc3Bhbi5lbmQ7IGkrKykge1xuXHRcdFx0Y2FsZW5kYXIucHVzaChpKTtcblx0XHR9XG5cblx0XHRmb3IgKHZhciB5ID0gMTsgeTw9dGhpcy5wcm9wcy50aW1lc3Bhbi55ZWFyczsgeSsrKSB7XG5cdFx0XHR5ZWFycy5wdXNoKHkpO1xuXHRcdH1cblxuXHRcdGlmICh0eXBlb2YgdGhpcy5wcm9wcy50aW1lc3Bhbi5hZ2UgIT09IFwidW5kZWZpbmVkXCIpIHtcblx0XHRcdGZvciAodmFyIGEgPSB0aGlzLnByb3BzLnRpbWVzcGFuLmFnZS5maXJzdDsgYSA8PSB0aGlzLnByb3BzLnRpbWVzcGFuLmFnZS5sYXN0OyBhKyspIHtcblx0XHRcdFx0YWdlcy5wdXNoKGEpO1xuXHRcdFx0fVx0XG5cdFx0fVxuXG5cdFx0cmV0dXJuIHtcblx0XHRcdFwiY2FsZW5kYXJcIjogY2FsZW5kYXIsXG5cdFx0XHRcInllYXJcIjogeWVhcnMsXG5cdFx0XHRcImFnZVwiOiBhZ2VzXG5cdFx0fVxuXHR9XG5cdFxuXHRnZXRQbGF5ZXJEYXRhKG5pY2tuYW1lKSB7XG5cdFx0Zm9yICh2YXIgaSA9IDA7IGk8IHRoaXMucHJvcHMuZGF0YS5sZW5ndGg7IGkrKykge1xuXHRcdFx0aWYgKHRoaXMucHJvcHMuZGF0YVtpXS5uaWNrbmFtZSA9PT0gbmlja25hbWUpIHtcblx0XHRcdFx0cmV0dXJuIHRoaXMucHJvcHMuZGF0YVtpXTtcblx0XHRcdH1cblx0XHR9XG5cdFx0cmV0dXJuIHt9O1xuXHR9XG5cblx0Z2V0UGxheWVyRGF0YUJ5Q2FsZW5kYXJZZWFyKHBsYXllckRhdGEpIHtcblx0XHRsZXQgcmVzdWx0ID0gW107XG5cdFx0Y29uc3QgeWVhcnNQbGF5ZWQgPSBPYmplY3Qua2V5cyhwbGF5ZXJEYXRhKTtcblx0XHR5ZWFyc1BsYXllZC5mb3JFYWNoKHllYXIgPT4ge1xuXHRcdFx0cGxheWVyRGF0YVt5ZWFyXS5mb3JFYWNoKGF3YXJkID0+IHtcblx0XHRcdFx0cmVzdWx0LnB1c2goe1xuXHRcdFx0XHRcdCd5ZWFyJzpwYXJzZUludCh5ZWFyKSxcblx0XHRcdFx0XHQnYXdhcmQnOiBhd2FyZFxuXHRcdFx0XHR9KTtcblx0XHRcdH0pO1xuXHRcdH0pXG5cdFx0cmV0dXJuIHJlc3VsdDtcblx0fVxuXG5cdGdldFBsYXllckRhdGFCeUNhcmVlclllYXIocGxheWVyRGF0YSkge1xuXHRcdHZhciByZXN1bHQgPSBbXTtcblx0XHRjb25zdCB5ZWFyc1BsYXllZCA9IE9iamVjdC5rZXlzKHBsYXllckRhdGEpO1xuXHRcdHllYXJzUGxheWVkLmZvckVhY2goKHllYXIsaSkgPT4ge1xuXHRcdFx0cGxheWVyRGF0YVt5ZWFyXS5mb3JFYWNoKGF3YXJkID0+IHtcblx0XHRcdFx0cmVzdWx0LnB1c2goe1xuXHRcdFx0XHRcdCd5ZWFyJzogaSsxLFxuXHRcdFx0XHRcdCdhd2FyZCc6IGF3YXJkXG5cdFx0XHRcdH0pO1xuXHRcdFx0fSk7XG5cdFx0fSlcblx0XHRyZXR1cm4gcmVzdWx0O1xuXHR9XG5cblx0Z2V0UGxheWVyRGF0YUJ5QWdlKHBsYXllckRhdGEsIHJvb2tpZUFnZSkge1xuXHRcdGNvbnN0IHllYXJzUGxheWVkID0gT2JqZWN0LmtleXMocGxheWVyRGF0YSk7XG5cdFx0bGV0IHJlc3VsdCA9IFtdLFxuXHRcdFx0Zmlyc3RZZWFyID0gcGFyc2VJbnQoeWVhcnNQbGF5ZWRbMF0pO1xuXHRcdFxuXHRcdHllYXJzUGxheWVkLmZvckVhY2goeWVhciA9PiB7XG5cdFx0XHRjb25zdCBhZ2UgPSByb29raWVBZ2UgKyBwYXJzZUludCh5ZWFyKSAtIGZpcnN0WWVhcjtcblx0XHRcdHBsYXllckRhdGFbeWVhcl0uZm9yRWFjaChhd2FyZCA9PiB7XG5cdFx0XHRcdHJlc3VsdC5wdXNoKHtcblx0XHRcdFx0XHQneWVhcic6IGFnZSxcblx0XHRcdFx0XHQnYXdhcmQnOiBhd2FyZFxuXHRcdFx0XHR9KTtcblx0XHRcdH0pXG5cdFx0fSlcblxuXHRcdHJldHVybiByZXN1bHQ7XG5cdH1cblxuXHRyZW5kZXIoKSB7XG5cdFx0Y29uc3QgdGltZXNwYW4gPSB0aGlzLmdldFllYXJzUmFuZ2UoKTtcblxuXHRcdGxldCBwbGF5ZXJzQ2hhcnRzID0gdGhpcy5wcm9wcy5wbGF5ZXJzLm1hcChwbGF5ZXIgPT4ge1xuXHRcdFx0bGV0IHBsYXllckRhdGEgPSB0aGlzLmdldFBsYXllckRhdGEocGxheWVyKTtcblxuXHRcdFx0bGV0IHBsYXllclN0YXRzO1xuXHRcdFx0aWYgKHRoaXMucHJvcHMubW9kZSA9PT0gJ2NhcmVlcicpIHtcblx0XHRcdFx0cGxheWVyU3RhdHMgPSB0aGlzLmdldFBsYXllckRhdGFCeUNhcmVlclllYXIocGxheWVyRGF0YS5hd2FyZHMpXG5cdFx0XHR9IGVsc2UgaWYgKHRoaXMucHJvcHMubW9kZSA9PT0gJ2NhbGVuZGFyJykge1xuXHRcdFx0XHRwbGF5ZXJTdGF0cyA9IHRoaXMuZ2V0UGxheWVyRGF0YUJ5Q2FsZW5kYXJZZWFyKHBsYXllckRhdGEuYXdhcmRzKVxuXHRcdFx0fSBlbHNlIGlmICh0aGlzLnByb3BzLm1vZGUgPT09ICdhZ2UnKSB7XG5cdFx0XHRcdHBsYXllclN0YXRzID0gdGhpcy5nZXRQbGF5ZXJEYXRhQnlBZ2UocGxheWVyRGF0YS5hd2FyZHMsIHBsYXllckRhdGEuYWdlLmZpcnN0KVxuXHRcdFx0fVxuXG5cdFx0XHRjb25zdCBtb2RlID0gdGhpcy5wcm9wcy5tb2RlID09PSAnY2FyZWVyJyA/ICd5ZWFyJyA6IHRoaXMucHJvcHMubW9kZTtcblxuXHRcdFx0cmV0dXJuIChcblx0XHRcdFx0PFBsYXllclZpc3VhbGl6YXRpb24gcGxheWVyQXdhcmRzPXtwbGF5ZXJEYXRhLmF3YXJkc30gXG5cdFx0XHRcdFx0bW9kZT17dGhpcy5wcm9wcy5tb2RlfSBcblx0XHRcdFx0XHRrZXk9e3BsYXllcn0gXG5cdFx0XHRcdFx0dGltZXNwYW49e3RpbWVzcGFufSBcblx0XHRcdFx0XHR5ZWFyc1BsYXllZD17dGltZXNwYW5bbW9kZV19XG5cdFx0XHRcdFx0aW1hZ2VzPXt0aGlzLnByb3BzLmltYWdlc30gXG5cdFx0XHRcdFx0cGxheWVyU3RhdHM9e3BsYXllclN0YXRzfSBcblx0XHRcdFx0XHRwbGF5ZXJEYXRhPXtwbGF5ZXJEYXRhfSAvPlxuXHRcdFx0KTtcblx0XHR9KTtcblxuXHRcdHJldHVybiAoXG5cdFx0XHQ8ZGl2IGlkPSd2aXN1YWxpemF0aW9uJz5cblx0XHRcdFx0e3BsYXllcnNDaGFydHN9XG5cdFx0XHQ8L2Rpdj5cblx0XHQpO1xuXHR9XG59XG4iLCJpbXBvcnQgUmVhY3QgZnJvbSAncmVhY3QnO1xuaW1wb3J0IFJlYWN0RE9NIGZyb20gJ3JlYWN0LWRvbSc7XG5cbmltcG9ydCBNZW51IGZyb20gJy4vTWVudSc7XG5pbXBvcnQgUGxheWVyIGZyb20gJy4vUGxheWVyJztcbmltcG9ydCBWaXN1YWxpemF0aW9uIGZyb20gJy4vVmlzdWFsaXphdGlvbic7XG5cblxuZXhwb3J0IGRlZmF1bHQgY2xhc3MgTkZMR3JlYXRuZXNzIGV4dGVuZHMgUmVhY3QuQ29tcG9uZW50IHtcblx0Y29uc3RydWN0b3IocHJvcHMpIHtcblx0XHRzdXBlcihwcm9wcyk7XG5cblx0XHRbJ2NoYW5nZVZpZXdNb2RlJywgJ2dldFRpbWVTcGFuJywnaGFuZGxlUGxheWVyU2VsZWN0JywnY2xvc2VJbWFnZScsJ2dldFBsYXllckxpc3QnXS5tYXAoaz0+IHRoaXNba10gPSB0aGlzW2tdLmJpbmQodGhpcykpO1xuXG5cdFx0Y29uc3QgZGVmYXVsdFBsYXllcnMgPSBbJ2JyYWR5JywnbW9udGFuYScsJ3BleXRvbiddO1xuXHRcdHRoaXMuc3RhdGUgPSB7XG5cdFx0XHRcInNlbGVjdGVkXCI6IGRlZmF1bHRQbGF5ZXJzLFxuXHRcdFx0XCJ2aXpNb2RlXCI6ICdjYXJlZXInLFxuXHRcdFx0XCJ0aW1lc3BhblwiOiB0aGlzLmdldFRpbWVTcGFuKGRlZmF1bHRQbGF5ZXJzKSxcblx0XHRcdFwicG9wdXBcIjogXCJoaWRlXCIsXG5cdFx0XHRcImltZ1wiOiBcIlwiXG5cdFx0fVxuXHR9XG5cblx0Y2hhbmdlVmlld01vZGUodmFsdWUpIHtcblx0XHR0aGlzLnNldFN0YXRlKHtcblx0XHRcdFwidml6TW9kZVwiOiB2YWx1ZVxuXHRcdH0pO1xuXHR9XG5cblx0Z2V0VGltZVNwYW4oc2VsZWN0ZWRQbGF5ZXJzKSB7XG5cdFx0bGV0IHN0YXJ0ID0gMjAxNyxcblx0XHRcdGVuZCA9IDEsXG5cdFx0XHR5ZWFycyA9IFtdLFxuXHRcdFx0YWdlcyA9IFtdLCBcblx0XHRcdHN0YXJ0QWdlID0gNjAsXG5cdFx0XHRlbmRBZ2UgPSAxLFxuXHRcdFx0bWluLCBtYXgsIFxuXHRcdFx0Y2FyZWVyWWVhcnMgPSAwLFxuXHRcdFx0cGxheWVycyA9IFtdO1xuXG5cdFx0cGxheWVycyA9IHRoaXMucHJvcHMuZGF0YS5maWx0ZXIocCA9PiB7XG5cdFx0XHRyZXR1cm4gc2VsZWN0ZWRQbGF5ZXJzLmluZGV4T2YocC5uaWNrbmFtZSkgIT09IC0xO1xuXHRcdH0pO1xuXG5cdFx0cGxheWVycy5mb3JFYWNoKChwLGkpID0+IHtcblx0XHRcdHllYXJzID0gT2JqZWN0LmtleXMocC5hd2FyZHMpO1xuXHRcdFx0bWluID0gTWF0aC5taW4uYXBwbHkoTWF0aCwgeWVhcnMpO1xuXHRcdFx0bWF4ID0gTWF0aC5tYXguYXBwbHkoTWF0aCwgeWVhcnMpO1xuXHRcdFx0aWYgKG1pbiA8IHN0YXJ0KSB7XG5cdFx0XHRcdHN0YXJ0ID0gbWluO1xuXHRcdFx0fVxuXG5cdFx0XHRpZiAobWF4ID4gZW5kKSB7XG5cdFx0XHRcdGVuZCA9IG1heDtcblx0XHRcdH1cblxuXHRcdFx0aWYgKHllYXJzLmxlbmd0aCA+IGNhcmVlclllYXJzKSB7XG5cdFx0XHRcdGNhcmVlclllYXJzID0geWVhcnMubGVuZ3RoO1xuXHRcdFx0fVxuXG5cdFx0XHRpZiAoc3RhcnRBZ2UgPiBwLmFnZS5maXJzdCkge1xuXHRcdFx0XHRzdGFydEFnZSA9IHAuYWdlLmZpcnN0O1xuXHRcdFx0fVxuXG5cdFx0XHRpZiAoZW5kQWdlIDwgcC5hZ2UubGFzdCkge1xuXHRcdFx0XHRlbmRBZ2UgPSBwLmFnZS5sYXN0O1xuXHRcdFx0fVxuXHRcdH0pO1xuXG5cdFx0cmV0dXJuIHtcblx0XHRcdFwic3RhcnRcIjogc3RhcnQsXG5cdFx0XHRcImVuZFwiOiBlbmQsXG5cdFx0XHRcInllYXJzXCI6IGNhcmVlclllYXJzLFxuXHRcdFx0XCJhZ2VcIjoge1xuXHRcdFx0XHRcImZpcnN0XCI6IHN0YXJ0QWdlLFxuXHRcdFx0XHRcImxhc3RcIjogZW5kQWdlXG5cdFx0XHR9XG5cdFx0fTtcblx0fVxuXG5cdGhhbmRsZVBsYXllclNlbGVjdChlKSB7XG5cdFx0Y29uc3QgcG9zaXRpb24gPSB0aGlzLnN0YXRlLnNlbGVjdGVkLmluZGV4T2YoZS5uaWNrbmFtZSk7XG5cdFx0aWYgKHBvc2l0aW9uIDwwKSB7XG5cdFx0XHR0aGlzLnN0YXRlLnNlbGVjdGVkLnVuc2hpZnQoZS5uaWNrbmFtZSk7XG5cdFx0fSBlbHNlIHtcblx0XHRcdHRoaXMuc3RhdGUuc2VsZWN0ZWQuc3BsaWNlKHBvc2l0aW9uLDEpO1xuXHRcdH1cblxuXHRcdGNvbnN0IG5ld1RpbWVTcGFuID0gdGhpcy5nZXRUaW1lU3Bhbih0aGlzLnN0YXRlLnNlbGVjdGVkKTtcblxuXHRcdHRoaXMuc2V0U3RhdGUoe1xuXHRcdFx0c2VsZWN0ZWQ6IHRoaXMuc3RhdGUuc2VsZWN0ZWQsXG5cdFx0XHR0aW1lc3BhbjogbmV3VGltZVNwYW5cblx0XHR9KTtcblx0XHRcblx0fVxuXG5cdGNsb3NlSW1hZ2UoKSB7XG5cdFx0dGhpcy5zZXRTdGF0ZSh7XG5cdFx0XHRcInBvcHVwXCI6IFwiaGlkZVwiXG5cdFx0fSk7XG5cdH1cblxuXHRnZXRQbGF5ZXJMaXN0KCkge1xuXHRcdGNvbnN0IHBsYXllcnMgPSB0aGlzLnByb3BzLmRhdGEubWFwKChwbGF5ZXIpID0+IHtcblx0XHRcdGNvbnN0IGlzU2VsZWN0ZWQgPSB0aGlzLnN0YXRlLnNlbGVjdGVkLmluZGV4T2YocGxheWVyLm5pY2tuYW1lKSAhPT0gLTEgPyAnc2VsZWN0ZWQnIDogJyc7XG5cdFx0XHRyZXR1cm4gKFxuXHRcdFx0XHQ8UGxheWVyIGtleT17cGxheWVyLm5pY2tuYW1lK1wiLWtleVwifSBwbGF5ZXI9e3BsYXllcn0gb25QbGF5ZXJTZWxlY3Q9e3RoaXMuaGFuZGxlUGxheWVyU2VsZWN0fSBpc1NlbGVjdGVkPXtpc1NlbGVjdGVkfSAvPlxuXHRcdFx0KVxuXHRcdH0pO1xuXG5cdFx0cmV0dXJuIChcblx0XHRcdDxkaXYgaWQ9XCJqZXJzZXlzXCI+XG5cdFx0XHRcdHtwbGF5ZXJzfVxuXHRcdFx0PC9kaXY+XG5cdFx0KTtcblx0fVxuXG5cdHJlbmRlcigpIHtcblx0XHRjb25zdCBuZmxMb2dvID0gJ2ltZy9uZmxsb2dvLnBuZycsXG5cdFx0XHRpbnN0cnVjdGlvbnMgPSB0aGlzLnN0YXRlLnNlbGVjdGVkLmxlbmd0aCAhPT0gMCA/ICdoaWRlJyA6ICcnLFxuXHRcdFx0dHdpdHRlckxpbmsgPSAnaW1nL3R3aXR0ZXItMjU2LnBuZycsXG5cdFx0XHRoZWxwSWNvbiA9ICdpbWcvaGVscEljb25XaGl0ZS5wbmcnO1xuXG5cdFx0cmV0dXJuIChcblx0XHRcdDxkaXYgaWQ9J2FwcCc+XG5cdFx0XHRcdDxkaXYgaWQ9XCJoZWFkZXJcIj5cblx0XHRcdFx0XHQ8ZGl2IGlkPVwidXBkYXRlZFwiPlxuXHRcdFx0XHRcdFx0djEuMCAoMDQvMjUvMjAyMClcblx0XHRcdFx0XHQ8L2Rpdj5cblx0XHRcdFx0XHQ8aW1nIHNyYz17bmZsTG9nb30gLz4gXG5cdFx0XHRcdFx0PGgxPiBDb21wYXJpbmcgR3JlYXRuZXNzPC9oMT4gPGEgaHJlZj1cImh0dHA6Ly93d3cucGFydml6dS5jb21cIiB0YXJnZXQ9XCJfYmxhbmtcIiBpZD1cIm1hZGVieVwiPmJ5IFBhYmxvIEFydml6dTwvYT4gPGEgaHJlZj1cImh0dHBzOi8vdHdpdHRlci5jb20vYXJ2aXp1YWxpemF0aW9uXCIgdGFyZ2V0PVwiX2JsYW5rXCIgaWQ9XCJ0d2l0dGVyTGlua1wiPjxpbWcgc3JjPXt0d2l0dGVyTGlua30gLz48L2E+XG5cdFx0XHRcdFx0PGRpdiBjbGFzc05hbWU9XCJhZGR0aGlzX3NoYXJpbmdfdG9vbGJveFwiPjwvZGl2PlxuXHRcdFx0XHQ8L2Rpdj5cblx0XHRcdFx0PGRpdiBpZD1cImJsdXJiXCI+XG5cdFx0XHRcdFx0XHQ8cD5RdWFydGVyYmFjayBpcyB0aGUgaGFyZGVzdCBwb3NpdGlvbiB0byBwbGF5IGluIGFsbCBvZiBzcG9ydHMuIFRoZXJlJ3Mgb25seSAzMiBRQiBzcG90cyBhdmFpbGFibGUgaW4gdGhlIGVudGlyZSB3b3JsZC4gVGhlIGdvb2Qgb25lcyBtYWtlIHRoZWlyIHRlYW1zIGJldHRlciBhbmQgY2FuIGRlbGl2ZXIgd2lucyBmb3IgdGhlbS4gUUJzIGNhbiBjYXJyeSB0ZWFtcyBiZXlvbmQgdGhlaXIgdGFsZW50IGxldmVsIG9yIGJlIHRoZSBvbmUgd2VhayBsaW5rIGluIGxlZ2VuZGFyeSB0ZWFtcy4gPC9wPlxuXG5cdFx0XHRcdFx0XHQ8cD5UaGUgdHJ1bHkgZ3JlYXQgb25lcyBhcmUgdGhlIG9uZXMgd2hvIGFuc3dlciB0aGUgY2FsbCB3aGVuIHRoZSBwcmVzc3VyZSBpcyBhdCBpdHMgaGlnaGVzdCwgd2hlbiB0aGUgY2hhbXBpb25zaGlwIGlzIG9uIHRoZSBsaW5lIGFuZCB0aGUgZ2FtZSwgc2Vhc29uLCBhbmQgZXZlbiwgY2FyZWVycyBkZXBlbmQgb24gd2hhdCB0aGV5IHdpbGwgZG8gd2l0aCB0aGUgYmFsbCBpbiB0aGVpciBoYW5kcy4gQW5kIHRoZXkgZGVsaXZlci48L3A+XG5cblx0XHRcdFx0XHRcdDxwPkhlcmUgYXJlIHRoZSBUb3AgMjAgUXVhcnRlcmJhY2tzIG9mIGFsbCB0aW1lLjwvcD5cblxuXG5cblx0XHRcdFx0PC9kaXY+XG5cdFx0XHRcdHsgdGhpcy5nZXRQbGF5ZXJMaXN0KCl9XG5cdFx0XHRcdFxuXHRcdFx0XHQ8TWVudSBjaGFuZ2VWaWV3TW9kZT17dGhpcy5jaGFuZ2VWaWV3TW9kZX0gc2VsZWN0ZWQ9e3RoaXMuc3RhdGUudml6TW9kZX0gLz5cblx0XHRcdFx0PGRpdiBpZD1cInZpekxlZ2VuZFwiPlxuXHRcdFx0XHRcdDxkaXYgaWQ9XCJsZWdlbmRTZWN0aW9uXCI+XG5cdFx0XHRcdFx0XHQ8ZGl2IGNsYXNzTmFtZT1cImxlZ2VuZFNjYWxlIGxhYmVsXCI+XG5cdFx0XHRcdFx0XHRcdDxoNSBjbGFzc05hbWU9XCJzZWxlY3Rpb25UeXBlXCI+TkZMIENoYW1waW9uc2hpcDwvaDU+XG5cdFx0XHRcdFx0XHQ8L2Rpdj5cblx0XHRcdFx0XHRcdDxkaXYgY2xhc3NOYW1lPVwibGVnZW5kU2NhbGVcIj5cblx0XHRcdFx0XHRcdFx0PGg1PiZuYnNwOzwvaDU+XG5cdFx0XHRcdFx0XHRcdDxkaXYgY2xhc3NOYW1lPVwic3VwZXJib3dsIGZpcnN0dGVhbVwiPlxuXHRcdFx0XHRcdFx0XHRcdDxpbWcgc3JjPVwiaW1nL25mbHRyb3BoeS5wbmdcIi8+XG5cdFx0XHRcdFx0XHRcdDwvZGl2PlxuXHRcdFx0XHRcdFx0PC9kaXY+XG5cdFx0XHRcdFx0XHQ8ZGl2IGNsYXNzTmFtZT1cImxlZ2VuZFNjYWxlIGxhYmVsXCI+XG5cdFx0XHRcdFx0XHRcdDxoNSBjbGFzc05hbWU9XCJzZWxlY3Rpb25UeXBlXCI+U3VwZXIgQm93bHM8L2g1PlxuXHRcdFx0XHRcdFx0PC9kaXY+XG5cdFx0XHRcdFx0XHQ8ZGl2IGNsYXNzTmFtZT1cImxlZ2VuZFNjYWxlXCI+XG5cdFx0XHRcdFx0XHRcdDxoNT4mbmJzcDs8L2g1PlxuXHRcdFx0XHRcdFx0XHQ8ZGl2IGNsYXNzTmFtZT1cInN1cGVyYm93bCBmaXJzdHRlYW1cIj48L2Rpdj5cblx0XHRcdFx0XHRcdDwvZGl2PlxuXHRcdFx0XHRcdFx0PGRpdiBjbGFzc05hbWU9XCJsZWdlbmRTY2FsZVwiPlxuXHRcdFx0XHRcdFx0XHQ8aDUgY2xhc3NOYW1lPVwic2VsZWN0aW9uVHlwZVwiPk1vc3QgVmFsdWFibGUgUGxheWVyPC9oNT5cblx0XHRcdFx0XHRcdDwvZGl2PlxuXHRcdFx0XHRcdFx0PGRpdiBjbGFzc05hbWU9XCJsZWdlbmRTY2FsZVwiPlxuXHRcdFx0XHRcdFx0XHQ8aDU+Jm5ic3A7PC9oNT5cblx0XHRcdFx0XHRcdFx0PGRpdiBjbGFzc05hbWU9XCJtdnAgZmlyc3R0ZWFtXCI+PC9kaXY+XG5cdFx0XHRcdFx0XHQ8L2Rpdj5cblxuXHRcdFx0XHRcdFx0PGRpdiBjbGFzc05hbWU9XCJsZWdlbmRTY2FsZSBsYWJlbFwiPlxuXHRcdFx0XHRcdFx0XHQ8aDUgY2xhc3NOYW1lPVwic2VsZWN0aW9uVHlwZVwiPkFsbCBQcm8gVGVhbTwvaDU+XG5cdFx0XHRcdFx0XHQ8L2Rpdj5cblx0XHRcdFx0XHRcdDxkaXYgY2xhc3NOYW1lPVwibGVnZW5kU2NhbGVcIj5cblx0XHRcdFx0XHRcdFx0PGg1PjFzdDwvaDU+XG5cdFx0XHRcdFx0XHRcdDxkaXYgY2xhc3NOYW1lPVwiYWxscHJvIGZpcnN0dGVhbVwiPjwvZGl2PlxuXHRcdFx0XHRcdFx0PC9kaXY+XG5cdFx0XHRcdFx0XHQ8ZGl2IGNsYXNzTmFtZT1cImxlZ2VuZFNjYWxlXCI+XG5cdFx0XHRcdFx0XHRcdDxoNT4ybmQ8L2g1PlxuXHRcdFx0XHRcdFx0XHQ8ZGl2IGNsYXNzTmFtZT1cImFsbHBybyBzZWNvbmR0ZWFtXCI+PC9kaXY+XG5cdFx0XHRcdFx0XHQ8L2Rpdj5cblxuXHRcdFx0XHRcdFx0PGRpdiBjbGFzc05hbWU9XCJsZWdlbmRTY2FsZSBcIj5cblx0XHRcdFx0XHRcdFx0PGg1IGNsYXNzTmFtZT1cInNlbGVjdGlvblR5cGVcIj5PZmZlbnNpdmUgUGxheWVyIG9mIHRoZSBZZWFyPC9oNT5cblx0XHRcdFx0XHRcdDwvZGl2PlxuXHRcdFx0XHRcdFx0PGRpdiBjbGFzc05hbWU9XCJsZWdlbmRTY2FsZVwiPlxuXHRcdFx0XHRcdFx0XHQ8aDU+Jm5ic3A7PC9oNT5cblx0XHRcdFx0XHRcdFx0PGRpdiBjbGFzc05hbWU9XCJvcHkgZmlyc3R0ZWFtXCI+PC9kaXY+XG5cdFx0XHRcdFx0XHQ8L2Rpdj5cblxuXHRcdFx0XHRcdFx0PGRpdiBjbGFzc05hbWU9XCJsZWdlbmRTY2FsZSBsYWJlbFwiPlxuXHRcdFx0XHRcdFx0XHQ8aDUgY2xhc3NOYW1lPVwic2VsZWN0aW9uVHlwZVwiPlBybyA8YnIvPkJvd2xzPC9oNT5cblx0XHRcdFx0XHRcdDwvZGl2PlxuXHRcdFx0XHRcdFx0PGRpdiBjbGFzc05hbWU9XCJsZWdlbmRTY2FsZVwiPlxuXHRcdFx0XHRcdFx0XHQ8aDU+Jm5ic3A7PC9oNT5cblx0XHRcdFx0XHRcdFx0PGRpdiBjbGFzc05hbWU9XCJwcm9ib3dsIGZpcnN0dGVhbVwiPjwvZGl2PlxuXHRcdFx0XHRcdFx0PC9kaXY+XG5cdFx0XHRcdFx0PC9kaXY+XG5cdFx0XHRcdDwvZGl2PlxuXHRcdFx0XHRcblx0XHRcdFx0XG5cdFx0XHRcdDxWaXN1YWxpemF0aW9uIHBsYXllcnM9e3RoaXMuc3RhdGUuc2VsZWN0ZWR9IGRhdGE9e3RoaXMucHJvcHMuZGF0YX0gbW9kZT17dGhpcy5zdGF0ZS52aXpNb2RlfSB0aW1lc3Bhbj17dGhpcy5zdGF0ZS50aW1lc3Bhbn0gaW1hZ2VzPXt0aGlzLnByb3BzLmltYWdlc30vPlxuXHRcdFx0XHRcblx0XHRcdFx0PGRpdiBjbGFzc05hbWU9e2luc3RydWN0aW9uc30gaWQ9XCJpbnN0cnVjdGlvbnNcIiA+XG5cdFx0XHRcdFx0PGgxPlRvIGNvbXBhcmUsIHNlbGVjdCBvbmUgb3IgbW9yZSBwbGF5ZXJzIGJ5IGNsaWNraW5nIG9uIHRoZWlyIGplcnNleXMgYWJvdmU8L2gxPlxuXHRcdFx0XHQ8L2Rpdj5cblx0XHRcdFx0PGRpdiBjbGFzc05hbWU9XCJmb290ZXJcIj5cblx0XHRcdFx0XHQ8YSBocmVmPVwiaHR0cHM6Ly90d2l0dGVyLmNvbS9hcnZpenVhbGl6YXRpb25cIiBjbGFzc05hbWU9XCJ0d2l0dGVyLWZvbGxvdy1idXR0b25cIiBkYXRhLXNob3ctY291bnQ9XCJmYWxzZVwiPkZvbGxvdyBAYXJ2aXp1YWxpemF0aW9uPC9hPiZuYnNwOyZuYnNwOzxzcGFuIGNsYXNzTmFtZT1cInZlcnRCYXJcIj58PC9zcGFuPiZuYnNwOyZuYnNwO1xuXHRcdFx0XHRcdDxhIGNsYXNzTmFtZT1cImZvb3Rlci1saW5rXCIgaHJlZj1cImh0dHA6Ly93d3cucGFydml6dS5jb21cIiB0YXJnZXQ9XCJfYmxhbmtcIiA+d3d3LnBhcnZpenUuY29tPC9hPiZuYnNwOyZuYnNwOzxzcGFuIGNsYXNzTmFtZT1cInZlcnRCYXJcIj58PC9zcGFuPiZuYnNwOyZuYnNwO1xuXHRcdFx0XHRcdDxhIGNsYXNzTmFtZT1cImZvb3Rlci1saW5rXCIgaHJlZj1cImh0dHA6Ly93d3cubW9yZXRoYW5qdXN0c3BvcnRzLmNvbVwiIHRhcmdldD1cIl9ibGFua1wiID53d3cubW9yZXRoYW5qdXN0c3BvcnRzLmNvbTwvYT4gJm5ic3A7Jm5ic3A7PHNwYW4gY2xhc3NOYW1lPVwidmVydEJhclwiPnw8L3NwYW4+Jm5ic3A7Jm5ic3A7XG5cdFx0XHRcdFx0PGE+SW1hZ2UgQ3JlZGl0czogTG9nb3MgYW5kIEplcnNleXMgYXJlIHByb3BlcnR5IG9mIHRoZSDCqU5GTCA8L2E+XG5cdFx0XHRcdDwvZGl2PlxuXHRcdFx0PC9kaXY+XG5cdFx0KTtcblx0fVxufVxuXG4iLCJcbiAgKGZ1bmN0aW9uKGkscyxvLGcscixhLG0pe2lbJ0dvb2dsZUFuYWx5dGljc09iamVjdCddPXI7aVtyXT1pW3JdfHxmdW5jdGlvbigpe1xuICAoaVtyXS5xPWlbcl0ucXx8W10pLnB1c2goYXJndW1lbnRzKX0saVtyXS5sPTEqbmV3IERhdGUoKTthPXMuY3JlYXRlRWxlbWVudChvKSxcbiAgbT1zLmdldEVsZW1lbnRzQnlUYWdOYW1lKG8pWzBdO2EuYXN5bmM9MTthLnNyYz1nO20ucGFyZW50Tm9kZS5pbnNlcnRCZWZvcmUoYSxtKVxuICB9KSh3aW5kb3csZG9jdW1lbnQsJ3NjcmlwdCcsJ2h0dHBzOi8vd3d3Lmdvb2dsZS1hbmFseXRpY3MuY29tL2FuYWx5dGljcy5qcycsJ2dhJyk7XG5cbiAgZ2EoJ2NyZWF0ZScsICdVQS03NzY5MjgyMy0xJywgJ2F1dG8nKTtcbiAgZ2EoJ3NlbmQnLCAncGFnZXZpZXcnKTtcblxuICAvLyAoZnVuY3Rpb24oKSB7IHZhciBwbyA9IGRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoJ3NjcmlwdCcpOyBwby50eXBlID0gJ3RleHQvamF2YXNjcmlwdCc7IHBvLmFzeW5jID0gdHJ1ZTsgcG8uc3JjID0gJy8vYXBpLmF0LmdldHNvY2lhbC5pby93aWRnZXQvdjEvZ3NfYXN5bmMuanM/aWQ9YTYwMmQ2JzsgdmFyIHMgPSBkb2N1bWVudC5nZXRFbGVtZW50c0J5VGFnTmFtZSgnc2NyaXB0JylbMF07IHMucGFyZW50Tm9kZS5pbnNlcnRCZWZvcmUocG8sIHMpOyB9KSgpO1xuXG5cbi8vICFmdW5jdGlvbihkLHMsaWQpe3ZhciBqcyxmanM9ZC5nZXRFbGVtZW50c0J5VGFnTmFtZShzKVswXSxwPS9eaHR0cDovLnRlc3QoZC5sb2NhdGlvbik/J2h0dHAnOidodHRwcyc7aWYoIWQuZ2V0RWxlbWVudEJ5SWQoaWQpKXtqcz1kLmNyZWF0ZUVsZW1lbnQocyk7anMuaWQ9aWQ7anMuc3JjPXArJzovL3BsYXRmb3JtLnR3aXR0ZXIuY29tL3dpZGdldHMuanMnO2Zqcy5wYXJlbnROb2RlLmluc2VydEJlZm9yZShqcyxmanMpO319KGRvY3VtZW50LCAnc2NyaXB0JywgJ3R3aXR0ZXItd2pzJyk7XG5cbmltcG9ydCBSZWFjdCBmcm9tICdyZWFjdCc7XG5pbXBvcnQgUmVhY3RET00gZnJvbSAncmVhY3QtZG9tJztcbmltcG9ydCBORkxHcmVhdG5lc3MgZnJvbSAnLi9ORkxHcmVhdG5lc3MnO1xuXG5jb25zdCBkYXRhID0gcmVxdWlyZSgnLi4vZGF0YS9RQkRhdGEuanNvbicpO1xuXG4vLyBpbXBvcnQgZGF0YSBmcm9tICcuL1BsYXllcnNEYXRhLmpzb24nO1xubGV0IHBsYXllcnNJbWFnZXMgPSB7fTtcbmRhdGEuc29ydChmdW5jdGlvbihhLCBiKXtcbiAgICB2YXIgcDEgPSBhLm5hbWUuc3BsaXQoJyAnKVsxXSxcbiAgICBcdHAyID0gYi5uYW1lLnNwbGl0KCcgJylbMV07XG5cbiAgICAvLyBpZiAocDEgPT09IFwiJ01hZ2ljJ1wiKVxuICAgIC8vIFx0cDEgPSBcIkpvaG5zb25cIjtcbiAgICAvLyBpZiAocDIgPT09IFwiJ01hZ2ljJ1wiKVxuICAgIC8vIFx0cDIgPSBcIkpvaG5zb25cIjtcblxuICAgIGlmKHAxIDwgcDIpIHJldHVybiAtMTtcbiAgICBpZihwMSA+IHAyKSByZXR1cm4gMTtcbiAgICByZXR1cm4gMDtcbn0pO1xuXG4vLyBQcmVsb2FkaW5nIGFsbCBwbGF5ZXIgaW1hZ2VzIHRvIGF2b2lkIGhhdmluZyB0byBsb2FkIHRoZW0gZWFjaCB0aW1lLlxuZGF0YS5mb3JFYWNoKGZ1bmN0aW9uKHBsYXllckRhdGEpIHtcblx0dmFyIHBsYXllclBpY3MgPSBbXVxuXHRwbGF5ZXJEYXRhLnBpY3MuZm9yRWFjaChmdW5jdGlvbihwaWMpIHtcbiAgICB2YXIgcm91dGUgPSAnaW1nLycrcGljO1xuICAgIHBsYXllclBpY3MucHVzaChyb3V0ZSk7XG5cdH0pO1xuXG5cdHBsYXllcnNJbWFnZXNbcGxheWVyRGF0YS5uaWNrbmFtZV0gPSBwbGF5ZXJQaWNzXG59KTtcblxuaW1wb3J0IHN0eWxlcyBmcm9tICcuL3N0eWxlLmNzcyc7XG5cblJlYWN0RE9NLnJlbmRlcig8TkZMR3JlYXRuZXNzIGRhdGE9e2RhdGF9IGltYWdlcz17cGxheWVyc0ltYWdlc30vPiwgZG9jdW1lbnQuZ2V0RWxlbWVudEJ5SWQoJ2FwcCcpKTsiXSwic291cmNlUm9vdCI6IiJ9